name: build
on:
  pull_request: {}
jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: ci-${{github.job}}-${{ github.ref }}
    permissions:
      contents: write
      id-token: write
    env:
      CI: "true"
      CLEAN_UP_STACK: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v3
        id: turbo-cache
        with:
          path: .turbo-cache
          key: turbo-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::593491530938:role/githubActionStack-githubactionroleA106E4DC-14SHKLVA61IN4
          aws-region: us-east-1
          role-duration-seconds: 3600
        if: contains(fromJson('["release", "build", "close"]'), github.workflow)

      - name: Install dependencies
        run: yarn install --check-files

      - name: Build Packages
        run: yarn turbo run build -- --cache-dir=.turbo-cache
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: Run tests
        run: yarn turbo run test -- --cache-dir=.turbo-cache
        env:
          TEST_DEPLOY_TARGET: AWS
          NODE_OPTIONS: --max-old-space-size=6144

  website-preview:
    runs-on: ubuntu-latest
    concurrency: ci-${{github.job}}-${{ github.ref }}
    permissions:
      contents: write
      id-token: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v3
        id: turbo-cache
        with:
          path: .turbo-cache
          key: turbo-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-

      - name: Install dependencies
        run: yarn install --check-files

      - name: Build Site
        run: yarn build:website -- --cache-dir=.turbo-cache
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: Netlify Preview
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./apps/website/build"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: b49248b3-07b2-49ea-bc73-86deecce6633

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`access 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {a: obj.x, b: obj.x, d: obj[\\"1\\"], e: arr[0]}": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.obj.x",
        "b.$": "$.obj.x",
        "d.$": "$.obj['1']",
        "e.$": "$.heap3",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3__return {a: obj.x, b: obj.x, d: obj[\\"1\\"], e: arr[0]}": Object {
      "Next": "1__return {a: obj.x, b: obj.x, d: obj[\\"1\\"], e: arr[0]}",
      "Parameters": 1,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "obj = {1: \\"a\\", x: \\"b\\"}",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "obj = {1: \\"a\\", x: \\"b\\"}": Object {
      "Next": "3__return {a: obj.x, b: obj.x, d: obj[\\"1\\"], e: arr[0]}",
      "Result": Object {
        "1": "a",
        "x": "b",
      },
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
  },
}
`;

exports[`assignment 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__h = [z, y, y = \\"a\\", y = \\"b\\" , y, y]": Object {
      "InputPath": "$.y",
      "Next": "y = \\"a\\"",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.a",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "e.$": "$.e",
        "f.$": "$.f",
        "g.$": "$.g",
        "h.$": "$.heap21",
        "i.$": "$.heap22",
        "jj.$": "$.jj",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "7__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": Object {
      "InputPath": "$.heap10.arr",
      "Next": "8__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "8__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": Object {
      "InputPath": "$.heap13.string",
      "Next": "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"2\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[z, y, y = \\"a\\", y = \\"b\\" , y, y]": Object {
      "Next": "x = \\"0\\"",
      "Parameters": Object {
        "arr.$": "States.Array($.z, $.heap7, 'a', $.y, $.y)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "a = \\"2\\"": Object {
      "Next": "b = a",
      "Result": "2",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 1": Object {
      "Next": "jj = j",
      "Result": 1,
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = [1, 2]": Object {
      "Next": "e = a",
      "Result": Array [
        1,
        2,
      ],
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "c = a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = {1: \\"val2\\"}": Object {
      "Next": "z = \\"\\"",
      "Result": Object {
        "1": "val2",
      },
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = {x: \\"val\\"}": Object {
      "Next": "f = a",
      "Result": Object {
        "x": "val",
      },
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "b = a": Object {
      "InputPath": "$.a",
      "Next": "a = null",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "c = a": Object {
      "InputPath": "$.a",
      "Next": "a = 1",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "d = a": Object {
      "InputPath": "$.a",
      "Next": "a = [1, 2]",
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "e = a": Object {
      "InputPath": "$.a",
      "Next": "a = {x: \\"val\\"}",
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "f = a": Object {
      "InputPath": "$.a",
      "Next": "a = {1: \\"val2\\"}",
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "false__z === \\"b\\"": Object {
      "Next": "g",
      "Result": false,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "g": Object {
      "Next": "y = \\"\\"",
      "Parameters": Object {
        "a.$": "$.heap0",
        "b": "a",
        "c.$": "$.z",
        "o": Object {
          "z.$": "$.z",
        },
        "t.$": "$.heap3",
        "z.$": "$.z",
      },
      "ResultPath": "$.g",
      "Type": "Pass",
    },
    "g = {a: z, b: z = \\"a\\", c: z = \\"b\\" , z, z: z, t: z === \\"b\\", o: {z: z}}": Object {
      "InputPath": "$.z",
      "Next": "z = \\"a\\"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "hello  x x = \\"1\\" x = \\"3\\" , \\"2\\"x": Object {
      "Next": "7__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "Parameters": Object {
        "string.$": "States.Format('hello {} 1 2 {}',$.heap11,$.x)",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "i = hello  x x = \\"1\\" x = \\"3\\" , \\"2\\"x": Object {
      "InputPath": "$.x",
      "Next": "x = \\"1\\"",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "jj = j": Object {
      "InputPath": "$.a",
      "Next": "d = a",
      "ResultPath": "$.jj",
      "Type": "Pass",
    },
    "true__z === \\"b\\"": Object {
      "Next": "g",
      "Result": true,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "x = \\"0\\"": Object {
      "Next": "i = hello  x x = \\"1\\" x = \\"3\\" , \\"2\\"x",
      "Result": "0",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = \\"1\\"": Object {
      "Next": "x = \\"3\\"",
      "Result": "1",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = \\"3\\"": Object {
      "Next": "hello  x x = \\"1\\" x = \\"3\\" , \\"2\\"x",
      "Result": "3",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "y = \\"\\"": Object {
      "Next": "z = \\"c\\"",
      "Result": "",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = \\"a\\"": Object {
      "Next": "y = \\"b\\"",
      "Result": "a",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = \\"b\\"": Object {
      "Next": "[z, y, y = \\"a\\", y = \\"b\\" , y, y]",
      "Result": "b",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "z = \\"\\"": Object {
      "Next": "g = {a: z, b: z = \\"a\\", c: z = \\"b\\" , z, z: z, t: z === \\"b\\", o: {z: z}}",
      "Result": "",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = \\"a\\"": Object {
      "Next": "z = \\"b\\"",
      "Result": "a",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = \\"b\\"": Object {
      "Next": "z === \\"b\\"",
      "Result": "b",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = \\"c\\"": Object {
      "Next": "1__h = [z, y, y = \\"a\\", y = \\"b\\" , y, y]",
      "Result": "c",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z === \\"b\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.z",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.z",
                },
                Object {
                  "StringEquals": "b",
                  "Variable": "$.z",
                },
              ],
            },
          ],
          "Next": "true__z === \\"b\\"",
        },
      ],
      "Default": "false__z === \\"b\\"",
      "Type": "Choice",
    },
  },
}
`;

exports[`binary and unary comparison 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "!false": Object {
      "Choices": Array [
        Object {
          "Next": "true__!false",
          "Not": Object {
            "IsNull": true,
            "Variable": "$$.Execution.Id",
          },
        },
      ],
      "Default": "false__!false",
      "Type": "Choice",
    },
    "!input.a": Object {
      "Choices": Array [
        Object {
          "Next": "true__!input.a",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.a",
      "Type": "Choice",
    },
    "!input.n": Object {
      "Choices": Array [
        Object {
          "Next": "true__!input.n",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.n",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.n",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.n",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.n",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.n",
      "Type": "Choice",
    },
    "!input.nv": Object {
      "Choices": Array [
        Object {
          "Next": "true__!input.nv",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.nv",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.nv",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.nv",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.nv",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.nv",
      "Type": "Choice",
    },
    "!input.x": Object {
      "Choices": Array [
        Object {
          "Next": "true__!input.x",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.x",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.x",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.x",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.x",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.x",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.x",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.x",
      "Type": "Choice",
    },
    "\\"a\\" !== \\"a\\"": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__\\"a\\" !== \\"a\\"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__\\"a\\" !== \\"a\\"",
      "Type": "Choice",
    },
    "\\"a\\" < \\"a\\"": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__\\"a\\" < \\"a\\"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__\\"a\\" < \\"a\\"",
      "Type": "Choice",
    },
    "\\"a\\" <= \\"a\\"": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__\\"a\\" <= \\"a\\"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__\\"a\\" <= \\"a\\"",
      "Type": "Choice",
    },
    "\\"a\\" > \\"a\\"": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__\\"a\\" > \\"a\\"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__\\"a\\" > \\"a\\"",
      "Type": "Choice",
    },
    "\\"a\\" >= \\"a\\"": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__\\"a\\" >= \\"a\\"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__\\"a\\" >= \\"a\\"",
      "Type": "Choice",
    },
    "\\"a\\" in input.obj": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "true__\\"a\\" in input.obj",
          "Variable": "$.input.obj.a",
        },
      ],
      "Default": "false__\\"a\\" in input.obj",
      "Type": "Choice",
    },
    "\\"b\\" in input.obj": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "true__\\"b\\" in input.obj",
          "Variable": "$.input.obj.b",
        },
      ],
      "Default": "false__\\"b\\" in input.obj",
      "Type": "Choice",
    },
    "\\"val2\\" !== input.v": Object {
      "Choices": Array [
        Object {
          "Next": "true__\\"val2\\" !== input.v",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              Object {
                "And": Array [
                  Object {
                    "IsString": true,
                    "Variable": "$.input.v",
                  },
                  Object {
                    "StringEquals": "val2",
                    "Variable": "$.input.v",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__\\"val2\\" !== input.v",
      "Type": "Choice",
    },
    "\\"val2\\" < input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringGreaterThan": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__\\"val2\\" < input.v",
        },
      ],
      "Default": "false__\\"val2\\" < input.v",
      "Type": "Choice",
    },
    "\\"val2\\" <= input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringGreaterThanEquals": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__\\"val2\\" <= input.v",
        },
      ],
      "Default": "false__\\"val2\\" <= input.v",
      "Type": "Choice",
    },
    "\\"val2\\" === input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringEquals": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__\\"val2\\" === input.v",
        },
      ],
      "Default": "false__\\"val2\\" === input.v",
      "Type": "Choice",
    },
    "\\"val2\\" > input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringLessThan": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__\\"val2\\" > input.v",
        },
      ],
      "Default": "false__\\"val2\\" > input.v",
      "Type": "Choice",
    },
    "\\"val2\\" >= input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringLessThanEquals": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__\\"val2\\" >= input.v",
        },
      ],
      "Default": "false__\\"val2\\" >= input.v",
      "Type": "Choice",
    },
    "1 !== 1": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__1 !== 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 !== 1",
      "Type": "Choice",
    },
    "1 < 1": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__1 < 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 < 1",
      "Type": "Choice",
    },
    "1 <= 1": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__1 <= 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 <= 1",
      "Type": "Choice",
    },
    "1 === 1": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__1 === 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 === 1",
      "Type": "Choice",
    },
    "1 > 1": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__1 > 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 > 1",
      "Type": "Choice",
    },
    "1 >= 1": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__1 >= 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 >= 1",
      "Type": "Choice",
    },
    "1__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals: in": Object {
      "End": true,
      "Parameters": Object {
        "constantBooleanEquals.$": "$.heap96",
        "constantBooleanNotEquals.$": "$.heap104",
        "constantInConstant": true,
        "constantInVar.$": "$.heap128",
        "constantNot.$": "$.heap132",
        "constantNotInVar.$": "$.heap130",
        "constantNullEquals.$": "$.heap112",
        "constantNullNotEquals.$": "$.heap120",
        "constantNumberEquals.$": "$.heap48",
        "constantNumberGreater.$": "$.heap80",
        "constantNumberGreaterEquals.$": "$.heap88",
        "constantNumberLess.$": "$.heap64",
        "constantNumberLessEquals.$": "$.heap72",
        "constantNumberNotEquals.$": "$.heap56",
        "constantStringEquals.$": "$.heap0",
        "constantStringGreater.$": "$.heap32",
        "constantStringGreaterEquals.$": "$.heap40",
        "constantStringLess.$": "$.heap16",
        "constantStringLessEquals.$": "$.heap24",
        "constantStringNotEquals.$": "$.heap8",
        "constantToVarBooleanEquals.$": "$.heap98",
        "constantToVarBooleanNotEquals.$": "$.heap106",
        "constantToVarNullEquals.$": "$.heap114",
        "constantToVarNullNotEquals.$": "$.heap122",
        "constantToVarNumberEquals.$": "$.heap50",
        "constantToVarNumberGreater.$": "$.heap82",
        "constantToVarNumberGreaterEquals.$": "$.heap90",
        "constantToVarNumberLess.$": "$.heap66",
        "constantToVarNumberLessEquals.$": "$.heap74",
        "constantToVarNumberNotEquals.$": "$.heap58",
        "constantToVarStringEquals.$": "$.heap2",
        "constantToVarStringGreater.$": "$.heap34",
        "constantToVarStringGreaterEquals.$": "$.heap42",
        "constantToVarStringLess.$": "$.heap18",
        "constantToVarStringLessEquals.$": "$.heap26",
        "constantToVarStringNotEquals.$": "$.heap10",
        "varNot.$": "$.heap134",
        "varNotNullFalse.$": "$.heap138",
        "varNotPresentFalse.$": "$.heap140",
        "varNotPresentTrue.$": "$.heap136",
        "varToConstantBooleanEquals.$": "$.heap100",
        "varToConstantBooleanNotEquals.$": "$.heap108",
        "varToConstantNullEquals.$": "$.heap116",
        "varToConstantNullNotEquals.$": "$.heap124",
        "varToConstantNumberEquals.$": "$.heap52",
        "varToConstantNumberGreater.$": "$.heap84",
        "varToConstantNumberGreaterEquals.$": "$.heap92",
        "varToConstantNumberLess.$": "$.heap68",
        "varToConstantNumberLessEquals.$": "$.heap76",
        "varToConstantNumberNotEquals.$": "$.heap60",
        "varToConstantStringEquals.$": "$.heap4",
        "varToConstantStringGreater.$": "$.heap36",
        "varToConstantStringGreaterEquals.$": "$.heap44",
        "varToConstantStringLess.$": "$.heap20",
        "varToConstantStringLessEquals.$": "$.heap28",
        "varToConstantStringNotEquals.$": "$.heap12",
        "varToVarBooleanEquals.$": "$.heap102",
        "varToVarBooleanNotEquals.$": "$.heap110",
        "varToVarNullEquals.$": "$.heap118",
        "varToVarNullNotEquals.$": "$.heap126",
        "varToVarNumberEquals.$": "$.heap54",
        "varToVarNumberGreaterE.$": "$.heap86",
        "varToVarNumberGreaterEquals.$": "$.heap94",
        "varToVarNumberLess.$": "$.heap70",
        "varToVarNumberLessEquals.$": "$.heap78",
        "varToVarNumberNotEquals.$": "$.heap62",
        "varToVarStringEquals.$": "$.heap6",
        "varToVarStringGreaterE.$": "$.heap38",
        "varToVarStringGreaterEquals.$": "$.heap46",
        "varToVarStringLess.$": "$.heap22",
        "varToVarStringLessEquals.$": "$.heap30",
        "varToVarStringNotEquals.$": "$.heap14",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3 !== input.n": Object {
      "Choices": Array [
        Object {
          "Next": "true__3 !== input.n",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.n",
              },
              Object {
                "And": Array [
                  Object {
                    "IsNumeric": true,
                    "Variable": "$.input.n",
                  },
                  Object {
                    "NumericEquals": 3,
                    "Variable": "$.input.n",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__3 !== input.n",
      "Type": "Choice",
    },
    "3 < input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericGreaterThan": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__3 < input.n",
        },
      ],
      "Default": "false__3 < input.n",
      "Type": "Choice",
    },
    "3 <= input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericGreaterThanEquals": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__3 <= input.n",
        },
      ],
      "Default": "false__3 <= input.n",
      "Type": "Choice",
    },
    "3 === input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericEquals": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__3 === input.n",
        },
      ],
      "Default": "false__3 === input.n",
      "Type": "Choice",
    },
    "3 > input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericLessThan": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__3 > input.n",
        },
      ],
      "Default": "false__3 > input.n",
      "Type": "Choice",
    },
    "3 >= input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericLessThanEquals": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__3 >= input.n",
        },
      ],
      "Default": "false__3 >= input.n",
      "Type": "Choice",
    },
    "Initialize Functionless Context": Object {
      "Next": "return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals: input",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false !== input.a": Object {
      "Choices": Array [
        Object {
          "Next": "true__false !== input.a",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.a",
              },
              Object {
                "And": Array [
                  Object {
                    "IsBoolean": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "BooleanEquals": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__false !== input.a",
      "Type": "Choice",
    },
    "false === input.a": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.a",
            },
            Object {
              "And": Array [
                Object {
                  "IsBoolean": true,
                  "Variable": "$.input.a",
                },
                Object {
                  "BooleanEquals": false,
                  "Variable": "$.input.a",
                },
              ],
            },
          ],
          "Next": "true__false === input.a",
        },
      ],
      "Default": "false__false === input.a",
      "Type": "Choice",
    },
    "false__!false": Object {
      "Next": "!input.a",
      "Result": false,
      "ResultPath": "$.heap132",
      "Type": "Pass",
    },
    "false__!input.a": Object {
      "Next": "!input.nv",
      "Result": false,
      "ResultPath": "$.heap134",
      "Type": "Pass",
    },
    "false__!input.n": Object {
      "Next": "!input.x",
      "Result": false,
      "ResultPath": "$.heap138",
      "Type": "Pass",
    },
    "false__!input.nv": Object {
      "Next": "!input.n",
      "Result": false,
      "ResultPath": "$.heap136",
      "Type": "Pass",
    },
    "false__!input.x": Object {
      "Next": "1__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals: in",
      "Result": false,
      "ResultPath": "$.heap140",
      "Type": "Pass",
    },
    "false__\\"a\\" !== \\"a\\"": Object {
      "Next": "input.v !== \\"val\\"",
      "Result": false,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "false__\\"a\\" < \\"a\\"": Object {
      "Next": "input.v < \\"val2\\"",
      "Result": false,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "false__\\"a\\" <= \\"a\\"": Object {
      "Next": "input.v <= \\"val2\\"",
      "Result": false,
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "false__\\"a\\" > \\"a\\"": Object {
      "Next": "input.v > \\"val2\\"",
      "Result": false,
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "false__\\"a\\" >= \\"a\\"": Object {
      "Next": "input.v >= \\"val2\\"",
      "Result": false,
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "false__\\"a\\" in input.obj": Object {
      "Next": "\\"b\\" in input.obj",
      "Result": false,
      "ResultPath": "$.heap128",
      "Type": "Pass",
    },
    "false__\\"b\\" in input.obj": Object {
      "Next": "!false",
      "Result": false,
      "ResultPath": "$.heap130",
      "Type": "Pass",
    },
    "false__\\"val2\\" !== input.v": Object {
      "Next": "input.v !== input.v",
      "Result": false,
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "false__\\"val2\\" < input.v": Object {
      "Next": "input.v < input.v",
      "Result": false,
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "false__\\"val2\\" <= input.v": Object {
      "Next": "input.v <= input.v",
      "Result": false,
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "false__\\"val2\\" === input.v": Object {
      "Next": "input.v === input.v",
      "Result": false,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "false__\\"val2\\" > input.v": Object {
      "Next": "input.v > input.v",
      "Result": false,
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "false__\\"val2\\" >= input.v": Object {
      "Next": "input.v >= input.v",
      "Result": false,
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "false__1 !== 1": Object {
      "Next": "input.n !== 2",
      "Result": false,
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "false__1 < 1": Object {
      "Next": "input.n < 3",
      "Result": false,
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "false__1 <= 1": Object {
      "Next": "input.n <= 3",
      "Result": false,
      "ResultPath": "$.heap72",
      "Type": "Pass",
    },
    "false__1 === 1": Object {
      "Next": "input.n === 2",
      "Result": false,
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "false__1 > 1": Object {
      "Next": "input.n > 3",
      "Result": false,
      "ResultPath": "$.heap80",
      "Type": "Pass",
    },
    "false__1 >= 1": Object {
      "Next": "input.n >= 3",
      "Result": false,
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "false__3 !== input.n": Object {
      "Next": "input.n !== input.n",
      "Result": false,
      "ResultPath": "$.heap60",
      "Type": "Pass",
    },
    "false__3 < input.n": Object {
      "Next": "input.n < input.n",
      "Result": false,
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "false__3 <= input.n": Object {
      "Next": "input.n <= input.n",
      "Result": false,
      "ResultPath": "$.heap76",
      "Type": "Pass",
    },
    "false__3 === input.n": Object {
      "Next": "input.n === input.n",
      "Result": false,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "false__3 > input.n": Object {
      "Next": "input.n > input.n",
      "Result": false,
      "ResultPath": "$.heap84",
      "Type": "Pass",
    },
    "false__3 >= input.n": Object {
      "Next": "input.n >= input.n",
      "Result": false,
      "ResultPath": "$.heap92",
      "Type": "Pass",
    },
    "false__false !== input.a": Object {
      "Next": "input.a !== input.a",
      "Result": false,
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "false__false === input.a": Object {
      "Next": "input.a === input.a",
      "Result": false,
      "ResultPath": "$.heap100",
      "Type": "Pass",
    },
    "false__input.a !== input.a": Object {
      "Next": "null === null",
      "Result": false,
      "ResultPath": "$.heap110",
      "Type": "Pass",
    },
    "false__input.a !== true": Object {
      "Next": "false !== input.a",
      "Result": false,
      "ResultPath": "$.heap106",
      "Type": "Pass",
    },
    "false__input.a === input.a": Object {
      "Next": "true !== true",
      "Result": false,
      "ResultPath": "$.heap102",
      "Type": "Pass",
    },
    "false__input.a === true": Object {
      "Next": "false === input.a",
      "Result": false,
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "false__input.n !== 2": Object {
      "Next": "3 !== input.n",
      "Result": false,
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "false__input.n !== input.n": Object {
      "Next": "1 < 1",
      "Result": false,
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "false__input.n < 3": Object {
      "Next": "3 < input.n",
      "Result": false,
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "false__input.n < input.n": Object {
      "Next": "1 <= 1",
      "Result": false,
      "ResultPath": "$.heap70",
      "Type": "Pass",
    },
    "false__input.n <= 3": Object {
      "Next": "3 <= input.n",
      "Result": false,
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "false__input.n <= input.n": Object {
      "Next": "1 > 1",
      "Result": false,
      "ResultPath": "$.heap78",
      "Type": "Pass",
    },
    "false__input.n === 2": Object {
      "Next": "3 === input.n",
      "Result": false,
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "false__input.n === input.n": Object {
      "Next": "1 !== 1",
      "Result": false,
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "false__input.n > 3": Object {
      "Next": "3 > input.n",
      "Result": false,
      "ResultPath": "$.heap82",
      "Type": "Pass",
    },
    "false__input.n > input.n": Object {
      "Next": "1 >= 1",
      "Result": false,
      "ResultPath": "$.heap86",
      "Type": "Pass",
    },
    "false__input.n >= 3": Object {
      "Next": "3 >= input.n",
      "Result": false,
      "ResultPath": "$.heap90",
      "Type": "Pass",
    },
    "false__input.n >= input.n": Object {
      "Next": "true === true",
      "Result": false,
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "false__input.nv !== input.nv": Object {
      "Next": "\\"a\\" in input.obj",
      "Result": false,
      "ResultPath": "$.heap126",
      "Type": "Pass",
    },
    "false__input.nv !== null": Object {
      "Next": "input.v !== input.nv",
      "Result": false,
      "ResultPath": "$.heap122",
      "Type": "Pass",
    },
    "false__input.nv === input.nv": Object {
      "Next": "null !== null",
      "Result": false,
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "false__input.nv === null": Object {
      "Next": "input.v === input.nv",
      "Result": false,
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "false__input.v !== \\"val\\"": Object {
      "Next": "\\"val2\\" !== input.v",
      "Result": false,
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "false__input.v !== input.nv": Object {
      "Next": "input.nv !== input.nv",
      "Result": false,
      "ResultPath": "$.heap124",
      "Type": "Pass",
    },
    "false__input.v !== input.v": Object {
      "Next": "\\"a\\" < \\"a\\"",
      "Result": false,
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "false__input.v < \\"val2\\"": Object {
      "Next": "\\"val2\\" < input.v",
      "Result": false,
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "false__input.v < input.v": Object {
      "Next": "\\"a\\" <= \\"a\\"",
      "Result": false,
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "false__input.v <= \\"val2\\"": Object {
      "Next": "\\"val2\\" <= input.v",
      "Result": false,
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "false__input.v <= input.v": Object {
      "Next": "\\"a\\" > \\"a\\"",
      "Result": false,
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "false__input.v === \\"val\\"": Object {
      "Next": "\\"val2\\" === input.v",
      "Result": false,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "false__input.v === input.nv": Object {
      "Next": "input.nv === input.nv",
      "Result": false,
      "ResultPath": "$.heap116",
      "Type": "Pass",
    },
    "false__input.v === input.v": Object {
      "Next": "\\"a\\" !== \\"a\\"",
      "Result": false,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "false__input.v > \\"val2\\"": Object {
      "Next": "\\"val2\\" > input.v",
      "Result": false,
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "false__input.v > input.v": Object {
      "Next": "\\"a\\" >= \\"a\\"",
      "Result": false,
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "false__input.v >= \\"val2\\"": Object {
      "Next": "\\"val2\\" >= input.v",
      "Result": false,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "false__input.v >= input.v": Object {
      "Next": "1 === 1",
      "Result": false,
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "false__null !== null": Object {
      "Next": "input.nv !== null",
      "Result": false,
      "ResultPath": "$.heap120",
      "Type": "Pass",
    },
    "false__null === null": Object {
      "Next": "input.nv === null",
      "Result": false,
      "ResultPath": "$.heap112",
      "Type": "Pass",
    },
    "false__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals": Object {
      "Next": "input.v === \\"val\\"",
      "Result": false,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__true !== true": Object {
      "Next": "input.a !== true",
      "Result": false,
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "false__true === true": Object {
      "Next": "input.a === true",
      "Result": false,
      "ResultPath": "$.heap96",
      "Type": "Pass",
    },
    "input.a !== input.a": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a !== input.a",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.a",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "StringEqualsPath": "$.input.a",
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "BooleanEqualsPath": "$.input.a",
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "NumericEqualsPath": "$.input.a",
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a !== input.a",
      "Type": "Choice",
    },
    "input.a !== true": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a !== true",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.a",
              },
              Object {
                "And": Array [
                  Object {
                    "IsBoolean": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "BooleanEquals": true,
                    "Variable": "$.input.a",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a !== true",
      "Type": "Choice",
    },
    "input.a === input.a": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.a",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "StringEqualsPath": "$.input.a",
                      "Variable": "$.input.a",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "BooleanEqualsPath": "$.input.a",
                      "Variable": "$.input.a",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "NumericEqualsPath": "$.input.a",
                      "Variable": "$.input.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.a === input.a",
        },
      ],
      "Default": "false__input.a === input.a",
      "Type": "Choice",
    },
    "input.a === true": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.a",
            },
            Object {
              "And": Array [
                Object {
                  "IsBoolean": true,
                  "Variable": "$.input.a",
                },
                Object {
                  "BooleanEquals": true,
                  "Variable": "$.input.a",
                },
              ],
            },
          ],
          "Next": "true__input.a === true",
        },
      ],
      "Default": "false__input.a === true",
      "Type": "Choice",
    },
    "input.n !== 2": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.n !== 2",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.n",
              },
              Object {
                "And": Array [
                  Object {
                    "IsNumeric": true,
                    "Variable": "$.input.n",
                  },
                  Object {
                    "NumericEquals": 2,
                    "Variable": "$.input.n",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.n !== 2",
      "Type": "Choice",
    },
    "input.n !== input.n": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.n !== input.n",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.n",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "StringEqualsPath": "$.input.n",
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "BooleanEqualsPath": "$.input.n",
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.n",
                      },
                      Object {
                        "NumericEqualsPath": "$.input.n",
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.n !== input.n",
      "Type": "Choice",
    },
    "input.n < 3": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericLessThan": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__input.n < 3",
        },
      ],
      "Default": "false__input.n < 3",
      "Type": "Choice",
    },
    "input.n < input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "StringLessThanPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "NumericLessThanPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n < input.n",
        },
      ],
      "Default": "false__input.n < input.n",
      "Type": "Choice",
    },
    "input.n <= 3": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericLessThanEquals": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__input.n <= 3",
        },
      ],
      "Default": "false__input.n <= 3",
      "Type": "Choice",
    },
    "input.n <= input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "StringLessThanEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "NumericLessThanEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n <= input.n",
        },
      ],
      "Default": "false__input.n <= input.n",
      "Type": "Choice",
    },
    "input.n === 2": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericEquals": 2,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__input.n === 2",
        },
      ],
      "Default": "false__input.n === 2",
      "Type": "Choice",
    },
    "input.n === input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "StringEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "BooleanEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "NumericEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n === input.n",
        },
      ],
      "Default": "false__input.n === input.n",
      "Type": "Choice",
    },
    "input.n > 3": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericGreaterThan": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__input.n > 3",
        },
      ],
      "Default": "false__input.n > 3",
      "Type": "Choice",
    },
    "input.n > input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "StringGreaterThanPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "NumericGreaterThanPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n > input.n",
        },
      ],
      "Default": "false__input.n > input.n",
      "Type": "Choice",
    },
    "input.n >= 3": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.input.n",
                },
                Object {
                  "NumericGreaterThanEquals": 3,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "true__input.n >= 3",
        },
      ],
      "Default": "false__input.n >= 3",
      "Type": "Choice",
    },
    "input.n >= input.n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "StringGreaterThanEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    Object {
                      "NumericGreaterThanEqualsPath": "$.input.n",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n >= input.n",
        },
      ],
      "Default": "false__input.n >= input.n",
      "Type": "Choice",
    },
    "input.nv !== input.nv": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.nv !== input.nv",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "StringEqualsPath": "$.input.nv",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "BooleanEqualsPath": "$.input.nv",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "NumericEqualsPath": "$.input.nv",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== input.nv",
      "Type": "Choice",
    },
    "input.nv !== null": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.nv !== null",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.fnl_context.null",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "StringEqualsPath": "$.fnl_context.null",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "BooleanEqualsPath": "$.fnl_context.null",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      Object {
                        "NumericEqualsPath": "$.fnl_context.null",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== null",
      "Type": "Choice",
    },
    "input.nv === input.nv": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "StringEqualsPath": "$.input.nv",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "BooleanEqualsPath": "$.input.nv",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "NumericEqualsPath": "$.input.nv",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv === input.nv",
        },
      ],
      "Default": "false__input.nv === input.nv",
      "Type": "Choice",
    },
    "input.nv === null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.fnl_context.null",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "StringEqualsPath": "$.fnl_context.null",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "BooleanEqualsPath": "$.fnl_context.null",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "NumericEqualsPath": "$.fnl_context.null",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv === null",
        },
      ],
      "Default": "false__input.nv === null",
      "Type": "Choice",
    },
    "input.v !== \\"val\\"": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.v !== \\"val\\"",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              Object {
                "And": Array [
                  Object {
                    "IsString": true,
                    "Variable": "$.input.v",
                  },
                  Object {
                    "StringEquals": "val",
                    "Variable": "$.input.v",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== \\"val\\"",
      "Type": "Choice",
    },
    "input.v !== input.nv": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.v !== input.nv",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "StringEqualsPath": "$.input.nv",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "BooleanEqualsPath": "$.input.nv",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "NumericEqualsPath": "$.input.nv",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== input.nv",
      "Type": "Choice",
    },
    "input.v !== input.v": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.v !== input.v",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "StringEqualsPath": "$.input.v",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "BooleanEqualsPath": "$.input.v",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.v",
                      },
                      Object {
                        "NumericEqualsPath": "$.input.v",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== input.v",
      "Type": "Choice",
    },
    "input.v < \\"val2\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringLessThan": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__input.v < \\"val2\\"",
        },
      ],
      "Default": "false__input.v < \\"val2\\"",
      "Type": "Choice",
    },
    "input.v < input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringLessThanPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericLessThanPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v < input.v",
        },
      ],
      "Default": "false__input.v < input.v",
      "Type": "Choice",
    },
    "input.v <= \\"val2\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringLessThanEquals": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__input.v <= \\"val2\\"",
        },
      ],
      "Default": "false__input.v <= \\"val2\\"",
      "Type": "Choice",
    },
    "input.v <= input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringLessThanEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericLessThanEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v <= input.v",
        },
      ],
      "Default": "false__input.v <= input.v",
      "Type": "Choice",
    },
    "input.v === \\"val\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringEquals": "val",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__input.v === \\"val\\"",
        },
      ],
      "Default": "false__input.v === \\"val\\"",
      "Type": "Choice",
    },
    "input.v === input.nv": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringEqualsPath": "$.input.nv",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "BooleanEqualsPath": "$.input.nv",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericEqualsPath": "$.input.nv",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v === input.nv",
        },
      ],
      "Default": "false__input.v === input.nv",
      "Type": "Choice",
    },
    "input.v === input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "BooleanEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v === input.v",
        },
      ],
      "Default": "false__input.v === input.v",
      "Type": "Choice",
    },
    "input.v > \\"val2\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringGreaterThan": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__input.v > \\"val2\\"",
        },
      ],
      "Default": "false__input.v > \\"val2\\"",
      "Type": "Choice",
    },
    "input.v > input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringGreaterThanPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericGreaterThanPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v > input.v",
        },
      ],
      "Default": "false__input.v > input.v",
      "Type": "Choice",
    },
    "input.v >= \\"val2\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.v",
                },
                Object {
                  "StringGreaterThanEquals": "val2",
                  "Variable": "$.input.v",
                },
              ],
            },
          ],
          "Next": "true__input.v >= \\"val2\\"",
        },
      ],
      "Default": "false__input.v >= \\"val2\\"",
      "Type": "Choice",
    },
    "input.v >= input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "StringGreaterThanEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.v",
                    },
                    Object {
                      "NumericGreaterThanEqualsPath": "$.input.v",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v >= input.v",
        },
      ],
      "Default": "false__input.v >= input.v",
      "Type": "Choice",
    },
    "null !== null": Object {
      "Choices": Array [
        Object {
          "Next": "true__null !== null",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.fnl_context.null",
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsNull": true,
                        "Variable": "$.fnl_context.null",
                      },
                      Object {
                        "IsNull": true,
                        "Variable": "$.fnl_context.null",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.fnl_context.null",
                      },
                      Object {
                        "StringEqualsPath": "$.fnl_context.null",
                        "Variable": "$.fnl_context.null",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.fnl_context.null",
                      },
                      Object {
                        "BooleanEqualsPath": "$.fnl_context.null",
                        "Variable": "$.fnl_context.null",
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.fnl_context.null",
                      },
                      Object {
                        "NumericEqualsPath": "$.fnl_context.null",
                        "Variable": "$.fnl_context.null",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__null !== null",
      "Type": "Choice",
    },
    "null === null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.fnl_context.null",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.fnl_context.null",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.fnl_context.null",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.fnl_context.null",
                    },
                    Object {
                      "StringEqualsPath": "$.fnl_context.null",
                      "Variable": "$.fnl_context.null",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.fnl_context.null",
                    },
                    Object {
                      "BooleanEqualsPath": "$.fnl_context.null",
                      "Variable": "$.fnl_context.null",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.fnl_context.null",
                    },
                    Object {
                      "NumericEqualsPath": "$.fnl_context.null",
                      "Variable": "$.fnl_context.null",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__null === null",
        },
      ],
      "Default": "false__null === null",
      "Type": "Choice",
    },
    "return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals: input": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals:",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals",
      "Type": "Choice",
    },
    "true !== true": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__true !== true",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__true !== true",
      "Type": "Choice",
    },
    "true === true": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__true === true",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__true === true",
      "Type": "Choice",
    },
    "true__!false": Object {
      "Next": "!input.a",
      "Result": true,
      "ResultPath": "$.heap132",
      "Type": "Pass",
    },
    "true__!input.a": Object {
      "Next": "!input.nv",
      "Result": true,
      "ResultPath": "$.heap134",
      "Type": "Pass",
    },
    "true__!input.n": Object {
      "Next": "!input.x",
      "Result": true,
      "ResultPath": "$.heap138",
      "Type": "Pass",
    },
    "true__!input.nv": Object {
      "Next": "!input.n",
      "Result": true,
      "ResultPath": "$.heap136",
      "Type": "Pass",
    },
    "true__!input.x": Object {
      "Next": "1__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals: in",
      "Result": true,
      "ResultPath": "$.heap140",
      "Type": "Pass",
    },
    "true__\\"a\\" !== \\"a\\"": Object {
      "Next": "input.v !== \\"val\\"",
      "Result": true,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "true__\\"a\\" < \\"a\\"": Object {
      "Next": "input.v < \\"val2\\"",
      "Result": true,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "true__\\"a\\" <= \\"a\\"": Object {
      "Next": "input.v <= \\"val2\\"",
      "Result": true,
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "true__\\"a\\" > \\"a\\"": Object {
      "Next": "input.v > \\"val2\\"",
      "Result": true,
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "true__\\"a\\" >= \\"a\\"": Object {
      "Next": "input.v >= \\"val2\\"",
      "Result": true,
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "true__\\"a\\" in input.obj": Object {
      "Next": "\\"b\\" in input.obj",
      "Result": true,
      "ResultPath": "$.heap128",
      "Type": "Pass",
    },
    "true__\\"b\\" in input.obj": Object {
      "Next": "!false",
      "Result": true,
      "ResultPath": "$.heap130",
      "Type": "Pass",
    },
    "true__\\"val2\\" !== input.v": Object {
      "Next": "input.v !== input.v",
      "Result": true,
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "true__\\"val2\\" < input.v": Object {
      "Next": "input.v < input.v",
      "Result": true,
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "true__\\"val2\\" <= input.v": Object {
      "Next": "input.v <= input.v",
      "Result": true,
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "true__\\"val2\\" === input.v": Object {
      "Next": "input.v === input.v",
      "Result": true,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "true__\\"val2\\" > input.v": Object {
      "Next": "input.v > input.v",
      "Result": true,
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "true__\\"val2\\" >= input.v": Object {
      "Next": "input.v >= input.v",
      "Result": true,
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "true__1 !== 1": Object {
      "Next": "input.n !== 2",
      "Result": true,
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "true__1 < 1": Object {
      "Next": "input.n < 3",
      "Result": true,
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "true__1 <= 1": Object {
      "Next": "input.n <= 3",
      "Result": true,
      "ResultPath": "$.heap72",
      "Type": "Pass",
    },
    "true__1 === 1": Object {
      "Next": "input.n === 2",
      "Result": true,
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "true__1 > 1": Object {
      "Next": "input.n > 3",
      "Result": true,
      "ResultPath": "$.heap80",
      "Type": "Pass",
    },
    "true__1 >= 1": Object {
      "Next": "input.n >= 3",
      "Result": true,
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "true__3 !== input.n": Object {
      "Next": "input.n !== input.n",
      "Result": true,
      "ResultPath": "$.heap60",
      "Type": "Pass",
    },
    "true__3 < input.n": Object {
      "Next": "input.n < input.n",
      "Result": true,
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "true__3 <= input.n": Object {
      "Next": "input.n <= input.n",
      "Result": true,
      "ResultPath": "$.heap76",
      "Type": "Pass",
    },
    "true__3 === input.n": Object {
      "Next": "input.n === input.n",
      "Result": true,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "true__3 > input.n": Object {
      "Next": "input.n > input.n",
      "Result": true,
      "ResultPath": "$.heap84",
      "Type": "Pass",
    },
    "true__3 >= input.n": Object {
      "Next": "input.n >= input.n",
      "Result": true,
      "ResultPath": "$.heap92",
      "Type": "Pass",
    },
    "true__false !== input.a": Object {
      "Next": "input.a !== input.a",
      "Result": true,
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "true__false === input.a": Object {
      "Next": "input.a === input.a",
      "Result": true,
      "ResultPath": "$.heap100",
      "Type": "Pass",
    },
    "true__input.a !== input.a": Object {
      "Next": "null === null",
      "Result": true,
      "ResultPath": "$.heap110",
      "Type": "Pass",
    },
    "true__input.a !== true": Object {
      "Next": "false !== input.a",
      "Result": true,
      "ResultPath": "$.heap106",
      "Type": "Pass",
    },
    "true__input.a === input.a": Object {
      "Next": "true !== true",
      "Result": true,
      "ResultPath": "$.heap102",
      "Type": "Pass",
    },
    "true__input.a === true": Object {
      "Next": "false === input.a",
      "Result": true,
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "true__input.n !== 2": Object {
      "Next": "3 !== input.n",
      "Result": true,
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "true__input.n !== input.n": Object {
      "Next": "1 < 1",
      "Result": true,
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "true__input.n < 3": Object {
      "Next": "3 < input.n",
      "Result": true,
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "true__input.n < input.n": Object {
      "Next": "1 <= 1",
      "Result": true,
      "ResultPath": "$.heap70",
      "Type": "Pass",
    },
    "true__input.n <= 3": Object {
      "Next": "3 <= input.n",
      "Result": true,
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "true__input.n <= input.n": Object {
      "Next": "1 > 1",
      "Result": true,
      "ResultPath": "$.heap78",
      "Type": "Pass",
    },
    "true__input.n === 2": Object {
      "Next": "3 === input.n",
      "Result": true,
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "true__input.n === input.n": Object {
      "Next": "1 !== 1",
      "Result": true,
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "true__input.n > 3": Object {
      "Next": "3 > input.n",
      "Result": true,
      "ResultPath": "$.heap82",
      "Type": "Pass",
    },
    "true__input.n > input.n": Object {
      "Next": "1 >= 1",
      "Result": true,
      "ResultPath": "$.heap86",
      "Type": "Pass",
    },
    "true__input.n >= 3": Object {
      "Next": "3 >= input.n",
      "Result": true,
      "ResultPath": "$.heap90",
      "Type": "Pass",
    },
    "true__input.n >= input.n": Object {
      "Next": "true === true",
      "Result": true,
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "true__input.nv !== input.nv": Object {
      "Next": "\\"a\\" in input.obj",
      "Result": true,
      "ResultPath": "$.heap126",
      "Type": "Pass",
    },
    "true__input.nv !== null": Object {
      "Next": "input.v !== input.nv",
      "Result": true,
      "ResultPath": "$.heap122",
      "Type": "Pass",
    },
    "true__input.nv === input.nv": Object {
      "Next": "null !== null",
      "Result": true,
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "true__input.nv === null": Object {
      "Next": "input.v === input.nv",
      "Result": true,
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "true__input.v !== \\"val\\"": Object {
      "Next": "\\"val2\\" !== input.v",
      "Result": true,
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "true__input.v !== input.nv": Object {
      "Next": "input.nv !== input.nv",
      "Result": true,
      "ResultPath": "$.heap124",
      "Type": "Pass",
    },
    "true__input.v !== input.v": Object {
      "Next": "\\"a\\" < \\"a\\"",
      "Result": true,
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "true__input.v < \\"val2\\"": Object {
      "Next": "\\"val2\\" < input.v",
      "Result": true,
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "true__input.v < input.v": Object {
      "Next": "\\"a\\" <= \\"a\\"",
      "Result": true,
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "true__input.v <= \\"val2\\"": Object {
      "Next": "\\"val2\\" <= input.v",
      "Result": true,
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "true__input.v <= input.v": Object {
      "Next": "\\"a\\" > \\"a\\"",
      "Result": true,
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "true__input.v === \\"val\\"": Object {
      "Next": "\\"val2\\" === input.v",
      "Result": true,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "true__input.v === input.nv": Object {
      "Next": "input.nv === input.nv",
      "Result": true,
      "ResultPath": "$.heap116",
      "Type": "Pass",
    },
    "true__input.v === input.v": Object {
      "Next": "\\"a\\" !== \\"a\\"",
      "Result": true,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "true__input.v > \\"val2\\"": Object {
      "Next": "\\"val2\\" > input.v",
      "Result": true,
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "true__input.v > input.v": Object {
      "Next": "\\"a\\" >= \\"a\\"",
      "Result": true,
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "true__input.v >= \\"val2\\"": Object {
      "Next": "\\"val2\\" >= input.v",
      "Result": true,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "true__input.v >= input.v": Object {
      "Next": "1 === 1",
      "Result": true,
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "true__null !== null": Object {
      "Next": "input.nv !== null",
      "Result": true,
      "ResultPath": "$.heap120",
      "Type": "Pass",
    },
    "true__null === null": Object {
      "Next": "input.nv === null",
      "Result": true,
      "ResultPath": "$.heap112",
      "Type": "Pass",
    },
    "true__return {constantStringEquals: \\"a\\" === \\"a\\", constantToVarStringEquals:": Object {
      "Next": "input.v === \\"val\\"",
      "Result": true,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__true !== true": Object {
      "Next": "input.a !== true",
      "Result": true,
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "true__true === true": Object {
      "Next": "input.a === true",
      "Result": true,
      "ResultPath": "$.heap96",
      "Type": "Pass",
    },
  },
}
`;

exports[`binaryOps logic 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__if(y = 1y && y = 2y , false && y = 3y)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap8",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap8",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap8",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap8",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap8",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap8",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap8",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap8",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap8",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap8",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "4y",
        },
      ],
      "Default": "5y",
      "Type": "Choice",
    },
    "1__if(y = 5y , false || y = 6y , true || y = 7y)": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "8y",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "return {andVar: c, and: input.a && input.b, or: input.a || input.b, invNull",
      "Type": "Choice",
    },
    "1__return {andVar: c, and: input.a && input.b, or: input.a || input.b, invN": Object {
      "End": true,
      "Parameters": Object {
        "and.$": "$.heap20",
        "andVar.$": "$.heap19",
        "falsyAndAssign.$": "$.falsyAndAssign",
        "falsyChainAnd.$": "$.heap52",
        "falsyChainOr.$": "$.heap43",
        "falsyOrAssign.$": "$.falsyOrAssign",
        "invNullCoal.$": "$.heap26",
        "notNullishCoalAssign.$": "$.notNullishCoalAssign",
        "nullCoal.$": "$.heap30",
        "nullNull.$": "$.heap32",
        "nullVal.$": "$.heap34",
        "nullishCoalAssign.$": "$.nullishCoalAssign",
        "or.$": "$.heap22",
        "truthyAndAssign.$": "$.truthyAndAssign",
        "truthyChainAnd.$": "$.heap58",
        "truthyChainOr.$": "$.heap48",
        "truthyOrAssign.$": "$.truthyOrAssign",
        "x.$": "$.x",
        "y.$": "$.y",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__x = 1x": Object {
      "InputPath": "$.input.v",
      "Next": "input.v ?? x = 2x , input.nv",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "1__x = 2x": Object {
      "InputPath": "$.input.nv",
      "Next": "input.nv ?? null",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "1__x = 3x": Object {
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false 1",
      "Result": true,
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "1__x = 4x": Object {
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "Result": false,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "1__x = 5x": Object {
      "Next": "input.b || x = 5x , false || input.arr",
      "Result": false,
      "ResultPath": "$.heap47",
      "Type": "Pass",
    },
    "1__x = 6x": Object {
      "Next": "input.a && input.v && x = 7x , true",
      "Result": true,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "1__x = 7x": Object {
      "Next": "input.a && input.v && x = 7x , true && input.v",
      "Result": true,
      "ResultPath": "$.heap57",
      "Type": "Pass",
    },
    "1__y = 2y": Object {
      "Next": "y = 1y && y = 2y , false && y = 3y",
      "Result": false,
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "1__y = 3y": Object {
      "InputPath": "$.heap7.string",
      "Next": "1__if(y = 1y && y = 2y , false && y = 3y)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "1x": Object {
      "Next": "x = 1x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}1',$.x)",
      },
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "1y": Object {
      "Next": "y = 1y",
      "Parameters": Object {
        "string.$": "States.Format('{}1',$.y)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "2x": Object {
      "Next": "x = 2x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}2',$.x)",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "2y": Object {
      "Next": "y = 2y 1",
      "Parameters": Object {
        "string.$": "States.Format('{}2',$.y)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "3x": Object {
      "Next": "x = 3x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}3',$.x)",
      },
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "3y": Object {
      "Next": "y = 3y 1",
      "Parameters": Object {
        "string.$": "States.Format('{}3',$.y)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "4x": Object {
      "Next": "x = 4x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}4',$.x)",
      },
      "ResultPath": "$.heap41",
      "Type": "Pass",
    },
    "4y": Object {
      "Next": "y = 4y 1",
      "Parameters": Object {
        "string.$": "States.Format('{}4',$.y)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "5x": Object {
      "Next": "x = 5x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}5',$.x)",
      },
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "5y": Object {
      "Next": "y = 5y",
      "Parameters": Object {
        "string.$": "States.Format('{}5',$.y)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "6x": Object {
      "Next": "x = 6x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}6',$.x)",
      },
      "ResultPath": "$.heap51",
      "Type": "Pass",
    },
    "6y": Object {
      "Next": "y = 6y 1",
      "Parameters": Object {
        "string.$": "States.Format('{}6',$.y)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "7x": Object {
      "Next": "x = 7x 1",
      "Parameters": Object {
        "string.$": "States.Format('{}7',$.x)",
      },
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "8y": Object {
      "Next": "y = 8y 1",
      "Parameters": Object {
        "string.$": "States.Format('{}8',$.y)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "c = input.a && input.b",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "c = input.a && input.b": Object {
      "Choices": Array [
        Object {
          "Next": "true__c = input.a && input.b",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__c = input.a && input.b",
      "Type": "Choice",
    },
    "false__c = input.a && input.b": Object {
      "InputPath": "$.input.b",
      "Next": "x = \\"\\"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__falsyAndAssign &&= \\"b\\"": Object {
      "Next": "truthyOrAssign ||= \\"b\\"",
      "Result": "b",
      "ResultPath": "$.falsyAndAssign",
      "Type": "Pass",
    },
    "false__falsyOrAssign ||= \\"b\\"": Object {
      "Next": "y = \\"\\"",
      "Result": "b",
      "ResultPath": "$.falsyOrAssign",
      "Type": "Pass",
    },
    "false__input.a && input.b": Object {
      "InputPath": "$.input.b",
      "Next": "input.a || input.b",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "false__input.a && input.v && x = 7x , true": Object {
      "InputPath": "$.input.v",
      "Next": "input.a && input.v && x = 7x , true 1",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "false__input.a && input.v && x = 7x , true && input.v": Object {
      "InputPath": "$.input.v",
      "Next": "1__return {andVar: c, and: input.a && input.b, or: input.a || input.b, invN",
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "false__input.a || input.b": Object {
      "InputPath": "$.input.b",
      "Next": "input.nv ?? x = 1x , input.v",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "false__input.b || input.z || x = 3x , true || x = 4x , false": Object {
      "InputPath": "$.input.z",
      "Next": "input.b || input.z || x = 3x , true",
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "false__input.b || input.z || x = 3x , true || x = 4x , false || input.v": Object {
      "InputPath": "$.input.v",
      "Next": "input.b || x = 5x , false",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "false__input.b || x = 5x , false || input.arr": Object {
      "InputPath": "$.input.arr",
      "Next": "input.z && x = 6x , true",
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "false__input.nv ?? null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "null ?? input.v",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "false__notNullishCoalAssign ??= \\"b\\"": Object {
      "Next": "nullishCoalAssign ??= \\"b\\"",
      "Result": "b",
      "ResultPath": "$.notNullishCoalAssign",
      "Type": "Pass",
    },
    "false__null ?? input.v": Object {
      "InputPath": "$.input.v",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "false__nullishCoalAssign ??= \\"b\\"": Object {
      "Next": "truthyAndAssign &&= \\"b\\"",
      "Result": "b",
      "ResultPath": "$.nullishCoalAssign",
      "Type": "Pass",
    },
    "false__truthyAndAssign &&= \\"b\\"": Object {
      "Next": "falsyAndAssign &&= \\"b\\"",
      "Result": "b",
      "ResultPath": "$.truthyAndAssign",
      "Type": "Pass",
    },
    "false__truthyOrAssign ||= \\"b\\"": Object {
      "Next": "falsyOrAssign ||= \\"b\\"",
      "Result": "b",
      "ResultPath": "$.truthyOrAssign",
      "Type": "Pass",
    },
    "falsyAndAssign &&= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "Next": "true__falsyAndAssign &&= \\"b\\"",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.falsyAndAssign",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.falsyAndAssign",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.falsyAndAssign",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.falsyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.falsyAndAssign",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.falsyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.falsyAndAssign",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__falsyAndAssign &&= \\"b\\"",
      "Type": "Choice",
    },
    "falsyAndAssign = \\"\\"": Object {
      "Next": "truthyOrAssign = \\"a\\"",
      "Result": "",
      "ResultPath": "$.falsyAndAssign",
      "Type": "Pass",
    },
    "falsyOrAssign = \\"\\"": Object {
      "Next": "notNullishCoalAssign ??= \\"b\\"",
      "Result": "",
      "ResultPath": "$.falsyOrAssign",
      "Type": "Pass",
    },
    "falsyOrAssign ||= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.falsyOrAssign",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.falsyOrAssign",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.falsyOrAssign",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.falsyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.falsyOrAssign",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.falsyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.falsyOrAssign",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__falsyOrAssign ||= \\"b\\"",
        },
      ],
      "Default": "false__falsyOrAssign ||= \\"b\\"",
      "Type": "Choice",
    },
    "input.a && input.b": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a && input.b",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.b",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a && input.v && x = 7x , true",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.v && x = 7x , true",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true && input.v": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a && input.v && x = 7x , true && input.v",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.heap57",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.heap57",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.heap57",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.heap57",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.heap57",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.heap57",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.heap57",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.heap57",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.heap57",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.heap57",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.v && x = 7x , true && input.v",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true 1": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.a && input.v && x = 7x , true 1",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.heap54",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.heap54",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.heap54",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.heap54",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.heap54",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.heap54",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.heap54",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.heap54",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.heap54",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.heap54",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "7x",
      "Type": "Choice",
    },
    "input.a || input.b": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.a",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.a",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.a || input.b",
        },
      ],
      "Default": "false__input.a || input.b",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap36",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap36",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap36",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap36",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap36",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap36",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap36",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap36",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap36",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap36",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true",
        },
      ],
      "Default": "3x",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.b",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.b",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.b",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.b",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.b",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false",
        },
      ],
      "Default": "false__input.b || input.z || x = 3x , true || x = 4x , false",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap39",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap39",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap39",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap39",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap39",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap39",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap39",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap39",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap39",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap39",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false 1",
        },
      ],
      "Default": "4x",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false || input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap42",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap42",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap42",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap42",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap42",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap42",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap42",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap42",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap42",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap42",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false || input.v",
        },
      ],
      "Default": "false__input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "Type": "Choice",
    },
    "input.b || x = 5x , false": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.b",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.b",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.b",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.b",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.b",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.b",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || x = 5x , false",
        },
      ],
      "Default": "5x",
      "Type": "Choice",
    },
    "input.b || x = 5x , false || input.arr": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap47",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap47",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap47",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap47",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap47",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap47",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap47",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap47",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap47",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap47",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.b || x = 5x , false || input.arr",
        },
      ],
      "Default": "false__input.b || x = 5x , false || input.arr",
      "Type": "Choice",
    },
    "input.nv ?? null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            Object {
              "IsNull": false,
              "Variable": "$.input.nv",
            },
          ],
          "Next": "true__input.nv ?? null",
        },
      ],
      "Default": "false__input.nv ?? null",
      "Type": "Choice",
    },
    "input.nv ?? x = 1x , input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            Object {
              "IsNull": false,
              "Variable": "$.input.nv",
            },
          ],
          "Next": "true__input.nv ?? x = 1x , input.v",
        },
      ],
      "Default": "1x",
      "Type": "Choice",
    },
    "input.v ?? x = 2x , input.nv": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            Object {
              "IsNull": false,
              "Variable": "$.input.v",
            },
          ],
          "Next": "true__input.v ?? x = 2x , input.nv",
        },
      ],
      "Default": "2x",
      "Type": "Choice",
    },
    "input.z && x = 6x , true": Object {
      "Choices": Array [
        Object {
          "Next": "true__input.z && x = 6x , true",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.input.z",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.input.z",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.input.z",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.input.z",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.input.z",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.input.z",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.input.z",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.input.z",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.input.z",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.input.z",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "6x",
      "Type": "Choice",
    },
    "notNullishCoalAssign = \\"a\\"": Object {
      "Next": "nullishCoalAssign = null",
      "Result": "a",
      "ResultPath": "$.notNullishCoalAssign",
      "Type": "Pass",
    },
    "notNullishCoalAssign ??= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.notNullishCoalAssign",
            },
            Object {
              "IsNull": false,
              "Variable": "$.notNullishCoalAssign",
            },
          ],
          "Next": "true__notNullishCoalAssign ??= \\"b\\"",
        },
      ],
      "Default": "false__notNullishCoalAssign ??= \\"b\\"",
      "Type": "Choice",
    },
    "null ?? input.v": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.fnl_context.null",
            },
            Object {
              "IsNull": false,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "true__null ?? input.v",
        },
      ],
      "Default": "false__null ?? input.v",
      "Type": "Choice",
    },
    "nullishCoalAssign = null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "truthyAndAssign = \\"a\\"",
      "ResultPath": "$.nullishCoalAssign",
      "Type": "Pass",
    },
    "nullishCoalAssign ??= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.nullishCoalAssign",
            },
            Object {
              "IsNull": false,
              "Variable": "$.nullishCoalAssign",
            },
          ],
          "Next": "true__nullishCoalAssign ??= \\"b\\"",
        },
      ],
      "Default": "false__nullishCoalAssign ??= \\"b\\"",
      "Type": "Choice",
    },
    "return {andVar: c, and: input.a && input.b, or: input.a || input.b, invNull": Object {
      "InputPath": "$.heap0",
      "Next": "input.a && input.b",
      "ResultPath": "$.heap19",
      "Type": "Pass",
    },
    "true__c = input.a && input.b": Object {
      "InputPath": "$.input.a",
      "Next": "x = \\"\\"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__falsyAndAssign &&= \\"b\\"": Object {
      "InputPath": "$.falsyAndAssign",
      "Next": "truthyOrAssign ||= \\"b\\"",
      "ResultPath": "$.falsyAndAssign",
      "Type": "Pass",
    },
    "true__falsyOrAssign ||= \\"b\\"": Object {
      "InputPath": "$.falsyOrAssign",
      "Next": "y = \\"\\"",
      "ResultPath": "$.falsyOrAssign",
      "Type": "Pass",
    },
    "true__input.a && input.b": Object {
      "InputPath": "$.input.a",
      "Next": "input.a || input.b",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true": Object {
      "InputPath": "$.input.a",
      "Next": "input.a && input.v && x = 7x , true 1",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true && input.v": Object {
      "InputPath": "$.heap57",
      "Next": "1__return {andVar: c, and: input.a && input.b, or: input.a || input.b, invN",
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true 1": Object {
      "InputPath": "$.heap54",
      "Next": "input.a && input.v && x = 7x , true && input.v",
      "ResultPath": "$.heap57",
      "Type": "Pass",
    },
    "true__input.a || input.b": Object {
      "InputPath": "$.input.a",
      "Next": "input.nv ?? x = 1x , input.v",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true": Object {
      "InputPath": "$.heap36",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false 1",
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false": Object {
      "InputPath": "$.input.b",
      "Next": "input.b || input.z || x = 3x , true",
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false 1": Object {
      "InputPath": "$.heap39",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false || input.v": Object {
      "InputPath": "$.heap42",
      "Next": "input.b || x = 5x , false",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "true__input.b || x = 5x , false": Object {
      "InputPath": "$.input.b",
      "Next": "input.b || x = 5x , false || input.arr",
      "ResultPath": "$.heap47",
      "Type": "Pass",
    },
    "true__input.b || x = 5x , false || input.arr": Object {
      "InputPath": "$.heap47",
      "Next": "input.z && x = 6x , true",
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "true__input.nv ?? null": Object {
      "InputPath": "$.input.nv",
      "Next": "null ?? input.v",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "true__input.nv ?? x = 1x , input.v": Object {
      "InputPath": "$.input.nv",
      "Next": "input.v ?? x = 2x , input.nv",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "true__input.v ?? x = 2x , input.nv": Object {
      "InputPath": "$.input.v",
      "Next": "input.nv ?? null",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "true__input.z && x = 6x , true": Object {
      "InputPath": "$.input.z",
      "Next": "input.a && input.v && x = 7x , true",
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "true__notNullishCoalAssign ??= \\"b\\"": Object {
      "InputPath": "$.notNullishCoalAssign",
      "Next": "nullishCoalAssign ??= \\"b\\"",
      "ResultPath": "$.notNullishCoalAssign",
      "Type": "Pass",
    },
    "true__null ?? input.v": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "true__nullishCoalAssign ??= \\"b\\"": Object {
      "InputPath": "$.nullishCoalAssign",
      "Next": "truthyAndAssign &&= \\"b\\"",
      "ResultPath": "$.nullishCoalAssign",
      "Type": "Pass",
    },
    "true__truthyAndAssign &&= \\"b\\"": Object {
      "InputPath": "$.truthyAndAssign",
      "Next": "falsyAndAssign &&= \\"b\\"",
      "ResultPath": "$.truthyAndAssign",
      "Type": "Pass",
    },
    "true__truthyOrAssign ||= \\"b\\"": Object {
      "InputPath": "$.truthyOrAssign",
      "Next": "falsyOrAssign ||= \\"b\\"",
      "ResultPath": "$.truthyOrAssign",
      "Type": "Pass",
    },
    "true__y = 1y && y = 2y , false": Object {
      "InputPath": "$.heap2.string",
      "Next": "y = 1y && y = 2y , false && y = 3y",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "true__y = 1y && y = 2y , false && y = 3y": Object {
      "InputPath": "$.heap5",
      "Next": "1__if(y = 1y && y = 2y , false && y = 3y)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "truthyAndAssign &&= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "Next": "true__truthyAndAssign &&= \\"b\\"",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.truthyAndAssign",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.truthyAndAssign",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.truthyAndAssign",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.truthyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.truthyAndAssign",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.truthyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.truthyAndAssign",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__truthyAndAssign &&= \\"b\\"",
      "Type": "Choice",
    },
    "truthyAndAssign = \\"a\\"": Object {
      "Next": "falsyAndAssign = \\"\\"",
      "Result": "a",
      "ResultPath": "$.truthyAndAssign",
      "Type": "Pass",
    },
    "truthyOrAssign = \\"a\\"": Object {
      "Next": "falsyOrAssign = \\"\\"",
      "Result": "a",
      "ResultPath": "$.truthyOrAssign",
      "Type": "Pass",
    },
    "truthyOrAssign ||= \\"b\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.truthyOrAssign",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.truthyOrAssign",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.truthyOrAssign",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.truthyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.truthyOrAssign",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.truthyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.truthyOrAssign",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__truthyOrAssign ||= \\"b\\"",
        },
      ],
      "Default": "false__truthyOrAssign ||= \\"b\\"",
      "Type": "Choice",
    },
    "x = \\"\\"": Object {
      "Next": "notNullishCoalAssign = \\"a\\"",
      "Result": "",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 1x 1": Object {
      "InputPath": "$.heap25.string",
      "Next": "1__x = 1x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 2x 1": Object {
      "InputPath": "$.heap29.string",
      "Next": "1__x = 2x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 3x 1": Object {
      "InputPath": "$.heap38.string",
      "Next": "1__x = 3x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 4x 1": Object {
      "InputPath": "$.heap41.string",
      "Next": "1__x = 4x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 5x 1": Object {
      "InputPath": "$.heap46.string",
      "Next": "1__x = 5x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 6x 1": Object {
      "InputPath": "$.heap51.string",
      "Next": "1__x = 6x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 7x 1": Object {
      "InputPath": "$.heap56.string",
      "Next": "1__x = 7x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "y = \\"\\"": Object {
      "Next": "1y",
      "Result": "",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 1y": Object {
      "InputPath": "$.heap2.string",
      "Next": "y = 1y && y = 2y , false",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 1y && y = 2y , false": Object {
      "Choices": Array [
        Object {
          "Next": "true__y = 1y && y = 2y , false",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.heap2.string",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.heap2.string",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.heap2.string",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.heap2.string",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.heap2.string",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.heap2.string",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.heap2.string",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.heap2.string",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.heap2.string",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.heap2.string",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "2y",
      "Type": "Choice",
    },
    "y = 1y && y = 2y , false && y = 3y": Object {
      "Choices": Array [
        Object {
          "Next": "true__y = 1y && y = 2y , false && y = 3y",
          "Not": Object {
            "And": Array [
              Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.heap5",
                  },
                  Object {
                    "IsNull": false,
                    "Variable": "$.heap5",
                  },
                ],
              },
              Object {
                "Or": Array [
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.heap5",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsString": true,
                              "Variable": "$.heap5",
                            },
                            Object {
                              "StringEquals": "",
                              "Variable": "$.heap5",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsNumeric": true,
                        "Variable": "$.heap5",
                      },
                      Object {
                        "Not": Object {
                          "And": Array [
                            Object {
                              "IsNumeric": true,
                              "Variable": "$.heap5",
                            },
                            Object {
                              "NumericEquals": 0,
                              "Variable": "$.heap5",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsBoolean": true,
                        "Variable": "$.heap5",
                      },
                      Object {
                        "BooleanEquals": true,
                        "Variable": "$.heap5",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "3y",
      "Type": "Choice",
    },
    "y = 2y 1": Object {
      "InputPath": "$.heap4.string",
      "Next": "1__y = 2y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 3y 1": Object {
      "InputPath": "$.heap7.string",
      "Next": "1__y = 3y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 4y 1": Object {
      "InputPath": "$.heap10.string",
      "Next": "5y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 5y": Object {
      "InputPath": "$.heap12.string",
      "Next": "6y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 6y 1": Object {
      "InputPath": "$.heap14.string",
      "Next": "1__if(y = 5y , false || y = 6y , true || y = 7y)",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 8y 1": Object {
      "InputPath": "$.heap18.string",
      "Next": "return {andVar: c, and: input.a && input.b, or: input.a || input.b, invNull",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
  },
}
`;

exports[`binaryOps logic with calls 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {and: true && await func(), or: false || await func()}": Object {
      "End": true,
      "Parameters": Object {
        "and.$": "$.heap0",
        "or.$": "$.heap2",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "2__return {and: true && await func(), or: false || await func()}": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return {and: true && await func(), or: false || await func()}",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap2",
      "Type": "Task",
    },
    "Initialize Functionless Context": Object {
      "Next": "return {and: true && await func(), or: false || await func()}",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return {and: true && await func(), or: false || await func()}": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "2__return {and: true && await func(), or: false || await func()}",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`boolean 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNumber": Object {
      "End": true,
      "Parameters": Object {
        "empty": false,
        "falseBoolean": false,
        "falseNumber": false,
        "falseString": false,
        "falsyVar.$": "$.heap2",
        "trueBoolean": true,
        "trueNumber": true,
        "trueObject": true,
        "trueString": true,
        "truthyVar.$": "$.heap0",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Boolean(input.nv)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.nv",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.nv",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.nv",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__Boolean(input.nv)",
        },
      ],
      "Default": "false__Boolean(input.nv)",
      "Type": "Choice",
    },
    "Initialize Functionless Context": Object {
      "Next": "return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNumber: B",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__Boolean(input.nv)": Object {
      "Next": "1__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNumber",
      "Result": false,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "false__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNu": Object {
      "Next": "Boolean(input.nv)",
      "Result": false,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNumber: B": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.value",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.value",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.value",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.value",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.value",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.value",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.value",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.value",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.value",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.value",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNum",
        },
      ],
      "Default": "false__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNu",
      "Type": "Choice",
    },
    "true__Boolean(input.nv)": Object {
      "Next": "1__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNumber",
      "Result": true,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "true__return {trueString: Boolean(\\"1\\"), trueBoolean: Boolean(true), trueNum": Object {
      "Next": "Boolean(input.nv)",
      "Result": true,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`call $SFN forEach 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "Initialize Functionless Context": Object {
      "Next": "await $SFN.forEach(input.arr, function (n))",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await $SFN.forEach(input.arr, function (n))": Object {
      "ItemsPath": "$.input.arr",
      "Iterator": Object {
        "StartAt": "return func(n)",
        "States": Object {
          "1__return func(n)": Object {
            "End": true,
            "InputPath": "$.heap0",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "return func(n)": Object {
            "InputPath": "$.n",
            "Next": "1__return func(n)",
            "Resource": "__REPLACED_TOKEN",
            "ResultPath": "$.heap0",
            "Type": "Task",
          },
        },
      },
      "Next": "return null",
      "Parameters": Object {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
        "n.$": "$$.Map.Item.Value",
      },
      "ResultPath": null,
      "Type": "Map",
    },
    "return null": Object {
      "End": true,
      "InputPath": "$.fnl_context.null",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`call $SFN map 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return $SFN.map(input.arr, function (n))": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return $SFN.map(input.arr, function (n))",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return $SFN.map(input.arr, function (n))": Object {
      "ItemsPath": "$.input.arr",
      "Iterator": Object {
        "StartAt": "return n",
        "States": Object {
          "return n": Object {
            "End": true,
            "InputPath": "$.n",
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "1__return $SFN.map(input.arr, function (n))",
      "Parameters": Object {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
        "n.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap0",
      "Type": "Map",
    },
  },
}
`;

exports[`call $SFN map with constant array 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "$SFN.map([1, 2, 3], function (n))": Object {
      "ItemsPath": "$.heap2",
      "Iterator": Object {
        "StartAt": "return nn",
        "States": Object {
          "1__return nn": Object {
            "End": true,
            "InputPath": "$.heap1.string",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "nn": Object {
            "Next": "1__return nn",
            "Parameters": Object {
              "string.$": "States.Format('n{}',$.n)",
            },
            "ResultPath": "$.heap1",
            "Type": "Pass",
          },
          "return nn": Object {
            "InputPath": "$.n",
            "Next": "nn",
            "ResultPath": null,
            "Type": "Pass",
          },
        },
      },
      "Next": "1__return $SFN.map([1, 2, 3], function (n))",
      "Parameters": Object {
        "fnl_context.$": "$.fnl_context",
        "n.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap3",
      "Type": "Map",
    },
    "1__return $SFN.map([1, 2, 3], function (n))": Object {
      "End": true,
      "InputPath": "$.heap3",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return $SFN.map([1, 2, 3], function (n))",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return $SFN.map([1, 2, 3], function (n))": Object {
      "Next": "$SFN.map([1, 2, 3], function (n))",
      "Result": Array [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
  },
}
`;

exports[`call $SFN parallel 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return $SFN.parallel(function (), function ())": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return $SFN.parallel(function (), function ())",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return $SFN.parallel(function (), function ())": Object {
      "Branches": Array [
        Object {
          "StartAt": "return 1",
          "States": Object {
            "return 1": Object {
              "End": true,
              "Result": 1,
              "ResultPath": "$",
              "Type": "Pass",
            },
          },
        },
        Object {
          "StartAt": "return 2",
          "States": Object {
            "return 2": Object {
              "End": true,
              "Result": 2,
              "ResultPath": "$",
              "Type": "Pass",
            },
          },
        },
      ],
      "Next": "1__return $SFN.parallel(function (), function ())",
      "ResultPath": "$.heap0",
      "Type": "Parallel",
    },
  },
}
`;

exports[`call $SFN wait 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "$SFN.waitFor(1)": Object {
      "Next": "return null",
      "Seconds": 1,
      "Type": "Wait",
    },
    "Initialize Functionless Context": Object {
      "Next": "$SFN.waitFor(1)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return null": Object {
      "End": true,
      "InputPath": "$.fnl_context.null",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`call lambda $AWS invoke 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return await $AWS.Lambda.Invoke({Function: func, Payload: obj}).Payload.": Object {
      "End": true,
      "InputPath": "$.heap0.Payload.str",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return await $AWS.Lambda.Invoke({Function: func, Payload: obj}).Payload.str",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return await $AWS.Lambda.Invoke({Function: func, Payload: obj}).Payload.str": Object {
      "Next": "1__return await $AWS.Lambda.Invoke({Function: func, Payload: obj}).Payload.",
      "Parameters": Object {
        "FunctionName": "__REPLACED_TOKEN",
        "Payload": Object {
          "str": "hello world",
        },
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return func()": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return func()",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return func()": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return func()",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with array parameter 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return func([1, 2])": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return func([1, 2])",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return func([1, 2])": Object {
      "Next": "1__return func([1, 2])",
      "Parameters": Array [
        1,
        2,
      ],
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with array ref 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return func(arr)": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return func(arr)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return func(arr)": Object {
      "Next": "1__return func(arr)",
      "Parameters": Array [
        1,
        2,
        3,
      ],
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with object literal parameter 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return await func({str: \\"hello world\\"}).str": Object {
      "End": true,
      "InputPath": "$.heap0.str",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return await func({str: \\"hello world\\"}).str",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return await func({str: \\"hello world\\"}).str": Object {
      "Next": "1__return await func({str: \\"hello world\\"}).str",
      "Parameters": Object {
        "str": "hello world",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with object reference parameter 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return await func(obj).str": Object {
      "End": true,
      "InputPath": "$.heap0.str",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return await func(obj).str",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return await func(obj).str": Object {
      "Next": "1__return await func(obj).str",
      "Parameters": Object {
        "str": "hello world",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with string parameter 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return await func(\\"hello world\\").str": Object {
      "End": true,
      "InputPath": "$.heap0.str",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return await func(\\"hello world\\").str",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return await func(\\"hello world\\").str": Object {
      "Next": "1__return await func(\\"hello world\\").str",
      "Parameters": "hello world",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`call lambda with string reference 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return await func(event.str).str": Object {
      "End": true,
      "InputPath": "$.heap0.str",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return await func(event.str).str",
      "Parameters": Object {
        "event.$": "$$.Execution.Input",
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return await func(event.str).str": Object {
      "InputPath": "$.event.str",
      "Next": "1__return await func(event.str).str",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`clean state after input 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.input.a",
        "initA.$": "$.heap5",
        "stateA.$": "$.heap0",
        "stateInput.$": "$.heap3",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "state = dumpState()",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a ?? null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.a",
            },
            Object {
              "IsNull": false,
              "Variable": "$.a",
            },
          ],
          "Next": "true__a ?? null",
        },
      ],
      "Default": "false__a ?? null",
      "Type": "Choice",
    },
    "false__a ?? null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "false__return {stateA: state.a ?? null, a: input.a, stateInput: state.input": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "state.input.a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__state.input.a ?? null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "a ?? null",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?? n": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.state.a",
            },
            Object {
              "IsNull": false,
              "Variable": "$.state.a",
            },
          ],
          "Next": "true__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.",
        },
      ],
      "Default": "false__return {stateA: state.a ?? null, a: input.a, stateInput: state.input",
      "Type": "Choice",
    },
    "state = dumpState()": Object {
      "InputPath": "$",
      "Next": "return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?? n",
      "ResultPath": "$.state",
      "Type": "Pass",
    },
    "state.input.a ?? null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.state.input.a",
            },
            Object {
              "IsNull": false,
              "Variable": "$.state.input.a",
            },
          ],
          "Next": "true__state.input.a ?? null",
        },
      ],
      "Default": "false__state.input.a ?? null",
      "Type": "Choice",
    },
    "true__a ?? null": Object {
      "InputPath": "$.a",
      "Next": "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "true__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.": Object {
      "InputPath": "$.state.a",
      "Next": "state.input.a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__state.input.a ?? null": Object {
      "InputPath": "$.state.input.a",
      "Next": "a ?? null",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
  },
}
`;

exports[`conditionals 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__if(await func())": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap0",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap0",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap0",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap0",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap0",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap0",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap0",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap0",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap0",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap0",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "return input.b",
        },
      ],
      "Default": "return \\"noop\\"",
      "Type": "Choice",
    },
    "Initialize Functionless Context": Object {
      "Next": "if(input.a)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "if(await func())": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__if(await func())",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "if(input.a)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.a",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.a",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "if(await func())",
        },
      ],
      "Default": "return \\"noop\\"",
      "Type": "Choice",
    },
    "return \\"noop\\"": Object {
      "End": true,
      "Result": "noop",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return input.b": Object {
      "End": true,
      "InputPath": "$.input.b",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`context 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return name: context.Execution.Name": Object {
      "End": true,
      "InputPath": "$.heap1.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "name: context.Execution.Name",
      "Parameters": Object {
        "_.$": "$$.Execution.Input",
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "name: context.Execution.Name": Object {
      "Next": "1__return name: context.Execution.Name",
      "Parameters": Object {
        "string.$": "States.Format('name: {}',$$.Execution.Name)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
  },
}
`;

exports[`continue break 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__await $AWS.DynamoDB.UpdateItem({Table: table, Key: {id: {S: input.id}}, ": Object {
      "Next": "if(i === 3)",
      "Parameters": Object {
        "ExpressionAttributeValues": Object {
          ":inc": Object {
            "N.$": "$.heap6.string",
          },
          ":start": Object {
            "N": "0",
          },
        },
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
        "UpdateExpression": "SET val = if_not_exists(val, :start) + :inc",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id": Object {
      "Next": "item.Item.val.N",
      "Parameters": Object {
        "ConsistentRead": true,
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap11",
      "Type": "Task",
    },
    "1__return aitem.Item.val.N": Object {
      "End": true,
      "InputPath": "$.heap14.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1a": Object {
      "Next": "a = 1a 1",
      "Parameters": Object {
        "string.$": "States.Format('{}1',$.a)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "2a": Object {
      "Next": "a = 2a 1",
      "Parameters": Object {
        "string.$": "States.Format('{}2',$.a)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "while (true)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 1a 1": Object {
      "InputPath": "$.heap1.string",
      "Next": "if(a !== \\"111\\")",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 2a 1": Object {
      "InputPath": "$.heap3.string",
      "Next": "while (true)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aitem.Item.val.N": Object {
      "Next": "1__return aitem.Item.val.N",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap13)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3, 4])": Object {
      "Next": "hasNext__for(i of [1, 2, 3, 4])",
      "Result": Array [
        1,
        2,
        3,
        4,
      ],
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "hasNext__for(i of [1, 2, 3, 4])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap9[0]",
        },
      ],
      "Default": "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id",
      "Type": "Choice",
    },
    "i": Object {
      "InputPath": "$.heap9[0]",
      "Next": "if(i === 1)",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i 1": Object {
      "Next": "1__await $AWS.DynamoDB.UpdateItem({Table: table, Key: {id: {S: input.id}}, ",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.i)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "if(a !== \\"111\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "And": Array [
                  Object {
                    "IsPresent": true,
                    "Variable": "$.a",
                  },
                  Object {
                    "And": Array [
                      Object {
                        "IsString": true,
                        "Variable": "$.a",
                      },
                      Object {
                        "StringEquals": "111",
                        "Variable": "$.a",
                      },
                    ],
                  },
                ],
              },
            },
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.a",
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.a",
                    },
                    Object {
                      "StringEquals": "11121",
                      "Variable": "$.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "for(i of [1, 2, 3, 4])",
        },
        Object {
          "Next": "while (true)",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.a",
              },
              Object {
                "And": Array [
                  Object {
                    "IsString": true,
                    "Variable": "$.a",
                  },
                  Object {
                    "StringEquals": "111",
                    "Variable": "$.a",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "2a",
      "Type": "Choice",
    },
    "if(i === 1)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i",
                },
                Object {
                  "NumericEquals": 1,
                  "Variable": "$.i",
                },
              ],
            },
          ],
          "Next": "tail__for(i of [1, 2, 3, 4])",
        },
      ],
      "Default": "i 1",
      "Type": "Choice",
    },
    "if(i === 3)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i",
                },
                Object {
                  "NumericEquals": 3,
                  "Variable": "$.i",
                },
              ],
            },
          ],
          "Next": "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id",
        },
      ],
      "Default": "tail__for(i of [1, 2, 3, 4])",
      "Type": "Choice",
    },
    "item.Item.val.N": Object {
      "InputPath": "$.heap11.Item.val.N",
      "Next": "aitem.Item.val.N",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "tail__for(i of [1, 2, 3, 4])": Object {
      "InputPath": "$.heap9[1:]",
      "Next": "hasNext__for(i of [1, 2, 3, 4])",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "while (true)": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "1a",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "for(i of [1, 2, 3, 4])",
      "Type": "Choice",
    },
  },
}
`;

exports[`destructure 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).join()": Object {
      "InputPath": "$.heap6",
      "Next": "hasNext__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] }))",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).join() 1": Object {
      "Next": "check__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).j",
      "Parameters": Object {
        "arr": Array [
          Object {
            "aa": "a",
            "bb": Array [
              "b",
            ],
          },
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "1__return aacc": Object {
      "InputPath": "$.heap9.string",
      "Next": "handleResult__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ",
      "ResultPath": "$.heap6.arr[0]",
      "Type": "Pass",
    },
    "1__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV": Object {
      "End": true,
      "Parameters": Object {
        "forV.$": "$.forV",
        "map.$": "$.heap38",
        "prop.$": "$.heap26.string",
        "tr.$": "$.heap40",
        "var.$": "$.heap36.string",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "4__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV": Object {
      "InputPath": "$.heap11.string",
      "Next": "6__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV",
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "6__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV": Object {
      "InputPath": "$.message",
      "Next": "1__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV",
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "c = \\"what\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "aacc": Object {
      "Next": "1__return aacc",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.heap7,$.heap8)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "abcdefarrRest[0]rm": Object {
      "Next": "zwvxsuttserRra[0]",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}{}{}{}{}{}{}',$.heap17,$.heap18,$.c,$.heap20,$.heap21,$.heap22,$.arrRest[0],$.heap24,$.heap25)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "append__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).": Object {
      "Next": "tail__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).jo 1",
      "Parameters": Object {
        "string.$": "States.Format('{},{}', $.heap11.string, $.heap10[0])",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "arrRest": Object {
      "InputPath": "$$.Execution.Input.arr[3:]",
      "Next": "f = \\"sir\\"",
      "ResultPath": "$.arrRest",
      "Type": "Pass",
    },
    "b": Object {
      "InputPath": "$$.Execution.Input.bb.value",
      "Next": "d",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "c": Object {
      "InputPath": "$.heap0",
      "Next": "m = c",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = \\"what\\"": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "value__c = \\"what\\"",
          "Variable": "$$.Execution.Input.c",
        },
      ],
      "Default": "default__c = \\"what\\"",
      "Type": "Choice",
    },
    "catch__try": Object {
      "Next": "return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV: f",
      "Parameters": "hi",
      "ResultPath": "$.message",
      "Type": "Pass",
    },
    "cc 1": Object {
      "InputPath": "$.heap6.arr[0].bb[0]",
      "Next": "aacc",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "check__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).j": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return aacc",
          "Variable": "$.heap6.arr[0]",
        },
      ],
      "Default": "end__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).joi",
      "Type": "Choice",
    },
    "d": Object {
      "InputPath": "$$.Execution.Input.arr[0]",
      "Next": "e 1",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "default__c = \\"what\\"": Object {
      "Next": "c",
      "Result": "what",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "default__f = \\"sir\\"": Object {
      "Next": "value",
      "Result": "sir",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "default__m = c": Object {
      "InputPath": "$.c",
      "Next": "arrRest",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "default__t = \\"sir\\"": Object {
      "Next": "1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).join() 1",
      "Result": "sir",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "default__x = \\"what\\"": Object {
      "Next": "tserRra",
      "Result": "what",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "e 1": Object {
      "InputPath": "$$.Execution.Input.arr[2]",
      "Next": "f 1",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "end__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).joi": Object {
      "Next": "set__end__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap6.arrStr))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "f 1": Object {
      "InputPath": "$.heap2",
      "Next": "r 1",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "f = \\"sir\\"": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "value__f = \\"sir\\"",
          "Variable": "$$.Execution.Input.arr2[0]",
        },
      ],
      "Default": "default__f = \\"sir\\"",
      "Type": "Choice",
    },
    "for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])": Object {
      "Next": "hasNext__for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])",
      "Result": Array [
        Object {
          "h": "a",
          "j": Array [
            "b",
          ],
        },
      ],
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "forV = \\"\\"": Object {
      "Next": "for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])",
      "Result": "",
      "ResultPath": "$.forV",
      "Type": "Pass",
    },
    "forV = forVhl 1": Object {
      "InputPath": "$.heap15.string",
      "Next": "tail__for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])",
      "ResultPath": "$.forV",
      "Type": "Pass",
    },
    "forVhl": Object {
      "Next": "forV = forVhl 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}',$.forV,$.heap13,$.heap14)",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "h": Object {
      "InputPath": "$.heap16[0].h",
      "Next": "l 1",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "handleResult__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ": Object {
      "Next": "check__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).j",
      "Parameters": Object {
        "arr.$": "$.heap6.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap6.arrStr, States.JsonToString($.heap6.arr[0]))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "hasNext__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] }))": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap10[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap11",
              },
            },
          ],
          "Next": "initValue__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] }",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap10[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap11",
              },
            },
          ],
          "Next": "returnEmpty__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ]",
        },
        Object {
          "IsPresent": true,
          "Next": "append__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).",
          "Variable": "$.heap10[0]",
        },
      ],
      "Default": "forV = \\"\\"",
      "Type": "Choice",
    },
    "hasNext__for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "h",
          "Variable": "$.heap16[0]",
        },
      ],
      "Default": "catch__try",
      "Type": "Choice",
    },
    "initValue__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] }": Object {
      "InputPath": "$.heap10[0]",
      "Next": "tail__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).jo 1",
      "ResultPath": "$.heap11.string",
      "Type": "Pass",
    },
    "l 1": Object {
      "InputPath": "$.heap16[0].j[0]",
      "Next": "forVhl",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "m 1": Object {
      "InputPath": "$.heap1",
      "Next": "abcdefarrRest[0]rm",
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "m = c": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "value__m = c",
          "Variable": "$$.Execution.Input.m",
        },
      ],
      "Default": "default__m = c",
      "Type": "Choice",
    },
    "r 1": Object {
      "InputPath": "$$.Execution.Input.bb.ab",
      "Next": "m 1",
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "return aacc": Object {
      "InputPath": "$.heap6.arr[0].aa",
      "Next": "cc 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV: f": Object {
      "InputPath": "$$.Execution.Input.a",
      "Next": "b",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "returnEmpty__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ]": Object {
      "Next": "forV = \\"\\"",
      "Result": "",
      "ResultPath": "$.heap11.string",
      "Type": "Pass",
    },
    "s": Object {
      "InputPath": "$.value.rra[0]",
      "Next": "u 1",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "set__end__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })": Object {
      "InputPath": "$.heap6.result[1:]",
      "Next": "1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).join()",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "t 1": Object {
      "InputPath": "$.heap4",
      "Next": "zwvxsuttserRra[0] 1",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "t = \\"sir\\"": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "value__t = \\"sir\\"",
          "Variable": "$.value.rra2[0]",
        },
      ],
      "Default": "default__t = \\"sir\\"",
      "Type": "Choice",
    },
    "tail__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).jo 1": Object {
      "InputPath": "$.heap10[1:]",
      "Next": "hasNext__1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] }))",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "tail__for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])": Object {
      "InputPath": "$.heap16[1:]",
      "Next": "hasNext__for({ h, j: [ l ] } of [{h: \\"a\\", j: [\\"b\\"]}])",
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "tserRra": Object {
      "InputPath": "$.value.rra[3:]",
      "Next": "t = \\"sir\\"",
      "ResultPath": "$.tserRra",
      "Type": "Pass",
    },
    "u 1": Object {
      "InputPath": "$.value.rra[2]",
      "Next": "t 1",
      "ResultPath": "$.heap33",
      "Type": "Pass",
    },
    "v 1": Object {
      "InputPath": "$.value.yy.ab",
      "Next": "x 1",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "value": Object {
      "InputPath": "$$.Execution.Input.value",
      "Next": "x = \\"what\\"",
      "ResultPath": "$.value",
      "Type": "Pass",
    },
    "value__c = \\"what\\"": Object {
      "InputPath": "$$.Execution.Input.c",
      "Next": "c",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "value__f = \\"sir\\"": Object {
      "InputPath": "$$.Execution.Input.arr2[0]",
      "Next": "value",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "value__m = c": Object {
      "InputPath": "$$.Execution.Input.m",
      "Next": "arrRest",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "value__t = \\"sir\\"": Object {
      "InputPath": "$.value.rra2[0]",
      "Next": "1__map = [{aa: \\"a\\", bb: [\\"b\\"]}].map(function ({ aa, bb: [ cc ] })).join() 1",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "value__x = \\"what\\"": Object {
      "InputPath": "$.value.x",
      "Next": "tserRra",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "w": Object {
      "InputPath": "$.value.yy.value",
      "Next": "v 1",
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "x 1": Object {
      "InputPath": "$.heap3",
      "Next": "s",
      "ResultPath": "$.heap31",
      "Type": "Pass",
    },
    "x = \\"what\\"": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "value__x = \\"what\\"",
          "Variable": "$.value.x",
        },
      ],
      "Default": "default__x = \\"what\\"",
      "Type": "Choice",
    },
    "zwvxsuttserRra[0]": Object {
      "InputPath": "$.value.z",
      "Next": "w",
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "zwvxsuttserRra[0] 1": Object {
      "Next": "4__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}{}{}{}{}{}',$.heap28,$.heap29,$.heap30,$.heap31,$.heap32,$.heap33,$.heap34,$.tserRra[0])",
      },
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
  },
}
`;

exports[`duplicate nodes 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "Initialize Functionless Context": Object {
      "Next": "return \\"hello world\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return \\"hello world\\"": Object {
      "End": true,
      "Result": "hello world",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`filter 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "$SFN.waitFor(1)": Object {
      "Next": "hikey",
      "Seconds": 1,
      "Type": "Wait",
    },
    "1__return x <= index || first === x": Object {
      "InputPath": "$.heap8",
      "Next": "handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "1__return {arr1: arr1, arr2: arr2}": Object {
      "End": true,
      "Parameters": Object {
        "arr1.$": "$.heap9",
        "arr2.$": "$.heap10",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {arr1: arr1, arr2: arr2} 1": Object {
      "InputPath": "$.heap6",
      "Next": "1__return {arr1: arr1, arr2: arr2}",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "2__return itemKey === hikey": Object {
      "InputPath": "$.heap4",
      "Next": "handleResult__arr1 = arr.filter(function ({ value })).filter(function ({ va",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "{ arr, key }",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "ItemsPath": "$.heap5",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": Object {
        "index.$": "$$.Map.Item.Index",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap6",
      "ResultSelector": Object {
        "arr.$": "$",
        "arrStr": "[null",
      },
      "Type": "Map",
    },
    "arr1 = arr.filter(function ({ value })).filter(function ({ value })).filter": Object {
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "Parameters": Object {
        "arr.$": "$.arr[?(@.value<=3)][?(@.value<=$.key)]",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "arr2 = [4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "Next": "[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Result": Array [
        4,
        3,
        2,
        1,
      ],
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "function (x,index,[ first ])",
          "Variable": "$.heap6.arr[0]",
        },
      ],
      "Default": "end__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Type": "Choice",
    },
    "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "{ key: itemKey } = item",
          "Variable": "$.heap0.arr[0]",
        },
      ],
      "Default": "end__arr1 = arr.filter(function ({ value })).filter(function ({ value })).f",
      "Type": "Choice",
    },
    "end__[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "Next": "set__end__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap6.arrStr))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "end__arr1 = arr.filter(function ({ value })).filter(function ({ value })).f": Object {
      "Next": "set__end__arr1 = arr.filter(function ({ value })).filter(function ({ value ",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap0.arrStr))",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__itemKey === hikey": Object {
      "Next": "2__return itemKey === hikey",
      "Result": false,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "false__return x <= index || first === x": Object {
      "Next": "1__return x <= index || first === x",
      "Result": false,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "first": Object {
      "InputPath": "$.heap5[0]",
      "Next": "return x <= index || first === x",
      "ResultPath": "$.first",
      "Type": "Pass",
    },
    "function (x,index,[ first ])": Object {
      "InputPath": "$.heap6.arr[0].item",
      "Next": "index",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap7",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap7",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap7",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap7",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap7",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap7",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap7",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap7",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap7",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap7",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "predicateTrue__handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ",
        },
      ],
      "Default": "tail__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Type": "Choice",
    },
    "handleResult__arr1 = arr.filter(function ({ value })).filter(function ({ va": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.heap1",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.heap1",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.heap1",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.heap1",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.heap1",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.heap1",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.heap1",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.heap1",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.heap1",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.heap1",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "predicateTrue__handleResult__arr1 = arr.filter(function ({ value })).filter",
        },
      ],
      "Default": "tail__arr1 = arr.filter(function ({ value })).filter(function ({ value })).",
      "Type": "Choice",
    },
    "hikey": Object {
      "Next": "itemKey === hikey",
      "Parameters": Object {
        "string.$": "States.Format('hi{}',$.key)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "index": Object {
      "InputPath": "$.heap6.arr[0].index",
      "Next": "first",
      "ResultPath": "$.index",
      "Type": "Pass",
    },
    "itemKey === hikey": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.itemKey",
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsNull": true,
                      "Variable": "$.itemKey",
                    },
                    Object {
                      "IsNull": true,
                      "Variable": "$.heap3.string",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.itemKey",
                    },
                    Object {
                      "StringEqualsPath": "$.heap3.string",
                      "Variable": "$.itemKey",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.itemKey",
                    },
                    Object {
                      "BooleanEqualsPath": "$.heap3.string",
                      "Variable": "$.itemKey",
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.itemKey",
                    },
                    Object {
                      "NumericEqualsPath": "$.heap3.string",
                      "Variable": "$.itemKey",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__itemKey === hikey",
        },
      ],
      "Default": "false__itemKey === hikey",
      "Type": "Choice",
    },
    "key": Object {
      "InputPath": "$$.Execution.Input.key",
      "Next": "arr1 = arr.filter(function ({ value })).filter(function ({ value })).filter",
      "ResultPath": "$.key",
      "Type": "Pass",
    },
    "predicateTrue__handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ": Object {
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": Object {
        "arr.$": "$.heap6.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap6.arrStr, States.JsonToString($.heap6.arr[0].item))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "predicateTrue__handleResult__arr1 = arr.filter(function ({ value })).filter": Object {
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "Parameters": Object {
        "arr.$": "$.heap0.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap0.arrStr, States.JsonToString($.heap0.arr[0]))",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return x <= index || first === x": Object {
      "Choices": Array [
        Object {
          "Next": "true__return x <= index || first === x",
          "Or": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.x",
                },
                Object {
                  "Or": Array [
                    Object {
                      "And": Array [
                        Object {
                          "IsString": true,
                          "Variable": "$.x",
                        },
                        Object {
                          "StringLessThanEqualsPath": "$.index",
                          "Variable": "$.x",
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsBoolean": true,
                          "Variable": "$.x",
                        },
                        Object {
                          "IsNull": true,
                          "Variable": "$$.Execution.Id",
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsNumeric": true,
                          "Variable": "$.x",
                        },
                        Object {
                          "NumericLessThanEqualsPath": "$.index",
                          "Variable": "$.x",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.first",
                },
                Object {
                  "Or": Array [
                    Object {
                      "And": Array [
                        Object {
                          "IsNull": true,
                          "Variable": "$.first",
                        },
                        Object {
                          "IsNull": true,
                          "Variable": "$.x",
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsString": true,
                          "Variable": "$.first",
                        },
                        Object {
                          "StringEqualsPath": "$.x",
                          "Variable": "$.first",
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsBoolean": true,
                          "Variable": "$.first",
                        },
                        Object {
                          "BooleanEqualsPath": "$.x",
                          "Variable": "$.first",
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsNumeric": true,
                          "Variable": "$.first",
                        },
                        Object {
                          "NumericEqualsPath": "$.x",
                          "Variable": "$.first",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__return x <= index || first === x",
      "Type": "Choice",
    },
    "return {arr1: arr1, arr2: arr2}": Object {
      "InputPath": "$.heap0",
      "Next": "1__return {arr1: arr1, arr2: arr2} 1",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "set__end__[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "InputPath": "$.heap6.result[1:]",
      "Next": "return {arr1: arr1, arr2: arr2}",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "set__end__arr1 = arr.filter(function ({ value })).filter(function ({ value ": Object {
      "InputPath": "$.heap0.result[1:]",
      "Next": "arr2 = [4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "tail__[4, 3, 2, 1].filter(function (x,index,[ first ]))": Object {
      "InputPath": "$.heap6.arr[1:]",
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap6.arr",
      "Type": "Pass",
    },
    "tail__arr1 = arr.filter(function ({ value })).filter(function ({ value })).": Object {
      "InputPath": "$.heap0.arr[1:]",
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "ResultPath": "$.heap0.arr",
      "Type": "Pass",
    },
    "true__itemKey === hikey": Object {
      "Next": "2__return itemKey === hikey",
      "Result": true,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "true__return x <= index || first === x": Object {
      "Next": "1__return x <= index || first === x",
      "Result": true,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "{ arr, key }": Object {
      "InputPath": "$$.Execution.Input.arr",
      "Next": "key",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "{ key: itemKey } = item": Object {
      "InputPath": "$.heap0.arr[0].key",
      "Next": "$SFN.waitFor(1)",
      "ResultPath": "$.itemKey",
      "Type": "Pass",
    },
  },
}
`;

exports[`for 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__for(arr = input.arr;arr[0];arr = arr.slice(1))": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.arr[0]",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.arr[0]",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.arr[0]",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.arr[0]",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.arr[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.arr[0]",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.arr[0]",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.arr[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.arr[0]",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.arr[0]",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "naarr[0]",
        },
      ],
      "Default": "c = \\"\\"",
      "Type": "Choice",
    },
    "1c": Object {
      "Next": "c = 1c 2",
      "Parameters": Object {
        "string.$": "States.Format('{}1',$.c)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "1c 1": Object {
      "Next": "c = 1c 3",
      "Parameters": Object {
        "string.$": "States.Format('{}1',$.c)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = cac 1": Object {
      "InputPath": "$.heap7.string",
      "Next": "1c 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = naarr[0] 1": Object {
      "InputPath": "$.heap2.string",
      "Next": "arr = arr.slice(1)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "arr = arr.slice(1)": Object {
      "InputPath": "$.arr[1:]",
      "Next": "1__for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "c = \\"\\"": Object {
      "Next": "if(c === \\"1\\")",
      "Result": "",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = 1c 2": Object {
      "InputPath": "$.heap4.string",
      "Next": "if(c === \\"1\\")",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = 1c 3": Object {
      "InputPath": "$.heap9.string",
      "Next": "if(c === \\"1\\")",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "cac": Object {
      "Next": "a = cac 1",
      "Parameters": Object {
        "string.$": "States.Format('{}c{}',$.a,$.c)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "for(arr = input.arr;arr[0];arr = arr.slice(1))": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "if(c === \\"1\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.c",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.c",
                },
                Object {
                  "StringEquals": "1",
                  "Variable": "$.c",
                },
              ],
            },
          ],
          "Next": "1c",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.c",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.c",
                },
                Object {
                  "StringEquals": "111",
                  "Variable": "$.c",
                },
              ],
            },
          ],
          "Next": "return a",
        },
      ],
      "Default": "cac",
      "Type": "Choice",
    },
    "naarr[0]": Object {
      "Next": "a = naarr[0] 1",
      "Parameters": Object {
        "string.$": "States.Format('{}n{}',$.a,$.arr[0])",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "return a": Object {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`for control and assignment 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__for(i in input.arr)": Object {
      "ItemsPath": "$.heap3",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr)",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap3",
      "Type": "Map",
    },
    "1__for(i in input.arr) 1": Object {
      "ItemsPath": "$.heap7",
      "Iterator": Object {
        "StartAt": "Default 1",
        "States": Object {
          "Default 1": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr) 1",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap7",
      "Type": "Map",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "for(i in input.arr)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = nai 1": Object {
      "InputPath": "$.heap2.string",
      "Next": "tail__for(i in input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = nai 3": Object {
      "InputPath": "$.heap6.string",
      "Next": "tail__for(i in input.arr) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "for(i in input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "for(i in input.arr) 1": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr) 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "for(i of input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "hasNext__for(i in input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "for(i in input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i in input.arr) 1": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap7[0]",
        },
      ],
      "Default": "for(i of input.arr)",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 4",
          "Variable": "$.heap8[0]",
        },
      ],
      "Default": "return \\"woops\\"",
      "Type": "Choice",
    },
    "i": Object {
      "InputPath": "$.heap3[0].index",
      "Next": "if(i === \\"2\\")",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i 2": Object {
      "InputPath": "$.heap7[0].index",
      "Next": "if(i !== \\"2\\")",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "i 4": Object {
      "InputPath": "$.heap8[0]",
      "Next": "if(i === 2)",
      "ResultPath": "$.i__2",
      "Type": "Pass",
    },
    "if(i !== \\"2\\")": Object {
      "Choices": Array [
        Object {
          "Next": "tail__for(i in input.arr) 1",
          "Not": Object {
            "And": Array [
              Object {
                "IsPresent": true,
                "Variable": "$.i__1",
              },
              Object {
                "And": Array [
                  Object {
                    "IsString": true,
                    "Variable": "$.i__1",
                  },
                  Object {
                    "StringEquals": "2",
                    "Variable": "$.i__1",
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "nai 1",
      "Type": "Choice",
    },
    "if(i === \\"2\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.i",
                },
                Object {
                  "StringEquals": "2",
                  "Variable": "$.i",
                },
              ],
            },
          ],
          "Next": "for(i in input.arr) 1",
        },
      ],
      "Default": "nai",
      "Type": "Choice",
    },
    "if(i === 2)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i__2",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i__2",
                },
                Object {
                  "NumericEquals": 2,
                  "Variable": "$.i__2",
                },
              ],
            },
          ],
          "Next": "return a",
        },
      ],
      "Default": "tail__for(i of input.arr)",
      "Type": "Choice",
    },
    "nai": Object {
      "Next": "a = nai 1",
      "Parameters": Object {
        "string.$": "States.Format('{}n{}',$.a,$.i)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "nai 1": Object {
      "Next": "a = nai 3",
      "Parameters": Object {
        "string.$": "States.Format('{}n{}',$.a,$.i__1)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "return \\"woops\\"": Object {
      "End": true,
      "Result": "woops",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return a": Object {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i in input.arr)": Object {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__for(i in input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__for(i in input.arr) 1": Object {
      "InputPath": "$.heap7[1:]",
      "Next": "hasNext__for(i in input.arr) 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": Object {
      "InputPath": "$.heap8[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
  },
}
`;

exports[`for in 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__await func({n: i, id: input.id})": Object {
      "Next": "await func({n: input.arr[j], id: input.id})",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap11",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: input.arr[i], id: input.id})": Object {
      "Next": "tail__for(i in input.arr)",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap1.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: input.arr[i], id: input.id}) 1 1": Object {
      "Next": "await func({n: i, id: input.id})",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap7.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: input.arr[j], id: input.id})": Object {
      "Next": "1__await func({n: j, id: input.id}) 1",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap15.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: j, id: input.id})": Object {
      "Next": "tail__for(i in input.arr) 1",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.j",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: j, id: input.id}) 1": Object {
      "Next": "tail__for(j in input.arr)",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.j",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__for(i in input.arr)": Object {
      "ItemsPath": "$.heap5",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr)",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap5",
      "Type": "Map",
    },
    "1__for(i in input.arr) 1": Object {
      "ItemsPath": "$.heap26",
      "Iterator": Object {
        "StartAt": "Default 2",
        "States": Object {
          "Default 2": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr) 1",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap26",
      "Type": "Map",
    },
    "1__for(j in input.arr)": Object {
      "ItemsPath": "$.heap22",
      "Iterator": Object {
        "StartAt": "Default 1",
        "States": Object {
          "Default 1": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(j in input.arr)",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap22",
      "Type": "Map",
    },
    "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id": Object {
      "Next": "item",
      "Parameters": Object {
        "ConsistentRead": true,
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap28",
      "Type": "Task",
    },
    "Initialize Functionless Context": Object {
      "Next": "for(i in input.arr)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await func({n: i, id: input.id})": Object {
      "InputPath": "$.heap26[0].index",
      "Next": "1__await func({n: i, id: input.id})",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "await func({n: input.arr[i], id: input.id})": Object {
      "InputPath": "$.heap5[0].item",
      "Next": "input.arr[i]",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "await func({n: input.arr[i], id: input.id}) 1": Object {
      "InputPath": "$.heap26[0].item",
      "Next": "input.arr[i] 1",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "await func({n: input.arr[j], id: input.id})": Object {
      "InputPath": "$.heap22[0].item",
      "Next": "input.arr[j]",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "for(i in input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr)",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "for(i in input.arr) 1": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr) 1",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "for(j in input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "1__for(j in input.arr)",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "hasNext__for(i in input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "await func({n: input.arr[i], id: input.id})",
          "Variable": "$.heap5[0]",
        },
      ],
      "Default": "for(i in input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i in input.arr) 1": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "j = \\"1\\"",
          "Variable": "$.heap26[0]",
        },
      ],
      "Default": "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id",
      "Type": "Choice",
    },
    "hasNext__for(j in input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "j",
          "Variable": "$.heap22[0]",
        },
      ],
      "Default": "1__await func({n: j, id: input.id})",
      "Type": "Choice",
    },
    "input.arr[i]": Object {
      "Next": "1__await func({n: input.arr[i], id: input.id})",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap0)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "input.arr[i] 1": Object {
      "Next": "1__await func({n: input.arr[i], id: input.id}) 1 1",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap6)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "input.arr[j]": Object {
      "Next": "1__await func({n: input.arr[j], id: input.id})",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap14)",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "item": Object {
      "InputPath": "$.heap28",
      "Next": "return item.Item.val.N",
      "ResultPath": "$.item",
      "Type": "Pass",
    },
    "j": Object {
      "InputPath": "$.heap22[0].index",
      "Next": "await func({n: input.arr[i], id: input.id}) 1",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "j = \\"1\\"": Object {
      "Next": "for(j in input.arr)",
      "Result": "1",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "return item.Item.val.N": Object {
      "End": true,
      "InputPath": "$.item.Item.val.N",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i in input.arr)": Object {
      "InputPath": "$.heap5[1:]",
      "Next": "hasNext__for(i in input.arr)",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "tail__for(i in input.arr) 1": Object {
      "InputPath": "$.heap26[1:]",
      "Next": "hasNext__for(i in input.arr) 1",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "tail__for(j in input.arr)": Object {
      "InputPath": "$.heap22[1:]",
      "Next": "hasNext__for(j in input.arr)",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
  },
}
`;

exports[`for loops 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "Initialize Functionless Context": Object {
      "Next": "a = \\"x\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"x\\"": Object {
      "Next": "for(i of [1, 2, 3])",
      "Result": "x",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 1": Object {
      "InputPath": "$.heap2.string",
      "Next": "tail__for(i of [1, 2, 3])",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 3": Object {
      "InputPath": "$.heap6.string",
      "Next": "tail__for(i of input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 5": Object {
      "InputPath": "$.heap11.string",
      "Next": "tail__for(i of await func()) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ai": Object {
      "Next": "a = ai 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap1)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "ai 1": Object {
      "Next": "a = ai 3",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap5)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "ai 2": Object {
      "Next": "a = ai 5",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap10)",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3])": Object {
      "Next": "hasNext__for(i of [1, 2, 3])",
      "Result": Array [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "for(i of await func())": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "for(i of await func()) 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap8",
      "Type": "Task",
    },
    "for(i of await func()) 1": Object {
      "InputPath": "$.heap8",
      "Next": "hasNext__for(i of await func()) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "for(i of input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "hasNext__for(i of [1, 2, 3])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 1",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "for(i of input.arr)",
      "Type": "Choice",
    },
    "hasNext__for(i of await func()) 1": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 5",
          "Variable": "$.heap12[0]",
        },
      ],
      "Default": "return \`madeit\`",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 3",
          "Variable": "$.heap7[0]",
        },
      ],
      "Default": "for(i of await func())",
      "Type": "Choice",
    },
    "i 1": Object {
      "InputPath": "$.heap3[0]",
      "Next": "ai",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "i 3": Object {
      "InputPath": "$.heap7[0]",
      "Next": "ai 1",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "i 5": Object {
      "InputPath": "$.heap12[0]",
      "Next": "ai 2",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "return \`madeit\`": Object {
      "End": true,
      "Result": "madeit",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i of [1, 2, 3])": Object {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__for(i of [1, 2, 3])",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__for(i of await func()) 1": Object {
      "InputPath": "$.heap12[1:]",
      "Next": "hasNext__for(i of await func()) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": Object {
      "InputPath": "$.heap7[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
  },
}
`;

exports[`for map conditional 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__b = [\\"b\\"].map(function (v))": Object {
      "Next": "check__1__b = [\\"b\\"].map(function (v))",
      "Parameters": Object {
        "arr": Array [
          "b",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__c = [\\"c\\"].map(function (v))": Object {
      "Next": "check__1__c = [\\"c\\"].map(function (v))",
      "Parameters": Object {
        "arr": Array [
          "c",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "1__d = await Promise.all([\\"d\\"].map(function (v)))": Object {
      "Next": "check__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "Parameters": Object {
        "arr": Array [
          "d",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "1__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "End": true,
      "InputPath": "$.heap31.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return vai": Object {
      "InputPath": "$.heap5.string",
      "Next": "handleResult__1__b = [\\"b\\"].map(function (v))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return vai 1": Object {
      "InputPath": "$.heap12.string",
      "Next": "handleResult__1__c = [\\"c\\"].map(function (v))",
      "ResultPath": "$.heap8.arr[0]",
      "Type": "Pass",
    },
    "1__return vai 2": Object {
      "InputPath": "$.heap20.string",
      "Next": "handleResult__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "ResultPath": "$.heap15.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"x\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"x\\"": Object {
      "Next": "1__b = [\\"b\\"].map(function (v))",
      "Result": "x",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "append__c.join(\\"\\")": Object {
      "Next": "tail__c.join(\\"\\")",
      "Parameters": Object {
        "string.$": "States.Format('{}{}', $.heap26.string, $.heap25[0])",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "append__d.join(\\"\\")": Object {
      "Next": "tail__d.join(\\"\\")",
      "Parameters": Object {
        "string.$": "States.Format('{}{}', $.heap29.string, $.heap28[0])",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "append__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "Next": "tail__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "Parameters": Object {
        "string.$": "States.Format('{}{}', $.heap23.string, $.heap22[0])",
      },
      "ResultPath": "$.heap23",
      "Type": "Pass",
    },
    "b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "Next": "1__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}',$.heap23.string,$.heap26.string,$.heap29.string)",
      },
      "ResultPath": "$.heap31",
      "Type": "Pass",
    },
    "c.join(\\"\\")": Object {
      "InputPath": "$.heap8",
      "Next": "hasNext__c.join(\\"\\")",
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "check__1__b = [\\"b\\"].map(function (v))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "for(i of [1, 2, 3])",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__b = [\\"b\\"].map(function (v))",
      "Type": "Choice",
    },
    "check__1__c = [\\"c\\"].map(function (v))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "for(i of input.arr)",
          "Variable": "$.heap8.arr[0]",
        },
      ],
      "Default": "end__1__c = [\\"c\\"].map(function (v))",
      "Type": "Choice",
    },
    "check__1__d = await Promise.all([\\"d\\"].map(function (v)))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "for(i of await func())",
          "Variable": "$.heap15.arr[0]",
        },
      ],
      "Default": "end__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "Type": "Choice",
    },
    "d.join(\\"\\")": Object {
      "InputPath": "$.heap15",
      "Next": "hasNext__d.join(\\"\\")",
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "end__1__b = [\\"b\\"].map(function (v))": Object {
      "Next": "set__end__1__b = [\\"b\\"].map(function (v))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__1__c = [\\"c\\"].map(function (v))": Object {
      "Next": "set__end__1__c = [\\"c\\"].map(function (v))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap8.arrStr))",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "end__1__d = await Promise.all([\\"d\\"].map(function (v)))": Object {
      "Next": "set__end__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap15.arrStr))",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3])": Object {
      "Next": "hasNext__for(i of [1, 2, 3])",
      "Result": Array [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "for(i of await func())": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "for(i of await func()) 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap16",
      "Type": "Task",
    },
    "for(i of await func()) 1": Object {
      "InputPath": "$.heap16",
      "Next": "hasNext__for(i of await func()) 1",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "for(i of input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "handleResult__1__b = [\\"b\\"].map(function (v))": Object {
      "Next": "check__1__b = [\\"b\\"].map(function (v))",
      "Parameters": Object {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap1.arrStr, States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__1__c = [\\"c\\"].map(function (v))": Object {
      "Next": "check__1__c = [\\"c\\"].map(function (v))",
      "Parameters": Object {
        "arr.$": "$.heap8.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap8.arrStr, States.JsonToString($.heap8.arr[0]))",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "handleResult__1__d = await Promise.all([\\"d\\"].map(function (v)))": Object {
      "Next": "check__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "Parameters": Object {
        "arr.$": "$.heap15.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap15.arrStr, States.JsonToString($.heap15.arr[0]))",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "hasNext__c.join(\\"\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap25[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap26",
              },
            },
          ],
          "Next": "initValue__c.join(\\"\\")",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap25[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap26",
              },
            },
          ],
          "Next": "returnEmpty__c.join(\\"\\")",
        },
        Object {
          "IsPresent": true,
          "Next": "append__c.join(\\"\\")",
          "Variable": "$.heap25[0]",
        },
      ],
      "Default": "d.join(\\"\\")",
      "Type": "Choice",
    },
    "hasNext__d.join(\\"\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap28[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap29",
              },
            },
          ],
          "Next": "initValue__d.join(\\"\\")",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap28[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap29",
              },
            },
          ],
          "Next": "returnEmpty__d.join(\\"\\")",
        },
        Object {
          "IsPresent": true,
          "Next": "append__d.join(\\"\\")",
          "Variable": "$.heap28[0]",
        },
      ],
      "Default": "b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "Type": "Choice",
    },
    "hasNext__for(i of [1, 2, 3])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap6[0]",
        },
      ],
      "Default": "return \\"boo\\"",
      "Type": "Choice",
    },
    "hasNext__for(i of await func()) 1": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 4",
          "Variable": "$.heap21[0]",
        },
      ],
      "Default": "return \\"boo\\" 2",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap13[0]",
        },
      ],
      "Default": "return \\"boo\\" 1",
      "Type": "Choice",
    },
    "hasNext__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap22[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap23",
              },
            },
          ],
          "Next": "initValue__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap22[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap23",
              },
            },
          ],
          "Next": "returnEmpty__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
        },
        Object {
          "IsPresent": true,
          "Next": "append__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
          "Variable": "$.heap22[0]",
        },
      ],
      "Default": "c.join(\\"\\")",
      "Type": "Choice",
    },
    "i": Object {
      "InputPath": "$.heap6[0]",
      "Next": "if(i === 3)",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i 2": Object {
      "InputPath": "$.heap13[0]",
      "Next": "if(i === 3) 1",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "i 4": Object {
      "InputPath": "$.heap21[0]",
      "Next": "if(i === 3) 2",
      "ResultPath": "$.i__2",
      "Type": "Pass",
    },
    "if(i === 3)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i",
                },
                Object {
                  "NumericEquals": 3,
                  "Variable": "$.i",
                },
              ],
            },
          ],
          "Next": "return vai",
        },
      ],
      "Default": "tail__for(i of [1, 2, 3])",
      "Type": "Choice",
    },
    "if(i === 3) 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i__1",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i__1",
                },
                Object {
                  "NumericEquals": 3,
                  "Variable": "$.i__1",
                },
              ],
            },
          ],
          "Next": "return vai 1",
        },
      ],
      "Default": "tail__for(i of input.arr)",
      "Type": "Choice",
    },
    "if(i === 3) 2": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.i__2",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.i__2",
                },
                Object {
                  "NumericEquals": 3,
                  "Variable": "$.i__2",
                },
              ],
            },
          ],
          "Next": "return vai 2",
        },
      ],
      "Default": "tail__for(i of await func()) 1",
      "Type": "Choice",
    },
    "initValue__c.join(\\"\\")": Object {
      "InputPath": "$.heap25[0]",
      "Next": "tail__c.join(\\"\\")",
      "ResultPath": "$.heap26.string",
      "Type": "Pass",
    },
    "initValue__d.join(\\"\\")": Object {
      "InputPath": "$.heap28[0]",
      "Next": "tail__d.join(\\"\\")",
      "ResultPath": "$.heap29.string",
      "Type": "Pass",
    },
    "initValue__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "InputPath": "$.heap22[0]",
      "Next": "tail__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "ResultPath": "$.heap23.string",
      "Type": "Pass",
    },
    "return \\"boo\\"": Object {
      "Next": "handleResult__1__b = [\\"b\\"].map(function (v))",
      "Result": "boo",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "return \\"boo\\" 1": Object {
      "Next": "handleResult__1__c = [\\"c\\"].map(function (v))",
      "Result": "boo",
      "ResultPath": "$.heap8.arr[0]",
      "Type": "Pass",
    },
    "return \\"boo\\" 2": Object {
      "Next": "handleResult__1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "Result": "boo",
      "ResultPath": "$.heap15.arr[0]",
      "Type": "Pass",
    },
    "return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "InputPath": "$.heap1",
      "Next": "hasNext__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "return vai": Object {
      "InputPath": "$.heap1.arr[0]",
      "Next": "vai",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "return vai 1": Object {
      "InputPath": "$.heap8.arr[0]",
      "Next": "vai 1",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "return vai 2": Object {
      "InputPath": "$.heap15.arr[0]",
      "Next": "vai 2",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "returnEmpty__c.join(\\"\\")": Object {
      "Next": "d.join(\\"\\")",
      "Result": "",
      "ResultPath": "$.heap26.string",
      "Type": "Pass",
    },
    "returnEmpty__d.join(\\"\\")": Object {
      "Next": "b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "Result": "",
      "ResultPath": "$.heap29.string",
      "Type": "Pass",
    },
    "returnEmpty__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "Next": "c.join(\\"\\")",
      "Result": "",
      "ResultPath": "$.heap23.string",
      "Type": "Pass",
    },
    "set__end__1__b = [\\"b\\"].map(function (v))": Object {
      "InputPath": "$.heap1.result[1:]",
      "Next": "1__c = [\\"c\\"].map(function (v))",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__1__c = [\\"c\\"].map(function (v))": Object {
      "InputPath": "$.heap8.result[1:]",
      "Next": "1__d = await Promise.all([\\"d\\"].map(function (v)))",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "set__end__1__d = await Promise.all([\\"d\\"].map(function (v)))": Object {
      "InputPath": "$.heap15.result[1:]",
      "Next": "return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "tail__c.join(\\"\\")": Object {
      "InputPath": "$.heap25[1:]",
      "Next": "hasNext__c.join(\\"\\")",
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "tail__d.join(\\"\\")": Object {
      "InputPath": "$.heap28[1:]",
      "Next": "hasNext__d.join(\\"\\")",
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "tail__for(i of [1, 2, 3])": Object {
      "InputPath": "$.heap6[1:]",
      "Next": "hasNext__for(i of [1, 2, 3])",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "tail__for(i of await func()) 1": Object {
      "InputPath": "$.heap21[1:]",
      "Next": "hasNext__for(i of await func()) 1",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": Object {
      "InputPath": "$.heap13[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "tail__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")": Object {
      "InputPath": "$.heap22[1:]",
      "Next": "hasNext__return b.join(\\"\\")c.join(\\"\\")d.join(\\"\\")",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "vai": Object {
      "Next": "1__return vai",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}',$.heap2,$.a,$.i)",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "vai 1": Object {
      "Next": "1__return vai 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}',$.heap9,$.a,$.i__1)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "vai 2": Object {
      "Next": "1__return vai 2",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}',$.heap17,$.a,$.i__2)",
      },
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
  },
}
`;

exports[`for of 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__await func({n: i, id: input.id})": Object {
      "Next": "tail__for(i of input.arr)",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap1.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: i, id: input.id}) 1 1": Object {
      "Next": "j 1",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap7.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: j, id: input.id})": Object {
      "Next": "tail__for(i of input.arr) 1",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap18.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await func({n: j, id: input.id}) 1": Object {
      "Next": "tail__for(j of input.arr)",
      "Parameters": Object {
        "id.$": "$.input.id",
        "n.$": "$.heap12.string",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id": Object {
      "Next": "item",
      "Parameters": Object {
        "ConsistentRead": true,
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap24",
      "Type": "Task",
    },
    "Initialize Functionless Context": Object {
      "Next": "for(i of input.arr)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await func({n: i, id: input.id})": Object {
      "InputPath": "$.heap5[0]",
      "Next": "i 1",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "await func({n: i, id: input.id}) 1": Object {
      "InputPath": "$.heap22[0]",
      "Next": "i 3",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "for(i of input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "for(i of input.arr) 1": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr) 1",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "for(j of input.arr)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(j of input.arr)",
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "hasNext__for(i of input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "await func({n: i, id: input.id})",
          "Variable": "$.heap5[0]",
        },
      ],
      "Default": "for(i of input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr) 1": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "j = 1",
          "Variable": "$.heap22[0]",
        },
      ],
      "Default": "1__item = await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id",
      "Type": "Choice",
    },
    "hasNext__for(j of input.arr)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "j",
          "Variable": "$.heap16[0]",
        },
      ],
      "Default": "j 2",
      "Type": "Choice",
    },
    "i 1": Object {
      "Next": "1__await func({n: i, id: input.id})",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap0)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "i 3": Object {
      "Next": "1__await func({n: i, id: input.id}) 1 1",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap6)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "item": Object {
      "InputPath": "$.heap24",
      "Next": "return item.Item.val.N",
      "ResultPath": "$.item",
      "Type": "Pass",
    },
    "j": Object {
      "InputPath": "$.heap16[0]",
      "Next": "await func({n: i, id: input.id}) 1",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "j 1": Object {
      "Next": "1__await func({n: j, id: input.id}) 1",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.j)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "j 2": Object {
      "Next": "1__await func({n: j, id: input.id})",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.j)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "j = 1": Object {
      "Next": "for(j of input.arr)",
      "Result": 1,
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "return item.Item.val.N": Object {
      "End": true,
      "InputPath": "$.item.Item.val.N",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": Object {
      "InputPath": "$.heap5[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "tail__for(i of input.arr) 1": Object {
      "InputPath": "$.heap22[1:]",
      "Next": "hasNext__for(i of input.arr) 1",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "tail__for(j of input.arr)": Object {
      "InputPath": "$.heap16[1:]",
      "Next": "hasNext__for(j of input.arr)",
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
  },
}
`;

exports[`foreach 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "input.arr.forEach(function (x))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aax 1": Object {
      "InputPath": "$.heap3.string",
      "Next": "return a 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aax": Object {
      "Next": "a = aax 1",
      "Parameters": Object {
        "string.$": "States.Format('{}a{}',$.a,$.heap2)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "check__input.arr.forEach(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 1",
          "Variable": "$.heap0.arr[0]",
        },
      ],
      "Default": "end__input.arr.forEach(function (x))",
      "Type": "Choice",
    },
    "end__input.arr.forEach(function (x))": Object {
      "Next": "return a",
      "Result": "$.fnl_context.null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "input.arr.forEach(function (x))": Object {
      "Next": "check__input.arr.forEach(function (x))",
      "Parameters": Object {
        "arr.$": "$.input.arr",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return a": Object {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return a 1": Object {
      "InputPath": "$.a",
      "Next": "tail__input.arr.forEach(function (x))",
      "ResultPath": "$.heap0.arr[0]",
      "Type": "Pass",
    },
    "tail__input.arr.forEach(function (x))": Object {
      "InputPath": "$.heap0.arr[1:]",
      "Next": "check__input.arr.forEach(function (x))",
      "ResultPath": "$.heap0.arr",
      "Type": "Pass",
    },
    "x 1": Object {
      "InputPath": "$.heap0.arr[0]",
      "Next": "aax",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
  },
}
`;

exports[`join 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return resultArr.join(\\"#\\")": Object {
      "End": true,
      "InputPath": "$.heap14.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.arr.join",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "Next": "hasNext__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "Result": Array [
        "d",
        "e",
        "f",
      ],
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "[[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.arr.join(input.sep),": Object {
      "Next": "return resultArr.join(\\"#\\")",
      "Parameters": Object {
        "arr.$": "States.Array('a/b/c', $.heap1.string, $.heap4.string, $.heap7.string, '', $.heap10.string)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "append__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "Next": "tail__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}', $.heap7.string, $.input.sep, $.heap6[0])",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "append__input.arr.join()": Object {
      "Next": "tail__input.arr.join()",
      "Parameters": Object {
        "string.$": "States.Format('{},{}', $.heap10.string, $.heap9[0])",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "append__input.arr.join(input.sep)": Object {
      "Next": "tail__input.arr.join(input.sep)",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}', $.heap4.string, $.input.sep, $.heap3[0])",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "append__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.": Object {
      "Next": "tail__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.ar",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}', $.heap1.string, $.heap0[0])",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "append__return resultArr.join(\\"#\\")": Object {
      "Next": "tail__return resultArr.join(\\"#\\")",
      "Parameters": Object {
        "string.$": "States.Format('{}#{}', $.heap14.string, $.heap13[0])",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "hasNext__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap6[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap7",
              },
            },
          ],
          "Next": "initValue__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap6[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap7",
              },
            },
          ],
          "Next": "returnEmpty__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
        },
        Object {
          "IsPresent": true,
          "Next": "append__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
          "Variable": "$.heap6[0]",
        },
      ],
      "Default": "input.arr.join()",
      "Type": "Choice",
    },
    "hasNext__input.arr.join()": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap9[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap10",
              },
            },
          ],
          "Next": "initValue__input.arr.join()",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap9[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap10",
              },
            },
          ],
          "Next": "returnEmpty__input.arr.join()",
        },
        Object {
          "IsPresent": true,
          "Next": "append__input.arr.join()",
          "Variable": "$.heap9[0]",
        },
      ],
      "Default": "[[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.arr.join(input.sep),",
      "Type": "Choice",
    },
    "hasNext__input.arr.join(input.sep)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap3[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap4",
              },
            },
          ],
          "Next": "initValue__input.arr.join(input.sep)",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap3[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap4",
              },
            },
          ],
          "Next": "returnEmpty__input.arr.join(input.sep)",
        },
        Object {
          "IsPresent": true,
          "Next": "append__input.arr.join(input.sep)",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "Type": "Choice",
    },
    "hasNext__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap0[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap1",
              },
            },
          ],
          "Next": "initValue__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), inp",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap0[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap1",
              },
            },
          ],
          "Next": "returnEmpty__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), i",
        },
        Object {
          "IsPresent": true,
          "Next": "append__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.",
          "Variable": "$.heap0[0]",
        },
      ],
      "Default": "input.arr.join(input.sep)",
      "Type": "Choice",
    },
    "hasNext__return resultArr.join(\\"#\\")": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap13[0]",
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap14",
              },
            },
          ],
          "Next": "initValue__return resultArr.join(\\"#\\")",
        },
        Object {
          "And": Array [
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap13[0]",
              },
            },
            Object {
              "Not": Object {
                "IsPresent": true,
                "Variable": "$.heap14",
              },
            },
          ],
          "Next": "returnEmpty__return resultArr.join(\\"#\\")",
        },
        Object {
          "IsPresent": true,
          "Next": "append__return resultArr.join(\\"#\\")",
          "Variable": "$.heap13[0]",
        },
      ],
      "Default": "1__return resultArr.join(\\"#\\")",
      "Type": "Choice",
    },
    "initValue__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "InputPath": "$.heap6[0]",
      "Next": "tail__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "ResultPath": "$.heap7.string",
      "Type": "Pass",
    },
    "initValue__input.arr.join()": Object {
      "InputPath": "$.heap9[0]",
      "Next": "tail__input.arr.join()",
      "ResultPath": "$.heap10.string",
      "Type": "Pass",
    },
    "initValue__input.arr.join(input.sep)": Object {
      "InputPath": "$.heap3[0]",
      "Next": "tail__input.arr.join(input.sep)",
      "ResultPath": "$.heap4.string",
      "Type": "Pass",
    },
    "initValue__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), inp": Object {
      "InputPath": "$.heap0[0]",
      "Next": "tail__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.ar",
      "ResultPath": "$.heap1.string",
      "Type": "Pass",
    },
    "initValue__return resultArr.join(\\"#\\")": Object {
      "InputPath": "$.heap13[0]",
      "Next": "tail__return resultArr.join(\\"#\\")",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "input.arr.join()": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__input.arr.join()",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "input.arr.join(input.sep)": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__input.arr.join(input.sep)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.arr.join": Object {
      "InputPath": "$.input.arr",
      "Next": "hasNext__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return resultArr.join(\\"#\\")": Object {
      "InputPath": "$.heap12.arr",
      "Next": "hasNext__return resultArr.join(\\"#\\")",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "returnEmpty__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "Next": "input.arr.join()",
      "Result": "",
      "ResultPath": "$.heap7.string",
      "Type": "Pass",
    },
    "returnEmpty__input.arr.join()": Object {
      "Next": "[[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.arr.join(input.sep),",
      "Result": "",
      "ResultPath": "$.heap10.string",
      "Type": "Pass",
    },
    "returnEmpty__input.arr.join(input.sep)": Object {
      "Next": "[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "Result": "",
      "ResultPath": "$.heap4.string",
      "Type": "Pass",
    },
    "returnEmpty__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), i": Object {
      "Next": "input.arr.join(input.sep)",
      "Result": "",
      "ResultPath": "$.heap1.string",
      "Type": "Pass",
    },
    "returnEmpty__return resultArr.join(\\"#\\")": Object {
      "Next": "1__return resultArr.join(\\"#\\")",
      "Result": "",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "tail__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)": Object {
      "InputPath": "$.heap6[1:]",
      "Next": "hasNext__[\\"d\\", \\"e\\", \\"f\\"].join(input.sep)",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "tail__input.arr.join()": Object {
      "InputPath": "$.heap9[1:]",
      "Next": "hasNext__input.arr.join()",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "tail__input.arr.join(input.sep)": Object {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__input.arr.join(input.sep)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input.ar": Object {
      "InputPath": "$.heap0[1:]",
      "Next": "hasNext__resultArr = [[\\"a\\", \\"b\\", \\"c\\"].join(\\"/\\"), input.arr.join(\\"-\\"), input",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "tail__return resultArr.join(\\"#\\")": Object {
      "InputPath": "$.heap13[1:]",
      "Next": "hasNext__return resultArr.join(\\"#\\")",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
  },
}
`;

exports[`json parse and stringify 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {str: str, obj: obj, a: obj.a}": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.obj.a",
        "obj.$": "$.obj",
        "str.$": "$.str",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "str = JSON.stringify(input)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "obj": Object {
      "InputPath": "$.heap1.string",
      "Next": "1__return {str: str, obj: obj, a: obj.a}",
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
    "obj = JSON.parse(str)": Object {
      "Next": "obj",
      "Parameters": Object {
        "string.$": "States.StringToJson($.str)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "str": Object {
      "InputPath": "$.heap0.string",
      "Next": "obj = JSON.parse(str)",
      "ResultPath": "$.str",
      "Type": "Pass",
    },
    "str = JSON.stringify(input)": Object {
      "Next": "str",
      "Parameters": Object {
        "string.$": "States.JsonToString($.input)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`map 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap0",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]a": Object {
      "End": true,
      "InputPath": "$.heap20.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return nixhead": Object {
      "InputPath": "$.heap8.string",
      "Next": "handleResult__l2 = input.arr.map(function (x,i,[ head ]))",
      "ResultPath": "$.heap4.arr[0]",
      "Type": "Pass",
    },
    "1__return nx": Object {
      "InputPath": "$.heap3.string",
      "Next": "handleResult__1__l = await func().map(function (x))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "l = await func().map(function (x))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aax 1": Object {
      "InputPath": "$.heap12.string",
      "Next": "return a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aax": Object {
      "Next": "a = aax 1",
      "Parameters": Object {
        "string.$": "States.Format('{}a{}',$.a,$.heap11)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "check__1__l = await func().map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return nx",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__l = await func().map(function (x))",
      "Type": "Choice",
    },
    "check__input.arr.map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 3",
          "Variable": "$.heap9.arr[0]",
        },
      ],
      "Default": "end__input.arr.map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x,i,[ head ]))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return nixhead",
          "Variable": "$.heap4.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x,i,[ head ]))",
      "Type": "Choice",
    },
    "end__1__l = await func().map(function (x))": Object {
      "Next": "set__end__1__l = await func().map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__input.arr.map(function (x))": Object {
      "Next": "set__end__input.arr.map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap9.arrStr))",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x,i,[ head ]))": Object {
      "Next": "set__end__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap4.arrStr))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "handleResult__1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap1.arrStr, States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__input.arr.map(function (x))": Object {
      "Next": "check__input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap9.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap9.arrStr, States.JsonToString($.heap9.arr[0]))",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x,i,[ head ]))": Object {
      "Next": "check__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": Object {
        "arr.$": "$.heap4.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap4.arrStr, States.JsonToString($.heap4.arr[0]))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "head 1": Object {
      "InputPath": "$.input.arr[0]",
      "Next": "nixhead",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "input.arr.map(function (x))": Object {
      "Next": "check__input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "l": Object {
      "InputPath": "$.heap1",
      "Next": "l2 = input.arr.map(function (x,i,[ head ]))",
      "ResultPath": "$.l",
      "Type": "Pass",
    },
    "l = await func().map(function (x))": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__l = await func().map(function (x))",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "l2": Object {
      "InputPath": "$.heap4",
      "Next": "input.arr.map(function (x))",
      "ResultPath": "$.l2",
      "Type": "Pass",
    },
    "l2 = input.arr.map(function (x,i,[ head ]))": Object {
      "ItemsPath": "$.input.arr",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "check__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": Object {
        "index.$": "$$.Map.Item.Index",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap4",
      "ResultSelector": Object {
        "arr.$": "$",
        "arrStr": "[null",
      },
      "Type": "Map",
    },
    "l[0]l[1]l[2]l2[0]l2[1]l2[2]a": Object {
      "Next": "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]a",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}{}{}{}{}',$.l[0],$.l[1],$.l[2],$.l2[0],$.l2[1],$.l2[2],$.a)",
      },
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "nixhead": Object {
      "Next": "1__return nixhead",
      "Parameters": Object {
        "string.$": "States.Format('n{}{}{}',$.heap5,$.heap6,$.heap7)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "nx": Object {
      "Next": "1__return nx",
      "Parameters": Object {
        "string.$": "States.Format('n{}',$.heap2)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "return a": Object {
      "InputPath": "$.a",
      "Next": "handleResult__input.arr.map(function (x))",
      "ResultPath": "$.heap9.arr[0]",
      "Type": "Pass",
    },
    "return nixhead": Object {
      "InputPath": "$.heap4.arr[0].index",
      "Next": "x 1",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "return nx": Object {
      "InputPath": "$.heap1.arr[0]",
      "Next": "nx",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "set__end__1__l = await func().map(function (x))": Object {
      "InputPath": "$.heap1.result[1:]",
      "Next": "l",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__input.arr.map(function (x))": Object {
      "InputPath": "$.heap9.result[1:]",
      "Next": "l[0]l[1]l[2]l2[0]l2[1]l2[2]a",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x,i,[ head ]))": Object {
      "InputPath": "$.heap4.result[1:]",
      "Next": "l2",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "x 1": Object {
      "InputPath": "$.heap4.arr[0].item",
      "Next": "head 1",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "x 3": Object {
      "InputPath": "$.heap9.arr[0]",
      "Next": "aax",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
  },
}
`;

exports[`map uses input 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap0",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__return input.prefixx": Object {
      "InputPath": "$.heap4.string",
      "Next": "handleResult__1__l = await func().map(function (x))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return input.prefixx 1": Object {
      "InputPath": "$.heap8.string",
      "Next": "handleResult__l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap5.arr[0]",
      "Type": "Pass",
    },
    "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]": Object {
      "End": true,
      "InputPath": "$.heap15.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "l = await func().map(function (x))",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "check__1__l = await func().map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 1",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__l = await func().map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 3",
          "Variable": "$.heap5.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x))",
      "Type": "Choice",
    },
    "end__1__l = await func().map(function (x))": Object {
      "Next": "set__end__1__l = await func().map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x))": Object {
      "Next": "set__end__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap5.arrStr))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "handleResult__1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap1.arrStr, States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x))": Object {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap5.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap5.arrStr, States.JsonToString($.heap5.arr[0]))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "input.prefixx": Object {
      "Next": "1__return input.prefixx",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.input.prefix,$.heap3)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "input.prefixx 1": Object {
      "Next": "1__return input.prefixx 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.input.prefix,$.heap7)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "l": Object {
      "InputPath": "$.heap1",
      "Next": "l2 = input.arr.map(function (x))",
      "ResultPath": "$.l",
      "Type": "Pass",
    },
    "l = await func().map(function (x))": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__l = await func().map(function (x))",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "l2": Object {
      "InputPath": "$.heap5",
      "Next": "l[0]l[1]l[2]l2[0]l2[1]l2[2]",
      "ResultPath": "$.l2",
      "Type": "Pass",
    },
    "l2 = input.arr.map(function (x))": Object {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "l[0]l[1]l[2]l2[0]l2[1]l2[2]": Object {
      "Next": "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]",
      "Parameters": Object {
        "string.$": "States.Format('{}{}{}{}{}{}',$.l[0],$.l[1],$.l[2],$.l2[0],$.l2[1],$.l2[2])",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "set__end__1__l = await func().map(function (x))": Object {
      "InputPath": "$.heap1.result[1:]",
      "Next": "l",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x))": Object {
      "InputPath": "$.heap5.result[1:]",
      "Next": "l2",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "x 1": Object {
      "InputPath": "$.heap1.arr[0]",
      "Next": "input.prefixx",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "x 3": Object {
      "InputPath": "$.heap5.arr[0]",
      "Next": "input.prefixx 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
  },
}
`;

exports[`map with dynamic for loops 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap0",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__return nx": Object {
      "InputPath": "$.heap3.string",
      "Next": "handleResult__1__l = await func().map(function (x))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return nx 1": Object {
      "InputPath": "$.heap6.string",
      "Next": "handleResult__l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap4.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "l = await func().map(function (x))",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "for(x of l)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ax 1": Object {
      "InputPath": "$.heap9.string",
      "Next": "tail__for(x of l)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ax 3": Object {
      "InputPath": "$.heap13.string",
      "Next": "tail__for(x of l2)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ax": Object {
      "Next": "a = ax 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap8)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "ax 1": Object {
      "Next": "a = ax 3",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap12)",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "check__1__l = await func().map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return nx",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__l = await func().map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return nx 1",
          "Variable": "$.heap4.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x))",
      "Type": "Choice",
    },
    "end__1__l = await func().map(function (x))": Object {
      "Next": "set__end__1__l = await func().map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x))": Object {
      "Next": "set__end__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap4.arrStr))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "for(x of l)": Object {
      "InputPath": "$.heap1",
      "Next": "hasNext__for(x of l)",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "for(x of l2)": Object {
      "InputPath": "$.heap4",
      "Next": "hasNext__for(x of l2)",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "handleResult__1__l = await func().map(function (x))": Object {
      "Next": "check__1__l = await func().map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap1.arrStr, States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x))": Object {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.heap4.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap4.arrStr, States.JsonToString($.heap4.arr[0]))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "hasNext__for(x of l)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 3",
          "Variable": "$.heap10[0]",
        },
      ],
      "Default": "for(x of l2)",
      "Type": "Choice",
    },
    "hasNext__for(x of l2)": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "x 5",
          "Variable": "$.heap14[0]",
        },
      ],
      "Default": "return a",
      "Type": "Choice",
    },
    "l = await func().map(function (x))": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__l = await func().map(function (x))",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "l2 = input.arr.map(function (x))": Object {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": Object {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "nx": Object {
      "Next": "1__return nx",
      "Parameters": Object {
        "string.$": "States.Format('n{}',$.heap2)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "nx 1": Object {
      "Next": "1__return nx 1",
      "Parameters": Object {
        "string.$": "States.Format('n{}',$.heap5)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "return a": Object {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return nx": Object {
      "InputPath": "$.heap1.arr[0]",
      "Next": "nx",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "return nx 1": Object {
      "InputPath": "$.heap4.arr[0]",
      "Next": "nx 1",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "set__end__1__l = await func().map(function (x))": Object {
      "InputPath": "$.heap1.result[1:]",
      "Next": "l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x))": Object {
      "InputPath": "$.heap4.result[1:]",
      "Next": "a = \\"\\"",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "tail__for(x of l)": Object {
      "InputPath": "$.heap10[1:]",
      "Next": "hasNext__for(x of l)",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "tail__for(x of l2)": Object {
      "InputPath": "$.heap14[1:]",
      "Next": "hasNext__for(x of l2)",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "x 3": Object {
      "InputPath": "$.heap10[0]",
      "Next": "ax",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "x 5": Object {
      "InputPath": "$.heap14[0]",
      "Next": "ax 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
  },
}
`;

exports[`no state pollution 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return a ?? null": Object {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return a ?? null",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__return a ?? null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return a ?? null": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.a",
            },
            Object {
              "IsNull": false,
              "Variable": "$.a",
            },
          ],
          "Next": "true__return a ?? null",
        },
      ],
      "Default": "false__return a ?? null",
      "Type": "Choice",
    },
    "true__return a ?? null": Object {
      "InputPath": "$.a",
      "Next": "1__return a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`optimize cases 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.heap0",
        "b.$": "$.heap1",
        "c.$": "$.heap2",
        "d.$": "$.heap3",
        "t.$": "$.heap11.string",
        "u.$": "$.u",
        "v.$": "$.v",
        "w.$": "$.heap7",
        "x.$": "$.heap6",
        "y.$": "$.heap5",
        "z.$": "$.heap4",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x, 1": Object {
      "InputPath": "$.input.arr[0]",
      "Next": "2__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "2__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "Next": "3__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": "a",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "3__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "Next": "4__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": 1,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "4__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "InputPath": "$.a",
      "Next": "5__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "5__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "InputPath": "$.b",
      "Next": "6__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "6__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "InputPath": "$.c.c",
      "Next": "7__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "7__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,": Object {
      "InputPath": "$.d.c",
      "Next": "this g.e",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "if(input.x)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"a\\"": Object {
      "Next": "b = {c: \\"\\"}",
      "Result": "a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = \\"b\\"": Object {
      "Next": "b = {c: \\"\\"}",
      "Result": "b",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "b = {c: \\"\\"}": Object {
      "Next": "if(input.x) 1",
      "Result": Object {
        "c": "",
      },
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b.c = \\"a\\"": Object {
      "Next": "c = {c: \\"\\"}",
      "Result": "a",
      "ResultPath": "$.b.c",
      "Type": "Pass",
    },
    "b.c = \\"b\\"": Object {
      "Next": "c = {c: \\"\\"}",
      "Result": "b",
      "ResultPath": "$.b.c",
      "Type": "Pass",
    },
    "c = {c: \\"\\"}": Object {
      "Next": "if(input.x) 2",
      "Result": Object {
        "c": "",
      },
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c.c = \\"a\\"": Object {
      "Next": "d = {c: {c: \\"\\"}}",
      "Result": "a",
      "ResultPath": "$.c.c",
      "Type": "Pass",
    },
    "c.c = \\"b\\"": Object {
      "Next": "d = {c: {c: \\"\\"}}",
      "Result": "b",
      "ResultPath": "$.c.c",
      "Type": "Pass",
    },
    "d = {c: {c: \\"\\"}}": Object {
      "Next": "xx = {c: \\"1\\"}",
      "Result": Object {
        "c": Object {
          "c": "",
        },
      },
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "d.c = xx": Object {
      "InputPath": "$.xx",
      "Next": "v = e.d",
      "ResultPath": "$.d.c",
      "Type": "Pass",
    },
    "d.c = yy": Object {
      "InputPath": "$.yy",
      "Next": "v = e.d",
      "ResultPath": "$.d.c",
      "Type": "Pass",
    },
    "if(input.x)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "a = \\"a\\"",
        },
      ],
      "Default": "a = \\"b\\"",
      "Type": "Choice",
    },
    "if(input.x) 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "b.c = \\"a\\"",
        },
      ],
      "Default": "b.c = \\"b\\"",
      "Type": "Choice",
    },
    "if(input.x) 2": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "c.c = \\"a\\"",
        },
      ],
      "Default": "c.c = \\"b\\"",
      "Type": "Choice",
    },
    "if(input.x) 3": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "d.c = xx",
        },
      ],
      "Default": "d.c = yy",
      "Type": "Choice",
    },
    "return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x, w:": Object {
      "InputPath": "$.input.obj.a",
      "Next": "1__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x, 1",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "this g.e": Object {
      "Next": "this g.e 1",
      "Parameters": "f",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "this g.e 1": Object {
      "Next": "1__return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": Object {
        "string.$": "States.Format('this {}',$.heap10)",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "u = f.e": Object {
      "Next": "return {a: obj2.a, b: arr2[0], c: obj[\\"1\\"], d: arr[0], z: z, y: y, x: x, w:",
      "Parameters": Object {
        "f": "e",
      },
      "ResultPath": "$.u",
      "Type": "Pass",
    },
    "v = e.d": Object {
      "Next": "u = f.e",
      "Parameters": "d",
      "ResultPath": "$.v",
      "Type": "Pass",
    },
    "xx = {c: \\"1\\"}": Object {
      "Next": "yy = {c: \\"2\\"}",
      "Result": Object {
        "c": "1",
      },
      "ResultPath": "$.xx",
      "Type": "Pass",
    },
    "yy = {c: \\"2\\"}": Object {
      "Next": "if(input.x) 3",
      "Result": Object {
        "c": "2",
      },
      "ResultPath": "$.yy",
      "Type": "Pass",
    },
  },
}
`;

exports[`overlapping variable with input 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {a: input.a, b: a}": Object {
      "End": true,
      "Parameters": Object {
        "a.$": "$.input.a",
        "b.$": "$.heap1",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {a: input.a, b: a} 1": Object {
      "Next": "1__return {a: input.a, b: a}",
      "Parameters": "2",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "1__return {a: input.a, b: a} 1",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`shadowing maintains state 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "$SFN.map([7], function (f))": Object {
      "ItemsPath": "$.heap9",
      "Iterator": Object {
        "StartAt": "return abcdef",
        "States": Object {
          "1__return abcdef": Object {
            "End": true,
            "InputPath": "$.heap8.string",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "abcdef": Object {
            "Next": "1__return abcdef",
            "Parameters": Object {
              "string.$": "States.Format('{}{}{}{}{}{}',$.a__1,$.b__1,$.c__1,$.d__1,$.e__1,$.f__1)",
            },
            "ResultPath": "$.heap8",
            "Type": "Pass",
          },
          "return abcdef": Object {
            "InputPath": "$.a__1",
            "Next": "abcdef",
            "ResultPath": null,
            "Type": "Pass",
          },
        },
      },
      "Next": "res = -rabcdef",
      "Parameters": Object {
        "a__1.$": "$.a__1",
        "b__1.$": "$.b__1",
        "c__1.$": "$.c__1",
        "d__1.$": "$.d__1",
        "e__1.$": "$.e__1",
        "f.$": "$.f",
        "f__1.$": "$$.Map.Item.Value",
        "fnl_context.$": "$.fnl_context",
        "res.$": "$.res",
      },
      "ResultPath": "$.heap10",
      "Type": "Map",
    },
    "-rabcdef": Object {
      "Next": "res = -rabcdef 1",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.heap11,$.a__1,$.b__1,$.c__1,$.d__1,$.e__1,$.f)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "-resabcde-fz": Object {
      "Next": "1__return -resabcde-fz",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}-{}',$.res,$.heap56,$.b,$.c,$.d,$.e,$.f,$.heap62)",
      },
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "-resabcdef": Object {
      "Next": "res = -resabcdef 4",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c__1,$.d__1,$.e,$.f)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "-resabcdef 1": Object {
      "Next": "res = -resabcdef 5",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c__1,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "-resabcdef 2": Object {
      "Next": "res = -resabcdef 6",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "-resabcdef 3": Object {
      "Next": "res = -resabcdef 7",
      "Parameters": Object {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b,$.c,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap51",
      "Type": "Pass",
    },
    "1__await Promise.all([4].map(function (c)))": Object {
      "Next": "check__1__await Promise.all([4].map(function (c)))",
      "Parameters": Object {
        "arr": Array [
          4,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__for(a in [2])": Object {
      "ItemsPath": "$.heap52",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(a in [2])",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap52",
      "Type": "Map",
    },
    "1__for(e = 6;e === 6;e = 7)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.e__1",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.e__1",
                },
                Object {
                  "NumericEquals": 6,
                  "Variable": "$.e__1",
                },
              ],
            },
          ],
          "Next": "r = await $SFN.map([7], function (f))[0]",
        },
      ],
      "Default": "-resabcdef",
      "Type": "Choice",
    },
    "1__return -resabcde-fz": Object {
      "End": true,
      "InputPath": "$.heap63.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__z = [0].map(function (z))[0]": Object {
      "Next": "check__1__z = [0].map(function (z))[0]",
      "Parameters": Object {
        "arr": Array [
          0,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "b 1",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a": Object {
      "InputPath": "$.heap52[0].index",
      "Next": "for(b of [3])",
      "ResultPath": "$.a__1",
      "Type": "Pass",
    },
    "a 6": Object {
      "Next": "z 2",
      "Parameters": 1,
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "b 1": Object {
      "Next": "c 1",
      "Result": 1,
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b 2": Object {
      "InputPath": "$.heap43[0]",
      "Next": "1__await Promise.all([4].map(function (c)))",
      "ResultPath": "$.b__1",
      "Type": "Pass",
    },
    "c 1": Object {
      "Next": "d 1",
      "Result": 1,
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c 2": Object {
      "InputPath": "$.heap1.arr[0]",
      "Next": "if(c === 4)",
      "ResultPath": "$.c__1",
      "Type": "Pass",
    },
    "check__1__await Promise.all([4].map(function (c)))": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "c 2",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__await Promise.all([4].map(function (c)))",
      "Type": "Choice",
    },
    "check__1__z = [0].map(function (z))[0]": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "z 1",
          "Variable": "$.heap54.arr[0]",
        },
      ],
      "Default": "end__1__z = [0].map(function (z))[0]",
      "Type": "Choice",
    },
    "d 1": Object {
      "Next": "e 1",
      "Result": 1,
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "d = 5": Object {
      "Next": "for(e = 6;e === 6;e = 7)",
      "Result": 5,
      "ResultPath": "$.d__1",
      "Type": "Pass",
    },
    "e 1": Object {
      "Next": "f 1",
      "Result": 1,
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "e = 7": Object {
      "Next": "1__for(e = 6;e === 6;e = 7)",
      "Result": 7,
      "ResultPath": "$.e__1",
      "Type": "Pass",
    },
    "end__1__await Promise.all([4].map(function (c)))": Object {
      "Next": "set__end__1__await Promise.all([4].map(function (c)))",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__1__z = [0].map(function (z))[0]": Object {
      "Next": "set__end__1__z = [0].map(function (z))[0]",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap54.arrStr))",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "f 1": Object {
      "Next": "res = \\"\\"",
      "Result": 1,
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "for(a in [2])": Object {
      "Next": "1__for(a in [2])",
      "Result": Array [
        2,
      ],
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "for(b of [3])": Object {
      "Next": "hasNext__for(b of [3])",
      "Result": Array [
        3,
      ],
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "for(e = 6;e === 6;e = 7)": Object {
      "Next": "1__for(e = 6;e === 6;e = 7)",
      "Result": 6,
      "ResultPath": "$.e__1",
      "Type": "Pass",
    },
    "handleResult__1__await Promise.all([4].map(function (c)))": Object {
      "Next": "check__1__await Promise.all([4].map(function (c)))",
      "Parameters": Object {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap1.arrStr, States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__1__z = [0].map(function (z))[0]": Object {
      "Next": "check__1__z = [0].map(function (z))[0]",
      "Parameters": Object {
        "arr.$": "$.heap54.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap54.arrStr, States.JsonToString($.heap54.arr[0]))",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "hasNext__for(a in [2])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "a",
          "Variable": "$.heap52[0]",
        },
      ],
      "Default": "1__z = [0].map(function (z))[0]",
      "Type": "Choice",
    },
    "hasNext__for(b of [3])": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "b 2",
          "Variable": "$.heap43[0]",
        },
      ],
      "Default": "-resabcdef 3",
      "Type": "Choice",
    },
    "if(c === 4)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.c__1",
            },
            Object {
              "And": Array [
                Object {
                  "IsNumeric": true,
                  "Variable": "$.c__1",
                },
                Object {
                  "NumericEquals": 4,
                  "Variable": "$.c__1",
                },
              ],
            },
          ],
          "Next": "d = 5",
        },
      ],
      "Default": "-resabcdef 1",
      "Type": "Choice",
    },
    "r = await $SFN.map([7], function (f))[0]": Object {
      "Next": "$SFN.map([7], function (f))",
      "Result": Array [
        7,
      ],
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "res = \\"\\"": Object {
      "Next": "for(a in [2])",
      "Result": "",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -rabcdef": Object {
      "InputPath": "$.heap10[0]",
      "Next": "-rabcdef",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "res = -rabcdef 1": Object {
      "InputPath": "$.heap18.string",
      "Next": "e = 7",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 4": Object {
      "InputPath": "$.heap26.string",
      "Next": "-resabcdef 1",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 5": Object {
      "InputPath": "$.heap34.string",
      "Next": "return null",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 6": Object {
      "InputPath": "$.heap42.string",
      "Next": "tail__for(b of [3])",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 7": Object {
      "InputPath": "$.heap51.string",
      "Next": "tail__for(a in [2])",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "return null": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "handleResult__1__await Promise.all([4].map(function (c)))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "return z": Object {
      "InputPath": "$.z",
      "Next": "handleResult__1__z = [0].map(function (z))[0]",
      "ResultPath": "$.heap54.arr[0]",
      "Type": "Pass",
    },
    "set__end__1__await Promise.all([4].map(function (c)))": Object {
      "InputPath": "$.heap1.result[1:]",
      "Next": "-resabcdef 2",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__1__z = [0].map(function (z))[0]": Object {
      "InputPath": "$.heap54.result[1:]",
      "Next": "a 6",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "tail__for(a in [2])": Object {
      "InputPath": "$.heap52[1:]",
      "Next": "hasNext__for(a in [2])",
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "tail__for(b of [3])": Object {
      "InputPath": "$.heap43[1:]",
      "Next": "hasNext__for(b of [3])",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "z 1": Object {
      "InputPath": "$.heap54.arr[0]",
      "Next": "return z",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z 2": Object {
      "InputPath": "$.heap54[0]",
      "Next": "-resabcde-fz",
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
  },
}
`;

exports[`simple 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "Initialize Functionless Context": Object {
      "Next": "return \\"hello world\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return \\"hello world\\"": Object {
      "End": true,
      "Result": "hello world",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`templates 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    " input.obj.str \\"hello\\" partOfTheTemplateStringinput.obj.items[0]": Object {
      "Next": "1__result = await func( input.obj.str \\"hello\\" partOfTheTemplateStringinput.",
      "Parameters": Object {
        "string.$": "States.Format('{} hello {} {}',$.input.obj.str,$.heap4,$.input.obj.items[0])",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    " partOfTheTemplateString": Object {
      "InputPath": "$.heap2.string",
      "Next": " input.obj.str \\"hello\\" partOfTheTemplateStringinput.obj.items[0]",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "1__result = await func( input.obj.str \\"hello\\" partOfTheTemplateStringinput.": Object {
      "InputPath": "$.heap6.string",
      "Next": "return the result:  result.strinput.obj.str === \\"hullo\\"",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap7",
      "Type": "Task",
    },
    "1__return the result:  result.strinput.obj.str === \\"hullo\\"": Object {
      "End": true,
      "InputPath": "$.heap10.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__input.obj.str === \\"hullo\\"": Object {
      "Next": "the result:  result.strinput.obj.str === \\"hullo\\"",
      "Result": false,
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "false__partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"": Object {
      "Next": "hello input.obj.str2 ?? \\"default\\"",
      "Result": "default",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "hello input.obj.str2 ?? \\"default\\"": Object {
      "Next": " partOfTheTemplateString",
      "Parameters": Object {
        "string.$": "States.Format('hello {}',$.heap0)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "input.obj.str === \\"hullo\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj.str",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.input.obj.str",
                },
                Object {
                  "StringEquals": "hullo",
                  "Variable": "$.input.obj.str",
                },
              ],
            },
          ],
          "Next": "true__input.obj.str === \\"hullo\\"",
        },
      ],
      "Default": "false__input.obj.str === \\"hullo\\"",
      "Type": "Choice",
    },
    "partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj.str2",
            },
            Object {
              "IsNull": false,
              "Variable": "$.input.obj.str2",
            },
          ],
          "Next": "true__partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"",
        },
      ],
      "Default": "false__partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"",
      "Type": "Choice",
    },
    "return the result:  result.strinput.obj.str === \\"hullo\\"": Object {
      "InputPath": "$.heap7.str",
      "Next": "input.obj.str === \\"hullo\\"",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "the result:  result.strinput.obj.str === \\"hullo\\"": Object {
      "Next": "1__return the result:  result.strinput.obj.str === \\"hullo\\"",
      "Parameters": Object {
        "string.$": "States.Format('the result: {} {}',$.heap8,$.heap9)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "true__input.obj.str === \\"hullo\\"": Object {
      "Next": "the result:  result.strinput.obj.str === \\"hullo\\"",
      "Result": true,
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "true__partOfTheTemplateString = hello input.obj.str2 ?? \\"default\\"": Object {
      "InputPath": "$.input.obj.str2",
      "Next": "hello input.obj.str2 ?? \\"default\\"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`templates simple 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return x": Object {
      "End": true,
      "InputPath": "$.heap1.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return x",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return x": Object {
      "InputPath": "$.input.str",
      "Next": "x",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "x": Object {
      "Next": "1__return x",
      "Parameters": Object {
        "string.$": "States.Format('{}',$.heap0)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
  },
}
`;

exports[`ternary 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}).It": Object {
      "Next": "await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}).Item. 1",
      "Parameters": Object {
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap20",
      "Type": "Task",
    },
    "1__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c": Object {
      "End": true,
      "Parameters": Object {
        "constantFalse.$": "$.heap17",
        "constantTrue.$": "$.heap15",
        "false.$": "$.heap13",
        "result.$": "$.heap21",
        "true.$": "$.heap11",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 1": Object {
      "Next": "if(input.f)",
      "Parameters": Object {
        "ExpressionAttributeValues": Object {
          ":inc": Object {
            "N": "1",
          },
          ":start": Object {
            "N": "0",
          },
        },
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
        "UpdateExpression": "SET val = if_not_exists(val, :start) + :inc",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap1",
      "Type": "Task",
    },
    "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 3": Object {
      "Next": "if(input.t) 1",
      "Parameters": Object {
        "ExpressionAttributeValues": Object {
          ":inc": Object {
            "N": "2",
          },
          ":start": Object {
            "N": "0",
          },
        },
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
        "UpdateExpression": "SET val = if_not_exists(val, :start) + :inc",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap4",
      "Type": "Task",
    },
    "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 5": Object {
      "Next": "if(input.t) 1",
      "Parameters": Object {
        "ExpressionAttributeValues": Object {
          ":inc": Object {
            "N": "3",
          },
          ":start": Object {
            "N": "0",
          },
        },
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
        "UpdateExpression": "SET val = if_not_exists(val, :start) + :inc",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap6",
      "Type": "Task",
    },
    "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 7": Object {
      "Next": "return {true: if(input.t), false: if(input.f), constantTrue: if(true), cons",
      "Parameters": Object {
        "ExpressionAttributeValues": Object {
          ":inc": Object {
            "N": "4",
          },
          ":start": Object {
            "N": "0",
          },
        },
        "Key": Object {
          "id": Object {
            "S.$": "$.input.id",
          },
        },
        "TableName": "__REPLACED_TOKEN",
        "UpdateExpression": "SET val = if_not_exists(val, :start) + :inc",
      },
      "Resource": "__REPLACED_ARN",
      "ResultPath": "$.heap9",
      "Type": "Task",
    },
    "Initialize Functionless Context": Object {
      "Next": "if(input.t)",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}).Item. 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap20.Item.val.N",
            },
            Object {
              "IsNull": false,
              "Variable": "$.heap20.Item.val.N",
            },
          ],
          "Next": "true__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}})",
        },
      ],
      "Default": "false__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}",
      "Type": "Choice",
    },
    "false__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}": Object {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "false__if(false)": Object {
      "Next": "1__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}).It",
      "Result": "d",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "false__if(input.f) 1": Object {
      "Next": "if(true)",
      "Result": "b",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "false__if(true)": Object {
      "Next": "if(false)",
      "Result": "d",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "false__return {true: if(input.t), false: if(input.f), constantTrue: if(true": Object {
      "Next": "if(input.f) 1",
      "Result": "b",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "if(false)": Object {
      "Choices": Array [
        Object {
          "IsNull": true,
          "Next": "true__if(false)",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__if(false)",
      "Type": "Choice",
    },
    "if(input.f)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.f",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.f",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.f",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 3",
        },
      ],
      "Default": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 5",
      "Type": "Choice",
    },
    "if(input.f) 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.f",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.f",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.f",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__if(input.f) 1",
        },
      ],
      "Default": "false__if(input.f) 1",
      "Type": "Choice",
    },
    "if(input.t)": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 1",
        },
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.f",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.f",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.f",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.f",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.f",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 3",
        },
      ],
      "Default": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 5",
      "Type": "Choice",
    },
    "if(input.t) 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsPresent": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "IsNull": false,
                      "Variable": "$.input.t",
                    },
                  ],
                },
                Object {
                  "Or": Array [
                    Object {
                      "And": Array [
                        Object {
                          "IsString": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "Not": Object {
                            "And": Array [
                              Object {
                                "IsString": true,
                                "Variable": "$.input.t",
                              },
                              Object {
                                "StringEquals": "",
                                "Variable": "$.input.t",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsNumeric": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "Not": Object {
                            "And": Array [
                              Object {
                                "IsNumeric": true,
                                "Variable": "$.input.t",
                              },
                              Object {
                                "NumericEquals": 0,
                                "Variable": "$.input.t",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsBoolean": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "BooleanEquals": true,
                          "Variable": "$.input.t",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "And": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsPresent": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "IsNull": false,
                      "Variable": "$.input.t",
                    },
                  ],
                },
                Object {
                  "Or": Array [
                    Object {
                      "And": Array [
                        Object {
                          "IsString": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "Not": Object {
                            "And": Array [
                              Object {
                                "IsString": true,
                                "Variable": "$.input.t",
                              },
                              Object {
                                "StringEquals": "",
                                "Variable": "$.input.t",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsNumeric": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "Not": Object {
                            "And": Array [
                              Object {
                                "IsNumeric": true,
                                "Variable": "$.input.t",
                              },
                              Object {
                                "NumericEquals": 0,
                                "Variable": "$.input.t",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "And": Array [
                        Object {
                          "IsBoolean": true,
                          "Variable": "$.input.t",
                        },
                        Object {
                          "BooleanEquals": true,
                          "Variable": "$.input.t",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__return {true: if(input.t), false: if(input.f), constantTrue: if(true)",
        },
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "false__return {true: if(input.t), false: if(input.f), constantTrue: if(true",
        },
      ],
      "Default": "1__{Table: table, Key: {id: {S: input.id}}, UpdateExpression: \\"SET val = if 7",
      "Type": "Choice",
    },
    "if(true)": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "true__if(true)",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__if(true)",
      "Type": "Choice",
    },
    "return {true: if(input.t), false: if(input.f), constantTrue: if(true), cons": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "And": Array [
                Object {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                Object {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            Object {
              "Or": Array [
                Object {
                  "And": Array [
                    Object {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "Not": Object {
                        "And": Array [
                          Object {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          Object {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "And": Array [
                    Object {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    Object {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__return {true: if(input.t), false: if(input.f), constantTrue: if(true)",
        },
      ],
      "Default": "false__return {true: if(input.t), false: if(input.f), constantTrue: if(true",
      "Type": "Choice",
    },
    "true__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}})": Object {
      "InputPath": "$.heap20.Item.val.N",
      "Next": "1__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "true__if(false)": Object {
      "Next": "1__await $AWS.DynamoDB.GetItem({Table: table, Key: {id: {S: input.id}}}).It",
      "Result": "c",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "true__if(input.f) 1": Object {
      "Next": "if(true)",
      "Result": "a",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "true__if(true)": Object {
      "Next": "if(false)",
      "Result": "c",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "true__return {true: if(input.t), false: if(input.f), constantTrue: if(true)": Object {
      "Next": "if(input.f) 1",
      "Result": "a",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
  },
}
`;

exports[`throw catch finally 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "$SFN.map([1], function ())": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 10",
          "ResultPath": "$.fnl_tmp_11",
        },
      ],
      "ItemsPath": "$.heap39",
      "Iterator": Object {
        "StartAt": "return func()",
        "States": Object {
          "1__return func()": Object {
            "End": true,
            "InputPath": "$.heap38",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "return func()": Object {
            "InputPath": "$.fnl_context.null",
            "Next": "1__return func()",
            "Resource": "__REPLACED_TOKEN",
            "ResultPath": "$.heap38",
            "Type": "Task",
          },
        },
      },
      "Next": "1__try 11",
      "Parameters": Object {
        "a.$": "$.a",
        "fnl_context.$": "$.fnl_context",
      },
      "ResultPath": null,
      "Type": "Map",
    },
    "1__catch__try 10": Object {
      "InputPath": "$.fnl_tmp_11.0_ParsedError",
      "Next": "err.errorMessage 4",
      "ResultPath": "$.fnl_tmp_11",
      "Type": "Pass",
    },
    "1__catch__try 11": Object {
      "InputPath": "$.fnl_tmp_12.0_ParsedError",
      "Next": "err.errorMessage 5",
      "ResultPath": "$.fnl_tmp_12",
      "Type": "Pass",
    },
    "1__catch__try 5": Object {
      "InputPath": "$.fnl_tmp_4.0_ParsedError",
      "Next": "err.errorMessage",
      "ResultPath": "$.fnl_tmp_4",
      "Type": "Pass",
    },
    "1__catch__try 6": Object {
      "InputPath": "$.fnl_tmp_5.0_ParsedError",
      "Next": "err.errorMessage 1",
      "ResultPath": "$.fnl_tmp_5",
      "Type": "Pass",
    },
    "1__catch__try 8": Object {
      "InputPath": "$.fnl_tmp_9.0_ParsedError",
      "Next": "err.errorMessage 2",
      "ResultPath": "$.fnl_tmp_9",
      "Type": "Pass",
    },
    "1__catch__try 9": Object {
      "InputPath": "$.fnl_tmp_10.0_ParsedError",
      "Next": "err.errorMessage 3",
      "ResultPath": "$.fnl_tmp_10",
      "Type": "Pass",
    },
    "1__finally": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "catch__try 7",
          "Variable": "$.fnl_tmp_8",
        },
        Object {
          "IsNull": false,
          "Next": "await func() 1",
          "Variable": "$$.Execution.Id",
        },
        Object {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "1__return func() 1": Object {
      "InputPath": "$.heap46",
      "Next": "handleResult__1__try 11",
      "ResultPath": "$.heap45.arr[0]",
      "Type": "Pass",
    },
    "1__try 11": Object {
      "Next": "check__1__try 11",
      "Parameters": Object {
        "arr": Array [
          1,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "1__try 6": Object {
      "ItemsPath": "$.heap21",
      "Iterator": Object {
        "StartAt": "Default",
        "States": Object {
          "Default": Object {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__try 6",
      "Parameters": Object {
        "index.$": "States.Format('{}', $$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap21",
      "Type": "Map",
    },
    "Initialize Functionless Context": Object {
      "Next": "a = \\"\\"",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = \\"\\"": Object {
      "Next": "try",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aerr.errorMessage 1": Object {
      "InputPath": "$.heap19.string",
      "Next": "try 6",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aerr.message 1": Object {
      "InputPath": "$.heap4.string",
      "Next": "try 2",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = arrmapaerr.errorMessage 1": Object {
      "InputPath": "$.heap49.string",
      "Next": "return a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = doaerr.errorMessage 1": Object {
      "InputPath": "$.heap37.string",
      "Next": "try 10",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error1a": Object {
      "InputPath": "$.heap1.string",
      "Next": "catch__try 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error3a": Object {
      "InputPath": "$.heap6.string",
      "Next": "finally1a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error4a": Object {
      "InputPath": "$.heap15.string",
      "Next": "try 5",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finally1a 1": Object {
      "InputPath": "$.heap8.string",
      "Next": "seta",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finally2a 1": Object {
      "InputPath": "$.heap12.string",
      "Next": "try 4",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finallya": Object {
      "InputPath": "$.heap26.string",
      "Next": "1__finally",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = foraerr.errorMessage 1": Object {
      "InputPath": "$.heap24.string",
      "Next": "try 7",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = recatchaerr.message 1": Object {
      "InputPath": "$.heap29.string",
      "Next": "try 8",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = seta": Object {
      "InputPath": "$.heap10.string",
      "Next": "finally2a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = sfnmapaerr.errorMessage 1": Object {
      "InputPath": "$.heap43.string",
      "Next": "1__try 11",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = whileaerr.errorMessage 1": Object {
      "InputPath": "$.heap33.string",
      "Next": "try 9",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aerr.errorMessage": Object {
      "Next": "a = aerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.heap18)",
      },
      "ResultPath": "$.heap19",
      "Type": "Pass",
    },
    "aerr.message": Object {
      "Next": "a = aerr.message 1",
      "Parameters": Object {
        "string.$": "States.Format('{}{}',$.a,$.err.message)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "arrmapaerr.errorMessage": Object {
      "Next": "a = arrmapaerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}arrmap{}',$.a,$.heap48)",
      },
      "ResultPath": "$.heap49",
      "Type": "Pass",
    },
    "await func()": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 6",
          "ResultPath": "$.fnl_tmp_5",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "tail__try 6",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "await func() 1": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 8",
          "ResultPath": "$.fnl_tmp_9",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 8",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "await func() 2": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 9",
          "ResultPath": "$.fnl_tmp_10",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 9",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "catch__try 1": Object {
      "Next": "aerr.message",
      "Parameters": Object {
        "message": "Error2",
      },
      "ResultPath": "$.err",
      "Type": "Pass",
    },
    "catch__try 10": Object {
      "Next": "1__catch__try 10",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_11.Cause)",
      },
      "ResultPath": "$.fnl_tmp_11",
      "Type": "Pass",
    },
    "catch__try 11": Object {
      "Next": "1__catch__try 11",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_12.Cause)",
      },
      "ResultPath": "$.fnl_tmp_12",
      "Type": "Pass",
    },
    "catch__try 5": Object {
      "Next": "1__catch__try 5",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_4.Cause)",
      },
      "ResultPath": "$.fnl_tmp_4",
      "Type": "Pass",
    },
    "catch__try 6": Object {
      "Next": "1__catch__try 6",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_5.Cause)",
      },
      "ResultPath": "$.fnl_tmp_5",
      "Type": "Pass",
    },
    "catch__try 7": Object {
      "InputPath": "$.fnl_tmp_8",
      "Next": "recatchaerr.message",
      "ResultPath": "$.err__3",
      "Type": "Pass",
    },
    "catch__try 7 1": Object {
      "Next": "finallya",
      "Result": Object {
        "message": "error6",
      },
      "ResultPath": "$.fnl_tmp_8",
      "Type": "Pass",
    },
    "catch__try 8": Object {
      "Next": "1__catch__try 8",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_9.Cause)",
      },
      "ResultPath": "$.fnl_tmp_9",
      "Type": "Pass",
    },
    "catch__try 9": Object {
      "Next": "1__catch__try 9",
      "Parameters": Object {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_10.Cause)",
      },
      "ResultPath": "$.fnl_tmp_10",
      "Type": "Pass",
    },
    "check__1__try 11": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "return func() 1",
          "Variable": "$.heap45.arr[0]",
        },
      ],
      "Default": "end__1__try 11",
      "Type": "Choice",
    },
    "doaerr.errorMessage": Object {
      "Next": "a = doaerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}do{}',$.a,$.heap36)",
      },
      "ResultPath": "$.heap37",
      "Type": "Pass",
    },
    "end__1__try 11": Object {
      "Next": "set__end__1__try 11",
      "Parameters": Object {
        "result.$": "States.StringToJson(States.Format('{}]', $.heap45.arrStr))",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "err.errorMessage": Object {
      "InputPath": "$.fnl_tmp_4.errorMessage",
      "Next": "aerr.errorMessage",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "err.errorMessage 1": Object {
      "InputPath": "$.fnl_tmp_5.errorMessage",
      "Next": "foraerr.errorMessage",
      "ResultPath": "$.heap23",
      "Type": "Pass",
    },
    "err.errorMessage 2": Object {
      "InputPath": "$.fnl_tmp_9.errorMessage",
      "Next": "whileaerr.errorMessage",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "err.errorMessage 3": Object {
      "InputPath": "$.fnl_tmp_10.errorMessage",
      "Next": "doaerr.errorMessage",
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "err.errorMessage 4": Object {
      "InputPath": "$.fnl_tmp_11.errorMessage",
      "Next": "sfnmapaerr.errorMessage",
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "err.errorMessage 5": Object {
      "InputPath": "$.fnl_tmp_12.errorMessage",
      "Next": "arrmapaerr.errorMessage",
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "error1a": Object {
      "Next": "a = error1a",
      "Parameters": Object {
        "string.$": "States.Format('{}error1',$.a)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "error3a": Object {
      "Next": "a = error3a",
      "Parameters": Object {
        "string.$": "States.Format('{}error3',$.a)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "error4a": Object {
      "Next": "a = error4a",
      "Parameters": Object {
        "string.$": "States.Format('{}error4',$.a)",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "finally1a": Object {
      "Next": "a = finally1a 1",
      "Parameters": Object {
        "string.$": "States.Format('{}finally1',$.a)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "finally2a": Object {
      "Next": "a = finally2a 1",
      "Parameters": Object {
        "string.$": "States.Format('{}finally2',$.a)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "finallya": Object {
      "Next": "a = finallya",
      "Parameters": Object {
        "string.$": "States.Format('{}finally',$.a)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "foraerr.errorMessage": Object {
      "Next": "a = foraerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}for{}',$.a,$.heap23)",
      },
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "handleResult__1__try 11": Object {
      "Next": "check__1__try 11",
      "Parameters": Object {
        "arr.$": "$.heap45.arr[1:]",
        "arrStr.$": "States.Format('{},{}', $.heap45.arrStr, States.JsonToString($.heap45.arr[0]))",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "hasNext__try 6": Object {
      "Choices": Array [
        Object {
          "IsPresent": true,
          "Next": "await func()",
          "Variable": "$.heap21[0]",
        },
      ],
      "Default": "try 7",
      "Type": "Choice",
    },
    "recatchaerr.message": Object {
      "Next": "a = recatchaerr.message 1",
      "Parameters": Object {
        "string.$": "States.Format('{}recatch{}',$.a,$.err__3.message)",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "return a": Object {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return func() 1": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 11",
          "ResultPath": "$.fnl_tmp_12",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "1__return func() 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap46",
      "Type": "Task",
    },
    "set__end__1__try 11": Object {
      "InputPath": "$.heap45.result[1:]",
      "Next": "return a",
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "seta": Object {
      "Next": "a = seta",
      "Parameters": Object {
        "string.$": "States.Format('{}set',$.a)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "sfnmapaerr.errorMessage": Object {
      "Next": "a = sfnmapaerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}sfnmap{}',$.a,$.heap42)",
      },
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "tail__try 6": Object {
      "InputPath": "$.heap21[1:]",
      "Next": "hasNext__try 6",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "try": Object {
      "Next": "error1a",
      "Result": Object {
        "message": "Error1",
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 10": Object {
      "Next": "$SFN.map([1], function ())",
      "Result": Array [
        1,
      ],
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "try 2": Object {
      "Next": "error3a",
      "Result": Object {
        "message": null,
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 4": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "error4a",
          "ResultPath": null,
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 5",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "try 5": Object {
      "Catch": Array [
        Object {
          "ErrorEquals": Array [
            "States.ALL",
          ],
          "Next": "catch__try 5",
          "ResultPath": "$.fnl_tmp_4",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 6",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "try 6": Object {
      "Next": "1__try 6",
      "Result": Array [
        1,
      ],
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "try 7": Object {
      "Next": "catch__try 7 1",
      "Result": Object {
        "message": "error5",
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 8": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "await func() 1",
          "Variable": "$$.Execution.Id",
        },
        Object {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "try 9": Object {
      "Choices": Array [
        Object {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "whileaerr.errorMessage": Object {
      "Next": "a = whileaerr.errorMessage 1",
      "Parameters": Object {
        "string.$": "States.Format('{}while{}',$.a,$.heap32)",
      },
      "ResultPath": "$.heap33",
      "Type": "Pass",
    },
  },
}
`;

exports[`typeof 1`] = `
Object {
  "StartAt": "Initialize Functionless Context",
  "States": Object {
    "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu": Object {
      "End": true,
      "Parameters": Object {
        "arrType.$": "$.heap20",
        "booleanType.$": "$.heap8",
        "isBool.$": "$.heap6",
        "isNumber.$": "$.heap11",
        "isObject.$": "$.heap16",
        "isString.$": "$.heap1",
        "numberType.$": "$.heap13",
        "objectType.$": "$.heap18",
        "stringType.$": "$.heap3",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": Object {
      "Next": "return {isString: typeof input.str === \\"string\\", stringType: typeof input.s",
      "Parameters": Object {
        "fnl_context": Object {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "boolean__input.arr": Object {
      "Next": "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu",
      "Result": "boolean",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "boolean__input.bool": Object {
      "Next": "typeof input.bool === \\"boolean\\"",
      "Result": "boolean",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "boolean__input.bool 1": Object {
      "Next": "input.num",
      "Result": "boolean",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "boolean__input.num": Object {
      "Next": "typeof input.num === \\"number\\"",
      "Result": "boolean",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "boolean__input.num 1": Object {
      "Next": "input.obj",
      "Result": "boolean",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "boolean__input.obj": Object {
      "Next": "typeof input.obj === \\"object\\"",
      "Result": "boolean",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "boolean__input.obj 1": Object {
      "Next": "input.arr",
      "Result": "boolean",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "boolean__input.str": Object {
      "Next": "input.bool",
      "Result": "boolean",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "boolean__return {isString: typeof input.str === \\"string\\", stringType: typeo": Object {
      "Next": "typeof input.str === \\"string\\"",
      "Result": "boolean",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__typeof input.bool === \\"boolean\\"": Object {
      "Next": "input.bool 1",
      "Result": false,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "false__typeof input.num === \\"number\\"": Object {
      "Next": "input.num 1",
      "Result": false,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "false__typeof input.obj === \\"object\\"": Object {
      "Next": "input.obj 1",
      "Result": false,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "false__typeof input.str === \\"string\\"": Object {
      "Next": "input.str",
      "Result": false,
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "input.arr": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "string__input.arr",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "boolean__input.arr",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "number__input.arr",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.arr",
          "Variable": "$.input.arr",
        },
      ],
      "Default": "undefined__input.arr",
      "Type": "Choice",
    },
    "input.bool": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "string__input.bool",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "boolean__input.bool",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "number__input.bool",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.bool",
          "Variable": "$.input.bool",
        },
      ],
      "Default": "undefined__input.bool",
      "Type": "Choice",
    },
    "input.bool 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "string__input.bool 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "boolean__input.bool 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "number__input.bool 1",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.bool 1",
          "Variable": "$.input.bool",
        },
      ],
      "Default": "undefined__input.bool 1",
      "Type": "Choice",
    },
    "input.num": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "string__input.num",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "boolean__input.num",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "number__input.num",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.num",
          "Variable": "$.input.num",
        },
      ],
      "Default": "undefined__input.num",
      "Type": "Choice",
    },
    "input.num 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "string__input.num 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "boolean__input.num 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "number__input.num 1",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.num 1",
          "Variable": "$.input.num",
        },
      ],
      "Default": "undefined__input.num 1",
      "Type": "Choice",
    },
    "input.obj": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "string__input.obj",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "boolean__input.obj",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "number__input.obj",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.obj",
          "Variable": "$.input.obj",
        },
      ],
      "Default": "undefined__input.obj",
      "Type": "Choice",
    },
    "input.obj 1": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "string__input.obj 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "boolean__input.obj 1",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "number__input.obj 1",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.obj 1",
          "Variable": "$.input.obj",
        },
      ],
      "Default": "undefined__input.obj 1",
      "Type": "Choice",
    },
    "input.str": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "string__input.str",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "boolean__input.str",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "number__input.str",
        },
        Object {
          "IsPresent": true,
          "Next": "object__input.str",
          "Variable": "$.input.str",
        },
      ],
      "Default": "undefined__input.str",
      "Type": "Choice",
    },
    "number__input.arr": Object {
      "Next": "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu",
      "Result": "number",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "number__input.bool": Object {
      "Next": "typeof input.bool === \\"boolean\\"",
      "Result": "number",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "number__input.bool 1": Object {
      "Next": "input.num",
      "Result": "number",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "number__input.num": Object {
      "Next": "typeof input.num === \\"number\\"",
      "Result": "number",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "number__input.num 1": Object {
      "Next": "input.obj",
      "Result": "number",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "number__input.obj": Object {
      "Next": "typeof input.obj === \\"object\\"",
      "Result": "number",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "number__input.obj 1": Object {
      "Next": "input.arr",
      "Result": "number",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "number__input.str": Object {
      "Next": "input.bool",
      "Result": "number",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "number__return {isString: typeof input.str === \\"string\\", stringType: typeof": Object {
      "Next": "typeof input.str === \\"string\\"",
      "Result": "number",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "object__input.arr": Object {
      "Next": "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu",
      "Result": "object",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "object__input.bool": Object {
      "Next": "typeof input.bool === \\"boolean\\"",
      "Result": "object",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "object__input.bool 1": Object {
      "Next": "input.num",
      "Result": "object",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "object__input.num": Object {
      "Next": "typeof input.num === \\"number\\"",
      "Result": "object",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "object__input.num 1": Object {
      "Next": "input.obj",
      "Result": "object",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "object__input.obj": Object {
      "Next": "typeof input.obj === \\"object\\"",
      "Result": "object",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "object__input.obj 1": Object {
      "Next": "input.arr",
      "Result": "object",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "object__input.str": Object {
      "Next": "input.bool",
      "Result": "object",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "object__return {isString: typeof input.str === \\"string\\", stringType: typeof": Object {
      "Next": "typeof input.str === \\"string\\"",
      "Result": "object",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return {isString: typeof input.str === \\"string\\", stringType: typeof input.s": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "string__return {isString: typeof input.str === \\"string\\", stringType: typeof",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "boolean__return {isString: typeof input.str === \\"string\\", stringType: typeo",
        },
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            Object {
              "IsNumeric": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "number__return {isString: typeof input.str === \\"string\\", stringType: typeof",
        },
        Object {
          "IsPresent": true,
          "Next": "object__return {isString: typeof input.str === \\"string\\", stringType: typeof",
          "Variable": "$.input.str",
        },
      ],
      "Default": "undefined__return {isString: typeof input.str === \\"string\\", stringType: typ",
      "Type": "Choice",
    },
    "string__input.arr": Object {
      "Next": "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu",
      "Result": "string",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "string__input.bool": Object {
      "Next": "typeof input.bool === \\"boolean\\"",
      "Result": "string",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "string__input.bool 1": Object {
      "Next": "input.num",
      "Result": "string",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "string__input.num": Object {
      "Next": "typeof input.num === \\"number\\"",
      "Result": "string",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "string__input.num 1": Object {
      "Next": "input.obj",
      "Result": "string",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "string__input.obj": Object {
      "Next": "typeof input.obj === \\"object\\"",
      "Result": "string",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "string__input.obj 1": Object {
      "Next": "input.arr",
      "Result": "string",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "string__input.str": Object {
      "Next": "input.bool",
      "Result": "string",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "string__return {isString: typeof input.str === \\"string\\", stringType: typeof": Object {
      "Next": "typeof input.str === \\"string\\"",
      "Result": "string",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__typeof input.bool === \\"boolean\\"": Object {
      "Next": "input.bool 1",
      "Result": true,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "true__typeof input.num === \\"number\\"": Object {
      "Next": "input.num 1",
      "Result": true,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "true__typeof input.obj === \\"object\\"": Object {
      "Next": "input.obj 1",
      "Result": true,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "true__typeof input.str === \\"string\\"": Object {
      "Next": "input.str",
      "Result": true,
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "typeof input.bool === \\"boolean\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap5",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.heap5",
                },
                Object {
                  "StringEquals": "boolean",
                  "Variable": "$.heap5",
                },
              ],
            },
          ],
          "Next": "true__typeof input.bool === \\"boolean\\"",
        },
      ],
      "Default": "false__typeof input.bool === \\"boolean\\"",
      "Type": "Choice",
    },
    "typeof input.num === \\"number\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap10",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.heap10",
                },
                Object {
                  "StringEquals": "number",
                  "Variable": "$.heap10",
                },
              ],
            },
          ],
          "Next": "true__typeof input.num === \\"number\\"",
        },
      ],
      "Default": "false__typeof input.num === \\"number\\"",
      "Type": "Choice",
    },
    "typeof input.obj === \\"object\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap15",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.heap15",
                },
                Object {
                  "StringEquals": "object",
                  "Variable": "$.heap15",
                },
              ],
            },
          ],
          "Next": "true__typeof input.obj === \\"object\\"",
        },
      ],
      "Default": "false__typeof input.obj === \\"object\\"",
      "Type": "Choice",
    },
    "typeof input.str === \\"string\\"": Object {
      "Choices": Array [
        Object {
          "And": Array [
            Object {
              "IsPresent": true,
              "Variable": "$.heap0",
            },
            Object {
              "And": Array [
                Object {
                  "IsString": true,
                  "Variable": "$.heap0",
                },
                Object {
                  "StringEquals": "string",
                  "Variable": "$.heap0",
                },
              ],
            },
          ],
          "Next": "true__typeof input.str === \\"string\\"",
        },
      ],
      "Default": "false__typeof input.str === \\"string\\"",
      "Type": "Choice",
    },
    "undefined__input.arr": Object {
      "Next": "1__return {isString: typeof input.str === \\"string\\", stringType: typeof inpu",
      "Result": "undefined",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "undefined__input.bool": Object {
      "Next": "typeof input.bool === \\"boolean\\"",
      "Result": "undefined",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "undefined__input.bool 1": Object {
      "Next": "input.num",
      "Result": "undefined",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "undefined__input.num": Object {
      "Next": "typeof input.num === \\"number\\"",
      "Result": "undefined",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "undefined__input.num 1": Object {
      "Next": "input.obj",
      "Result": "undefined",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "undefined__input.obj": Object {
      "Next": "typeof input.obj === \\"object\\"",
      "Result": "undefined",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "undefined__input.obj 1": Object {
      "Next": "input.arr",
      "Result": "undefined",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "undefined__input.str": Object {
      "Next": "input.bool",
      "Result": "undefined",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "undefined__return {isString: typeof input.str === \\"string\\", stringType: typ": Object {
      "Next": "typeof input.str === \\"string\\"",
      "Result": "undefined",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

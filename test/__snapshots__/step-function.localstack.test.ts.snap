// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`$AWS.SDK.DynamoDB.describeTable 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "Initialize Functionless Context": {
      "Next": "tableInfo = await $AWS.SDK.DynamoDB.describeTable({TableName: table.tableNa",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return tableInfo.Table.TableArn": {
      "End": true,
      "InputPath": "$.heap0.Table.TableArn",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tableInfo": {
      "InputPath": "$.heap0",
      "Next": "return tableInfo.Table.TableArn",
      "ResultPath": "$.tableInfo",
      "Type": "Pass",
    },
    "tableInfo = await $AWS.SDK.DynamoDB.describeTable({TableName: table.tableNa": {
      "Next": "tableInfo",
      "Parameters": {
        "TableName": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:describeTable",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
  },
}
`;

exports[`Boolean coerce 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber": {
      "End": true,
      "Parameters": {
        "empty": false,
        "falseBoolean": false,
        "falseNumber": false,
        "falseString": false,
        "falsyVar.$": "$.heap2",
        "trueBoolean": true,
        "trueNumber": true,
        "trueObject": true,
        "trueString": true,
        "truthyVar.$": "$.heap0",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber": {
      "InputPath": "$.heap2",
      "Next": "1__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Boolean(input.nv)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__Boolean(input.nv)",
        },
      ],
      "Default": "false__Boolean(input.nv)",
      "Type": "Choice",
    },
    "Initialize Functionless Context": {
      "Next": "return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber: B",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__Boolean(input.nv)": {
      "Next": "3__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber",
      "Result": false,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "false__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNu": {
      "Next": "Boolean(input.nv)",
      "Result": false,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber: B": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.value",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.value",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.value",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.value",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.value",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.value",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.value",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.value",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.value",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.value",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.value",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.value",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.value",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNum",
        },
      ],
      "Default": "false__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNu",
      "Type": "Choice",
    },
    "true__Boolean(input.nv)": {
      "Next": "3__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNumber",
      "Result": true,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "true__return {trueString: Boolean("1"), trueBoolean: Boolean(true), trueNum": {
      "Next": "Boolean(input.nv)",
      "Result": true,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`Number coerce 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu": {
      "InputPath": "$.heap14.num",
      "Next": "1__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Num",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "1__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Num": {
      "End": true,
      "Parameters": {
        "empty": 0,
        "nanObject": null,
        "nanObjectUnaryPlus": null,
        "nanString": null,
        "nanStringUnaryPlus": null,
        "nanTrueString": null,
        "nanVar.$": "$.heap6.num",
        "nanVarUnaryPlus.$": "$.heap14.num",
        "oneBoolean": 1,
        "oneBooleanUnaryPlus": 1,
        "oneNumber": 1,
        "oneNumberUnaryPlus": 1,
        "oneString": 1,
        "oneStringUnaryPlus": 1,
        "oneVar.$": "$.heap0.num",
        "oneVarUnaryPlus.$": "$.heap8.num",
        "zeroBoolean": 0,
        "zeroBooleanUnaryPlus": 0,
        "zeroNull.$": "$.heap4.num",
        "zeroNullUnaryPlus.$": "$.heap12.num",
        "zeroNumber": 0,
        "zeroNumberUnaryPlus": 0,
        "zeroString": 0,
        "zeroStringUnaryPlus": 0,
        "zeroVar.$": "$.heap2.num",
        "zeroVarUnaryPlus.$": "$.heap10.num",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Number",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "assign__input.nan": {
      "InputPath": "$.input.nan",
      "Next": "input.one",
      "ResultPath": "$.heap6.num",
      "Type": "Pass",
    },
    "assign__input.nan 1": {
      "InputPath": "$.input.nan",
      "Next": "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu",
      "ResultPath": "$.heap14.num",
      "Type": "Pass",
    },
    "assign__input.one": {
      "InputPath": "$.input.one",
      "Next": "input.zero 1",
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "assign__input.zero": {
      "InputPath": "$.input.zero",
      "Next": "null",
      "ResultPath": "$.heap2.num",
      "Type": "Pass",
    },
    "assign__input.zero 1": {
      "InputPath": "$.input.zero",
      "Next": "null 1",
      "ResultPath": "$.heap10.num",
      "Type": "Pass",
    },
    "assign__null": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.nan",
      "ResultPath": "$.heap4.num",
      "Type": "Pass",
    },
    "assign__null 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.nan 1",
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "assign__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber": {
      "InputPath": "$.input.one",
      "Next": "input.zero",
      "ResultPath": "$.heap0.num",
      "Type": "Pass",
    },
    "checkStringOutput__input.nan": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "input.one",
          "Variable": "$.heap6.num",
        },
      ],
      "Default": "null__input.nan",
      "Type": "Choice",
    },
    "checkStringOutput__input.nan 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu",
          "Variable": "$.heap14.num",
        },
      ],
      "Default": "null__input.nan 1",
      "Type": "Choice",
    },
    "checkStringOutput__input.one": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "input.zero 1",
          "Variable": "$.heap8.num",
        },
      ],
      "Default": "null__input.one",
      "Type": "Choice",
    },
    "checkStringOutput__input.zero": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "null",
          "Variable": "$.heap2.num",
        },
      ],
      "Default": "null__input.zero",
      "Type": "Choice",
    },
    "checkStringOutput__input.zero 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "null 1",
          "Variable": "$.heap10.num",
        },
      ],
      "Default": "null__input.zero 1",
      "Type": "Choice",
    },
    "checkStringOutput__null": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "input.nan",
          "Variable": "$.heap4.num",
        },
      ],
      "Default": "null__null",
      "Type": "Choice",
    },
    "checkStringOutput__null 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "input.nan 1",
          "Variable": "$.heap12.num",
        },
      ],
      "Default": "null__null 1",
      "Type": "Choice",
    },
    "checkStringOutput__return {oneString: Number("1"), oneBoolean: Number(true)": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "input.zero",
          "Variable": "$.heap0.num",
        },
      ],
      "Default": "null__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
      "Type": "Choice",
    },
    "format__input.nan": {
      "Next": "checkStringOutput__input.nan",
      "Parameters": {
        "num.$": "States.StringToJson($.input.nan)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "format__input.nan 1": {
      "Next": "checkStringOutput__input.nan 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.nan)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "format__input.one": {
      "Next": "checkStringOutput__input.one",
      "Parameters": {
        "num.$": "States.StringToJson($.input.one)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "format__input.zero": {
      "Next": "checkStringOutput__input.zero",
      "Parameters": {
        "num.$": "States.StringToJson($.input.zero)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "format__input.zero 1": {
      "Next": "checkStringOutput__input.zero 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.zero)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "format__null": {
      "Next": "checkStringOutput__null",
      "Parameters": {
        "num.$": "States.StringToJson($.fnl_context.null)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "format__null 1": {
      "Next": "checkStringOutput__null 1",
      "Parameters": {
        "num.$": "States.StringToJson($.fnl_context.null)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "format__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber": {
      "Next": "checkStringOutput__return {oneString: Number("1"), oneBoolean: Number(true)",
      "Parameters": {
        "num.$": "States.StringToJson($.input.one)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "input.nan": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.nan",
          "Variable": "$.input.nan",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.nan",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.nan",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.nan",
                },
              ],
            },
          ],
          "Next": "zero__input.nan",
        },
        {
          "IsNull": true,
          "Next": "zero__input.nan",
          "Variable": "$.input.nan",
        },
        {
          "IsString": true,
          "Next": "format__input.nan",
          "Variable": "$.input.nan",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.nan",
          "Variable": "$.input.nan",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.nan",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.nan",
            },
          ],
          "Next": "one__input.nan",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.nan",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.nan",
            },
          ],
          "Next": "zero__input.nan",
        },
      ],
      "Default": "null__input.nan",
      "Type": "Choice",
    },
    "input.nan 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.nan 1",
          "Variable": "$.input.nan",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.nan",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.nan",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.nan",
                },
              ],
            },
          ],
          "Next": "zero__input.nan 1",
        },
        {
          "IsNull": true,
          "Next": "zero__input.nan 1",
          "Variable": "$.input.nan",
        },
        {
          "IsString": true,
          "Next": "format__input.nan 1",
          "Variable": "$.input.nan",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.nan 1",
          "Variable": "$.input.nan",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.nan",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.nan",
            },
          ],
          "Next": "one__input.nan 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.nan",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.nan",
            },
          ],
          "Next": "zero__input.nan 1",
        },
      ],
      "Default": "null__input.nan 1",
      "Type": "Choice",
    },
    "input.one": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.one",
          "Variable": "$.input.one",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.one",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.one",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.one",
                },
              ],
            },
          ],
          "Next": "zero__input.one",
        },
        {
          "IsNull": true,
          "Next": "zero__input.one",
          "Variable": "$.input.one",
        },
        {
          "IsString": true,
          "Next": "format__input.one",
          "Variable": "$.input.one",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.one",
          "Variable": "$.input.one",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.one",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.one",
            },
          ],
          "Next": "one__input.one",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.one",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.one",
            },
          ],
          "Next": "zero__input.one",
        },
      ],
      "Default": "null__input.one",
      "Type": "Choice",
    },
    "input.zero": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.zero",
          "Variable": "$.input.zero",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.zero",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.zero",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.zero",
                },
              ],
            },
          ],
          "Next": "zero__input.zero",
        },
        {
          "IsNull": true,
          "Next": "zero__input.zero",
          "Variable": "$.input.zero",
        },
        {
          "IsString": true,
          "Next": "format__input.zero",
          "Variable": "$.input.zero",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.zero",
          "Variable": "$.input.zero",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.zero",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.zero",
            },
          ],
          "Next": "one__input.zero",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.zero",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.zero",
            },
          ],
          "Next": "zero__input.zero",
        },
      ],
      "Default": "null__input.zero",
      "Type": "Choice",
    },
    "input.zero 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.zero 1",
          "Variable": "$.input.zero",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.zero",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.zero",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.zero",
                },
              ],
            },
          ],
          "Next": "zero__input.zero 1",
        },
        {
          "IsNull": true,
          "Next": "zero__input.zero 1",
          "Variable": "$.input.zero",
        },
        {
          "IsString": true,
          "Next": "format__input.zero 1",
          "Variable": "$.input.zero",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.zero 1",
          "Variable": "$.input.zero",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.zero",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.zero",
            },
          ],
          "Next": "one__input.zero 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.zero",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.zero",
            },
          ],
          "Next": "zero__input.zero 1",
        },
      ],
      "Default": "null__input.zero 1",
      "Type": "Choice",
    },
    "null": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__null",
          "Variable": "$.fnl_context.null",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
          ],
          "Next": "zero__null",
        },
        {
          "IsNull": true,
          "Next": "zero__null",
          "Variable": "$.fnl_context.null",
        },
        {
          "IsString": true,
          "Next": "format__null",
          "Variable": "$.fnl_context.null",
        },
        {
          "IsNumeric": true,
          "Next": "assign__null",
          "Variable": "$.fnl_context.null",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "one__null",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "zero__null",
        },
      ],
      "Default": "null__null",
      "Type": "Choice",
    },
    "null 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__null 1",
          "Variable": "$.fnl_context.null",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
          ],
          "Next": "zero__null 1",
        },
        {
          "IsNull": true,
          "Next": "zero__null 1",
          "Variable": "$.fnl_context.null",
        },
        {
          "IsString": true,
          "Next": "format__null 1",
          "Variable": "$.fnl_context.null",
        },
        {
          "IsNumeric": true,
          "Next": "assign__null 1",
          "Variable": "$.fnl_context.null",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "one__null 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "zero__null 1",
        },
      ],
      "Default": "null__null 1",
      "Type": "Choice",
    },
    "null__input.nan": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.one",
      "ResultPath": "$.heap6.num",
      "Type": "Pass",
    },
    "null__input.nan 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu",
      "ResultPath": "$.heap14.num",
      "Type": "Pass",
    },
    "null__input.one": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.zero 1",
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "null__input.zero": {
      "InputPath": "$.fnl_context.null",
      "Next": "null",
      "ResultPath": "$.heap2.num",
      "Type": "Pass",
    },
    "null__input.zero 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "null 1",
      "ResultPath": "$.heap10.num",
      "Type": "Pass",
    },
    "null__null": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.nan",
      "ResultPath": "$.heap4.num",
      "Type": "Pass",
    },
    "null__null 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.nan 1",
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "null__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.zero",
      "ResultPath": "$.heap0.num",
      "Type": "Pass",
    },
    "one__input.nan": {
      "Next": "input.one",
      "Result": 1,
      "ResultPath": "$.heap6.num",
      "Type": "Pass",
    },
    "one__input.nan 1": {
      "Next": "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu",
      "Result": 1,
      "ResultPath": "$.heap14.num",
      "Type": "Pass",
    },
    "one__input.one": {
      "Next": "input.zero 1",
      "Result": 1,
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "one__input.zero": {
      "Next": "null",
      "Result": 1,
      "ResultPath": "$.heap2.num",
      "Type": "Pass",
    },
    "one__input.zero 1": {
      "Next": "null 1",
      "Result": 1,
      "ResultPath": "$.heap10.num",
      "Type": "Pass",
    },
    "one__null": {
      "Next": "input.nan",
      "Result": 1,
      "ResultPath": "$.heap4.num",
      "Type": "Pass",
    },
    "one__null 1": {
      "Next": "input.nan 1",
      "Result": 1,
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "one__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: N": {
      "Next": "input.zero",
      "Result": 1,
      "ResultPath": "$.heap0.num",
      "Type": "Pass",
    },
    "return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Number": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
          "Variable": "$.input.one",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.one",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.one",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.one",
                },
              ],
            },
          ],
          "Next": "zero__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
        },
        {
          "IsNull": true,
          "Next": "zero__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
          "Variable": "$.input.one",
        },
        {
          "IsString": true,
          "Next": "format__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber",
          "Variable": "$.input.one",
        },
        {
          "IsNumeric": true,
          "Next": "assign__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber",
          "Variable": "$.input.one",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.one",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.one",
            },
          ],
          "Next": "one__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: N",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.one",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.one",
            },
          ],
          "Next": "zero__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
        },
      ],
      "Default": "null__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ",
      "Type": "Choice",
    },
    "zero__input.nan": {
      "Next": "input.one",
      "Result": 0,
      "ResultPath": "$.heap6.num",
      "Type": "Pass",
    },
    "zero__input.nan 1": {
      "Next": "15__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: Nu",
      "Result": 0,
      "ResultPath": "$.heap14.num",
      "Type": "Pass",
    },
    "zero__input.one": {
      "Next": "input.zero 1",
      "Result": 0,
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "zero__input.zero": {
      "Next": "null",
      "Result": 0,
      "ResultPath": "$.heap2.num",
      "Type": "Pass",
    },
    "zero__input.zero 1": {
      "Next": "null 1",
      "Result": 0,
      "ResultPath": "$.heap10.num",
      "Type": "Pass",
    },
    "zero__null": {
      "Next": "input.nan",
      "Result": 0,
      "ResultPath": "$.heap4.num",
      "Type": "Pass",
    },
    "zero__null 1": {
      "Next": "input.nan 1",
      "Result": 0,
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "zero__return {oneString: Number("1"), oneBoolean: Number(true), oneNumber: ": {
      "Next": "input.zero",
      "Result": 0,
      "ResultPath": "$.heap0.num",
      "Type": "Pass",
    },
  },
}
`;

exports[`String coerce 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
          "Variable": "$.heap15.out",
        },
      ],
      "Default": "format__1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Type": "Choice",
    },
    "1__return {stringString: String("1"), stringBoolean: String(true), stringNu": {
      "End": true,
      "Parameters": {
        "empty": "",
        "stringArray.$": "$.heap16.str",
        "stringBoolean": "true",
        "stringEmpty": "",
        "stringNull.$": "$.heap4.str",
        "stringNumber": "1",
        "stringObject": "[object Object]",
        "stringObjectWithRef": "[object Object]",
        "stringString": "1",
        "stringStringVar.$": "$.heap2.str",
        "stringVar.$": "$.heap0.str",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Next": "4__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Result": [],
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "4__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Next": "5__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Result": {},
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "5__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Next": "["a", ["b"], [[input.val]], [], {}, {a: input.val}] 1",
      "Parameters": {
        "a.$": "$.input.val",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "return {stringString: String("1"), stringBoolean: String(true), stringNumbe",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Next": "[input.val]",
      "Result": [
        "b",
      ],
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "["a", ["b"], [[input.val]], [], {}, {a: input.val}] 1": {
      "Next": "1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Parameters": {
        "out.$": "States.Array('a',$.heap6,$.heap10.out,$.heap12,$.heap13,$.heap14)",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "[[input.val]] 1": {
      "Next": "3__["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Parameters": {
        "out.$": "States.Array($.heap8.out)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "[input.val]": {
      "Next": "[[input.val]] 1",
      "Parameters": {
        "out.$": "States.Array($.input.val)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "assign__1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "InputPath": "$.heap15.out",
      "Next": "1__return {stringString: String("1"), stringBoolean: String(true), stringNu",
      "ResultPath": "$.heap16.str",
      "Type": "Pass",
    },
    "assign__input.str": {
      "InputPath": "$.input.str",
      "Next": "null",
      "ResultPath": "$.heap2.str",
      "Type": "Pass",
    },
    "assign__null": {
      "InputPath": "$.fnl_context.null",
      "Next": "["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "ResultPath": "$.heap4.str",
      "Type": "Pass",
    },
    "assign__return {stringString: String("1"), stringBoolean: String(true), str": {
      "InputPath": "$.input.val",
      "Next": "input.str",
      "ResultPath": "$.heap0.str",
      "Type": "Pass",
    },
    "format__1__["a", ["b"], [[input.val]], [], {}, {a: input.val}]": {
      "Next": "1__return {stringString: String("1"), stringBoolean: String(true), stringNu",
      "Parameters": {
        "str.$": "States.JsonToString($.heap15.out)",
      },
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "format__input.str": {
      "Next": "null",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "format__null": {
      "Next": "["a", ["b"], [[input.val]], [], {}, {a: input.val}]",
      "Parameters": {
        "str.$": "States.JsonToString($.fnl_context.null)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "format__return {stringString: String("1"), stringBoolean: String(true), str": {
      "Next": "input.str",
      "Parameters": {
        "str.$": "States.JsonToString($.input.val)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "input.str": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__input.str",
          "Variable": "$.input.str",
        },
      ],
      "Default": "format__input.str",
      "Type": "Choice",
    },
    "null": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__null",
          "Variable": "$.fnl_context.null",
        },
      ],
      "Default": "format__null",
      "Type": "Choice",
    },
    "return {stringString: String("1"), stringBoolean: String(true), stringNumbe": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__return {stringString: String("1"), stringBoolean: String(true), str",
          "Variable": "$.input.val",
        },
      ],
      "Default": "format__return {stringString: String("1"), stringBoolean: String(true), str",
      "Type": "Choice",
    },
  },
}
`;

exports[`access 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {a: obj.x, b: obj.x, d: obj["1"], e: arr[0], g: obj.n ?? "c", h: ": {
      "End": true,
      "Parameters": {
        "a.$": "$.obj.x",
        "b.$": "$.obj.x",
        "d.$": "$.obj['1']",
        "e": 1,
        "g.$": "$.heap4",
        "h.$": "$.heap6",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3__return {a: obj.x, b: obj.x, d: obj["1"], e: arr[0], g: obj.n ?? "c", h: ": {
      "Next": "obj.n ?? "c"",
      "Parameters": 1,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "obj = {1: "a", x: "b"}",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "arr = [1]": {
      "Next": "3__return {a: obj.x, b: obj.x, d: obj["1"], e: arr[0], g: obj.n ?? "c", h: ",
      "Result": [
        1,
      ],
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "false__obj.n ?? "c"": {
      "Next": "obj.n ?? "d"",
      "Result": "c",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "false__obj.n ?? "d"": {
      "Next": "1__return {a: obj.x, b: obj.x, d: obj["1"], e: arr[0], g: obj.n ?? "c", h: ",
      "Result": "d",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "obj = {1: "a", x: "b"}": {
      "Next": "arr = [1]",
      "Result": {
        "1": "a",
        "x": "b",
      },
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
    "obj.n ?? "c"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.obj.n",
            },
            {
              "IsNull": false,
              "Variable": "$.obj.n",
            },
          ],
          "Next": "true__obj.n ?? "c"",
        },
      ],
      "Default": "false__obj.n ?? "c"",
      "Type": "Choice",
    },
    "obj.n ?? "d"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.obj.n",
            },
            {
              "IsNull": false,
              "Variable": "$.obj.n",
            },
          ],
          "Next": "true__obj.n ?? "d"",
        },
      ],
      "Default": "false__obj.n ?? "d"",
      "Type": "Choice",
    },
    "true__obj.n ?? "c"": {
      "InputPath": "$.obj.n",
      "Next": "obj.n ?? "d"",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "true__obj.n ?? "d"": {
      "InputPath": "$.obj.n",
      "Next": "1__return {a: obj.x, b: obj.x, d: obj["1"], e: arr[0], g: obj.n ?? "c", h: ",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
  },
}
`;

exports[`assignment 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__h = [z, y, y = "a", y = "b" , y, y]": {
      "InputPath": "$.y",
      "Next": "y = "a"",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "End": true,
      "Parameters": {
        "a.$": "$.a",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "e.$": "$.e",
        "f.$": "$.f",
        "g.$": "$.g",
        "h.$": "$.heap9.out",
        "i.$": "$.heap12.string",
        "jj.$": "$.jj",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj} 1": {
      "InputPath": "$.b",
      "Next": "2__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "2__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.c",
      "Next": "3__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "3__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.d",
      "Next": "4__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "4__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.e",
      "Next": "5__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "5__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.f",
      "Next": "6__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "6__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.g",
      "Next": "7__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap19",
      "Type": "Pass",
    },
    "7__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.heap9.out",
      "Next": "8__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "8__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.heap12.string",
      "Next": "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = "2"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[z, y, y = "a", y = "b" , y, y]": {
      "Next": "x = "0"",
      "Parameters": {
        "out.$": "States.Array($.z,$.heap6,'a',$.y,$.y)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "a = "2"": {
      "Next": "b = a",
      "Result": "2",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 1": {
      "Next": "jj = j",
      "Result": 1,
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = [1, 2]": {
      "Next": "e = a",
      "Result": [
        1,
        2,
      ],
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = null": {
      "InputPath": "$.fnl_context.null",
      "Next": "c = a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = {1: "val2"}": {
      "Next": "z = """,
      "Result": {
        "1": "val2",
      },
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = {x: "val"}": {
      "Next": "f = a",
      "Result": {
        "x": "val",
      },
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "b = a": {
      "InputPath": "$.a",
      "Next": "a = null",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "c = a": {
      "InputPath": "$.a",
      "Next": "a = 1",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "d = a": {
      "InputPath": "$.a",
      "Next": "a = [1, 2]",
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "e = a": {
      "InputPath": "$.a",
      "Next": "a = {x: "val"}",
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "f = a": {
      "InputPath": "$.a",
      "Next": "a = {1: "val2"}",
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "false__z === "b"": {
      "Next": "g",
      "Result": false,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "g": {
      "Next": "y = """,
      "Parameters": {
        "a.$": "$.heap0",
        "b": "a",
        "c.$": "$.z",
        "o": {
          "z.$": "$.z",
        },
        "t.$": "$.heap3",
        "z.$": "$.z",
      },
      "ResultPath": "$.g",
      "Type": "Pass",
    },
    "g = {a: z, b: z = "a", c: z = "b" , z, z: z, t: z === "b", o: {z: z}}": {
      "InputPath": "$.z",
      "Next": "z = "a"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "hello  x x = "1" x = "3" , "2"x": {
      "Next": "i",
      "Parameters": {
        "string.$": "States.Format('hello {} 1 2 {}',$.heap10,$.x)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "i": {
      "InputPath": "$.heap12.string",
      "Next": "return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i = hello  x x = "1" x = "3" , "2"x": {
      "InputPath": "$.x",
      "Next": "x = "1"",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "jj = j": {
      "InputPath": "$.a",
      "Next": "d = a",
      "ResultPath": "$.jj",
      "Type": "Pass",
    },
    "return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj}": {
      "InputPath": "$.a",
      "Next": "1__return {a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, jj: jj} 1",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "true__z === "b"": {
      "Next": "g",
      "Result": true,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "x = "0"": {
      "Next": "i = hello  x x = "1" x = "3" , "2"x",
      "Result": "0",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = "1"": {
      "Next": "x = "3"",
      "Result": "1",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = "3"": {
      "Next": "hello  x x = "1" x = "3" , "2"x",
      "Result": "3",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "y = """: {
      "Next": "z = "c"",
      "Result": "",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = "a"": {
      "Next": "y = "b"",
      "Result": "a",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = "b"": {
      "Next": "[z, y, y = "a", y = "b" , y, y]",
      "Result": "b",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "z = """: {
      "Next": "g = {a: z, b: z = "a", c: z = "b" , z, z: z, t: z === "b", o: {z: z}}",
      "Result": "",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = "a"": {
      "Next": "z = "b"",
      "Result": "a",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = "b"": {
      "Next": "z === "b"",
      "Result": "b",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z = "c"": {
      "Next": "1__h = [z, y, y = "a", y = "b" , y, y]",
      "Result": "c",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
    "z === "b"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.z",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.z",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.z",
                    },
                    {
                      "StringEquals": "b",
                      "Variable": "$.z",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__z === "b"",
        },
      ],
      "Default": "false__z === "b"",
      "Type": "Choice",
    },
  },
}
`;

exports[`binary and unary comparison 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "!false": {
      "Choices": [
        {
          "Next": "true__!false",
          "Not": {
            "IsNull": true,
            "Variable": "$$.Execution.Id",
          },
        },
      ],
      "Default": "false__!false",
      "Type": "Choice",
    },
    "!input.a": {
      "Choices": [
        {
          "Next": "true__!input.a",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.a",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.a",
      "Type": "Choice",
    },
    "!input.n": {
      "Choices": [
        {
          "Next": "true__!input.n",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.n",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.n",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.n",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.n",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.n",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.n",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.n",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.n",
      "Type": "Choice",
    },
    "!input.nv": {
      "Choices": [
        {
          "Next": "true__!input.nv",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.nv",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.nv",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.nv",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.nv",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.nv",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.nv",
      "Type": "Choice",
    },
    "!input.obj": {
      "Choices": [
        {
          "Next": "true__!input.obj",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.obj",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.obj",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.obj",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.obj",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.obj",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.obj",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.obj",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.obj",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.obj",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.obj",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.obj",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.obj",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.obj",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.obj",
      "Type": "Choice",
    },
    "!input.x": {
      "Choices": [
        {
          "Next": "true__!input.x",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.x",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.x",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.x",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.x",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.x",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.x",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.x",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.x",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.x",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__!input.x",
      "Type": "Choice",
    },
    ""a" !== "a"": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__"a" !== "a"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__"a" !== "a"",
      "Type": "Choice",
    },
    ""a" < "a"": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__"a" < "a"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__"a" < "a"",
      "Type": "Choice",
    },
    ""a" <= "a"": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__"a" <= "a"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__"a" <= "a"",
      "Type": "Choice",
    },
    ""a" > "a"": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__"a" > "a"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__"a" > "a"",
      "Type": "Choice",
    },
    ""a" >= "a"": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__"a" >= "a"",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__"a" >= "a"",
      "Type": "Choice",
    },
    ""a" in input.obj": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "true__"a" in input.obj",
          "Variable": "$.input.obj.a",
        },
      ],
      "Default": "false__"a" in input.obj",
      "Type": "Choice",
    },
    ""b" in input.obj": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "true__"b" in input.obj",
          "Variable": "$.input.obj.b",
        },
      ],
      "Default": "false__"b" in input.obj",
      "Type": "Choice",
    },
    ""val2" !== input.v": {
      "Choices": [
        {
          "Next": "true__"val2" !== input.v",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.v",
                      },
                      {
                        "StringEquals": "val2",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__"val2" !== input.v",
      "Type": "Choice",
    },
    ""val2" < input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringGreaterThan": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__"val2" < input.v",
        },
      ],
      "Default": "false__"val2" < input.v",
      "Type": "Choice",
    },
    ""val2" <= input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringGreaterThanEquals": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__"val2" <= input.v",
        },
      ],
      "Default": "false__"val2" <= input.v",
      "Type": "Choice",
    },
    ""val2" === input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringEquals": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__"val2" === input.v",
        },
      ],
      "Default": "false__"val2" === input.v",
      "Type": "Choice",
    },
    ""val2" > input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringLessThan": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__"val2" > input.v",
        },
      ],
      "Default": "false__"val2" > input.v",
      "Type": "Choice",
    },
    ""val2" >= input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringLessThanEquals": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__"val2" >= input.v",
        },
      ],
      "Default": "false__"val2" >= input.v",
      "Type": "Choice",
    },
    "1 !== 1": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__1 !== 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 !== 1",
      "Type": "Choice",
    },
    "1 < 1": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__1 < 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 < 1",
      "Type": "Choice",
    },
    "1 <= 1": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__1 <= 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 <= 1",
      "Type": "Choice",
    },
    "1 === 1": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__1 === 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 === 1",
      "Type": "Choice",
    },
    "1 > 1": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__1 > 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 > 1",
      "Type": "Choice",
    },
    "1 >= 1": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__1 >= 1",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__1 >= 1",
      "Type": "Choice",
    },
    "1__return {constantStringEquals: "a" === "a", constantToVarStringEquals: in": {
      "End": true,
      "Parameters": {
        "constantBooleanEquals.$": "$.heap96",
        "constantBooleanNotEquals.$": "$.heap104",
        "constantInConstant": true,
        "constantInVar.$": "$.heap128",
        "constantNot.$": "$.heap132",
        "constantNotInVar.$": "$.heap130",
        "constantNullEquals.$": "$.heap112",
        "constantNullNotEquals.$": "$.heap120",
        "constantNumberEquals.$": "$.heap48",
        "constantNumberGreater.$": "$.heap80",
        "constantNumberGreaterEquals.$": "$.heap88",
        "constantNumberLess.$": "$.heap64",
        "constantNumberLessEquals.$": "$.heap72",
        "constantNumberNotEquals.$": "$.heap56",
        "constantStringEquals.$": "$.heap0",
        "constantStringGreater.$": "$.heap32",
        "constantStringGreaterEquals.$": "$.heap40",
        "constantStringLess.$": "$.heap16",
        "constantStringLessEquals.$": "$.heap24",
        "constantStringNotEquals.$": "$.heap8",
        "constantToVarBooleanEquals.$": "$.heap98",
        "constantToVarBooleanNotEquals.$": "$.heap106",
        "constantToVarNullEquals.$": "$.heap114",
        "constantToVarNullNotEquals.$": "$.heap122",
        "constantToVarNumberEquals.$": "$.heap50",
        "constantToVarNumberGreater.$": "$.heap82",
        "constantToVarNumberGreaterEquals.$": "$.heap90",
        "constantToVarNumberLess.$": "$.heap66",
        "constantToVarNumberLessEquals.$": "$.heap74",
        "constantToVarNumberNotEquals.$": "$.heap58",
        "constantToVarStringEquals.$": "$.heap2",
        "constantToVarStringGreater.$": "$.heap34",
        "constantToVarStringGreaterEquals.$": "$.heap42",
        "constantToVarStringLess.$": "$.heap18",
        "constantToVarStringLessEquals.$": "$.heap26",
        "constantToVarStringNotEquals.$": "$.heap10",
        "nullEqualEqualsUndefined.$": "$.heap152",
        "nullEqualEqualsUndefinedVar.$": "$.heap216",
        "nullEqualsUndefined.$": "$.heap154",
        "nullEqualsUndefinedVar.$": "$.heap218",
        "nullNotEqualEqualsUndefined.$": "$.heap156",
        "nullNotEqualEqualsUndefinedVar.$": "$.heap220",
        "nullNotEqualsUndefined.$": "$.heap158",
        "nullNotEqualsUndefinedVar.$": "$.heap222",
        "nullVarEqualEqualsNumber.$": "$.heap204",
        "nullVarEqualEqualsNumberVar.$": "$.heap264",
        "nullVarEqualEqualsString.$": "$.heap188",
        "nullVarEqualEqualsStringVar.$": "$.heap248",
        "nullVarEqualsNumber.$": "$.heap206",
        "nullVarEqualsNumberVar.$": "$.heap266",
        "nullVarEqualsString.$": "$.heap190",
        "nullVarEqualsStringVar.$": "$.heap250",
        "nullVarNotEqualEqualsNumber.$": "$.heap208",
        "nullVarNotEqualEqualsNumberVar.$": "$.heap268",
        "nullVarNotEqualEqualsString.$": "$.heap192",
        "nullVarNotEqualEqualsStringVar.$": "$.heap252",
        "nullVarNotEqualsNumber.$": "$.heap210",
        "nullVarNotEqualsNumberVar.$": "$.heap270",
        "nullVarNotEqualsString.$": "$.heap194",
        "nullVarNotEqualsStringVar.$": "$.heap254",
        "objNotPresentFalse.$": "$.heap142",
        "undefinedVarEqualEqualsNull.$": "$.heap172",
        "undefinedVarEqualEqualsNullVar.$": "$.heap232",
        "undefinedVarEqualEqualsNumber.$": "$.heap196",
        "undefinedVarEqualEqualsNumberVar.$": "$.heap256",
        "undefinedVarEqualEqualsString.$": "$.heap180",
        "undefinedVarEqualEqualsStringVar.$": "$.heap240",
        "undefinedVarEqualEqualsUndefined.$": "$.heap160",
        "undefinedVarEqualEqualsUndefinedVar.$": "$.heap224",
        "undefinedVarEqualsNull.$": "$.heap174",
        "undefinedVarEqualsNullVar.$": "$.heap234",
        "undefinedVarEqualsNumber.$": "$.heap198",
        "undefinedVarEqualsNumberVar.$": "$.heap258",
        "undefinedVarEqualsString.$": "$.heap182",
        "undefinedVarEqualsStringVar.$": "$.heap242",
        "undefinedVarEqualsUndefined.$": "$.heap162",
        "undefinedVarEqualsUndefinedVar.$": "$.heap226",
        "undefinedVarNotEqualEqualsNull.$": "$.heap176",
        "undefinedVarNotEqualEqualsNullVar.$": "$.heap236",
        "undefinedVarNotEqualEqualsNumber.$": "$.heap200",
        "undefinedVarNotEqualEqualsNumberVar.$": "$.heap260",
        "undefinedVarNotEqualEqualsString.$": "$.heap184",
        "undefinedVarNotEqualEqualsStringVar.$": "$.heap244",
        "undefinedVarNotEqualEqualsUndefined.$": "$.heap164",
        "undefinedVarNotEqualEqualsUndefinedVar.$": "$.heap228",
        "undefinedVarNotEqualsNull.$": "$.heap178",
        "undefinedVarNotEqualsNullVar.$": "$.heap238",
        "undefinedVarNotEqualsNumber.$": "$.heap202",
        "undefinedVarNotEqualsNumberVar.$": "$.heap262",
        "undefinedVarNotEqualsString.$": "$.heap186",
        "undefinedVarNotEqualsStringVar.$": "$.heap246",
        "undefinedVarNotEqualsUndefined.$": "$.heap166",
        "undefinedVarNotEqualsUndefinedVar.$": "$.heap230",
        "varEqualEqualsUndefined.$": "$.heap144",
        "varEqualEqualsUndefinedVar.$": "$.heap168",
        "varEqualsUndefined.$": "$.heap146",
        "varEqualsUndefinedVar.$": "$.heap170",
        "varNot.$": "$.heap134",
        "varNotEqualEqualsUndefined.$": "$.heap148",
        "varNotEqualEqualsUndefinedVar.$": "$.heap212",
        "varNotEqualsUndefined.$": "$.heap150",
        "varNotEqualsUndefinedVar.$": "$.heap214",
        "varNotNullFalse.$": "$.heap138",
        "varNotPresentFalse.$": "$.heap140",
        "varNotPresentTrue.$": "$.heap136",
        "varToConstantBooleanEquals.$": "$.heap100",
        "varToConstantBooleanNotEquals.$": "$.heap108",
        "varToConstantNullEquals.$": "$.heap116",
        "varToConstantNullNotEquals.$": "$.heap124",
        "varToConstantNumberEquals.$": "$.heap52",
        "varToConstantNumberGreater.$": "$.heap84",
        "varToConstantNumberGreaterEquals.$": "$.heap92",
        "varToConstantNumberLess.$": "$.heap68",
        "varToConstantNumberLessEquals.$": "$.heap76",
        "varToConstantNumberNotEquals.$": "$.heap60",
        "varToConstantStringEquals.$": "$.heap4",
        "varToConstantStringGreater.$": "$.heap36",
        "varToConstantStringGreaterEquals.$": "$.heap44",
        "varToConstantStringLess.$": "$.heap20",
        "varToConstantStringLessEquals.$": "$.heap28",
        "varToConstantStringNotEquals.$": "$.heap12",
        "varToVarBooleanEquals.$": "$.heap102",
        "varToVarBooleanNotEquals.$": "$.heap110",
        "varToVarNullEquals.$": "$.heap118",
        "varToVarNullNotEquals.$": "$.heap126",
        "varToVarNumberEquals.$": "$.heap54",
        "varToVarNumberGreaterE.$": "$.heap86",
        "varToVarNumberGreaterEquals.$": "$.heap94",
        "varToVarNumberLess.$": "$.heap70",
        "varToVarNumberLessEquals.$": "$.heap78",
        "varToVarNumberNotEquals.$": "$.heap62",
        "varToVarStringEquals.$": "$.heap6",
        "varToVarStringGreaterE.$": "$.heap38",
        "varToVarStringGreaterEquals.$": "$.heap46",
        "varToVarStringLess.$": "$.heap22",
        "varToVarStringLessEquals.$": "$.heap30",
        "varToVarStringNotEquals.$": "$.heap14",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "3 !== input.n": {
      "Choices": [
        {
          "Next": "true__3 !== input.n",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.n",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.n",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.n",
                      },
                      {
                        "NumericEquals": 3,
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__3 !== input.n",
      "Type": "Choice",
    },
    "3 < input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericGreaterThan": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__3 < input.n",
        },
      ],
      "Default": "false__3 < input.n",
      "Type": "Choice",
    },
    "3 <= input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericGreaterThanEquals": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__3 <= input.n",
        },
      ],
      "Default": "false__3 <= input.n",
      "Type": "Choice",
    },
    "3 === input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericEquals": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__3 === input.n",
        },
      ],
      "Default": "false__3 === input.n",
      "Type": "Choice",
    },
    "3 > input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericLessThan": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__3 > input.n",
        },
      ],
      "Default": "false__3 > input.n",
      "Type": "Choice",
    },
    "3 >= input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericLessThanEquals": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__3 >= input.n",
        },
      ],
      "Default": "false__3 >= input.n",
      "Type": "Choice",
    },
    "Initialize Functionless Context": {
      "Next": "obj = {nv: null}",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false !== input.a": {
      "Choices": [
        {
          "Next": "true__false !== input.a",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.a",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": false,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__false !== input.a",
      "Type": "Choice",
    },
    "false === input.a": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.a",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "BooleanEquals": false,
                      "Variable": "$.input.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__false === input.a",
        },
      ],
      "Default": "false__false === input.a",
      "Type": "Choice",
    },
    "false__!false": {
      "Next": "!input.a",
      "Result": false,
      "ResultPath": "$.heap132",
      "Type": "Pass",
    },
    "false__!input.a": {
      "Next": "!input.nv",
      "Result": false,
      "ResultPath": "$.heap134",
      "Type": "Pass",
    },
    "false__!input.n": {
      "Next": "!input.x",
      "Result": false,
      "ResultPath": "$.heap138",
      "Type": "Pass",
    },
    "false__!input.nv": {
      "Next": "!input.n",
      "Result": false,
      "ResultPath": "$.heap136",
      "Type": "Pass",
    },
    "false__!input.obj": {
      "Next": "input.v === undefined",
      "Result": false,
      "ResultPath": "$.heap142",
      "Type": "Pass",
    },
    "false__!input.x": {
      "Next": "!input.obj",
      "Result": false,
      "ResultPath": "$.heap140",
      "Type": "Pass",
    },
    "false__"a" !== "a"": {
      "Next": "input.v !== "val"",
      "Result": false,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "false__"a" < "a"": {
      "Next": "input.v < "val2"",
      "Result": false,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "false__"a" <= "a"": {
      "Next": "input.v <= "val2"",
      "Result": false,
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "false__"a" > "a"": {
      "Next": "input.v > "val2"",
      "Result": false,
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "false__"a" >= "a"": {
      "Next": "input.v >= "val2"",
      "Result": false,
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "false__"a" in input.obj": {
      "Next": ""b" in input.obj",
      "Result": false,
      "ResultPath": "$.heap128",
      "Type": "Pass",
    },
    "false__"b" in input.obj": {
      "Next": "!false",
      "Result": false,
      "ResultPath": "$.heap130",
      "Type": "Pass",
    },
    "false__"val2" !== input.v": {
      "Next": "input.v !== input.v",
      "Result": false,
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "false__"val2" < input.v": {
      "Next": "input.v < input.v",
      "Result": false,
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "false__"val2" <= input.v": {
      "Next": "input.v <= input.v",
      "Result": false,
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "false__"val2" === input.v": {
      "Next": "input.v === input.v",
      "Result": false,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "false__"val2" > input.v": {
      "Next": "input.v > input.v",
      "Result": false,
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "false__"val2" >= input.v": {
      "Next": "input.v >= input.v",
      "Result": false,
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "false__1 !== 1": {
      "Next": "input.n !== 2",
      "Result": false,
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "false__1 < 1": {
      "Next": "input.n < 3",
      "Result": false,
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "false__1 <= 1": {
      "Next": "input.n <= 3",
      "Result": false,
      "ResultPath": "$.heap72",
      "Type": "Pass",
    },
    "false__1 === 1": {
      "Next": "input.n === 2",
      "Result": false,
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "false__1 > 1": {
      "Next": "input.n > 3",
      "Result": false,
      "ResultPath": "$.heap80",
      "Type": "Pass",
    },
    "false__1 >= 1": {
      "Next": "input.n >= 3",
      "Result": false,
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "false__3 !== input.n": {
      "Next": "input.n !== input.n",
      "Result": false,
      "ResultPath": "$.heap60",
      "Type": "Pass",
    },
    "false__3 < input.n": {
      "Next": "input.n < input.n",
      "Result": false,
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "false__3 <= input.n": {
      "Next": "input.n <= input.n",
      "Result": false,
      "ResultPath": "$.heap76",
      "Type": "Pass",
    },
    "false__3 === input.n": {
      "Next": "input.n === input.n",
      "Result": false,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "false__3 > input.n": {
      "Next": "input.n > input.n",
      "Result": false,
      "ResultPath": "$.heap84",
      "Type": "Pass",
    },
    "false__3 >= input.n": {
      "Next": "input.n >= input.n",
      "Result": false,
      "ResultPath": "$.heap92",
      "Type": "Pass",
    },
    "false__false !== input.a": {
      "Next": "input.a !== input.a",
      "Result": false,
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "false__false === input.a": {
      "Next": "input.a === input.a",
      "Result": false,
      "ResultPath": "$.heap100",
      "Type": "Pass",
    },
    "false__input.a !== input.a": {
      "Next": "null === null",
      "Result": false,
      "ResultPath": "$.heap110",
      "Type": "Pass",
    },
    "false__input.a !== true": {
      "Next": "false !== input.a",
      "Result": false,
      "ResultPath": "$.heap106",
      "Type": "Pass",
    },
    "false__input.a === input.a": {
      "Next": "true !== true",
      "Result": false,
      "ResultPath": "$.heap102",
      "Type": "Pass",
    },
    "false__input.a === true": {
      "Next": "false === input.a",
      "Result": false,
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "false__input.n !== 2": {
      "Next": "3 !== input.n",
      "Result": false,
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "false__input.n !== input.n": {
      "Next": "1 < 1",
      "Result": false,
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "false__input.n < 3": {
      "Next": "3 < input.n",
      "Result": false,
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "false__input.n < input.n": {
      "Next": "1 <= 1",
      "Result": false,
      "ResultPath": "$.heap70",
      "Type": "Pass",
    },
    "false__input.n <= 3": {
      "Next": "3 <= input.n",
      "Result": false,
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "false__input.n <= input.n": {
      "Next": "1 > 1",
      "Result": false,
      "ResultPath": "$.heap78",
      "Type": "Pass",
    },
    "false__input.n === 2": {
      "Next": "3 === input.n",
      "Result": false,
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "false__input.n === input.n": {
      "Next": "1 !== 1",
      "Result": false,
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "false__input.n > 3": {
      "Next": "3 > input.n",
      "Result": false,
      "ResultPath": "$.heap82",
      "Type": "Pass",
    },
    "false__input.n > input.n": {
      "Next": "1 >= 1",
      "Result": false,
      "ResultPath": "$.heap86",
      "Type": "Pass",
    },
    "false__input.n >= 3": {
      "Next": "3 >= input.n",
      "Result": false,
      "ResultPath": "$.heap90",
      "Type": "Pass",
    },
    "false__input.n >= input.n": {
      "Next": "true === true",
      "Result": false,
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "false__input.nv != "hello"": {
      "Next": "input.undN === 1",
      "Result": false,
      "ResultPath": "$.heap194",
      "Type": "Pass",
    },
    "false__input.nv != 1": {
      "Next": "input.v !== obj.und",
      "Result": false,
      "ResultPath": "$.heap210",
      "Type": "Pass",
    },
    "false__input.nv != input.n": {
      "Next": "1__return {constantStringEquals: "a" === "a", constantToVarStringEquals: in",
      "Result": false,
      "ResultPath": "$.heap270",
      "Type": "Pass",
    },
    "false__input.nv != input.v": {
      "Next": "input.undN === input.n",
      "Result": false,
      "ResultPath": "$.heap254",
      "Type": "Pass",
    },
    "false__input.nv !== "hello"": {
      "Next": "input.nv != "hello"",
      "Result": false,
      "ResultPath": "$.heap192",
      "Type": "Pass",
    },
    "false__input.nv !== 1": {
      "Next": "input.nv != 1",
      "Result": false,
      "ResultPath": "$.heap208",
      "Type": "Pass",
    },
    "false__input.nv !== input.n": {
      "Next": "input.nv != input.n",
      "Result": false,
      "ResultPath": "$.heap268",
      "Type": "Pass",
    },
    "false__input.nv !== input.nv": {
      "Next": ""a" in input.obj",
      "Result": false,
      "ResultPath": "$.heap126",
      "Type": "Pass",
    },
    "false__input.nv !== input.v": {
      "Next": "input.nv != input.v",
      "Result": false,
      "ResultPath": "$.heap252",
      "Type": "Pass",
    },
    "false__input.nv !== null": {
      "Next": "input.v !== input.nv",
      "Result": false,
      "ResultPath": "$.heap122",
      "Type": "Pass",
    },
    "false__input.nv == "hello"": {
      "Next": "input.nv !== "hello"",
      "Result": false,
      "ResultPath": "$.heap190",
      "Type": "Pass",
    },
    "false__input.nv == 1": {
      "Next": "input.nv !== 1",
      "Result": false,
      "ResultPath": "$.heap206",
      "Type": "Pass",
    },
    "false__input.nv == input.n": {
      "Next": "input.nv !== input.n",
      "Result": false,
      "ResultPath": "$.heap266",
      "Type": "Pass",
    },
    "false__input.nv == input.v": {
      "Next": "input.nv !== input.v",
      "Result": false,
      "ResultPath": "$.heap250",
      "Type": "Pass",
    },
    "false__input.nv == obj.und": {
      "Next": "input.nv === obj.und 1",
      "Result": false,
      "ResultPath": "$.heap218",
      "Type": "Pass",
    },
    "false__input.nv == obj.und 1": {
      "Next": "input.und === obj.und",
      "Result": false,
      "ResultPath": "$.heap222",
      "Type": "Pass",
    },
    "false__input.nv == undefined": {
      "Next": "input.nv === undefined 1",
      "Result": false,
      "ResultPath": "$.heap154",
      "Type": "Pass",
    },
    "false__input.nv == undefined 1": {
      "Next": "input.und === undefined",
      "Result": false,
      "ResultPath": "$.heap158",
      "Type": "Pass",
    },
    "false__input.nv === "hello"": {
      "Next": "input.nv == "hello"",
      "Result": false,
      "ResultPath": "$.heap188",
      "Type": "Pass",
    },
    "false__input.nv === 1": {
      "Next": "input.nv == 1",
      "Result": false,
      "ResultPath": "$.heap204",
      "Type": "Pass",
    },
    "false__input.nv === input.n": {
      "Next": "input.nv == input.n",
      "Result": false,
      "ResultPath": "$.heap264",
      "Type": "Pass",
    },
    "false__input.nv === input.nv": {
      "Next": "null !== null",
      "Result": false,
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "false__input.nv === input.v": {
      "Next": "input.nv == input.v",
      "Result": false,
      "ResultPath": "$.heap248",
      "Type": "Pass",
    },
    "false__input.nv === null": {
      "Next": "input.v === input.nv",
      "Result": false,
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "false__input.nv === obj.und": {
      "Next": "input.nv == obj.und",
      "Result": false,
      "ResultPath": "$.heap216",
      "Type": "Pass",
    },
    "false__input.nv === obj.und 1": {
      "Next": "input.nv == obj.und 1",
      "Result": false,
      "ResultPath": "$.heap220",
      "Type": "Pass",
    },
    "false__input.nv === undefined": {
      "Next": "input.nv == undefined",
      "Result": false,
      "ResultPath": "$.heap152",
      "Type": "Pass",
    },
    "false__input.nv === undefined 1": {
      "Next": "input.nv == undefined 1",
      "Result": false,
      "ResultPath": "$.heap156",
      "Type": "Pass",
    },
    "false__input.und != "hello"": {
      "Next": "input.nv === "hello"",
      "Result": false,
      "ResultPath": "$.heap186",
      "Type": "Pass",
    },
    "false__input.und != input.v": {
      "Next": "input.nv === input.v",
      "Result": false,
      "ResultPath": "$.heap246",
      "Type": "Pass",
    },
    "false__input.und != null": {
      "Next": "input.und === "hello"",
      "Result": false,
      "ResultPath": "$.heap178",
      "Type": "Pass",
    },
    "false__input.und != obj.nv": {
      "Next": "input.und === input.v",
      "Result": false,
      "ResultPath": "$.heap238",
      "Type": "Pass",
    },
    "false__input.und != obj.und": {
      "Next": "input.und === obj.nv",
      "Result": false,
      "ResultPath": "$.heap230",
      "Type": "Pass",
    },
    "false__input.und != undefined": {
      "Next": "input.v === undefined 1",
      "Result": false,
      "ResultPath": "$.heap166",
      "Type": "Pass",
    },
    "false__input.und !== "hello"": {
      "Next": "input.und != "hello"",
      "Result": false,
      "ResultPath": "$.heap184",
      "Type": "Pass",
    },
    "false__input.und !== input.v": {
      "Next": "input.und != input.v",
      "Result": false,
      "ResultPath": "$.heap244",
      "Type": "Pass",
    },
    "false__input.und !== null": {
      "Next": "input.und != null",
      "Result": false,
      "ResultPath": "$.heap176",
      "Type": "Pass",
    },
    "false__input.und !== obj.nv": {
      "Next": "input.und != obj.nv",
      "Result": false,
      "ResultPath": "$.heap236",
      "Type": "Pass",
    },
    "false__input.und !== obj.und": {
      "Next": "input.und != obj.und",
      "Result": false,
      "ResultPath": "$.heap228",
      "Type": "Pass",
    },
    "false__input.und !== undefined": {
      "Next": "input.und != undefined",
      "Result": false,
      "ResultPath": "$.heap164",
      "Type": "Pass",
    },
    "false__input.und == "hello"": {
      "Next": "input.und !== "hello"",
      "Result": false,
      "ResultPath": "$.heap182",
      "Type": "Pass",
    },
    "false__input.und == input.v": {
      "Next": "input.und !== input.v",
      "Result": false,
      "ResultPath": "$.heap242",
      "Type": "Pass",
    },
    "false__input.und == null": {
      "Next": "input.und !== null",
      "Result": false,
      "ResultPath": "$.heap174",
      "Type": "Pass",
    },
    "false__input.und == obj.nv": {
      "Next": "input.und !== obj.nv",
      "Result": false,
      "ResultPath": "$.heap234",
      "Type": "Pass",
    },
    "false__input.und == obj.und": {
      "Next": "input.und !== obj.und",
      "Result": false,
      "ResultPath": "$.heap226",
      "Type": "Pass",
    },
    "false__input.und == undefined": {
      "Next": "input.und !== undefined",
      "Result": false,
      "ResultPath": "$.heap162",
      "Type": "Pass",
    },
    "false__input.und === "hello"": {
      "Next": "input.und == "hello"",
      "Result": false,
      "ResultPath": "$.heap180",
      "Type": "Pass",
    },
    "false__input.und === input.v": {
      "Next": "input.und == input.v",
      "Result": false,
      "ResultPath": "$.heap240",
      "Type": "Pass",
    },
    "false__input.und === null": {
      "Next": "input.und == null",
      "Result": false,
      "ResultPath": "$.heap172",
      "Type": "Pass",
    },
    "false__input.und === obj.nv": {
      "Next": "input.und == obj.nv",
      "Result": false,
      "ResultPath": "$.heap232",
      "Type": "Pass",
    },
    "false__input.und === obj.und": {
      "Next": "input.und == obj.und",
      "Result": false,
      "ResultPath": "$.heap224",
      "Type": "Pass",
    },
    "false__input.und === undefined": {
      "Next": "input.und == undefined",
      "Result": false,
      "ResultPath": "$.heap160",
      "Type": "Pass",
    },
    "false__input.undN != 1": {
      "Next": "input.nv === 1",
      "Result": false,
      "ResultPath": "$.heap202",
      "Type": "Pass",
    },
    "false__input.undN != input.n": {
      "Next": "input.nv === input.n",
      "Result": false,
      "ResultPath": "$.heap262",
      "Type": "Pass",
    },
    "false__input.undN !== 1": {
      "Next": "input.undN != 1",
      "Result": false,
      "ResultPath": "$.heap200",
      "Type": "Pass",
    },
    "false__input.undN !== input.n": {
      "Next": "input.undN != input.n",
      "Result": false,
      "ResultPath": "$.heap260",
      "Type": "Pass",
    },
    "false__input.undN == 1": {
      "Next": "input.undN !== 1",
      "Result": false,
      "ResultPath": "$.heap198",
      "Type": "Pass",
    },
    "false__input.undN == input.n": {
      "Next": "input.undN !== input.n",
      "Result": false,
      "ResultPath": "$.heap258",
      "Type": "Pass",
    },
    "false__input.undN === 1": {
      "Next": "input.undN == 1",
      "Result": false,
      "ResultPath": "$.heap196",
      "Type": "Pass",
    },
    "false__input.undN === input.n": {
      "Next": "input.undN == input.n",
      "Result": false,
      "ResultPath": "$.heap256",
      "Type": "Pass",
    },
    "false__input.v != obj.und": {
      "Next": "input.nv === obj.und",
      "Result": false,
      "ResultPath": "$.heap214",
      "Type": "Pass",
    },
    "false__input.v != undefined": {
      "Next": "input.nv === undefined",
      "Result": false,
      "ResultPath": "$.heap150",
      "Type": "Pass",
    },
    "false__input.v !== "val"": {
      "Next": ""val2" !== input.v",
      "Result": false,
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "false__input.v !== input.nv": {
      "Next": "input.nv !== input.nv",
      "Result": false,
      "ResultPath": "$.heap124",
      "Type": "Pass",
    },
    "false__input.v !== input.v": {
      "Next": ""a" < "a"",
      "Result": false,
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "false__input.v !== obj.und": {
      "Next": "input.v != obj.und",
      "Result": false,
      "ResultPath": "$.heap212",
      "Type": "Pass",
    },
    "false__input.v !== undefined": {
      "Next": "input.v != undefined",
      "Result": false,
      "ResultPath": "$.heap148",
      "Type": "Pass",
    },
    "false__input.v < "val2"": {
      "Next": ""val2" < input.v",
      "Result": false,
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "false__input.v < input.v": {
      "Next": ""a" <= "a"",
      "Result": false,
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "false__input.v <= "val2"": {
      "Next": ""val2" <= input.v",
      "Result": false,
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "false__input.v <= input.v": {
      "Next": ""a" > "a"",
      "Result": false,
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "false__input.v == undefined": {
      "Next": "input.v !== undefined",
      "Result": false,
      "ResultPath": "$.heap146",
      "Type": "Pass",
    },
    "false__input.v == undefined 1": {
      "Next": "input.und === null",
      "Result": false,
      "ResultPath": "$.heap170",
      "Type": "Pass",
    },
    "false__input.v === "val"": {
      "Next": ""val2" === input.v",
      "Result": false,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "false__input.v === input.nv": {
      "Next": "input.nv === input.nv",
      "Result": false,
      "ResultPath": "$.heap116",
      "Type": "Pass",
    },
    "false__input.v === input.v": {
      "Next": ""a" !== "a"",
      "Result": false,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "false__input.v === undefined": {
      "Next": "input.v == undefined",
      "Result": false,
      "ResultPath": "$.heap144",
      "Type": "Pass",
    },
    "false__input.v === undefined 1": {
      "Next": "input.v == undefined 1",
      "Result": false,
      "ResultPath": "$.heap168",
      "Type": "Pass",
    },
    "false__input.v > "val2"": {
      "Next": ""val2" > input.v",
      "Result": false,
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "false__input.v > input.v": {
      "Next": ""a" >= "a"",
      "Result": false,
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "false__input.v >= "val2"": {
      "Next": ""val2" >= input.v",
      "Result": false,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "false__input.v >= input.v": {
      "Next": "1 === 1",
      "Result": false,
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "false__null !== null": {
      "Next": "input.nv !== null",
      "Result": false,
      "ResultPath": "$.heap120",
      "Type": "Pass",
    },
    "false__null === null": {
      "Next": "input.nv === null",
      "Result": false,
      "ResultPath": "$.heap112",
      "Type": "Pass",
    },
    "false__return {constantStringEquals: "a" === "a", constantToVarStringEquals": {
      "Next": "input.v === "val"",
      "Result": false,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__true !== true": {
      "Next": "input.a !== true",
      "Result": false,
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "false__true === true": {
      "Next": "input.a === true",
      "Result": false,
      "ResultPath": "$.heap96",
      "Type": "Pass",
    },
    "input.a !== input.a": {
      "Choices": [
        {
          "Next": "true__input.a !== input.a",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.a",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.a",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.a",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.a",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.a",
                                    "Variable": "$.input.a",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.a",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.a",
                                    "Variable": "$.input.a",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.a",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.a",
                                    "Variable": "$.input.a",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a !== input.a",
      "Type": "Choice",
    },
    "input.a !== true": {
      "Choices": [
        {
          "Next": "true__input.a !== true",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.a",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a !== true",
      "Type": "Choice",
    },
    "input.a === input.a": {
      "Choices": [
        {
          "Next": "true__input.a === input.a",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.a",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.a",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.a",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.a",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.a",
                                },
                                {
                                  "StringEqualsPath": "$.input.a",
                                  "Variable": "$.input.a",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.a",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.a",
                                  "Variable": "$.input.a",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.a",
                                },
                                {
                                  "NumericEqualsPath": "$.input.a",
                                  "Variable": "$.input.a",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.a === input.a",
      "Type": "Choice",
    },
    "input.a === true": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.a",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.a === true",
        },
      ],
      "Default": "false__input.a === true",
      "Type": "Choice",
    },
    "input.n !== 2": {
      "Choices": [
        {
          "Next": "true__input.n !== 2",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.n",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.n",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.n",
                      },
                      {
                        "NumericEquals": 2,
                        "Variable": "$.input.n",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.n !== 2",
      "Type": "Choice",
    },
    "input.n !== input.n": {
      "Choices": [
        {
          "Next": "true__input.n !== input.n",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.n",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.n",
                                    "Variable": "$.input.n",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.n",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.n",
                                    "Variable": "$.input.n",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.n",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.n",
                                    "Variable": "$.input.n",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.n !== input.n",
      "Type": "Choice",
    },
    "input.n < 3": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericLessThan": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n < 3",
        },
      ],
      "Default": "false__input.n < 3",
      "Type": "Choice",
    },
    "input.n < input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "StringLessThanPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "NumericLessThanPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n < input.n",
        },
      ],
      "Default": "false__input.n < input.n",
      "Type": "Choice",
    },
    "input.n <= 3": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericLessThanEquals": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n <= 3",
        },
      ],
      "Default": "false__input.n <= 3",
      "Type": "Choice",
    },
    "input.n <= input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "StringLessThanEqualsPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "NumericLessThanEqualsPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n <= input.n",
        },
      ],
      "Default": "false__input.n <= input.n",
      "Type": "Choice",
    },
    "input.n === 2": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericEquals": 2,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n === 2",
        },
      ],
      "Default": "false__input.n === 2",
      "Type": "Choice",
    },
    "input.n === input.n": {
      "Choices": [
        {
          "Next": "true__input.n === input.n",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.n",
                                },
                                {
                                  "StringEqualsPath": "$.input.n",
                                  "Variable": "$.input.n",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.n",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.n",
                                  "Variable": "$.input.n",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.n",
                                },
                                {
                                  "NumericEqualsPath": "$.input.n",
                                  "Variable": "$.input.n",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.n === input.n",
      "Type": "Choice",
    },
    "input.n > 3": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericGreaterThan": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n > 3",
        },
      ],
      "Default": "false__input.n > 3",
      "Type": "Choice",
    },
    "input.n > input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "StringGreaterThanPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "NumericGreaterThanPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n > input.n",
        },
      ],
      "Default": "false__input.n > input.n",
      "Type": "Choice",
    },
    "input.n >= 3": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "NumericGreaterThanEquals": 3,
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n >= 3",
        },
      ],
      "Default": "false__input.n >= 3",
      "Type": "Choice",
    },
    "input.n >= input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "StringGreaterThanEqualsPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.n",
                        },
                        {
                          "NumericGreaterThanEqualsPath": "$.input.n",
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.n >= input.n",
        },
      ],
      "Default": "false__input.n >= input.n",
      "Type": "Choice",
    },
    "input.nv != "hello"": {
      "Choices": [
        {
          "Next": "true__input.nv != "hello"",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "StringEquals": "hello",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv != "hello"",
      "Type": "Choice",
    },
    "input.nv != 1": {
      "Choices": [
        {
          "Next": "true__input.nv != 1",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "NumericEquals": 1,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv != 1",
      "Type": "Choice",
    },
    "input.nv != input.n": {
      "Choices": [
        {
          "Next": "true__input.nv != input.n",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv != input.n",
      "Type": "Choice",
    },
    "input.nv != input.v": {
      "Choices": [
        {
          "Next": "true__input.nv != input.v",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv != input.v",
      "Type": "Choice",
    },
    "input.nv !== "hello"": {
      "Choices": [
        {
          "Next": "true__input.nv !== "hello"",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "StringEquals": "hello",
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== "hello"",
      "Type": "Choice",
    },
    "input.nv !== 1": {
      "Choices": [
        {
          "Next": "true__input.nv !== 1",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.nv",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.nv",
                      },
                      {
                        "NumericEquals": 1,
                        "Variable": "$.input.nv",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== 1",
      "Type": "Choice",
    },
    "input.nv !== input.n": {
      "Choices": [
        {
          "Next": "true__input.nv !== input.n",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.n",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== input.n",
      "Type": "Choice",
    },
    "input.nv !== input.nv": {
      "Choices": [
        {
          "Next": "true__input.nv !== input.nv",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.nv",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.nv",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.nv",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== input.nv",
      "Type": "Choice",
    },
    "input.nv !== input.v": {
      "Choices": [
        {
          "Next": "true__input.nv !== input.v",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.v",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== input.v",
      "Type": "Choice",
    },
    "input.nv !== null": {
      "Choices": [
        {
          "Next": "true__input.nv !== null",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.fnl_context.null",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.fnl_context.null",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "StringEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.nv",
                                  },
                                  {
                                    "NumericEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.nv",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.nv !== null",
      "Type": "Choice",
    },
    "input.nv == "hello"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "StringEquals": "hello",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv == "hello"",
        },
      ],
      "Default": "false__input.nv == "hello"",
      "Type": "Choice",
    },
    "input.nv == 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "NumericEquals": 1,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv == 1",
        },
      ],
      "Default": "false__input.nv == 1",
      "Type": "Choice",
    },
    "input.nv == input.n": {
      "Choices": [
        {
          "Next": "true__input.nv == input.n",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == input.n",
      "Type": "Choice",
    },
    "input.nv == input.v": {
      "Choices": [
        {
          "Next": "true__input.nv == input.v",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == input.v",
      "Type": "Choice",
    },
    "input.nv == obj.und": {
      "Choices": [
        {
          "Next": "true__input.nv == obj.und",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == obj.und",
      "Type": "Choice",
    },
    "input.nv == obj.und 1": {
      "Choices": [
        {
          "Next": "true__input.nv == obj.und 1",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == obj.und 1",
      "Type": "Choice",
    },
    "input.nv == undefined": {
      "Choices": [
        {
          "Next": "true__input.nv == undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.nv",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == undefined",
      "Type": "Choice",
    },
    "input.nv == undefined 1": {
      "Choices": [
        {
          "Next": "true__input.nv == undefined 1",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.nv",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv == undefined 1",
      "Type": "Choice",
    },
    "input.nv === "hello"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "StringEquals": "hello",
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv === "hello"",
        },
      ],
      "Default": "false__input.nv === "hello"",
      "Type": "Choice",
    },
    "input.nv === 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.nv",
                    },
                    {
                      "NumericEquals": 1,
                      "Variable": "$.input.nv",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.nv === 1",
        },
      ],
      "Default": "false__input.nv === 1",
      "Type": "Choice",
    },
    "input.nv === input.n": {
      "Choices": [
        {
          "Next": "true__input.nv === input.n",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.input.n",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === input.n",
      "Type": "Choice",
    },
    "input.nv === input.nv": {
      "Choices": [
        {
          "Next": "true__input.nv === input.nv",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.input.nv",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.nv",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.input.nv",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === input.nv",
      "Type": "Choice",
    },
    "input.nv === input.v": {
      "Choices": [
        {
          "Next": "true__input.nv === input.v",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.input.v",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === input.v",
      "Type": "Choice",
    },
    "input.nv === null": {
      "Choices": [
        {
          "Next": "true__input.nv === null",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.fnl_context.null",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === null",
      "Type": "Choice",
    },
    "input.nv === obj.und": {
      "Choices": [
        {
          "Next": "true__input.nv === obj.und",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === obj.und",
      "Type": "Choice",
    },
    "input.nv === obj.und 1": {
      "Choices": [
        {
          "Next": "true__input.nv === obj.und 1",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.nv",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.nv",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === obj.und 1",
      "Type": "Choice",
    },
    "input.nv === undefined": {
      "Choices": [
        {
          "Next": "true__input.nv === undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.nv",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === undefined",
      "Type": "Choice",
    },
    "input.nv === undefined 1": {
      "Choices": [
        {
          "Next": "true__input.nv === undefined 1",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.nv",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.nv",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.nv === undefined 1",
      "Type": "Choice",
    },
    "input.und != "hello"": {
      "Choices": [
        {
          "Next": "true__input.und != "hello"",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.und",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.und",
                      },
                      {
                        "StringEquals": "hello",
                        "Variable": "$.input.und",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != "hello"",
      "Type": "Choice",
    },
    "input.und != input.v": {
      "Choices": [
        {
          "Next": "true__input.und != input.v",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != input.v",
      "Type": "Choice",
    },
    "input.und != null": {
      "Choices": [
        {
          "Next": "true__input.und != null",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.fnl_context.null",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.fnl_context.null",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != null",
      "Type": "Choice",
    },
    "input.und != obj.nv": {
      "Choices": [
        {
          "Next": "true__input.und != obj.nv",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.nv",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.nv",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.nv",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.nv",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != obj.nv",
      "Type": "Choice",
    },
    "input.und != obj.und": {
      "Choices": [
        {
          "Next": "true__input.und != obj.und",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.und",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.und",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.und",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.und",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != obj.und",
      "Type": "Choice",
    },
    "input.und != undefined": {
      "Choices": [
        {
          "Next": "true__input.und != undefined",
          "Not": {
            "Or": [
              {
                "IsPresent": false,
                "Variable": "$.input.und",
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "And": [
                      {
                        "IsNull": false,
                        "Variable": "$.input.und",
                      },
                      {
                        "IsNull": true,
                        "Variable": "$$.Execution.Id",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und != undefined",
      "Type": "Choice",
    },
    "input.und !== "hello"": {
      "Choices": [
        {
          "Next": "true__input.und !== "hello"",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.und",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.und",
                      },
                      {
                        "StringEquals": "hello",
                        "Variable": "$.input.und",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== "hello"",
      "Type": "Choice",
    },
    "input.und !== input.v": {
      "Choices": [
        {
          "Next": "true__input.und !== input.v",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.v",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== input.v",
      "Type": "Choice",
    },
    "input.und !== null": {
      "Choices": [
        {
          "Next": "true__input.und !== null",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.fnl_context.null",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.fnl_context.null",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== null",
      "Type": "Choice",
    },
    "input.und !== obj.nv": {
      "Choices": [
        {
          "Next": "true__input.und !== obj.nv",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.nv",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.nv",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.nv",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.nv",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.nv",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== obj.nv",
      "Type": "Choice",
    },
    "input.und !== obj.und": {
      "Choices": [
        {
          "Next": "true__input.und !== obj.und",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.und",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.und",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.und",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.und",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.und",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.und",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.und",
                                    "Variable": "$.input.und",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== obj.und",
      "Type": "Choice",
    },
    "input.und !== undefined": {
      "Choices": [
        {
          "Next": "true__input.und !== undefined",
          "Not": {
            "Or": [
              {
                "IsPresent": false,
                "Variable": "$.input.und",
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.und",
                  },
                  {
                    "And": [
                      {
                        "IsNull": false,
                        "Variable": "$.input.und",
                      },
                      {
                        "IsNull": true,
                        "Variable": "$$.Execution.Id",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.und !== undefined",
      "Type": "Choice",
    },
    "input.und == "hello"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.und",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.und",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.und",
                    },
                    {
                      "StringEquals": "hello",
                      "Variable": "$.input.und",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.und == "hello"",
        },
      ],
      "Default": "false__input.und == "hello"",
      "Type": "Choice",
    },
    "input.und == input.v": {
      "Choices": [
        {
          "Next": "true__input.und == input.v",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und == input.v",
      "Type": "Choice",
    },
    "input.und == null": {
      "Choices": [
        {
          "Next": "true__input.und == null",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.fnl_context.null",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und == null",
      "Type": "Choice",
    },
    "input.und == obj.nv": {
      "Choices": [
        {
          "Next": "true__input.und == obj.nv",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.nv",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.nv",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.nv",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.nv",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und == obj.nv",
      "Type": "Choice",
    },
    "input.und == obj.und": {
      "Choices": [
        {
          "Next": "true__input.und == obj.und",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und == obj.und",
      "Type": "Choice",
    },
    "input.und == undefined": {
      "Choices": [
        {
          "Next": "true__input.und == undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.und",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.und",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und == undefined",
      "Type": "Choice",
    },
    "input.und === "hello"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.und",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.und",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.und",
                    },
                    {
                      "StringEquals": "hello",
                      "Variable": "$.input.und",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.und === "hello"",
        },
      ],
      "Default": "false__input.und === "hello"",
      "Type": "Choice",
    },
    "input.und === input.v": {
      "Choices": [
        {
          "Next": "true__input.und === input.v",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.input.v",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und === input.v",
      "Type": "Choice",
    },
    "input.und === null": {
      "Choices": [
        {
          "Next": "true__input.und === null",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.fnl_context.null",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und === null",
      "Type": "Choice",
    },
    "input.und === obj.nv": {
      "Choices": [
        {
          "Next": "true__input.und === obj.nv",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.nv",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.nv",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.nv",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.nv",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.nv",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und === obj.nv",
      "Type": "Choice",
    },
    "input.und === obj.und": {
      "Choices": [
        {
          "Next": "true__input.und === obj.und",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.obj.und",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.obj.und",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.obj.und",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.und",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.obj.und",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "StringEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "BooleanEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.und",
                                },
                                {
                                  "NumericEqualsPath": "$.obj.und",
                                  "Variable": "$.input.und",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und === obj.und",
      "Type": "Choice",
    },
    "input.und === undefined": {
      "Choices": [
        {
          "Next": "true__input.und === undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.und",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.und",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.und",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.und === undefined",
      "Type": "Choice",
    },
    "input.undN != 1": {
      "Choices": [
        {
          "Next": "true__input.undN != 1",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.undN",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.undN",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.undN",
                      },
                      {
                        "NumericEquals": 1,
                        "Variable": "$.input.undN",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.undN != 1",
      "Type": "Choice",
    },
    "input.undN != input.n": {
      "Choices": [
        {
          "Next": "true__input.undN != input.n",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.undN",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.undN",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.undN",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.undN",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.undN != input.n",
      "Type": "Choice",
    },
    "input.undN !== 1": {
      "Choices": [
        {
          "Next": "true__input.undN !== 1",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.undN",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.undN",
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.undN",
                      },
                      {
                        "NumericEquals": 1,
                        "Variable": "$.input.undN",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.undN !== 1",
      "Type": "Choice",
    },
    "input.undN !== input.n": {
      "Choices": [
        {
          "Next": "true__input.undN !== input.n",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.undN",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.n",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.undN",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.n",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.undN",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.n",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.undN",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.n",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.undN",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.n",
                                    "Variable": "$.input.undN",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.undN !== input.n",
      "Type": "Choice",
    },
    "input.undN == 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.undN",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.undN",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.undN",
                    },
                    {
                      "NumericEquals": 1,
                      "Variable": "$.input.undN",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.undN == 1",
        },
      ],
      "Default": "false__input.undN == 1",
      "Type": "Choice",
    },
    "input.undN == input.n": {
      "Choices": [
        {
          "Next": "true__input.undN == input.n",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.undN",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.undN",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.undN",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.undN",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "StringEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "NumericEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.undN == input.n",
      "Type": "Choice",
    },
    "input.undN === 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.undN",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.undN",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.undN",
                    },
                    {
                      "NumericEquals": 1,
                      "Variable": "$.input.undN",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.undN === 1",
        },
      ],
      "Default": "false__input.undN === 1",
      "Type": "Choice",
    },
    "input.undN === input.n": {
      "Choices": [
        {
          "Next": "true__input.undN === input.n",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.undN",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.undN",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.n",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.undN",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.n",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.undN",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.n",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "StringEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.undN",
                                },
                                {
                                  "NumericEqualsPath": "$.input.n",
                                  "Variable": "$.input.undN",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.undN === input.n",
      "Type": "Choice",
    },
    "input.v != obj.und": {
      "Choices": [
        {
          "Next": "true__input.v != obj.und",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.und",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.und",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.und",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.und",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v != obj.und",
      "Type": "Choice",
    },
    "input.v != undefined": {
      "Choices": [
        {
          "Next": "true__input.v != undefined",
          "Not": {
            "Or": [
              {
                "IsPresent": false,
                "Variable": "$.input.v",
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "And": [
                      {
                        "IsNull": false,
                        "Variable": "$.input.v",
                      },
                      {
                        "IsNull": true,
                        "Variable": "$$.Execution.Id",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v != undefined",
      "Type": "Choice",
    },
    "input.v !== "val"": {
      "Choices": [
        {
          "Next": "true__input.v !== "val"",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.input.v",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.v",
                      },
                      {
                        "StringEquals": "val",
                        "Variable": "$.input.v",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== "val"",
      "Type": "Choice",
    },
    "input.v !== input.nv": {
      "Choices": [
        {
          "Next": "true__input.v !== input.nv",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.nv",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.nv",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.nv",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.nv",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.nv",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.nv",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.nv",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== input.nv",
      "Type": "Choice",
    },
    "input.v !== input.v": {
      "Choices": [
        {
          "Next": "true__input.v !== input.v",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "StringEqualsPath": "$.input.v",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.input.v",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "NumericEqualsPath": "$.input.v",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== input.v",
      "Type": "Choice",
    },
    "input.v !== obj.und": {
      "Choices": [
        {
          "Next": "true__input.v !== obj.und",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.obj.und",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.obj.und",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.obj.und",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.input.v",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.obj.und",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "StringEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.input.v",
                                  },
                                  {
                                    "NumericEqualsPath": "$.obj.und",
                                    "Variable": "$.input.v",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== obj.und",
      "Type": "Choice",
    },
    "input.v !== undefined": {
      "Choices": [
        {
          "Next": "true__input.v !== undefined",
          "Not": {
            "Or": [
              {
                "IsPresent": false,
                "Variable": "$.input.v",
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.v",
                  },
                  {
                    "And": [
                      {
                        "IsNull": false,
                        "Variable": "$.input.v",
                      },
                      {
                        "IsNull": true,
                        "Variable": "$$.Execution.Id",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.v !== undefined",
      "Type": "Choice",
    },
    "input.v < "val2"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringLessThan": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v < "val2"",
        },
      ],
      "Default": "false__input.v < "val2"",
      "Type": "Choice",
    },
    "input.v < input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "StringLessThanPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "NumericLessThanPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v < input.v",
        },
      ],
      "Default": "false__input.v < input.v",
      "Type": "Choice",
    },
    "input.v <= "val2"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringLessThanEquals": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v <= "val2"",
        },
      ],
      "Default": "false__input.v <= "val2"",
      "Type": "Choice",
    },
    "input.v <= input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "StringLessThanEqualsPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "NumericLessThanEqualsPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v <= input.v",
        },
      ],
      "Default": "false__input.v <= input.v",
      "Type": "Choice",
    },
    "input.v == undefined": {
      "Choices": [
        {
          "Next": "true__input.v == undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.v",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v == undefined",
      "Type": "Choice",
    },
    "input.v == undefined 1": {
      "Choices": [
        {
          "Next": "true__input.v == undefined 1",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.v",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v == undefined 1",
      "Type": "Choice",
    },
    "input.v === "val"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringEquals": "val",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v === "val"",
        },
      ],
      "Default": "false__input.v === "val"",
      "Type": "Choice",
    },
    "input.v === input.nv": {
      "Choices": [
        {
          "Next": "true__input.v === input.nv",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.nv",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.nv",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.nv",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.nv",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "StringEqualsPath": "$.input.nv",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.nv",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "NumericEqualsPath": "$.input.nv",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v === input.nv",
      "Type": "Choice",
    },
    "input.v === input.v": {
      "Choices": [
        {
          "Next": "true__input.v === input.v",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.input.v",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.input.v",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "StringEqualsPath": "$.input.v",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "BooleanEqualsPath": "$.input.v",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.input.v",
                                },
                                {
                                  "NumericEqualsPath": "$.input.v",
                                  "Variable": "$.input.v",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v === input.v",
      "Type": "Choice",
    },
    "input.v === undefined": {
      "Choices": [
        {
          "Next": "true__input.v === undefined",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.v",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v === undefined",
      "Type": "Choice",
    },
    "input.v === undefined 1": {
      "Choices": [
        {
          "Next": "true__input.v === undefined 1",
          "Or": [
            {
              "IsPresent": false,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.input.v",
                    },
                    {
                      "IsNull": true,
                      "Variable": "$$.Execution.Id",
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__input.v === undefined 1",
      "Type": "Choice",
    },
    "input.v > "val2"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringGreaterThan": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v > "val2"",
        },
      ],
      "Default": "false__input.v > "val2"",
      "Type": "Choice",
    },
    "input.v > input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "StringGreaterThanPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "NumericGreaterThanPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v > input.v",
        },
      ],
      "Default": "false__input.v > input.v",
      "Type": "Choice",
    },
    "input.v >= "val2"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.v",
                    },
                    {
                      "StringGreaterThanEquals": "val2",
                      "Variable": "$.input.v",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v >= "val2"",
        },
      ],
      "Default": "false__input.v >= "val2"",
      "Type": "Choice",
    },
    "input.v >= input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.v",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "StringGreaterThanEqualsPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.v",
                        },
                        {
                          "NumericGreaterThanEqualsPath": "$.input.v",
                          "Variable": "$.input.v",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__input.v >= input.v",
        },
      ],
      "Default": "false__input.v >= input.v",
      "Type": "Choice",
    },
    "null !== null": {
      "Choices": [
        {
          "Next": "true__null !== null",
          "Not": {
            "Or": [
              {
                "And": [
                  {
                    "IsPresent": false,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.fnl_context.null",
                  },
                ],
              },
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "IsPresent": true,
                    "Variable": "$.fnl_context.null",
                  },
                  {
                    "Or": [
                      {
                        "And": [
                          {
                            "IsNull": true,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "IsNull": true,
                            "Variable": "$.fnl_context.null",
                          },
                        ],
                      },
                      {
                        "And": [
                          {
                            "IsNull": false,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "IsNull": false,
                            "Variable": "$.fnl_context.null",
                          },
                          {
                            "Or": [
                              {
                                "And": [
                                  {
                                    "IsString": true,
                                    "Variable": "$.fnl_context.null",
                                  },
                                  {
                                    "StringEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.fnl_context.null",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsBoolean": true,
                                    "Variable": "$.fnl_context.null",
                                  },
                                  {
                                    "BooleanEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.fnl_context.null",
                                  },
                                ],
                              },
                              {
                                "And": [
                                  {
                                    "IsNumeric": true,
                                    "Variable": "$.fnl_context.null",
                                  },
                                  {
                                    "NumericEqualsPath": "$.fnl_context.null",
                                    "Variable": "$.fnl_context.null",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__null !== null",
      "Type": "Choice",
    },
    "null === null": {
      "Choices": [
        {
          "Next": "true__null === null",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.fnl_context.null",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.fnl_context.null",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.fnl_context.null",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.fnl_context.null",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.fnl_context.null",
                                },
                                {
                                  "StringEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.fnl_context.null",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.fnl_context.null",
                                },
                                {
                                  "BooleanEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.fnl_context.null",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.fnl_context.null",
                                },
                                {
                                  "NumericEqualsPath": "$.fnl_context.null",
                                  "Variable": "$.fnl_context.null",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__null === null",
      "Type": "Choice",
    },
    "obj = {nv: null}": {
      "Next": "return {constantStringEquals: "a" === "a", constantToVarStringEquals: input",
      "Result": {
        "nv": null,
      },
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
    "return {constantStringEquals: "a" === "a", constantToVarStringEquals: input": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__return {constantStringEquals: "a" === "a", constantToVarStringEquals:",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__return {constantStringEquals: "a" === "a", constantToVarStringEquals",
      "Type": "Choice",
    },
    "true !== true": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__true !== true",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__true !== true",
      "Type": "Choice",
    },
    "true === true": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__true === true",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__true === true",
      "Type": "Choice",
    },
    "true__!false": {
      "Next": "!input.a",
      "Result": true,
      "ResultPath": "$.heap132",
      "Type": "Pass",
    },
    "true__!input.a": {
      "Next": "!input.nv",
      "Result": true,
      "ResultPath": "$.heap134",
      "Type": "Pass",
    },
    "true__!input.n": {
      "Next": "!input.x",
      "Result": true,
      "ResultPath": "$.heap138",
      "Type": "Pass",
    },
    "true__!input.nv": {
      "Next": "!input.n",
      "Result": true,
      "ResultPath": "$.heap136",
      "Type": "Pass",
    },
    "true__!input.obj": {
      "Next": "input.v === undefined",
      "Result": true,
      "ResultPath": "$.heap142",
      "Type": "Pass",
    },
    "true__!input.x": {
      "Next": "!input.obj",
      "Result": true,
      "ResultPath": "$.heap140",
      "Type": "Pass",
    },
    "true__"a" !== "a"": {
      "Next": "input.v !== "val"",
      "Result": true,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "true__"a" < "a"": {
      "Next": "input.v < "val2"",
      "Result": true,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "true__"a" <= "a"": {
      "Next": "input.v <= "val2"",
      "Result": true,
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "true__"a" > "a"": {
      "Next": "input.v > "val2"",
      "Result": true,
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "true__"a" >= "a"": {
      "Next": "input.v >= "val2"",
      "Result": true,
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "true__"a" in input.obj": {
      "Next": ""b" in input.obj",
      "Result": true,
      "ResultPath": "$.heap128",
      "Type": "Pass",
    },
    "true__"b" in input.obj": {
      "Next": "!false",
      "Result": true,
      "ResultPath": "$.heap130",
      "Type": "Pass",
    },
    "true__"val2" !== input.v": {
      "Next": "input.v !== input.v",
      "Result": true,
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "true__"val2" < input.v": {
      "Next": "input.v < input.v",
      "Result": true,
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "true__"val2" <= input.v": {
      "Next": "input.v <= input.v",
      "Result": true,
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "true__"val2" === input.v": {
      "Next": "input.v === input.v",
      "Result": true,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "true__"val2" > input.v": {
      "Next": "input.v > input.v",
      "Result": true,
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "true__"val2" >= input.v": {
      "Next": "input.v >= input.v",
      "Result": true,
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "true__1 !== 1": {
      "Next": "input.n !== 2",
      "Result": true,
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "true__1 < 1": {
      "Next": "input.n < 3",
      "Result": true,
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "true__1 <= 1": {
      "Next": "input.n <= 3",
      "Result": true,
      "ResultPath": "$.heap72",
      "Type": "Pass",
    },
    "true__1 === 1": {
      "Next": "input.n === 2",
      "Result": true,
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "true__1 > 1": {
      "Next": "input.n > 3",
      "Result": true,
      "ResultPath": "$.heap80",
      "Type": "Pass",
    },
    "true__1 >= 1": {
      "Next": "input.n >= 3",
      "Result": true,
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "true__3 !== input.n": {
      "Next": "input.n !== input.n",
      "Result": true,
      "ResultPath": "$.heap60",
      "Type": "Pass",
    },
    "true__3 < input.n": {
      "Next": "input.n < input.n",
      "Result": true,
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "true__3 <= input.n": {
      "Next": "input.n <= input.n",
      "Result": true,
      "ResultPath": "$.heap76",
      "Type": "Pass",
    },
    "true__3 === input.n": {
      "Next": "input.n === input.n",
      "Result": true,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "true__3 > input.n": {
      "Next": "input.n > input.n",
      "Result": true,
      "ResultPath": "$.heap84",
      "Type": "Pass",
    },
    "true__3 >= input.n": {
      "Next": "input.n >= input.n",
      "Result": true,
      "ResultPath": "$.heap92",
      "Type": "Pass",
    },
    "true__false !== input.a": {
      "Next": "input.a !== input.a",
      "Result": true,
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "true__false === input.a": {
      "Next": "input.a === input.a",
      "Result": true,
      "ResultPath": "$.heap100",
      "Type": "Pass",
    },
    "true__input.a !== input.a": {
      "Next": "null === null",
      "Result": true,
      "ResultPath": "$.heap110",
      "Type": "Pass",
    },
    "true__input.a !== true": {
      "Next": "false !== input.a",
      "Result": true,
      "ResultPath": "$.heap106",
      "Type": "Pass",
    },
    "true__input.a === input.a": {
      "Next": "true !== true",
      "Result": true,
      "ResultPath": "$.heap102",
      "Type": "Pass",
    },
    "true__input.a === true": {
      "Next": "false === input.a",
      "Result": true,
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "true__input.n !== 2": {
      "Next": "3 !== input.n",
      "Result": true,
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "true__input.n !== input.n": {
      "Next": "1 < 1",
      "Result": true,
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "true__input.n < 3": {
      "Next": "3 < input.n",
      "Result": true,
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "true__input.n < input.n": {
      "Next": "1 <= 1",
      "Result": true,
      "ResultPath": "$.heap70",
      "Type": "Pass",
    },
    "true__input.n <= 3": {
      "Next": "3 <= input.n",
      "Result": true,
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "true__input.n <= input.n": {
      "Next": "1 > 1",
      "Result": true,
      "ResultPath": "$.heap78",
      "Type": "Pass",
    },
    "true__input.n === 2": {
      "Next": "3 === input.n",
      "Result": true,
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "true__input.n === input.n": {
      "Next": "1 !== 1",
      "Result": true,
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "true__input.n > 3": {
      "Next": "3 > input.n",
      "Result": true,
      "ResultPath": "$.heap82",
      "Type": "Pass",
    },
    "true__input.n > input.n": {
      "Next": "1 >= 1",
      "Result": true,
      "ResultPath": "$.heap86",
      "Type": "Pass",
    },
    "true__input.n >= 3": {
      "Next": "3 >= input.n",
      "Result": true,
      "ResultPath": "$.heap90",
      "Type": "Pass",
    },
    "true__input.n >= input.n": {
      "Next": "true === true",
      "Result": true,
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "true__input.nv != "hello"": {
      "Next": "input.undN === 1",
      "Result": true,
      "ResultPath": "$.heap194",
      "Type": "Pass",
    },
    "true__input.nv != 1": {
      "Next": "input.v !== obj.und",
      "Result": true,
      "ResultPath": "$.heap210",
      "Type": "Pass",
    },
    "true__input.nv != input.n": {
      "Next": "1__return {constantStringEquals: "a" === "a", constantToVarStringEquals: in",
      "Result": true,
      "ResultPath": "$.heap270",
      "Type": "Pass",
    },
    "true__input.nv != input.v": {
      "Next": "input.undN === input.n",
      "Result": true,
      "ResultPath": "$.heap254",
      "Type": "Pass",
    },
    "true__input.nv !== "hello"": {
      "Next": "input.nv != "hello"",
      "Result": true,
      "ResultPath": "$.heap192",
      "Type": "Pass",
    },
    "true__input.nv !== 1": {
      "Next": "input.nv != 1",
      "Result": true,
      "ResultPath": "$.heap208",
      "Type": "Pass",
    },
    "true__input.nv !== input.n": {
      "Next": "input.nv != input.n",
      "Result": true,
      "ResultPath": "$.heap268",
      "Type": "Pass",
    },
    "true__input.nv !== input.nv": {
      "Next": ""a" in input.obj",
      "Result": true,
      "ResultPath": "$.heap126",
      "Type": "Pass",
    },
    "true__input.nv !== input.v": {
      "Next": "input.nv != input.v",
      "Result": true,
      "ResultPath": "$.heap252",
      "Type": "Pass",
    },
    "true__input.nv !== null": {
      "Next": "input.v !== input.nv",
      "Result": true,
      "ResultPath": "$.heap122",
      "Type": "Pass",
    },
    "true__input.nv == "hello"": {
      "Next": "input.nv !== "hello"",
      "Result": true,
      "ResultPath": "$.heap190",
      "Type": "Pass",
    },
    "true__input.nv == 1": {
      "Next": "input.nv !== 1",
      "Result": true,
      "ResultPath": "$.heap206",
      "Type": "Pass",
    },
    "true__input.nv == input.n": {
      "Next": "input.nv !== input.n",
      "Result": true,
      "ResultPath": "$.heap266",
      "Type": "Pass",
    },
    "true__input.nv == input.v": {
      "Next": "input.nv !== input.v",
      "Result": true,
      "ResultPath": "$.heap250",
      "Type": "Pass",
    },
    "true__input.nv == obj.und": {
      "Next": "input.nv === obj.und 1",
      "Result": true,
      "ResultPath": "$.heap218",
      "Type": "Pass",
    },
    "true__input.nv == obj.und 1": {
      "Next": "input.und === obj.und",
      "Result": true,
      "ResultPath": "$.heap222",
      "Type": "Pass",
    },
    "true__input.nv == undefined": {
      "Next": "input.nv === undefined 1",
      "Result": true,
      "ResultPath": "$.heap154",
      "Type": "Pass",
    },
    "true__input.nv == undefined 1": {
      "Next": "input.und === undefined",
      "Result": true,
      "ResultPath": "$.heap158",
      "Type": "Pass",
    },
    "true__input.nv === "hello"": {
      "Next": "input.nv == "hello"",
      "Result": true,
      "ResultPath": "$.heap188",
      "Type": "Pass",
    },
    "true__input.nv === 1": {
      "Next": "input.nv == 1",
      "Result": true,
      "ResultPath": "$.heap204",
      "Type": "Pass",
    },
    "true__input.nv === input.n": {
      "Next": "input.nv == input.n",
      "Result": true,
      "ResultPath": "$.heap264",
      "Type": "Pass",
    },
    "true__input.nv === input.nv": {
      "Next": "null !== null",
      "Result": true,
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "true__input.nv === input.v": {
      "Next": "input.nv == input.v",
      "Result": true,
      "ResultPath": "$.heap248",
      "Type": "Pass",
    },
    "true__input.nv === null": {
      "Next": "input.v === input.nv",
      "Result": true,
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "true__input.nv === obj.und": {
      "Next": "input.nv == obj.und",
      "Result": true,
      "ResultPath": "$.heap216",
      "Type": "Pass",
    },
    "true__input.nv === obj.und 1": {
      "Next": "input.nv == obj.und 1",
      "Result": true,
      "ResultPath": "$.heap220",
      "Type": "Pass",
    },
    "true__input.nv === undefined": {
      "Next": "input.nv == undefined",
      "Result": true,
      "ResultPath": "$.heap152",
      "Type": "Pass",
    },
    "true__input.nv === undefined 1": {
      "Next": "input.nv == undefined 1",
      "Result": true,
      "ResultPath": "$.heap156",
      "Type": "Pass",
    },
    "true__input.und != "hello"": {
      "Next": "input.nv === "hello"",
      "Result": true,
      "ResultPath": "$.heap186",
      "Type": "Pass",
    },
    "true__input.und != input.v": {
      "Next": "input.nv === input.v",
      "Result": true,
      "ResultPath": "$.heap246",
      "Type": "Pass",
    },
    "true__input.und != null": {
      "Next": "input.und === "hello"",
      "Result": true,
      "ResultPath": "$.heap178",
      "Type": "Pass",
    },
    "true__input.und != obj.nv": {
      "Next": "input.und === input.v",
      "Result": true,
      "ResultPath": "$.heap238",
      "Type": "Pass",
    },
    "true__input.und != obj.und": {
      "Next": "input.und === obj.nv",
      "Result": true,
      "ResultPath": "$.heap230",
      "Type": "Pass",
    },
    "true__input.und != undefined": {
      "Next": "input.v === undefined 1",
      "Result": true,
      "ResultPath": "$.heap166",
      "Type": "Pass",
    },
    "true__input.und !== "hello"": {
      "Next": "input.und != "hello"",
      "Result": true,
      "ResultPath": "$.heap184",
      "Type": "Pass",
    },
    "true__input.und !== input.v": {
      "Next": "input.und != input.v",
      "Result": true,
      "ResultPath": "$.heap244",
      "Type": "Pass",
    },
    "true__input.und !== null": {
      "Next": "input.und != null",
      "Result": true,
      "ResultPath": "$.heap176",
      "Type": "Pass",
    },
    "true__input.und !== obj.nv": {
      "Next": "input.und != obj.nv",
      "Result": true,
      "ResultPath": "$.heap236",
      "Type": "Pass",
    },
    "true__input.und !== obj.und": {
      "Next": "input.und != obj.und",
      "Result": true,
      "ResultPath": "$.heap228",
      "Type": "Pass",
    },
    "true__input.und !== undefined": {
      "Next": "input.und != undefined",
      "Result": true,
      "ResultPath": "$.heap164",
      "Type": "Pass",
    },
    "true__input.und == "hello"": {
      "Next": "input.und !== "hello"",
      "Result": true,
      "ResultPath": "$.heap182",
      "Type": "Pass",
    },
    "true__input.und == input.v": {
      "Next": "input.und !== input.v",
      "Result": true,
      "ResultPath": "$.heap242",
      "Type": "Pass",
    },
    "true__input.und == null": {
      "Next": "input.und !== null",
      "Result": true,
      "ResultPath": "$.heap174",
      "Type": "Pass",
    },
    "true__input.und == obj.nv": {
      "Next": "input.und !== obj.nv",
      "Result": true,
      "ResultPath": "$.heap234",
      "Type": "Pass",
    },
    "true__input.und == obj.und": {
      "Next": "input.und !== obj.und",
      "Result": true,
      "ResultPath": "$.heap226",
      "Type": "Pass",
    },
    "true__input.und == undefined": {
      "Next": "input.und !== undefined",
      "Result": true,
      "ResultPath": "$.heap162",
      "Type": "Pass",
    },
    "true__input.und === "hello"": {
      "Next": "input.und == "hello"",
      "Result": true,
      "ResultPath": "$.heap180",
      "Type": "Pass",
    },
    "true__input.und === input.v": {
      "Next": "input.und == input.v",
      "Result": true,
      "ResultPath": "$.heap240",
      "Type": "Pass",
    },
    "true__input.und === null": {
      "Next": "input.und == null",
      "Result": true,
      "ResultPath": "$.heap172",
      "Type": "Pass",
    },
    "true__input.und === obj.nv": {
      "Next": "input.und == obj.nv",
      "Result": true,
      "ResultPath": "$.heap232",
      "Type": "Pass",
    },
    "true__input.und === obj.und": {
      "Next": "input.und == obj.und",
      "Result": true,
      "ResultPath": "$.heap224",
      "Type": "Pass",
    },
    "true__input.und === undefined": {
      "Next": "input.und == undefined",
      "Result": true,
      "ResultPath": "$.heap160",
      "Type": "Pass",
    },
    "true__input.undN != 1": {
      "Next": "input.nv === 1",
      "Result": true,
      "ResultPath": "$.heap202",
      "Type": "Pass",
    },
    "true__input.undN != input.n": {
      "Next": "input.nv === input.n",
      "Result": true,
      "ResultPath": "$.heap262",
      "Type": "Pass",
    },
    "true__input.undN !== 1": {
      "Next": "input.undN != 1",
      "Result": true,
      "ResultPath": "$.heap200",
      "Type": "Pass",
    },
    "true__input.undN !== input.n": {
      "Next": "input.undN != input.n",
      "Result": true,
      "ResultPath": "$.heap260",
      "Type": "Pass",
    },
    "true__input.undN == 1": {
      "Next": "input.undN !== 1",
      "Result": true,
      "ResultPath": "$.heap198",
      "Type": "Pass",
    },
    "true__input.undN == input.n": {
      "Next": "input.undN !== input.n",
      "Result": true,
      "ResultPath": "$.heap258",
      "Type": "Pass",
    },
    "true__input.undN === 1": {
      "Next": "input.undN == 1",
      "Result": true,
      "ResultPath": "$.heap196",
      "Type": "Pass",
    },
    "true__input.undN === input.n": {
      "Next": "input.undN == input.n",
      "Result": true,
      "ResultPath": "$.heap256",
      "Type": "Pass",
    },
    "true__input.v != obj.und": {
      "Next": "input.nv === obj.und",
      "Result": true,
      "ResultPath": "$.heap214",
      "Type": "Pass",
    },
    "true__input.v != undefined": {
      "Next": "input.nv === undefined",
      "Result": true,
      "ResultPath": "$.heap150",
      "Type": "Pass",
    },
    "true__input.v !== "val"": {
      "Next": ""val2" !== input.v",
      "Result": true,
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "true__input.v !== input.nv": {
      "Next": "input.nv !== input.nv",
      "Result": true,
      "ResultPath": "$.heap124",
      "Type": "Pass",
    },
    "true__input.v !== input.v": {
      "Next": ""a" < "a"",
      "Result": true,
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "true__input.v !== obj.und": {
      "Next": "input.v != obj.und",
      "Result": true,
      "ResultPath": "$.heap212",
      "Type": "Pass",
    },
    "true__input.v !== undefined": {
      "Next": "input.v != undefined",
      "Result": true,
      "ResultPath": "$.heap148",
      "Type": "Pass",
    },
    "true__input.v < "val2"": {
      "Next": ""val2" < input.v",
      "Result": true,
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "true__input.v < input.v": {
      "Next": ""a" <= "a"",
      "Result": true,
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "true__input.v <= "val2"": {
      "Next": ""val2" <= input.v",
      "Result": true,
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "true__input.v <= input.v": {
      "Next": ""a" > "a"",
      "Result": true,
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "true__input.v == undefined": {
      "Next": "input.v !== undefined",
      "Result": true,
      "ResultPath": "$.heap146",
      "Type": "Pass",
    },
    "true__input.v == undefined 1": {
      "Next": "input.und === null",
      "Result": true,
      "ResultPath": "$.heap170",
      "Type": "Pass",
    },
    "true__input.v === "val"": {
      "Next": ""val2" === input.v",
      "Result": true,
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "true__input.v === input.nv": {
      "Next": "input.nv === input.nv",
      "Result": true,
      "ResultPath": "$.heap116",
      "Type": "Pass",
    },
    "true__input.v === input.v": {
      "Next": ""a" !== "a"",
      "Result": true,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "true__input.v === undefined": {
      "Next": "input.v == undefined",
      "Result": true,
      "ResultPath": "$.heap144",
      "Type": "Pass",
    },
    "true__input.v === undefined 1": {
      "Next": "input.v == undefined 1",
      "Result": true,
      "ResultPath": "$.heap168",
      "Type": "Pass",
    },
    "true__input.v > "val2"": {
      "Next": ""val2" > input.v",
      "Result": true,
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "true__input.v > input.v": {
      "Next": ""a" >= "a"",
      "Result": true,
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "true__input.v >= "val2"": {
      "Next": ""val2" >= input.v",
      "Result": true,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "true__input.v >= input.v": {
      "Next": "1 === 1",
      "Result": true,
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "true__null !== null": {
      "Next": "input.nv !== null",
      "Result": true,
      "ResultPath": "$.heap120",
      "Type": "Pass",
    },
    "true__null === null": {
      "Next": "input.nv === null",
      "Result": true,
      "ResultPath": "$.heap112",
      "Type": "Pass",
    },
    "true__return {constantStringEquals: "a" === "a", constantToVarStringEquals:": {
      "Next": "input.v === "val"",
      "Result": true,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__true !== true": {
      "Next": "input.a !== true",
      "Result": true,
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "true__true === true": {
      "Next": "input.a === true",
      "Result": true,
      "ResultPath": "$.heap96",
      "Type": "Pass",
    },
  },
}
`;

exports[`binaryOps logic 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__if(y = 1y && y = 2y , false && y = 3y)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap8",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap8",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap8",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap8",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap8",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap8",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap8",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap8",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap8",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap8",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap8",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap8",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap8",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "4y",
        },
      ],
      "Default": "5y",
      "Type": "Choice",
    },
    "1__if(y = 5y , false || y = 6y , true || y = 7y)": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "8y",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "input.a && input.b",
      "Type": "Choice",
    },
    "1__return {andVar: c, and: input.a && input.b, or: input.a || input.b, invN": {
      "End": true,
      "Parameters": {
        "and.$": "$.heap20",
        "andVar.$": "$.heap0",
        "falsyAndAssign.$": "$.falsyAndAssign",
        "falsyChainAnd.$": "$.heap52",
        "falsyChainOr.$": "$.heap43",
        "falsyOrAssign.$": "$.falsyOrAssign",
        "invNullCoal.$": "$.heap26",
        "notNullishCoalAssign.$": "$.notNullishCoalAssign",
        "nullCoal.$": "$.heap30",
        "nullNull.$": "$.heap32",
        "nullVal.$": "$.heap34",
        "nullishCoalAssign.$": "$.nullishCoalAssign",
        "or.$": "$.heap22",
        "truthyAndAssign.$": "$.truthyAndAssign",
        "truthyChainAnd.$": "$.heap58",
        "truthyChainOr.$": "$.heap48",
        "truthyOrAssign.$": "$.truthyOrAssign",
        "x.$": "$.x",
        "y.$": "$.y",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__x = 1x": {
      "InputPath": "$.input.v",
      "Next": "input.v ?? x = 2x , input.nv",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "1__x = 2x": {
      "InputPath": "$.input.nv",
      "Next": "input.nv ?? null",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "1__x = 3x": {
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false 1",
      "Result": true,
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "1__x = 4x": {
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "Result": false,
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "1__x = 5x": {
      "Next": "input.b || x = 5x , false || input.arr",
      "Result": false,
      "ResultPath": "$.heap47",
      "Type": "Pass",
    },
    "1__x = 6x": {
      "Next": "input.a && input.v && x = 7x , true",
      "Result": true,
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "1__x = 7x": {
      "Next": "input.a && input.v && x = 7x , true && input.v",
      "Result": true,
      "ResultPath": "$.heap57",
      "Type": "Pass",
    },
    "1__y = 2y": {
      "Next": "y = 1y && y = 2y , false && y = 3y",
      "Result": false,
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "1__y = 3y": {
      "InputPath": "$.heap7.string",
      "Next": "1__if(y = 1y && y = 2y , false && y = 3y)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "1x": {
      "Next": "x = 1x 1",
      "Parameters": {
        "string.$": "States.Format('{}1',$.x)",
      },
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "1y": {
      "Next": "y = 1y",
      "Parameters": {
        "string.$": "States.Format('{}1',$.y)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "20__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.heap58",
      "Next": "21__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap59",
      "Type": "Pass",
    },
    "21__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.x",
      "Next": "22__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap60",
      "Type": "Pass",
    },
    "22__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.y",
      "Next": "23__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap61",
      "Type": "Pass",
    },
    "23__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.notNullishCoalAssign",
      "Next": "24__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "24__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.nullishCoalAssign",
      "Next": "25__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "25__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.truthyAndAssign",
      "Next": "26__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "26__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.falsyAndAssign",
      "Next": "27__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap65",
      "Type": "Pass",
    },
    "27__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv": {
      "InputPath": "$.truthyOrAssign",
      "Next": "1__return {andVar: c, and: input.a && input.b, or: input.a || input.b, invN",
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "2x": {
      "Next": "x = 2x 1",
      "Parameters": {
        "string.$": "States.Format('{}2',$.x)",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "2y": {
      "Next": "y = 2y 1",
      "Parameters": {
        "string.$": "States.Format('{}2',$.y)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "3x": {
      "Next": "x = 3x 1",
      "Parameters": {
        "string.$": "States.Format('{}3',$.x)",
      },
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "3y": {
      "Next": "y = 3y 1",
      "Parameters": {
        "string.$": "States.Format('{}3',$.y)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "4x": {
      "Next": "x = 4x 1",
      "Parameters": {
        "string.$": "States.Format('{}4',$.x)",
      },
      "ResultPath": "$.heap41",
      "Type": "Pass",
    },
    "4y": {
      "Next": "y = 4y 1",
      "Parameters": {
        "string.$": "States.Format('{}4',$.y)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "5x": {
      "Next": "x = 5x 1",
      "Parameters": {
        "string.$": "States.Format('{}5',$.x)",
      },
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "5y": {
      "Next": "y = 5y",
      "Parameters": {
        "string.$": "States.Format('{}5',$.y)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "6x": {
      "Next": "x = 6x 1",
      "Parameters": {
        "string.$": "States.Format('{}6',$.x)",
      },
      "ResultPath": "$.heap51",
      "Type": "Pass",
    },
    "6y": {
      "Next": "y = 6y 1",
      "Parameters": {
        "string.$": "States.Format('{}6',$.y)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "7x": {
      "Next": "x = 7x 1",
      "Parameters": {
        "string.$": "States.Format('{}7',$.x)",
      },
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "8y": {
      "Next": "y = 8y 1",
      "Parameters": {
        "string.$": "States.Format('{}8',$.y)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "c = input.a && input.b",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "c = input.a && input.b": {
      "Choices": [
        {
          "Next": "true__c = input.a && input.b",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.a",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__c = input.a && input.b",
      "Type": "Choice",
    },
    "false__c = input.a && input.b": {
      "InputPath": "$.input.b",
      "Next": "x = """,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__falsyAndAssign &&= "b"": {
      "Next": "truthyOrAssign ||= "b"",
      "Result": "b",
      "ResultPath": "$.falsyAndAssign",
      "Type": "Pass",
    },
    "false__falsyOrAssign ||= "b"": {
      "Next": "y = """,
      "Result": "b",
      "ResultPath": "$.falsyOrAssign",
      "Type": "Pass",
    },
    "false__input.a && input.b": {
      "InputPath": "$.input.b",
      "Next": "input.a || input.b",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "false__input.a && input.v && x = 7x , true": {
      "InputPath": "$.input.v",
      "Next": "input.a && input.v && x = 7x , true 1",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "false__input.a && input.v && x = 7x , true && input.v": {
      "InputPath": "$.input.v",
      "Next": "20__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "false__input.a || input.b": {
      "InputPath": "$.input.b",
      "Next": "input.nv ?? x = 1x , input.v",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "false__input.b || input.z || x = 3x , true || x = 4x , false": {
      "InputPath": "$.input.z",
      "Next": "input.b || input.z || x = 3x , true",
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "false__input.b || input.z || x = 3x , true || x = 4x , false || input.v": {
      "InputPath": "$.input.v",
      "Next": "input.b || x = 5x , false",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "false__input.b || x = 5x , false || input.arr": {
      "InputPath": "$.input.arr",
      "Next": "input.z && x = 6x , true",
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "false__input.nv ?? null": {
      "InputPath": "$.fnl_context.null",
      "Next": "null ?? input.v",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "false__notNullishCoalAssign ??= "b"": {
      "Next": "nullishCoalAssign ??= "b"",
      "Result": "b",
      "ResultPath": "$.notNullishCoalAssign",
      "Type": "Pass",
    },
    "false__null ?? input.v": {
      "InputPath": "$.input.v",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "false__nullishCoalAssign ??= "b"": {
      "Next": "truthyAndAssign &&= "b"",
      "Result": "b",
      "ResultPath": "$.nullishCoalAssign",
      "Type": "Pass",
    },
    "false__truthyAndAssign &&= "b"": {
      "Next": "falsyAndAssign &&= "b"",
      "Result": "b",
      "ResultPath": "$.truthyAndAssign",
      "Type": "Pass",
    },
    "false__truthyOrAssign ||= "b"": {
      "Next": "falsyOrAssign ||= "b"",
      "Result": "b",
      "ResultPath": "$.truthyOrAssign",
      "Type": "Pass",
    },
    "falsyAndAssign &&= "b"": {
      "Choices": [
        {
          "Next": "truthyOrAssign ||= "b"",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.falsyAndAssign",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.falsyAndAssign",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.falsyAndAssign",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.falsyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.falsyAndAssign",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.falsyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.falsyAndAssign",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.falsyAndAssign",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.falsyAndAssign",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.falsyAndAssign",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.falsyAndAssign",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__falsyAndAssign &&= "b"",
      "Type": "Choice",
    },
    "falsyAndAssign = """: {
      "Next": "truthyOrAssign = "a"",
      "Result": "",
      "ResultPath": "$.falsyAndAssign",
      "Type": "Pass",
    },
    "falsyOrAssign = """: {
      "Next": "notNullishCoalAssign ??= "b"",
      "Result": "",
      "ResultPath": "$.falsyOrAssign",
      "Type": "Pass",
    },
    "falsyOrAssign ||= "b"": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.falsyOrAssign",
                },
                {
                  "IsNull": false,
                  "Variable": "$.falsyOrAssign",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.falsyOrAssign",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.falsyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.falsyOrAssign",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.falsyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.falsyOrAssign",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.falsyOrAssign",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.falsyOrAssign",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.falsyOrAssign",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.falsyOrAssign",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "y = """,
        },
      ],
      "Default": "false__falsyOrAssign ||= "b"",
      "Type": "Choice",
    },
    "input.a && input.b": {
      "Choices": [
        {
          "Next": "true__input.a && input.b",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.a",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.b",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true": {
      "Choices": [
        {
          "Next": "true__input.a && input.v && x = 7x , true",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.a",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.a",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.a",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.a",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.a",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.a",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.v && x = 7x , true",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true && input.v": {
      "Choices": [
        {
          "Next": "true__input.a && input.v && x = 7x , true && input.v",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.heap57",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.heap57",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.heap57",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.heap57",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.heap57",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap57",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.heap57",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.heap57",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap57",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.heap57",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.heap57",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.heap57",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.heap57",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__input.a && input.v && x = 7x , true && input.v",
      "Type": "Choice",
    },
    "input.a && input.v && x = 7x , true 1": {
      "Choices": [
        {
          "Next": "true__input.a && input.v && x = 7x , true 1",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.heap54",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.heap54",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.heap54",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.heap54",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.heap54",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap54",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.heap54",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.heap54",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap54",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.heap54",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.heap54",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.heap54",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.heap54",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "7x",
      "Type": "Choice",
    },
    "input.a || input.b": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.a",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.a",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.a || input.b",
        },
      ],
      "Default": "false__input.a || input.b",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap36",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap36",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap36",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap36",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap36",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap36",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap36",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap36",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap36",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap36",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap36",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap36",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap36",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true",
        },
      ],
      "Default": "3x",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.b",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.b",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.b",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.b",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.b",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.b",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.b",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.b",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false",
        },
      ],
      "Default": "false__input.b || input.z || x = 3x , true || x = 4x , false",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false 1": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap39",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap39",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap39",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap39",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap39",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap39",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap39",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap39",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap39",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap39",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap39",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap39",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap39",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false 1",
        },
      ],
      "Default": "4x",
      "Type": "Choice",
    },
    "input.b || input.z || x = 3x , true || x = 4x , false || input.v": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap42",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap42",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap42",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap42",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap42",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap42",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap42",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap42",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap42",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap42",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap42",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap42",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap42",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || input.z || x = 3x , true || x = 4x , false || input.v",
        },
      ],
      "Default": "false__input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "Type": "Choice",
    },
    "input.b || x = 5x , false": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.b",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.b",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.b",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.b",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.b",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.b",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.b",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.b",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.b",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || x = 5x , false",
        },
      ],
      "Default": "5x",
      "Type": "Choice",
    },
    "input.b || x = 5x , false || input.arr": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap47",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap47",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap47",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap47",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap47",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap47",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap47",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap47",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap47",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap47",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap47",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap47",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap47",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__input.b || x = 5x , false || input.arr",
        },
      ],
      "Default": "false__input.b || x = 5x , false || input.arr",
      "Type": "Choice",
    },
    "input.nv ?? null": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "IsNull": false,
              "Variable": "$.input.nv",
            },
          ],
          "Next": "true__input.nv ?? null",
        },
      ],
      "Default": "false__input.nv ?? null",
      "Type": "Choice",
    },
    "input.nv ?? x = 1x , input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.nv",
            },
            {
              "IsNull": false,
              "Variable": "$.input.nv",
            },
          ],
          "Next": "true__input.nv ?? x = 1x , input.v",
        },
      ],
      "Default": "1x",
      "Type": "Choice",
    },
    "input.v ?? x = 2x , input.nv": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.v",
            },
            {
              "IsNull": false,
              "Variable": "$.input.v",
            },
          ],
          "Next": "true__input.v ?? x = 2x , input.nv",
        },
      ],
      "Default": "2x",
      "Type": "Choice",
    },
    "input.z && x = 6x , true": {
      "Choices": [
        {
          "Next": "true__input.z && x = 6x , true",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.input.z",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.input.z",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.input.z",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.input.z",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.input.z",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.z",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.input.z",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.input.z",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.z",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.input.z",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.input.z",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.input.z",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.input.z",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "6x",
      "Type": "Choice",
    },
    "notNullishCoalAssign = "a"": {
      "Next": "nullishCoalAssign = null",
      "Result": "a",
      "ResultPath": "$.notNullishCoalAssign",
      "Type": "Pass",
    },
    "notNullishCoalAssign ??= "b"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.notNullishCoalAssign",
            },
            {
              "IsNull": false,
              "Variable": "$.notNullishCoalAssign",
            },
          ],
          "Next": "nullishCoalAssign ??= "b"",
        },
      ],
      "Default": "false__notNullishCoalAssign ??= "b"",
      "Type": "Choice",
    },
    "null ?? input.v": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.fnl_context.null",
            },
            {
              "IsNull": false,
              "Variable": "$.fnl_context.null",
            },
          ],
          "Next": "true__null ?? input.v",
        },
      ],
      "Default": "false__null ?? input.v",
      "Type": "Choice",
    },
    "nullishCoalAssign = null": {
      "InputPath": "$.fnl_context.null",
      "Next": "truthyAndAssign = "a"",
      "ResultPath": "$.nullishCoalAssign",
      "Type": "Pass",
    },
    "nullishCoalAssign ??= "b"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.nullishCoalAssign",
            },
            {
              "IsNull": false,
              "Variable": "$.nullishCoalAssign",
            },
          ],
          "Next": "truthyAndAssign &&= "b"",
        },
      ],
      "Default": "false__nullishCoalAssign ??= "b"",
      "Type": "Choice",
    },
    "true__c = input.a && input.b": {
      "InputPath": "$.input.a",
      "Next": "x = """,
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__input.a && input.b": {
      "InputPath": "$.input.a",
      "Next": "input.a || input.b",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true": {
      "InputPath": "$.input.a",
      "Next": "input.a && input.v && x = 7x , true 1",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true && input.v": {
      "InputPath": "$.heap57",
      "Next": "20__return {andVar: c, and: input.a && input.b, or: input.a || input.b, inv",
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "true__input.a && input.v && x = 7x , true 1": {
      "InputPath": "$.heap54",
      "Next": "input.a && input.v && x = 7x , true && input.v",
      "ResultPath": "$.heap57",
      "Type": "Pass",
    },
    "true__input.a || input.b": {
      "InputPath": "$.input.a",
      "Next": "input.nv ?? x = 1x , input.v",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true": {
      "InputPath": "$.heap36",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false 1",
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false": {
      "InputPath": "$.input.b",
      "Next": "input.b || input.z || x = 3x , true",
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false 1": {
      "InputPath": "$.heap39",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false || input.v",
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "true__input.b || input.z || x = 3x , true || x = 4x , false || input.v": {
      "InputPath": "$.heap42",
      "Next": "input.b || x = 5x , false",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "true__input.b || x = 5x , false": {
      "InputPath": "$.input.b",
      "Next": "input.b || x = 5x , false || input.arr",
      "ResultPath": "$.heap47",
      "Type": "Pass",
    },
    "true__input.b || x = 5x , false || input.arr": {
      "InputPath": "$.heap47",
      "Next": "input.z && x = 6x , true",
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "true__input.nv ?? null": {
      "InputPath": "$.input.nv",
      "Next": "null ?? input.v",
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "true__input.nv ?? x = 1x , input.v": {
      "InputPath": "$.input.nv",
      "Next": "input.v ?? x = 2x , input.nv",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "true__input.v ?? x = 2x , input.nv": {
      "InputPath": "$.input.v",
      "Next": "input.nv ?? null",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "true__input.z && x = 6x , true": {
      "InputPath": "$.input.z",
      "Next": "input.a && input.v && x = 7x , true",
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "true__null ?? input.v": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.b || input.z || x = 3x , true || x = 4x , false",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "true__y = 1y && y = 2y , false": {
      "InputPath": "$.heap2.string",
      "Next": "y = 1y && y = 2y , false && y = 3y",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "true__y = 1y && y = 2y , false && y = 3y": {
      "InputPath": "$.heap5",
      "Next": "1__if(y = 1y && y = 2y , false && y = 3y)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "truthyAndAssign &&= "b"": {
      "Choices": [
        {
          "Next": "falsyAndAssign &&= "b"",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.truthyAndAssign",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.truthyAndAssign",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.truthyAndAssign",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.truthyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.truthyAndAssign",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.truthyAndAssign",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.truthyAndAssign",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.truthyAndAssign",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.truthyAndAssign",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.truthyAndAssign",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.truthyAndAssign",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "false__truthyAndAssign &&= "b"",
      "Type": "Choice",
    },
    "truthyAndAssign = "a"": {
      "Next": "falsyAndAssign = """,
      "Result": "a",
      "ResultPath": "$.truthyAndAssign",
      "Type": "Pass",
    },
    "truthyOrAssign = "a"": {
      "Next": "falsyOrAssign = """,
      "Result": "a",
      "ResultPath": "$.truthyOrAssign",
      "Type": "Pass",
    },
    "truthyOrAssign ||= "b"": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.truthyOrAssign",
                },
                {
                  "IsNull": false,
                  "Variable": "$.truthyOrAssign",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.truthyOrAssign",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.truthyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.truthyOrAssign",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.truthyOrAssign",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.truthyOrAssign",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.truthyOrAssign",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.truthyOrAssign",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.truthyOrAssign",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.truthyOrAssign",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "falsyOrAssign ||= "b"",
        },
      ],
      "Default": "false__truthyOrAssign ||= "b"",
      "Type": "Choice",
    },
    "x = """: {
      "Next": "notNullishCoalAssign = "a"",
      "Result": "",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 1x 1": {
      "InputPath": "$.heap25.string",
      "Next": "1__x = 1x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 2x 1": {
      "InputPath": "$.heap29.string",
      "Next": "1__x = 2x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 3x 1": {
      "InputPath": "$.heap38.string",
      "Next": "1__x = 3x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 4x 1": {
      "InputPath": "$.heap41.string",
      "Next": "1__x = 4x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 5x 1": {
      "InputPath": "$.heap46.string",
      "Next": "1__x = 5x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 6x 1": {
      "InputPath": "$.heap51.string",
      "Next": "1__x = 6x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = 7x 1": {
      "InputPath": "$.heap56.string",
      "Next": "1__x = 7x",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "y = """: {
      "Next": "1y",
      "Result": "",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 1y": {
      "InputPath": "$.heap2.string",
      "Next": "y = 1y && y = 2y , false",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 1y && y = 2y , false": {
      "Choices": [
        {
          "Next": "true__y = 1y && y = 2y , false",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.heap2.string",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.heap2.string",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.heap2.string",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.heap2.string",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.heap2.string",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap2.string",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.heap2.string",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.heap2.string",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap2.string",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.heap2.string",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.heap2.string",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.heap2.string",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.heap2.string",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "2y",
      "Type": "Choice",
    },
    "y = 1y && y = 2y , false && y = 3y": {
      "Choices": [
        {
          "Next": "true__y = 1y && y = 2y , false && y = 3y",
          "Not": {
            "And": [
              {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.heap5",
                  },
                  {
                    "IsNull": false,
                    "Variable": "$.heap5",
                  },
                ],
              },
              {
                "Or": [
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.heap5",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.heap5",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.heap5",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap5",
                      },
                      {
                        "Not": {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.heap5",
                            },
                            {
                              "NumericEquals": 0,
                              "Variable": "$.heap5",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap5",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.heap5",
                      },
                    ],
                  },
                  {
                    "Not": {
                      "Or": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.heap5",
                        },
                        {
                          "IsNumeric": true,
                          "Variable": "$.heap5",
                        },
                        {
                          "IsString": true,
                          "Variable": "$.heap5",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "3y",
      "Type": "Choice",
    },
    "y = 2y 1": {
      "InputPath": "$.heap4.string",
      "Next": "1__y = 2y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 3y 1": {
      "InputPath": "$.heap7.string",
      "Next": "1__y = 3y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 4y 1": {
      "InputPath": "$.heap10.string",
      "Next": "5y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 5y": {
      "InputPath": "$.heap12.string",
      "Next": "6y",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 6y 1": {
      "InputPath": "$.heap14.string",
      "Next": "1__if(y = 5y , false || y = 6y , true || y = 7y)",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
    "y = 8y 1": {
      "InputPath": "$.heap18.string",
      "Next": "input.a && input.b",
      "ResultPath": "$.y",
      "Type": "Pass",
    },
  },
}
`;

exports[`binaryOps logic with calls 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {and: true && await $SFN.retry(function ()), or: false || await $": {
      "End": true,
      "Parameters": {
        "and.$": "$.heap1[0]",
        "or.$": "$.heap4[0]",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "2__return {and: true && await $SFN.retry(function ()), or: false || await $": {
      "Branches": [
        {
          "StartAt": "return trueFunc() 1",
          "States": {
            "1__return trueFunc() 1": {
              "End": true,
              "InputPath": "$.heap3",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "return trueFunc() 1": {
              "InputPath": "$.fnl_context.null",
              "Next": "1__return trueFunc() 1",
              "Resource": "__REPLACED_TOKEN",
              "ResultPath": "$.heap3",
              "Type": "Task",
            },
          },
        },
      ],
      "Next": "1__return {and: true && await $SFN.retry(function ()), or: false || await $",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
      },
      "ResultPath": "$.heap4",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "Initialize Functionless Context": {
      "Next": "return {and: true && await $SFN.retry(function ()), or: false || await $SFN",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return {and: true && await $SFN.retry(function ()), or: false || await $SFN": {
      "Branches": [
        {
          "StartAt": "return trueFunc()",
          "States": {
            "1__return trueFunc()": {
              "End": true,
              "InputPath": "$.heap0",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "return trueFunc()": {
              "InputPath": "$.fnl_context.null",
              "Next": "1__return trueFunc()",
              "Resource": "__REPLACED_TOKEN",
              "ResultPath": "$.heap0",
              "Type": "Task",
            },
          },
        },
      ],
      "Next": "2__return {and: true && await $SFN.retry(function ()), or: false || await $",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
      },
      "ResultPath": "$.heap1",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
  },
}
`;

exports[`call $SFN map, foreach, and parallel 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.map([1, 2, 3], function (n))": {
      "ItemsPath": "$.heap5",
      "Iterator": {
        "StartAt": "return nn",
        "States": {
          "1__return nn": {
            "End": true,
            "InputPath": "$.heap4.string",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "nn": {
            "Next": "1__return nn",
            "Parameters": {
              "string.$": "States.Format('n{}',$.n__1)",
            },
            "ResultPath": "$.heap4",
            "Type": "Pass",
          },
          "return nn": {
            "InputPath": "$.n__1",
            "Next": "nn",
            "ResultPath": null,
            "Type": "Pass",
          },
        },
      },
      "Next": "$SFN.map(input.arr, function (n))",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
        "n__1.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap6",
      "Type": "Map",
    },
    "$SFN.map(input.arr, function (n))": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "return n",
        "States": {
          "return n": {
            "End": true,
            "InputPath": "$.n__2",
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "4__return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(in",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
        "n__2.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap8",
      "Type": "Map",
    },
    "1__return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(in": {
      "End": true,
      "Parameters": {
        "a.$": "$.heap6",
        "b.$": "$.heap8",
        "c.$": "$.heap10",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "4__return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(in": {
      "Branches": [
        {
          "StartAt": "return 1",
          "States": {
            "return 1": {
              "End": true,
              "Result": 1,
              "ResultPath": "$",
              "Type": "Pass",
            },
          },
        },
        {
          "StartAt": "return 2",
          "States": {
            "return 2": {
              "End": true,
              "Result": 2,
              "ResultPath": "$",
              "Type": "Pass",
            },
          },
        },
      ],
      "Next": "1__return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(in",
      "ResultPath": "$.heap10",
      "Type": "Parallel",
    },
    "Initialize Functionless Context": {
      "Next": "await $SFN.forEach(input.arr, function (n))",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await $SFN.forEach(input.arr, function (n))": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "return $SFN.retry(function ())",
        "States": {
          "1__return $SFN.retry(function ())": {
            "End": true,
            "InputPath": "$.heap1[0]",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "return $SFN.retry(function ())": {
            "Branches": [
              {
                "StartAt": "return func(n)",
                "States": {
                  "1__return func(n)": {
                    "End": true,
                    "InputPath": "$.heap0",
                    "ResultPath": "$",
                    "Type": "Pass",
                  },
                  "return func(n)": {
                    "InputPath": "$.n",
                    "Next": "1__return func(n)",
                    "Resource": "__REPLACED_TOKEN",
                    "ResultPath": "$.heap0",
                    "Type": "Task",
                  },
                },
              },
            ],
            "Next": "1__return $SFN.retry(function ())",
            "Parameters": {
              "fnl_context.$": "$.fnl_context",
              "input.$": "$.input",
              "n.$": "$.n",
            },
            "ResultPath": "$.heap1",
            "Retry": [
              {
                "ErrorEquals": [
                  "States.ALL",
                ],
              },
            ],
            "Type": "Parallel",
          },
        },
      },
      "Next": "return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(input",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
        "n.$": "$$.Map.Item.Value",
      },
      "ResultPath": null,
      "Type": "Map",
    },
    "return {a: await $SFN.map([1, 2, 3], function (n)), b: await $SFN.map(input": {
      "Next": "$SFN.map([1, 2, 3], function (n))",
      "Result": [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
  },
}
`;

exports[`call $SFN retry 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return [a, b, c, d, e]": {
      "End": true,
      "InputPath": "$.heap13.out",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "id",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[a, b, c, d, e]": {
      "Next": "1__return [a, b, c, d, e]",
      "Parameters": {
        "out.$": "States.Array($.a,$.b,$.c,$.d,$.e)",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "a": {
      "InputPath": "$.heap2[0]",
      "Next": "b = 0",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = await $SFN.retry(function ())": {
      "Branches": [
        {
          "StartAt": "result = await $AWS.DynamoDB.UpdateItem({Key: {a: {S: id}}, Table: table, U",
          "States": {
            "1__return Number(result.Attributes.n.N)": {
              "End": true,
              "InputPath": "$.heap1.num",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "assign__return Number(result.Attributes.n.N)": {
              "InputPath": "$.result.Attributes.n.N",
              "Next": "1__return Number(result.Attributes.n.N)",
              "ResultPath": "$.heap1.num",
              "Type": "Pass",
            },
            "checkStringOutput__return Number(result.Attributes.n.N)": {
              "Choices": [
                {
                  "IsNumeric": true,
                  "Next": "1__return Number(result.Attributes.n.N)",
                  "Variable": "$.heap1.num",
                },
              ],
              "Default": "null__return Number(result.Attributes.n.N)",
              "Type": "Choice",
            },
            "format__return Number(result.Attributes.n.N)": {
              "Next": "checkStringOutput__return Number(result.Attributes.n.N)",
              "Parameters": {
                "num.$": "States.StringToJson($.result.Attributes.n.N)",
              },
              "ResultPath": "$.heap1",
              "Type": "Pass",
            },
            "if(result.Attributes.n.N === "3")": {
              "Choices": [
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "IsPresent": false,
                      "Variable": "$.result.Attributes.n.N",
                    },
                  ],
                  "Next": "null__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "StringEquals": "",
                              "Variable": "$.result.Attributes.n.N",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "Next": "zero__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "IsNull": true,
                      "Variable": "$.result.Attributes.n.N",
                    },
                  ],
                  "Next": "zero__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "IsString": true,
                      "Variable": "$.result.Attributes.n.N",
                    },
                  ],
                  "Next": "format__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "IsNumeric": true,
                      "Variable": "$.result.Attributes.n.N",
                    },
                  ],
                  "Next": "assign__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "BooleanEquals": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                      ],
                    },
                  ],
                  "Next": "one__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "And": [
                        {
                          "IsPresent": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.result.Attributes.n.N",
                                },
                                {
                                  "StringEquals": "3",
                                  "Variable": "$.result.Attributes.n.N",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsBoolean": true,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "BooleanEquals": false,
                          "Variable": "$.result.Attributes.n.N",
                        },
                      ],
                    },
                  ],
                  "Next": "zero__return Number(result.Attributes.n.N)",
                },
                {
                  "And": [
                    {
                      "IsPresent": true,
                      "Variable": "$.result.Attributes.n.N",
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.result.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.result.Attributes.n.N",
                            },
                            {
                              "StringEquals": "3",
                              "Variable": "$.result.Attributes.n.N",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "Next": "null__return Number(result.Attributes.n.N)",
                },
              ],
              "Default": "throw new StepFunctionError("MyError", "Because")",
              "Type": "Choice",
            },
            "null__return Number(result.Attributes.n.N)": {
              "InputPath": "$.fnl_context.null",
              "Next": "1__return Number(result.Attributes.n.N)",
              "ResultPath": "$.heap1.num",
              "Type": "Pass",
            },
            "one__return Number(result.Attributes.n.N)": {
              "Next": "1__return Number(result.Attributes.n.N)",
              "Result": 1,
              "ResultPath": "$.heap1.num",
              "Type": "Pass",
            },
            "result": {
              "InputPath": "$.heap0",
              "Next": "if(result.Attributes.n.N === "3")",
              "ResultPath": "$.result",
              "Type": "Pass",
            },
            "result = await $AWS.DynamoDB.UpdateItem({Key: {a: {S: id}}, Table: table, U": {
              "Next": "result",
              "Parameters": {
                "ExpressionAttributeValues": {
                  ":inc": {
                    "N": "1",
                  },
                  ":init": {
                    "N": "0",
                  },
                },
                "Key": {
                  "a": {
                    "S.$": "$.id",
                  },
                },
                "ReturnValues": "ALL_NEW",
                "TableName": "__REPLACED_TOKEN",
                "UpdateExpression": "SET n = if_not_exists(n, :init) + :inc",
              },
              "Resource": "arn:aws:states:::aws-sdk:dynamodb:updateItem",
              "ResultPath": "$.heap0",
              "Type": "Task",
            },
            "throw new StepFunctionError("MyError", "Because")": {
              "Cause": ""Because"",
              "Error": "MyError",
              "Type": "Fail",
            },
            "zero__return Number(result.Attributes.n.N)": {
              "Next": "1__return Number(result.Attributes.n.N)",
              "Result": 0,
              "ResultPath": "$.heap1.num",
              "Type": "Pass",
            },
          },
        },
      ],
      "Next": "a",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
        "id.$": "$.id",
      },
      "ResultPath": "$.heap2",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "b = 0": {
      "Next": "try",
      "Result": 0,
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b = await $SFN.retry(function ())": {
      "InputPath": "$.heap3[0]",
      "Next": "c = 0",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "c = 0": {
      "Next": "try 1",
      "Result": 0,
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = await $SFN.retry([{ErrorEquals: ["MyError"], BackoffRate: 1, IntervalSe": {
      "InputPath": "$.heap4[0]",
      "Next": "d = 0",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "catch__try": {
      "Next": "c = 0",
      "Result": 2,
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "catch__try 1": {
      "Next": "d = 0",
      "Result": 3,
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "catch__try 2": {
      "Next": "e = 0",
      "Result": 5,
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "catch__try 3": {
      "Next": "[a, b, c, d, e]",
      "Result": 7,
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "d = 0": {
      "Next": "try 2",
      "Result": 0,
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "d = await $SFN.retry([{ErrorEquals: ["MyError2"], BackoffRate: 1, IntervalS": {
      "InputPath": "$.heap5[0]",
      "Next": "e = 0",
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "e = 0": {
      "Next": "try 3",
      "Result": 0,
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "e = await $SFN.retry([{ErrorEquals: ["MyError2"], BackoffRate: 1, IntervalS": {
      "InputPath": "$.heap7[0]",
      "Next": "[a, b, c, d, e]",
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "id": {
      "InputPath": "$$.Execution.Input.id",
      "Next": "a = await $SFN.retry(function ())",
      "ResultPath": "$.id",
      "Type": "Pass",
    },
    "try": {
      "Branches": [
        {
          "StartAt": "throw new StepFunctionError("MyError", "Because") 1",
          "States": {
            "throw new StepFunctionError("MyError", "Because") 1": {
              "Cause": ""Because"",
              "Error": "MyError",
              "Type": "Fail",
            },
          },
        },
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try",
          "ResultPath": null,
        },
      ],
      "Next": "b = await $SFN.retry(function ())",
      "Parameters": {
        "a.$": "$.a",
        "b.$": "$.b",
        "fnl_context.$": "$.fnl_context",
        "id.$": "$.id",
      },
      "ResultPath": "$.heap3",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "try 1": {
      "Branches": [
        {
          "StartAt": "throw new StepFunctionError("MyError", "Because") 2",
          "States": {
            "throw new StepFunctionError("MyError", "Because") 2": {
              "Cause": ""Because"",
              "Error": "MyError",
              "Type": "Fail",
            },
          },
        },
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 1",
          "ResultPath": null,
        },
      ],
      "Next": "c = await $SFN.retry([{ErrorEquals: ["MyError"], BackoffRate: 1, IntervalSe",
      "Parameters": {
        "a.$": "$.a",
        "b.$": "$.b",
        "c.$": "$.c",
        "fnl_context.$": "$.fnl_context",
        "id.$": "$.id",
      },
      "ResultPath": "$.heap4",
      "Retry": [
        {
          "BackoffRate": 1,
          "ErrorEquals": [
            "MyError",
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
        },
      ],
      "Type": "Parallel",
    },
    "try 2": {
      "Branches": [
        {
          "StartAt": "throw new StepFunctionError("MyError", "Because") 3",
          "States": {
            "throw new StepFunctionError("MyError", "Because") 3": {
              "Cause": ""Because"",
              "Error": "MyError",
              "Type": "Fail",
            },
          },
        },
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 2",
          "ResultPath": null,
        },
      ],
      "Next": "d = await $SFN.retry([{ErrorEquals: ["MyError2"], BackoffRate: 1, IntervalS",
      "Parameters": {
        "a.$": "$.a",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "fnl_context.$": "$.fnl_context",
        "id.$": "$.id",
      },
      "ResultPath": "$.heap5",
      "Retry": [
        {
          "BackoffRate": 1,
          "ErrorEquals": [
            "MyError2",
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
        },
      ],
      "Type": "Parallel",
    },
    "try 3": {
      "Branches": [
        {
          "StartAt": "result = await $AWS.DynamoDB.UpdateItem({Key: {a: {S: id}}, Table: table, U 1",
          "States": {
            "if(result.Attributes.n.N === "6")": {
              "Choices": [
                {
                  "And": [
                    {
                      "IsPresent": true,
                      "Variable": "$.result__1.Attributes.n.N",
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.result__1.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.result__1.Attributes.n.N",
                            },
                            {
                              "StringEquals": "6",
                              "Variable": "$.result__1.Attributes.n.N",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "Next": "return 6",
                },
                {
                  "And": [
                    {
                      "IsPresent": true,
                      "Variable": "$.result__1.Attributes.n.N",
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.result__1.Attributes.n.N",
                        },
                        {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.result__1.Attributes.n.N",
                            },
                            {
                              "StringEquals": "5",
                              "Variable": "$.result__1.Attributes.n.N",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "Next": "throw new StepFunctionError("MyError", "Because") 4",
                },
              ],
              "Default": "throw new StepFunctionError("MyError2", "Because")",
              "Type": "Choice",
            },
            "result 1": {
              "InputPath": "$.heap6",
              "Next": "if(result.Attributes.n.N === "6")",
              "ResultPath": "$.result__1",
              "Type": "Pass",
            },
            "result = await $AWS.DynamoDB.UpdateItem({Key: {a: {S: id}}, Table: table, U 1": {
              "Next": "result 1",
              "Parameters": {
                "ExpressionAttributeValues": {
                  ":inc": {
                    "N": "1",
                  },
                  ":init": {
                    "N": "0",
                  },
                },
                "Key": {
                  "a": {
                    "S.$": "$.id",
                  },
                },
                "ReturnValues": "ALL_NEW",
                "TableName": "__REPLACED_TOKEN",
                "UpdateExpression": "SET n = if_not_exists(n, :init) + :inc",
              },
              "Resource": "arn:aws:states:::aws-sdk:dynamodb:updateItem",
              "ResultPath": "$.heap6",
              "Type": "Task",
            },
            "return 6": {
              "End": true,
              "Result": 6,
              "ResultPath": "$",
              "Type": "Pass",
            },
            "throw new StepFunctionError("MyError", "Because") 4": {
              "Cause": ""Because"",
              "Error": "MyError",
              "Type": "Fail",
            },
            "throw new StepFunctionError("MyError2", "Because")": {
              "Cause": ""Because"",
              "Error": "MyError2",
              "Type": "Fail",
            },
          },
        },
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 3",
          "ResultPath": null,
        },
      ],
      "Next": "e = await $SFN.retry([{ErrorEquals: ["MyError2"], BackoffRate: 1, IntervalS",
      "Parameters": {
        "a.$": "$.a",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "e.$": "$.e",
        "fnl_context.$": "$.fnl_context",
        "id.$": "$.id",
      },
      "ResultPath": "$.heap7",
      "Retry": [
        {
          "BackoffRate": 1,
          "ErrorEquals": [
            "MyError2",
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
        },
        {
          "BackoffRate": 1,
          "ErrorEquals": [
            "MyError",
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
        },
      ],
      "Type": "Parallel",
    },
  },
}
`;

exports[`call $SFN wait 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.waitFor(1)": {
      "Next": "return null",
      "Seconds": 1,
      "Type": "Wait",
    },
    "Initialize Functionless Context": {
      "Next": "$SFN.waitFor(1)",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return null": {
      "End": true,
      "InputPath": "$.fnl_context.null",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`call lambda 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "11__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func": {
      "Branches": [
        {
          "StartAt": "return $AWS.Lambda.Invoke({Function: func2, Payload: obj})",
          "States": {
            "1__return $AWS.Lambda.Invoke({Function: func2, Payload: obj})": {
              "End": true,
              "InputPath": "$.heap12",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "return $AWS.Lambda.Invoke({Function: func2, Payload: obj})": {
              "Next": "1__return $AWS.Lambda.Invoke({Function: func2, Payload: obj})",
              "Parameters": {
                "FunctionName": "__REPLACED_TOKEN",
                "Payload.$": "$.obj",
              },
              "Resource": "__REPLACED_ARN",
              "ResultPath": "$.heap12",
              "Type": "Task",
            },
          },
        },
      ],
      "Next": "1__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2",
      "Parameters": {
        "arr.$": "$.arr",
        "event.$": "$.event",
        "f1.$": "$.f1",
        "fnl_context.$": "$.fnl_context",
        "obj.$": "$.obj",
      },
      "ResultPath": "$.heap13",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "1__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2": {
      "End": true,
      "Parameters": {
        "f1.$": "$.f1",
        "f2.$": "$.heap2.str",
        "f3.$": "$.heap4.str",
        "f4.$": "$.heap6.str",
        "f5.$": "$.heap8",
        "f6.$": "$.heap10",
        "f7.$": "$.heap13[0].Payload.str",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2 1": {
      "InputPath": "$.event.str",
      "Next": "3__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap2",
      "Type": "Task",
    },
    "3__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2": {
      "Next": "5__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2",
      "Parameters": {
        "str": "hello world 2",
      },
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap4",
      "Type": "Task",
    },
    "5__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2": {
      "InputPath": "$.obj",
      "Next": "7__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap6",
      "Type": "Task",
    },
    "7__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2": {
      "Next": "9__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2",
      "Parameters": [
        1,
        2,
      ],
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap8",
      "Type": "Task",
    },
    "9__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2": {
      "InputPath": "$.arr",
      "Next": "11__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap10",
      "Type": "Task",
    },
    "Initialize Functionless Context": {
      "Next": "f1 = await echoStringFunc("hello world").str",
      "Parameters": {
        "event.$": "$$.Execution.Input",
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "arr = [1, 2, 3]": {
      "Next": "1__return {f1: f1, f2: await echoStringFunc(event.str).str, f3: await func2 1",
      "Result": [
        1,
        2,
        3,
      ],
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "f1": {
      "InputPath": "$.heap0.str",
      "Next": "obj = {str: "hello world"}",
      "ResultPath": "$.f1",
      "Type": "Pass",
    },
    "f1 = await echoStringFunc("hello world").str": {
      "Next": "f1",
      "Parameters": "hello world",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "obj = {str: "hello world"}": {
      "Next": "arr = [1, 2, 3]",
      "Result": {
        "str": "hello world",
      },
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
  },
}
`;

exports[`clean state after input 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?": {
      "End": true,
      "Parameters": {
        "a.$": "$.input.a",
        "initA.$": "$.heap5",
        "stateA.$": "$.heap0",
        "stateInput.$": "$.heap3",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "state = dumpState()",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a ?? null": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.a",
            },
            {
              "IsNull": false,
              "Variable": "$.a",
            },
          ],
          "Next": "true__a ?? null",
        },
      ],
      "Default": "false__a ?? null",
      "Type": "Choice",
    },
    "false__a ?? null": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "false__return {stateA: state.a ?? null, a: input.a, stateInput: state.input": {
      "InputPath": "$.fnl_context.null",
      "Next": "state.input.a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__state.input.a ?? null": {
      "InputPath": "$.fnl_context.null",
      "Next": "a ?? null",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?? n": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.state.a",
            },
            {
              "IsNull": false,
              "Variable": "$.state.a",
            },
          ],
          "Next": "true__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.",
        },
      ],
      "Default": "false__return {stateA: state.a ?? null, a: input.a, stateInput: state.input",
      "Type": "Choice",
    },
    "state = dumpState()": {
      "InputPath": "$",
      "Next": "return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?? n",
      "ResultPath": "$.state",
      "Type": "Pass",
    },
    "state.input.a ?? null": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.state.input.a",
            },
            {
              "IsNull": false,
              "Variable": "$.state.input.a",
            },
          ],
          "Next": "true__state.input.a ?? null",
        },
      ],
      "Default": "false__state.input.a ?? null",
      "Type": "Choice",
    },
    "true__a ?? null": {
      "InputPath": "$.a",
      "Next": "1__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.a ?",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "true__return {stateA: state.a ?? null, a: input.a, stateInput: state.input.": {
      "InputPath": "$.state.a",
      "Next": "state.input.a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__state.input.a ?? null": {
      "InputPath": "$.state.input.a",
      "Next": "a ?? null",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
  },
}
`;

exports[`conditionals 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__if(await $SFN.retry(function ()))": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap1[0]",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap1[0]",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap1[0]",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap1[0]",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap1[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap1[0]",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap1[0]",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap1[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap1[0]",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap1[0]",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap1[0]",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap1[0]",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap1[0]",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "return input.b",
        },
      ],
      "Default": "return "noop"",
      "Type": "Choice",
    },
    "Initialize Functionless Context": {
      "Next": "if(input.a)",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "if(await $SFN.retry(function ()))": {
      "Branches": [
        {
          "StartAt": "return trueFunc()",
          "States": {
            "1__return trueFunc()": {
              "End": true,
              "InputPath": "$.heap0",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "return trueFunc()": {
              "InputPath": "$.fnl_context.null",
              "Next": "1__return trueFunc()",
              "Resource": "__REPLACED_TOKEN",
              "ResultPath": "$.heap0",
              "Type": "Task",
            },
          },
        },
      ],
      "Next": "1__if(await $SFN.retry(function ()))",
      "Parameters": {
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
      },
      "ResultPath": "$.heap1",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "if(input.a)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.a",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.a",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.a",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.a",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.a",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.a",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.a",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.a",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.a",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "if(await $SFN.retry(function ()))",
        },
      ],
      "Default": "return "noop"",
      "Type": "Choice",
    },
    "return "noop"": {
      "End": true,
      "Result": "noop",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return input.b": {
      "End": true,
      "InputPath": "$.input.b",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`context 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return name: context.Execution.Name": {
      "End": true,
      "InputPath": "$.heap1.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "name: context.Execution.Name",
      "Parameters": {
        "_.$": "$$.Execution.Input",
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "name: context.Execution.Name": {
      "Next": "1__return name: context.Execution.Name",
      "Parameters": {
        "string.$": "States.Format('name: {}',$$.Execution.Name)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
  },
}
`;

exports[`continue break 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return ab": {
      "End": true,
      "InputPath": "$.heap10.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1a": {
      "Next": "a = 1a 1",
      "Parameters": {
        "string.$": "States.Format('{}1',$.a)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "2a": {
      "Next": "a = 2a 1",
      "Parameters": {
        "string.$": "States.Format('{}2',$.a)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "while (true)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 1a 1": {
      "InputPath": "$.heap1.string",
      "Next": "if(a !== "111")",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 2a 1": {
      "InputPath": "$.heap3.string",
      "Next": "while (true)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ab": {
      "Next": "1__return ab",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.b)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "b = """: {
      "Next": "for(i of [1, 2, 3, 4])",
      "Result": "",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b = bi 1": {
      "InputPath": "$.heap6.string",
      "Next": "if(i === 3)",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "bi": {
      "Next": "b = bi 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.b,$.i)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3, 4])": {
      "Next": "hasNext__for(i of [1, 2, 3, 4])",
      "Result": [
        1,
        2,
        3,
        4,
      ],
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "hasNext__for(i of [1, 2, 3, 4])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap7[0]",
        },
      ],
      "Default": "ab",
      "Type": "Choice",
    },
    "i": {
      "InputPath": "$.heap7[0]",
      "Next": "if(i === 1)",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "if(a !== "111")": {
      "Choices": [
        {
          "And": [
            {
              "Not": {
                "And": [
                  {
                    "IsPresent": true,
                    "Variable": "$.a",
                  },
                  {
                    "And": [
                      {
                        "IsNull": false,
                        "Variable": "$.a",
                      },
                      {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.a",
                          },
                          {
                            "StringEquals": "111",
                            "Variable": "$.a",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.a",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.a",
                    },
                    {
                      "And": [
                        {
                          "IsString": true,
                          "Variable": "$.a",
                        },
                        {
                          "StringEquals": "11121",
                          "Variable": "$.a",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "b = """,
        },
        {
          "Next": "while (true)",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.a",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.a",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.a",
                      },
                      {
                        "StringEquals": "111",
                        "Variable": "$.a",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "2a",
      "Type": "Choice",
    },
    "if(i === 1)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i",
                    },
                    {
                      "NumericEquals": 1,
                      "Variable": "$.i",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "tail__for(i of [1, 2, 3, 4])",
        },
      ],
      "Default": "bi",
      "Type": "Choice",
    },
    "if(i === 3)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i",
                    },
                    {
                      "NumericEquals": 3,
                      "Variable": "$.i",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "ab",
        },
      ],
      "Default": "tail__for(i of [1, 2, 3, 4])",
      "Type": "Choice",
    },
    "tail__for(i of [1, 2, 3, 4])": {
      "InputPath": "$.heap7[1:]",
      "Next": "hasNext__for(i of [1, 2, 3, 4])",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "while (true)": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "1a",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "b = """,
      "Type": "Choice",
    },
  },
}
`;

exports[`destructure 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join()": {
      "ItemsPath": "$.heap6",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default",
            "Type": "Choice",
          },
          "assign__Default": {
            "End": true,
            "InputPath": "$.heap12.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1": {
            "InputPath": "$.item",
            "Next": "assign__Default",
            "ResultPath": "$.heap12.str",
            "Type": "Pass",
          },
          "format__Default": {
            "Next": "assign__Default",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap12",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] }))",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap10",
      "Type": "Map",
    },
    "1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join() 1": {
      "Next": "check__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).j",
      "Parameters": {
        "arr": [
          {
            "aa": "a",
            "bb": [
              "b",
            ],
          },
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "1__return aacc": {
      "InputPath": "$.heap9.string",
      "Next": "handleResult__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ",
      "ResultPath": "$.heap6.arr[0]",
      "Type": "Pass",
    },
    "1__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV": {
      "End": true,
      "Parameters": {
        "forV.$": "$.forV",
        "map.$": "$.map",
        "prop.$": "$.heap37.string",
        "sfnMap.$": "$.sfnMap",
        "tr": "hi",
        "var.$": "$.heap47.string",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "6__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV": {
      "Next": "1__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV",
      "Parameters": "hi",
      "ResultPath": "$.heap51",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "{ a, bb: { value: b, ["a""b"]: r }, c = "what", m = c, arr: [ d, , e, arrRe",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[ d, , e, arrRest ]": {
      "InputPath": "$$.Execution.Input.arr[0]",
      "Next": "e",
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "[ s, , u, tserRra ]": {
      "InputPath": "$.value.rra[0]",
      "Next": "u",
      "ResultPath": "$.s",
      "Type": "Pass",
    },
    "aacc": {
      "Next": "1__return aacc",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.heap6.arr[0].aa,$.heap6.arr[0].bb[0])",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "abcdefarrRest[0]rm": {
      "Next": "zwvxsuttserRra[0] 1",
      "Parameters": {
        "string.$": "States.Format('{}{}{}{}{}{}{}{}{}',$.a,$.b,$.c,$.d,$.e,$.f,$.arrRest[0],$.r,$.m)",
      },
      "ResultPath": "$.heap37",
      "Type": "Pass",
    },
    "append__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).": {
      "Next": "tail__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).jo 1",
      "Parameters": {
        "string.$": "States.Format('{},{}',$.heap11.string,$.heap10[0])",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "arr = [{a: "a", b: [1]}]": {
      "Next": "sfnMap = await $SFN.map(arr, function ({ a, b: [ c ] }))",
      "Result": [
        {
          "a": "a",
          "b": [
            1,
          ],
        },
      ],
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "arrRest": {
      "InputPath": "$$.Execution.Input.arr[3:]",
      "Next": "f = "sir"",
      "ResultPath": "$.arrRest",
      "Type": "Pass",
    },
    "await $SFN.forEach(arr, function ({ a, b: [ c ] }))": {
      "ItemsPath": "$.arr",
      "Iterator": {
        "StartAt": "function ({ a, b: [ c ] }) 1",
        "States": {
          "function ({ a, b: [ c ] }) 1": {
            "InputPath": "$.heap26.a",
            "Next": "return null",
            "ResultPath": null,
            "Type": "Pass",
          },
          "return null": {
            "End": true,
            "InputPath": "$.fnl_context.null",
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "try",
      "Parameters": {
        "a.$": "$.a",
        "arr.$": "$.arr",
        "arrRest.$": "$.arrRest",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "e.$": "$.e",
        "f.$": "$.f",
        "fnl_context.$": "$.fnl_context",
        "forV.$": "$.forV",
        "heap26.$": "$$.Map.Item.Value",
        "m.$": "$.m",
        "map.$": "$.map",
        "r.$": "$.r",
        "s.$": "$.s",
        "sfnMap.$": "$.sfnMap",
        "t.$": "$.t",
        "tserRra.$": "$.tserRra",
        "u.$": "$.u",
        "v.$": "$.v",
        "value.$": "$.value",
        "w.$": "$.w",
        "x.$": "$.x",
        "z.$": "$.z",
      },
      "ResultPath": null,
      "Type": "Map",
    },
    "c 3": {
      "InputPath": "$.heap0",
      "Next": "m = c",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = "what"": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "value__c = "what"",
          "Variable": "$$.Execution.Input.c",
        },
      ],
      "Default": "default__c = "what"",
      "Type": "Choice",
    },
    "catch__try": {
      "Next": "tr = message",
      "Parameters": "hi",
      "ResultPath": "$.message",
      "Type": "Pass",
    },
    "check__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).j": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "aacc",
          "Variable": "$.heap6.arr[0]",
        },
      ],
      "Default": "end__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).joi",
      "Type": "Choice",
    },
    "default__c = "what"": {
      "Next": "c 3",
      "Result": "what",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "default__f = "sir"": {
      "Next": "f",
      "Result": "sir",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "default__m = c": {
      "InputPath": "$.c",
      "Next": "m",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "default__t = "sir"": {
      "Next": "t",
      "Result": "sir",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "default__x = "what"": {
      "Next": "x",
      "Result": "what",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "e": {
      "InputPath": "$$.Execution.Input.arr[2]",
      "Next": "arrRest",
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "end__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).joi": {
      "Next": "set__end__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap6.arrStr))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "f": {
      "InputPath": "$.heap2",
      "Next": "value",
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "f = "sir"": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "value__f = "sir"",
          "Variable": "$$.Execution.Input.arr2[0]",
        },
      ],
      "Default": "default__f = "sir"",
      "Type": "Choice",
    },
    "for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])": {
      "Next": "hasNext__for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])",
      "Result": [
        {
          "h": "a",
          "j": [
            "b",
          ],
        },
      ],
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "forV = """: {
      "Next": "for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])",
      "Result": "",
      "ResultPath": "$.forV",
      "Type": "Pass",
    },
    "forV = forVhl 1": {
      "InputPath": "$.heap16.string",
      "Next": "tail__for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])",
      "ResultPath": "$.forV",
      "Type": "Pass",
    },
    "forVhl": {
      "Next": "forV = forVhl 1",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.forV,$.heap17[0].h,$.heap17[0].j[0])",
      },
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "handleResult__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ": {
      "Next": "check__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).j",
      "Parameters": {
        "arr.$": "$.heap6.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap6.arrStr,States.JsonToString($.heap6.arr[0]))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "hasNext__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] }))": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap10[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap11",
              },
            },
          ],
          "Next": "initValue__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] }",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap10[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap11",
            },
          ],
          "Next": "returnEmpty__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ]",
        },
        {
          "IsPresent": true,
          "Next": "append__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).",
          "Variable": "$.heap10[0]",
        },
      ],
      "Default": "map",
      "Type": "Choice",
    },
    "hasNext__for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "forVhl",
          "Variable": "$.heap17[0]",
        },
      ],
      "Default": "arr = [{a: "a", b: [1]}]",
      "Type": "Choice",
    },
    "initValue__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] }": {
      "InputPath": "$.heap10[0]",
      "Next": "tail__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).jo 1",
      "ResultPath": "$.heap11.string",
      "Type": "Pass",
    },
    "m": {
      "InputPath": "$.heap1",
      "Next": "[ d, , e, arrRest ]",
      "ResultPath": "$.m",
      "Type": "Pass",
    },
    "m = c": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "value__m = c",
          "Variable": "$$.Execution.Input.m",
        },
      ],
      "Default": "default__m = c",
      "Type": "Choice",
    },
    "map": {
      "InputPath": "$.heap11.string",
      "Next": "forV = """,
      "ResultPath": "$.map",
      "Type": "Pass",
    },
    "map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join()": {
      "Next": "1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join() 1",
      "Result": [
        {
          "aa": "a",
          "bb": [
            "b",
          ],
        },
      ],
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "r": {
      "InputPath": "$$.Execution.Input.bb.ab",
      "Next": "c = "what"",
      "ResultPath": "$.r",
      "Type": "Pass",
    },
    "returnEmpty__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ]": {
      "Next": "map",
      "Result": "",
      "ResultPath": "$.heap11.string",
      "Type": "Pass",
    },
    "set__end__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })": {
      "InputPath": "$.heap6.result[1:]",
      "Next": "1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join()",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "sfnMap": {
      "InputPath": "$.heap22",
      "Next": "await $SFN.forEach(arr, function ({ a, b: [ c ] }))",
      "ResultPath": "$.sfnMap",
      "Type": "Pass",
    },
    "sfnMap = await $SFN.map(arr, function ({ a, b: [ c ] }))": {
      "ItemsPath": "$.arr",
      "Iterator": {
        "StartAt": "function ({ a, b: [ c ] })",
        "States": {
          "1__false__return a + c": {
            "InputPath": "$.heap19.str",
            "Next": "1__return a + c",
            "ResultPath": "$.heap20",
            "Type": "Pass",
          },
          "1__false__return a + c 1": {
            "Choices": [
              {
                "IsPresent": false,
                "Next": "null__1__false__return a + c 1",
                "Variable": "$.c__1",
              },
              {
                "And": [
                  {
                    "IsString": true,
                    "Variable": "$.c__1",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.c__1",
                      },
                      {
                        "StringEquals": "",
                        "Variable": "$.c__1",
                      },
                    ],
                  },
                ],
                "Next": "zero__1__false__return a + c 1",
              },
              {
                "IsNull": true,
                "Next": "zero__1__false__return a + c 1",
                "Variable": "$.c__1",
              },
              {
                "IsString": true,
                "Next": "format__1__false__return a + c 1",
                "Variable": "$.c__1",
              },
              {
                "IsNumeric": true,
                "Next": "assign__1__false__return a + c 1",
                "Variable": "$.c__1",
              },
              {
                "And": [
                  {
                    "IsBoolean": true,
                    "Variable": "$.c__1",
                  },
                  {
                    "BooleanEquals": true,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "one__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsBoolean": true,
                    "Variable": "$.c__1",
                  },
                  {
                    "BooleanEquals": false,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "zero__1__false__return a + c 1",
              },
            ],
            "Default": "null__1__false__return a + c 1",
            "Type": "Choice",
          },
          "1__return a + c": {
            "End": true,
            "InputPath": "$.heap20",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "1__true__return a + c": {
            "InputPath": "$.heap18.str",
            "Next": "1__return a + c",
            "ResultPath": "$.heap20",
            "Type": "Pass",
          },
          "1__true__return a + c 1": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__1__true__return a + c 1",
                "Variable": "$.c__1",
              },
            ],
            "Default": "format__1__true__return a + c 1",
            "Type": "Choice",
          },
          "2__false__return a + c": {
            "Next": "1__false__return a + c",
            "Parameters": {
              "str.$": "States.MathAdd($.heap19.str.left.num,$.heap19.str.right.num)",
            },
            "ResultPath": "$.heap19",
            "Type": "Pass",
          },
          "2__true__return a + c": {
            "Next": "1__true__return a + c",
            "Parameters": {
              "str.$": "States.Format('{}{}',$.heap18.str.left.str,$.heap18.str.right.str)",
            },
            "ResultPath": "$.heap18",
            "Type": "Pass",
          },
          "assign__1__false__return a + c 1": {
            "InputPath": "$.c__1",
            "Next": "2__false__return a + c",
            "ResultPath": "$.heap19.str.right.num",
            "Type": "Pass",
          },
          "assign__1__true__return a + c 1": {
            "InputPath": "$.c__1",
            "Next": "2__true__return a + c",
            "ResultPath": "$.heap18.str.right.str",
            "Type": "Pass",
          },
          "assign__false__return a + c": {
            "InputPath": "$.a__1",
            "Next": "1__false__return a + c 1",
            "ResultPath": "$.heap19.str.left.num",
            "Type": "Pass",
          },
          "assign__true__return a + c": {
            "InputPath": "$.a__1",
            "Next": "1__true__return a + c 1",
            "ResultPath": "$.heap18.str.left.str",
            "Type": "Pass",
          },
          "c": {
            "InputPath": "$.heap21.b[0]",
            "Next": "return a + c",
            "ResultPath": "$.c__1",
            "Type": "Pass",
          },
          "checkStringOutput__1__false__return a + c 1": {
            "Choices": [
              {
                "IsNumeric": true,
                "Next": "2__false__return a + c",
                "Variable": "$.heap19.str.right.num",
              },
            ],
            "Default": "null__1__false__return a + c 1",
            "Type": "Choice",
          },
          "checkStringOutput__false__return a + c": {
            "Choices": [
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "IsPresent": false,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "null__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.c__1",
                      },
                      {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.c__1",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.c__1",
                          },
                        ],
                      },
                    ],
                  },
                ],
                "Next": "zero__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "IsNull": true,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "zero__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "IsString": true,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "format__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "IsNumeric": true,
                    "Variable": "$.c__1",
                  },
                ],
                "Next": "assign__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.c__1",
                      },
                      {
                        "BooleanEquals": true,
                        "Variable": "$.c__1",
                      },
                    ],
                  },
                ],
                "Next": "one__1__false__return a + c 1",
              },
              {
                "And": [
                  {
                    "IsNumeric": true,
                    "Variable": "$.heap19.str.left.num",
                  },
                  {
                    "And": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.c__1",
                      },
                      {
                        "BooleanEquals": false,
                        "Variable": "$.c__1",
                      },
                    ],
                  },
                ],
                "Next": "zero__1__false__return a + c 1",
              },
              {
                "IsNumeric": true,
                "Next": "null__1__false__return a + c 1",
                "Variable": "$.heap19.str.left.num",
              },
            ],
            "Default": "null__false__return a + c",
            "Type": "Choice",
          },
          "format__1__false__return a + c 1": {
            "Next": "checkStringOutput__1__false__return a + c 1",
            "Parameters": {
              "num.$": "States.StringToJson($.c__1)",
            },
            "ResultPath": "$.heap19.str.right",
            "Type": "Pass",
          },
          "format__1__true__return a + c 1": {
            "Next": "2__true__return a + c",
            "Parameters": {
              "str.$": "States.JsonToString($.c__1)",
            },
            "ResultPath": "$.heap18.str.right",
            "Type": "Pass",
          },
          "format__false__return a + c": {
            "Next": "checkStringOutput__false__return a + c",
            "Parameters": {
              "num.$": "States.StringToJson($.a__1)",
            },
            "ResultPath": "$.heap19.str.left",
            "Type": "Pass",
          },
          "format__true__return a + c": {
            "Next": "1__true__return a + c 1",
            "Parameters": {
              "str.$": "States.JsonToString($.a__1)",
            },
            "ResultPath": "$.heap18.str.left",
            "Type": "Pass",
          },
          "function ({ a, b: [ c ] })": {
            "InputPath": "$.heap21.a",
            "Next": "c",
            "ResultPath": "$.a__1",
            "Type": "Pass",
          },
          "null__1__false__return a + c 1": {
            "InputPath": "$.fnl_context.null",
            "Next": "2__false__return a + c",
            "ResultPath": "$.heap19.str.right.num",
            "Type": "Pass",
          },
          "null__false__return a + c": {
            "InputPath": "$.fnl_context.null",
            "Next": "1__false__return a + c 1",
            "ResultPath": "$.heap19.str.left.num",
            "Type": "Pass",
          },
          "one__1__false__return a + c 1": {
            "Next": "2__false__return a + c",
            "Result": 1,
            "ResultPath": "$.heap19.str.right.num",
            "Type": "Pass",
          },
          "one__false__return a + c": {
            "Next": "1__false__return a + c 1",
            "Result": 1,
            "ResultPath": "$.heap19.str.left.num",
            "Type": "Pass",
          },
          "return a + c": {
            "Choices": [
              {
                "And": [
                  {
                    "Or": [
                      {
                        "IsString": true,
                        "Variable": "$.a__1",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.c__1",
                      },
                    ],
                  },
                  {
                    "IsString": true,
                    "Variable": "$.a__1",
                  },
                ],
                "Next": "assign__true__return a + c",
              },
              {
                "Next": "format__true__return a + c",
                "Or": [
                  {
                    "IsString": true,
                    "Variable": "$.a__1",
                  },
                  {
                    "IsString": true,
                    "Variable": "$.c__1",
                  },
                ],
              },
              {
                "IsPresent": false,
                "Next": "null__false__return a + c",
                "Variable": "$.a__1",
              },
              {
                "And": [
                  {
                    "IsString": true,
                    "Variable": "$.a__1",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.a__1",
                      },
                      {
                        "StringEquals": "",
                        "Variable": "$.a__1",
                      },
                    ],
                  },
                ],
                "Next": "zero__false__return a + c",
              },
              {
                "IsNull": true,
                "Next": "zero__false__return a + c",
                "Variable": "$.a__1",
              },
              {
                "IsString": true,
                "Next": "format__false__return a + c",
                "Variable": "$.a__1",
              },
              {
                "IsNumeric": true,
                "Next": "assign__false__return a + c",
                "Variable": "$.a__1",
              },
              {
                "And": [
                  {
                    "IsBoolean": true,
                    "Variable": "$.a__1",
                  },
                  {
                    "BooleanEquals": true,
                    "Variable": "$.a__1",
                  },
                ],
                "Next": "one__false__return a + c",
              },
              {
                "And": [
                  {
                    "IsBoolean": true,
                    "Variable": "$.a__1",
                  },
                  {
                    "BooleanEquals": false,
                    "Variable": "$.a__1",
                  },
                ],
                "Next": "zero__false__return a + c",
              },
            ],
            "Default": "null__false__return a + c",
            "Type": "Choice",
          },
          "zero__1__false__return a + c 1": {
            "Next": "2__false__return a + c",
            "Result": 0,
            "ResultPath": "$.heap19.str.right.num",
            "Type": "Pass",
          },
          "zero__false__return a + c": {
            "Next": "1__false__return a + c 1",
            "Result": 0,
            "ResultPath": "$.heap19.str.left.num",
            "Type": "Pass",
          },
        },
      },
      "Next": "sfnMap",
      "Parameters": {
        "a.$": "$.a",
        "arr.$": "$.arr",
        "arrRest.$": "$.arrRest",
        "b.$": "$.b",
        "c.$": "$.c",
        "d.$": "$.d",
        "e.$": "$.e",
        "f.$": "$.f",
        "fnl_context.$": "$.fnl_context",
        "forV.$": "$.forV",
        "heap21.$": "$$.Map.Item.Value",
        "m.$": "$.m",
        "map.$": "$.map",
        "r.$": "$.r",
        "s.$": "$.s",
        "t.$": "$.t",
        "tserRra.$": "$.tserRra",
        "u.$": "$.u",
        "v.$": "$.v",
        "value.$": "$.value",
        "w.$": "$.w",
        "x.$": "$.x",
        "z.$": "$.z",
      },
      "ResultPath": "$.heap22",
      "Type": "Map",
    },
    "t": {
      "InputPath": "$.heap4",
      "Next": "map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).join()",
      "ResultPath": "$.t",
      "Type": "Pass",
    },
    "t = "sir"": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "value__t = "sir"",
          "Variable": "$.value.rra2[0]",
        },
      ],
      "Default": "default__t = "sir"",
      "Type": "Choice",
    },
    "tail__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] })).jo 1": {
      "InputPath": "$.heap10[1:]",
      "Next": "hasNext__1__map = [{aa: "a", bb: ["b"]}].map(function ({ aa, bb: [ cc ] }))",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "tail__for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])": {
      "InputPath": "$.heap17[1:]",
      "Next": "hasNext__for({ h, j: [ l ] } of [{h: "a", j: ["b"]}])",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "tr = message": {
      "Next": "abcdefarrRest[0]rm",
      "Parameters": "hi",
      "ResultPath": "$.tr",
      "Type": "Pass",
    },
    "try": {
      "Next": "catch__try",
      "Result": {
        "message": "hi",
      },
      "ResultPath": "$.fnl_tmp_1",
      "Type": "Pass",
    },
    "tserRra": {
      "InputPath": "$.value.rra[3:]",
      "Next": "t = "sir"",
      "ResultPath": "$.tserRra",
      "Type": "Pass",
    },
    "u": {
      "InputPath": "$.value.rra[2]",
      "Next": "tserRra",
      "ResultPath": "$.u",
      "Type": "Pass",
    },
    "v": {
      "InputPath": "$.value.yy.ab",
      "Next": "x = "what"",
      "ResultPath": "$.v",
      "Type": "Pass",
    },
    "value": {
      "InputPath": "$$.Execution.Input.value",
      "Next": "{ z, yy: { ["value"]: w, ["a""b"]: v }, x = "what", rra: [ s, , u, tserRra ",
      "ResultPath": "$.value",
      "Type": "Pass",
    },
    "value__c = "what"": {
      "InputPath": "$$.Execution.Input.c",
      "Next": "c 3",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "value__f = "sir"": {
      "InputPath": "$$.Execution.Input.arr2[0]",
      "Next": "f",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "value__m = c": {
      "InputPath": "$$.Execution.Input.m",
      "Next": "m",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "value__t = "sir"": {
      "InputPath": "$.value.rra2[0]",
      "Next": "t",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "value__x = "what"": {
      "InputPath": "$.value.x",
      "Next": "x",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "x": {
      "InputPath": "$.heap3",
      "Next": "[ s, , u, tserRra ]",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "x = "what"": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "value__x = "what"",
          "Variable": "$.value.x",
        },
      ],
      "Default": "default__x = "what"",
      "Type": "Choice",
    },
    "zwvxsuttserRra[0] 1": {
      "Next": "6__return {prop: abcdefarrRest[0]rm, var: zwvxsuttserRra[0], map: map, forV",
      "Parameters": {
        "string.$": "States.Format('{}{}{}{}{}{}{}{}',$.z,$.w,$.v,$.x,$.s,$.u,$.t,$.tserRra[0])",
      },
      "ResultPath": "$.heap47",
      "Type": "Pass",
    },
    "{ ["value"]: w, ["a""b"]: v }": {
      "InputPath": "$.value.yy.value",
      "Next": "v",
      "ResultPath": "$.w",
      "Type": "Pass",
    },
    "{ a, bb: { value: b, ["a""b"]: r }, c = "what", m = c, arr: [ d, , e, arrRe": {
      "InputPath": "$$.Execution.Input.a",
      "Next": "{ value: b, ["a""b"]: r }",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "{ value: b, ["a""b"]: r }": {
      "InputPath": "$$.Execution.Input.bb.value",
      "Next": "r",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "{ z, yy: { ["value"]: w, ["a""b"]: v }, x = "what", rra: [ s, , u, tserRra ": {
      "InputPath": "$.value.z",
      "Next": "{ ["value"]: w, ["a""b"]: v }",
      "ResultPath": "$.z",
      "Type": "Pass",
    },
  },
}
`;

exports[`duplicate nodes 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "Initialize Functionless Context": {
      "Next": "return "hello world"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return "hello world"": {
      "End": true,
      "Result": "hello world",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`filter 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.waitFor(1)": {
      "Next": "hikey",
      "Seconds": 1,
      "Type": "Wait",
    },
    "1__return x <= index || first === x": {
      "InputPath": "$.heap8",
      "Next": "handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "1__return {arr1: arr1, arr2: arr2}": {
      "End": true,
      "Parameters": {
        "arr1.$": "$.heap0",
        "arr2.$": "$.heap6",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "2__return itemKey === hikey": {
      "InputPath": "$.heap4",
      "Next": "handleResult__arr1 = arr.filter(function ({ value })).filter(function ({ va",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "{ arr, key }",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "ItemsPath": "$.heap5",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": {
        "index.$": "$$.Map.Item.Index",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap6",
      "ResultSelector": {
        "arr.$": "$",
        "arrStr": "[null",
      },
      "Type": "Map",
    },
    "arr1 = arr.filter(function ({ value })).filter(function ({ value })).filter": {
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "Parameters": {
        "arr.$": "$.arr[?(@.value<=3)][?(@.value<=$.key)]",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "arr2": {
      "InputPath": "$.heap6",
      "Next": "return {arr1: arr1, arr2: arr2}",
      "ResultPath": "$.arr2",
      "Type": "Pass",
    },
    "arr2 = [4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "Next": "[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Result": [
        4,
        3,
        2,
        1,
      ],
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "function (x,index,[ first ])",
          "Variable": "$.heap6.arr[0]",
        },
      ],
      "Default": "end__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Type": "Choice",
    },
    "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "{ key: itemKey } = item",
          "Variable": "$.heap0.arr[0]",
        },
      ],
      "Default": "end__arr1 = arr.filter(function ({ value })).filter(function ({ value })).f",
      "Type": "Choice",
    },
    "end__[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "Next": "set__end__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap6.arrStr))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "end__arr1 = arr.filter(function ({ value })).filter(function ({ value })).f": {
      "Next": "set__end__arr1 = arr.filter(function ({ value })).filter(function ({ value ",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap0.arrStr))",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__itemKey === hikey": {
      "Next": "2__return itemKey === hikey",
      "Result": false,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "false__return x <= index || first === x": {
      "Next": "1__return x <= index || first === x",
      "Result": false,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "first": {
      "InputPath": "$.heap5[0]",
      "Next": "return x <= index || first === x",
      "ResultPath": "$.first",
      "Type": "Pass",
    },
    "function (x,index,[ first ])": {
      "InputPath": "$.heap6.arr[0].item",
      "Next": "index",
      "ResultPath": "$.x",
      "Type": "Pass",
    },
    "handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap7",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap7",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap7",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap7",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap7",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap7",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap7",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap7",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap7",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap7",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap7",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap7",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap7",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "predicateTrue__handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ",
        },
      ],
      "Default": "tail__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Type": "Choice",
    },
    "handleResult__arr1 = arr.filter(function ({ value })).filter(function ({ va": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.heap1",
                },
                {
                  "IsNull": false,
                  "Variable": "$.heap1",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap1",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.heap1",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.heap1",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.heap1",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.heap1",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.heap1",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.heap1",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.heap1",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.heap1",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.heap1",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.heap1",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "predicateTrue__handleResult__arr1 = arr.filter(function ({ value })).filter",
        },
      ],
      "Default": "tail__arr1 = arr.filter(function ({ value })).filter(function ({ value })).",
      "Type": "Choice",
    },
    "hikey": {
      "Next": "itemKey === hikey",
      "Parameters": {
        "string.$": "States.Format('hi{}',$.key)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "index": {
      "InputPath": "$.heap6.arr[0].index",
      "Next": "first",
      "ResultPath": "$.index",
      "Type": "Pass",
    },
    "itemKey === hikey": {
      "Choices": [
        {
          "Next": "true__itemKey === hikey",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": false,
                  "Variable": "$.itemKey",
                },
                {
                  "IsPresent": false,
                  "Variable": "$.heap3.string",
                },
              ],
            },
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.itemKey",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.heap3.string",
                },
                {
                  "Or": [
                    {
                      "And": [
                        {
                          "IsNull": true,
                          "Variable": "$.itemKey",
                        },
                        {
                          "IsNull": true,
                          "Variable": "$.heap3.string",
                        },
                      ],
                    },
                    {
                      "And": [
                        {
                          "IsNull": false,
                          "Variable": "$.itemKey",
                        },
                        {
                          "IsNull": false,
                          "Variable": "$.heap3.string",
                        },
                        {
                          "Or": [
                            {
                              "And": [
                                {
                                  "IsString": true,
                                  "Variable": "$.itemKey",
                                },
                                {
                                  "StringEqualsPath": "$.heap3.string",
                                  "Variable": "$.itemKey",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsBoolean": true,
                                  "Variable": "$.itemKey",
                                },
                                {
                                  "BooleanEqualsPath": "$.heap3.string",
                                  "Variable": "$.itemKey",
                                },
                              ],
                            },
                            {
                              "And": [
                                {
                                  "IsNumeric": true,
                                  "Variable": "$.itemKey",
                                },
                                {
                                  "NumericEqualsPath": "$.heap3.string",
                                  "Variable": "$.itemKey",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__itemKey === hikey",
      "Type": "Choice",
    },
    "key": {
      "InputPath": "$$.Execution.Input.key",
      "Next": "arr1 = arr.filter(function ({ value })).filter(function ({ value })).filter",
      "ResultPath": "$.key",
      "Type": "Pass",
    },
    "predicateTrue__handleResult__[4, 3, 2, 1].filter(function (x,index,[ first ": {
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "Parameters": {
        "arr.$": "$.heap6.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap6.arrStr,States.JsonToString($.heap6.arr[0].item))",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "predicateTrue__handleResult__arr1 = arr.filter(function ({ value })).filter": {
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "Parameters": {
        "arr.$": "$.heap0.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap0.arrStr,States.JsonToString($.heap0.arr[0]))",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return x <= index || first === x": {
      "Choices": [
        {
          "Next": "true__return x <= index || first === x",
          "Or": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.x",
                },
                {
                  "IsPresent": true,
                  "Variable": "$.index",
                },
                {
                  "And": [
                    {
                      "IsNull": false,
                      "Variable": "$.x",
                    },
                    {
                      "IsNull": false,
                      "Variable": "$.index",
                    },
                    {
                      "Or": [
                        {
                          "And": [
                            {
                              "IsString": true,
                              "Variable": "$.x",
                            },
                            {
                              "StringLessThanEqualsPath": "$.index",
                              "Variable": "$.x",
                            },
                          ],
                        },
                        {
                          "And": [
                            {
                              "IsNumeric": true,
                              "Variable": "$.x",
                            },
                            {
                              "NumericLessThanEqualsPath": "$.index",
                              "Variable": "$.x",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsPresent": false,
                      "Variable": "$.first",
                    },
                    {
                      "IsPresent": false,
                      "Variable": "$.x",
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsPresent": true,
                      "Variable": "$.first",
                    },
                    {
                      "IsPresent": true,
                      "Variable": "$.x",
                    },
                    {
                      "Or": [
                        {
                          "And": [
                            {
                              "IsNull": true,
                              "Variable": "$.first",
                            },
                            {
                              "IsNull": true,
                              "Variable": "$.x",
                            },
                          ],
                        },
                        {
                          "And": [
                            {
                              "IsNull": false,
                              "Variable": "$.first",
                            },
                            {
                              "IsNull": false,
                              "Variable": "$.x",
                            },
                            {
                              "Or": [
                                {
                                  "And": [
                                    {
                                      "IsString": true,
                                      "Variable": "$.first",
                                    },
                                    {
                                      "StringEqualsPath": "$.x",
                                      "Variable": "$.first",
                                    },
                                  ],
                                },
                                {
                                  "And": [
                                    {
                                      "IsBoolean": true,
                                      "Variable": "$.first",
                                    },
                                    {
                                      "BooleanEqualsPath": "$.x",
                                      "Variable": "$.first",
                                    },
                                  ],
                                },
                                {
                                  "And": [
                                    {
                                      "IsNumeric": true,
                                      "Variable": "$.first",
                                    },
                                    {
                                      "NumericEqualsPath": "$.x",
                                      "Variable": "$.first",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "Default": "false__return x <= index || first === x",
      "Type": "Choice",
    },
    "return {arr1: arr1, arr2: arr2}": {
      "InputPath": "$.heap0",
      "Next": "1__return {arr1: arr1, arr2: arr2}",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "set__end__[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "InputPath": "$.heap6.result[1:]",
      "Next": "arr2",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "set__end__arr1 = arr.filter(function ({ value })).filter(function ({ value ": {
      "InputPath": "$.heap0.result[1:]",
      "Next": "arr2 = [4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "tail__[4, 3, 2, 1].filter(function (x,index,[ first ]))": {
      "InputPath": "$.heap6.arr[1:]",
      "Next": "check__[4, 3, 2, 1].filter(function (x,index,[ first ]))",
      "ResultPath": "$.heap6.arr",
      "Type": "Pass",
    },
    "tail__arr1 = arr.filter(function ({ value })).filter(function ({ value })).": {
      "InputPath": "$.heap0.arr[1:]",
      "Next": "check__arr1 = arr.filter(function ({ value })).filter(function ({ value }))",
      "ResultPath": "$.heap0.arr",
      "Type": "Pass",
    },
    "true__itemKey === hikey": {
      "Next": "2__return itemKey === hikey",
      "Result": true,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "true__return x <= index || first === x": {
      "Next": "1__return x <= index || first === x",
      "Result": true,
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "{ arr, key }": {
      "InputPath": "$$.Execution.Input.arr",
      "Next": "key",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "{ key: itemKey } = item": {
      "InputPath": "$.heap0.arr[0].key",
      "Next": "$SFN.waitFor(1)",
      "ResultPath": "$.itemKey",
      "Type": "Pass",
    },
  },
}
`;

exports[`for 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__for(arr = input.arr;arr[0];arr = arr.slice(1))": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.arr[0]",
                },
                {
                  "IsNull": false,
                  "Variable": "$.arr[0]",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.arr[0]",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.arr[0]",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.arr[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.arr[0]",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.arr[0]",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.arr[0]",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.arr[0]",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.arr[0]",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.arr[0]",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.arr[0]",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.arr[0]",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "naarr[0]",
        },
      ],
      "Default": "c = """,
      "Type": "Choice",
    },
    "1c": {
      "Next": "c = 1c 2",
      "Parameters": {
        "string.$": "States.Format('{}1',$.c)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "1c 1": {
      "Next": "c = 1c 3",
      "Parameters": {
        "string.$": "States.Format('{}1',$.c)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = cac 1": {
      "InputPath": "$.heap7.string",
      "Next": "1c 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = naarr[0] 1": {
      "InputPath": "$.heap2.string",
      "Next": "arr = arr.slice(1)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "arr = arr.slice(1)": {
      "InputPath": "$.arr[1:]",
      "Next": "1__for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "c = """: {
      "Next": "if(c === "1")",
      "Result": "",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = 1c 2": {
      "InputPath": "$.heap4.string",
      "Next": "if(c === "1")",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c = 1c 3": {
      "InputPath": "$.heap9.string",
      "Next": "if(c === "1")",
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "cac": {
      "Next": "a = cac 1",
      "Parameters": {
        "string.$": "States.Format('{}c{}',$.a,$.c)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "for(arr = input.arr;arr[0];arr = arr.slice(1))": {
      "InputPath": "$.input.arr",
      "Next": "1__for(arr = input.arr;arr[0];arr = arr.slice(1))",
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "if(c === "1")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.c",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.c",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.c",
                    },
                    {
                      "StringEquals": "1",
                      "Variable": "$.c",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "1c",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.c",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.c",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.c",
                    },
                    {
                      "StringEquals": "111",
                      "Variable": "$.c",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "return a",
        },
      ],
      "Default": "cac",
      "Type": "Choice",
    },
    "naarr[0]": {
      "Next": "a = naarr[0] 1",
      "Parameters": {
        "string.$": "States.Format('{}n{}',$.a,$.arr[0])",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`for control and assignment 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__for(i in input.arr)": {
      "ItemsPath": "$.heap3",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr)",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap3",
      "Type": "Map",
    },
    "1__for(i in input.arr) 1": {
      "ItemsPath": "$.heap7",
      "Iterator": {
        "StartAt": "Default 1",
        "States": {
          "Default 1": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr) 1",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap7",
      "Type": "Map",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "for(i in input.arr)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = nai 1": {
      "InputPath": "$.heap2.string",
      "Next": "tail__for(i in input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = nai 3": {
      "InputPath": "$.heap6.string",
      "Next": "tail__for(i in input.arr) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "for(i in input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "for(i in input.arr) 1": {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr) 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "for(i of input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "hasNext__for(i in input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "for(i in input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i in input.arr) 1": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap7[0]",
        },
      ],
      "Default": "for(i of input.arr)",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 4",
          "Variable": "$.heap8[0]",
        },
      ],
      "Default": "return "woops"",
      "Type": "Choice",
    },
    "i": {
      "InputPath": "$.heap3[0].index",
      "Next": "if(i === "2")",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i 2": {
      "InputPath": "$.heap7[0].index",
      "Next": "if(i !== "2")",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "i 4": {
      "InputPath": "$.heap8[0]",
      "Next": "if(i === 2)",
      "ResultPath": "$.i__2",
      "Type": "Pass",
    },
    "if(i !== "2")": {
      "Choices": [
        {
          "Next": "tail__for(i in input.arr) 1",
          "Not": {
            "And": [
              {
                "IsPresent": true,
                "Variable": "$.i__1",
              },
              {
                "And": [
                  {
                    "IsNull": false,
                    "Variable": "$.i__1",
                  },
                  {
                    "And": [
                      {
                        "IsString": true,
                        "Variable": "$.i__1",
                      },
                      {
                        "StringEquals": "2",
                        "Variable": "$.i__1",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
      ],
      "Default": "nai 1",
      "Type": "Choice",
    },
    "if(i === "2")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.i",
                    },
                    {
                      "StringEquals": "2",
                      "Variable": "$.i",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "for(i in input.arr) 1",
        },
      ],
      "Default": "nai",
      "Type": "Choice",
    },
    "if(i === 2)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i__2",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i__2",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i__2",
                    },
                    {
                      "NumericEquals": 2,
                      "Variable": "$.i__2",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "return a",
        },
      ],
      "Default": "tail__for(i of input.arr)",
      "Type": "Choice",
    },
    "nai": {
      "Next": "a = nai 1",
      "Parameters": {
        "string.$": "States.Format('{}n{}',$.a,$.i)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "nai 1": {
      "Next": "a = nai 3",
      "Parameters": {
        "string.$": "States.Format('{}n{}',$.a,$.i__1)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "return "woops"": {
      "End": true,
      "Result": "woops",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i in input.arr)": {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__for(i in input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__for(i in input.arr) 1": {
      "InputPath": "$.heap7[1:]",
      "Next": "hasNext__for(i in input.arr) 1",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": {
      "InputPath": "$.heap8[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
  },
}
`;

exports[`for in 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "--aj": {
      "Next": "a = --aj 1",
      "Parameters": {
        "string.$": "States.Format('{}--{}',$.a,$.j)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "1__for(i in input.arr)": {
      "ItemsPath": "$.heap4",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr)",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap4",
      "Type": "Map",
    },
    "1__for(i in input.arr) 1": {
      "ItemsPath": "$.heap15",
      "Iterator": {
        "StartAt": "Default 2",
        "States": {
          "Default 2": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(i in input.arr) 1",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap15",
      "Type": "Map",
    },
    "1__for(j in input.arr)": {
      "ItemsPath": "$.heap11",
      "Iterator": {
        "StartAt": "Default 1",
        "States": {
          "Default 1": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(j in input.arr)",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap11",
      "Type": "Map",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "for(i in input.arr)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = --aj 1": {
      "InputPath": "$.heap14.string",
      "Next": "tail__for(i in input.arr) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aiinput.arr[i] 1": {
      "InputPath": "$.heap3.string",
      "Next": "tail__for(i in input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = |naiinput.arr[i]nijinput.arr[j]j 1": {
      "InputPath": "$.heap10.string",
      "Next": "tail__for(j in input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aiinput.arr[i]": {
      "Next": "a = aiinput.arr[i] 1",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.a,$.heap4[0].index,$.heap4[0].item)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "assignValue__i 2": {
      "InputPath": "$.heap15[0].item",
      "Next": "j = "1"",
      "ResultPath": "$.fnls__0__i__1",
      "Type": "Pass",
    },
    "for(i in input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr)",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "for(i in input.arr) 1": {
      "InputPath": "$.input.arr",
      "Next": "1__for(i in input.arr) 1",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "for(j in input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "1__for(j in input.arr)",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "hasNext__for(i in input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "aiinput.arr[i]",
          "Variable": "$.heap4[0]",
        },
      ],
      "Default": "for(i in input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i in input.arr) 1": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap15[0]",
        },
      ],
      "Default": "return a",
      "Type": "Choice",
    },
    "hasNext__for(j in input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "j",
          "Variable": "$.heap11[0]",
        },
      ],
      "Default": "--aj",
      "Type": "Choice",
    },
    "i 2": {
      "InputPath": "$.heap15[0].index",
      "Next": "assignValue__i 2",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "j": {
      "InputPath": "$.heap11[0].index",
      "Next": "|naiinput.arr[i]nijinput.arr[j]j",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "j = "1"": {
      "Next": "for(j in input.arr)",
      "Result": "1",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i in input.arr)": {
      "InputPath": "$.heap4[1:]",
      "Next": "hasNext__for(i in input.arr)",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "tail__for(i in input.arr) 1": {
      "InputPath": "$.heap15[1:]",
      "Next": "hasNext__for(i in input.arr) 1",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "tail__for(j in input.arr)": {
      "InputPath": "$.heap11[1:]",
      "Next": "hasNext__for(j in input.arr)",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "|naiinput.arr[i]nijinput.arr[j]j": {
      "Next": "a = |naiinput.arr[i]nijinput.arr[j]j 1",
      "Parameters": {
        "string.$": "States.Format('{}|n{}i{}n{}j{}',$.a,$.fnls__0__i__1,$.i__1,$.heap11[0].item,$.j)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
  },
}
`;

exports[`for loops 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "Initialize Functionless Context": {
      "Next": "a = "x"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = "x"": {
      "Next": "for(i of [1, 2, 3])",
      "Result": "x",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 1": {
      "InputPath": "$.heap2.string",
      "Next": "tail__for(i of [1, 2, 3])",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 3": {
      "InputPath": "$.heap6.string",
      "Next": "tail__for(i of input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 5": {
      "InputPath": "$.heap11.string",
      "Next": "tail__for(i of await arrFunc()) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ai": {
      "Next": "a = ai 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap3[0])",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "ai 1": {
      "Next": "a = ai 3",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap7[0])",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "ai 2": {
      "Next": "a = ai 5",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap12[0])",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3])": {
      "Next": "hasNext__for(i of [1, 2, 3])",
      "Result": [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "for(i of await arrFunc())": {
      "InputPath": "$.fnl_context.null",
      "Next": "for(i of await arrFunc()) 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap8",
      "Type": "Task",
    },
    "for(i of await arrFunc()) 1": {
      "InputPath": "$.heap8",
      "Next": "hasNext__for(i of await arrFunc()) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "for(i of input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "hasNext__for(i of [1, 2, 3])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ai",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "for(i of input.arr)",
      "Type": "Choice",
    },
    "hasNext__for(i of await arrFunc()) 1": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ai 2",
          "Variable": "$.heap12[0]",
        },
      ],
      "Default": "return \`madeit\`",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ai 1",
          "Variable": "$.heap7[0]",
        },
      ],
      "Default": "for(i of await arrFunc())",
      "Type": "Choice",
    },
    "return \`madeit\`": {
      "End": true,
      "Result": "madeit",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i of [1, 2, 3])": {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__for(i of [1, 2, 3])",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__for(i of await arrFunc()) 1": {
      "InputPath": "$.heap12[1:]",
      "Next": "hasNext__for(i of await arrFunc()) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": {
      "InputPath": "$.heap7[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
  },
}
`;

exports[`for map conditional 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__b = ["b"].map(function (v))": {
      "Next": "check__1__b = ["b"].map(function (v))",
      "Parameters": {
        "arr": [
          "b",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__c = ["c"].map(function (v))": {
      "Next": "check__1__c = ["c"].map(function (v))",
      "Parameters": {
        "arr": [
          "c",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "1__d = await Promise.all(["d"].map(function (v)))": {
      "Next": "check__1__d = await Promise.all(["d"].map(function (v)))",
      "Parameters": {
        "arr": [
          "d",
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "1__return b.join("")c.join("")d.join("")": {
      "End": true,
      "InputPath": "$.heap34.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return vai": {
      "InputPath": "$.heap5.string",
      "Next": "handleResult__1__b = ["b"].map(function (v))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return vai 1": {
      "InputPath": "$.heap12.string",
      "Next": "handleResult__1__c = ["c"].map(function (v))",
      "ResultPath": "$.heap8.arr[0]",
      "Type": "Pass",
    },
    "1__return vai 2": {
      "InputPath": "$.heap20.string",
      "Next": "handleResult__1__d = await Promise.all(["d"].map(function (v)))",
      "ResultPath": "$.heap15.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = "x"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = "x"": {
      "Next": "b = ["b"].map(function (v))",
      "Result": "x",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "append__c.join("")": {
      "Next": "tail__c.join("")",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.heap27.string,$.heap26[0])",
      },
      "ResultPath": "$.heap27",
      "Type": "Pass",
    },
    "append__d.join("")": {
      "Next": "tail__d.join("")",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.heap31.string,$.heap30[0])",
      },
      "ResultPath": "$.heap31",
      "Type": "Pass",
    },
    "append__return b.join("")c.join("")d.join("")": {
      "Next": "tail__return b.join("")c.join("")d.join("")",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.heap23.string,$.heap22[0])",
      },
      "ResultPath": "$.heap23",
      "Type": "Pass",
    },
    "b = ["b"].map(function (v))": {
      "Next": "1__b = ["b"].map(function (v))",
      "Result": [
        "b",
      ],
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "b.join("")c.join("")d.join("")": {
      "Next": "1__return b.join("")c.join("")d.join("")",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.heap23.string,$.heap27.string,$.heap31.string)",
      },
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "c = ["c"].map(function (v))": {
      "Next": "1__c = ["c"].map(function (v))",
      "Result": [
        "c",
      ],
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "c.join("")": {
      "ItemsPath": "$.heap8",
      "Iterator": {
        "StartAt": "Default 1",
        "States": {
          "Default 1": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1 2",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 1",
            "Type": "Choice",
          },
          "assign__Default 1 1": {
            "End": true,
            "InputPath": "$.heap28.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1 2": {
            "InputPath": "$.item",
            "Next": "assign__Default 1 1",
            "ResultPath": "$.heap28.str",
            "Type": "Pass",
          },
          "format__Default 1": {
            "Next": "assign__Default 1 1",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap28",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__c.join("")",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap26",
      "Type": "Map",
    },
    "check__1__b = ["b"].map(function (v))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "v",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__b = ["b"].map(function (v))",
      "Type": "Choice",
    },
    "check__1__c = ["c"].map(function (v))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "v 1",
          "Variable": "$.heap8.arr[0]",
        },
      ],
      "Default": "end__1__c = ["c"].map(function (v))",
      "Type": "Choice",
    },
    "check__1__d = await Promise.all(["d"].map(function (v)))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "v 2",
          "Variable": "$.heap15.arr[0]",
        },
      ],
      "Default": "end__1__d = await Promise.all(["d"].map(function (v)))",
      "Type": "Choice",
    },
    "d = await Promise.all(["d"].map(function (v)))": {
      "Next": "1__d = await Promise.all(["d"].map(function (v)))",
      "Result": [
        "d",
      ],
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "d.join("")": {
      "ItemsPath": "$.heap15",
      "Iterator": {
        "StartAt": "Default 2",
        "States": {
          "Default 2": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 2 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 2",
            "Type": "Choice",
          },
          "assign__Default 2": {
            "End": true,
            "InputPath": "$.heap32.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 2 1": {
            "InputPath": "$.item",
            "Next": "assign__Default 2",
            "ResultPath": "$.heap32.str",
            "Type": "Pass",
          },
          "format__Default 2": {
            "Next": "assign__Default 2",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap32",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__d.join("")",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap30",
      "Type": "Map",
    },
    "end__1__b = ["b"].map(function (v))": {
      "Next": "set__end__1__b = ["b"].map(function (v))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__1__c = ["c"].map(function (v))": {
      "Next": "set__end__1__c = ["c"].map(function (v))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap8.arrStr))",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "end__1__d = await Promise.all(["d"].map(function (v)))": {
      "Next": "set__end__1__d = await Promise.all(["d"].map(function (v)))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap15.arrStr))",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "for(i of [1, 2, 3])": {
      "Next": "hasNext__for(i of [1, 2, 3])",
      "Result": [
        1,
        2,
        3,
      ],
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "for(i of await arrFunc())": {
      "InputPath": "$.fnl_context.null",
      "Next": "for(i of await arrFunc()) 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap16",
      "Type": "Task",
    },
    "for(i of await arrFunc()) 1": {
      "InputPath": "$.heap16",
      "Next": "hasNext__for(i of await arrFunc()) 1",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "for(i of input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "handleResult__1__b = ["b"].map(function (v))": {
      "Next": "check__1__b = ["b"].map(function (v))",
      "Parameters": {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap1.arrStr,States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__1__c = ["c"].map(function (v))": {
      "Next": "check__1__c = ["c"].map(function (v))",
      "Parameters": {
        "arr.$": "$.heap8.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap8.arrStr,States.JsonToString($.heap8.arr[0]))",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "handleResult__1__d = await Promise.all(["d"].map(function (v)))": {
      "Next": "check__1__d = await Promise.all(["d"].map(function (v)))",
      "Parameters": {
        "arr.$": "$.heap15.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap15.arrStr,States.JsonToString($.heap15.arr[0]))",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "hasNext__c.join("")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap26[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap27",
              },
            },
          ],
          "Next": "initValue__c.join("")",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap26[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap27",
            },
          ],
          "Next": "returnEmpty__c.join("")",
        },
        {
          "IsPresent": true,
          "Next": "append__c.join("")",
          "Variable": "$.heap26[0]",
        },
      ],
      "Default": "d.join("")",
      "Type": "Choice",
    },
    "hasNext__d.join("")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap30[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap31",
              },
            },
          ],
          "Next": "initValue__d.join("")",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap30[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap31",
            },
          ],
          "Next": "returnEmpty__d.join("")",
        },
        {
          "IsPresent": true,
          "Next": "append__d.join("")",
          "Variable": "$.heap30[0]",
        },
      ],
      "Default": "b.join("")c.join("")d.join("")",
      "Type": "Choice",
    },
    "hasNext__for(i of [1, 2, 3])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i",
          "Variable": "$.heap6[0]",
        },
      ],
      "Default": "return "boo"",
      "Type": "Choice",
    },
    "hasNext__for(i of await arrFunc()) 1": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 4",
          "Variable": "$.heap21[0]",
        },
      ],
      "Default": "return "boo" 2",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap13[0]",
        },
      ],
      "Default": "return "boo" 1",
      "Type": "Choice",
    },
    "hasNext__return b.join("")c.join("")d.join("")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap22[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap23",
              },
            },
          ],
          "Next": "initValue__return b.join("")c.join("")d.join("")",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap22[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap23",
            },
          ],
          "Next": "returnEmpty__return b.join("")c.join("")d.join("")",
        },
        {
          "IsPresent": true,
          "Next": "append__return b.join("")c.join("")d.join("")",
          "Variable": "$.heap22[0]",
        },
      ],
      "Default": "c.join("")",
      "Type": "Choice",
    },
    "i": {
      "InputPath": "$.heap6[0]",
      "Next": "if(i === 3)",
      "ResultPath": "$.i",
      "Type": "Pass",
    },
    "i 2": {
      "InputPath": "$.heap13[0]",
      "Next": "if(i === 3) 1",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "i 4": {
      "InputPath": "$.heap21[0]",
      "Next": "if(i === 3) 2",
      "ResultPath": "$.i__2",
      "Type": "Pass",
    },
    "if(i === 3)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i",
                    },
                    {
                      "NumericEquals": 3,
                      "Variable": "$.i",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "vai",
        },
      ],
      "Default": "tail__for(i of [1, 2, 3])",
      "Type": "Choice",
    },
    "if(i === 3) 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i__1",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i__1",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i__1",
                    },
                    {
                      "NumericEquals": 3,
                      "Variable": "$.i__1",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "vai 1",
        },
      ],
      "Default": "tail__for(i of input.arr)",
      "Type": "Choice",
    },
    "if(i === 3) 2": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.i__2",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.i__2",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.i__2",
                    },
                    {
                      "NumericEquals": 3,
                      "Variable": "$.i__2",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "vai 2",
        },
      ],
      "Default": "tail__for(i of await arrFunc()) 1",
      "Type": "Choice",
    },
    "initValue__c.join("")": {
      "InputPath": "$.heap26[0]",
      "Next": "tail__c.join("")",
      "ResultPath": "$.heap27.string",
      "Type": "Pass",
    },
    "initValue__d.join("")": {
      "InputPath": "$.heap30[0]",
      "Next": "tail__d.join("")",
      "ResultPath": "$.heap31.string",
      "Type": "Pass",
    },
    "initValue__return b.join("")c.join("")d.join("")": {
      "InputPath": "$.heap22[0]",
      "Next": "tail__return b.join("")c.join("")d.join("")",
      "ResultPath": "$.heap23.string",
      "Type": "Pass",
    },
    "return "boo"": {
      "Next": "handleResult__1__b = ["b"].map(function (v))",
      "Result": "boo",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "return "boo" 1": {
      "Next": "handleResult__1__c = ["c"].map(function (v))",
      "Result": "boo",
      "ResultPath": "$.heap8.arr[0]",
      "Type": "Pass",
    },
    "return "boo" 2": {
      "Next": "handleResult__1__d = await Promise.all(["d"].map(function (v)))",
      "Result": "boo",
      "ResultPath": "$.heap15.arr[0]",
      "Type": "Pass",
    },
    "return b.join("")c.join("")d.join("")": {
      "ItemsPath": "$.heap1",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default",
            "Type": "Choice",
          },
          "assign__Default": {
            "End": true,
            "InputPath": "$.heap24.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1": {
            "InputPath": "$.item",
            "Next": "assign__Default",
            "ResultPath": "$.heap24.str",
            "Type": "Pass",
          },
          "format__Default": {
            "Next": "assign__Default",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap24",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__return b.join("")c.join("")d.join("")",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap22",
      "Type": "Map",
    },
    "returnEmpty__c.join("")": {
      "Next": "d.join("")",
      "Result": "",
      "ResultPath": "$.heap27.string",
      "Type": "Pass",
    },
    "returnEmpty__d.join("")": {
      "Next": "b.join("")c.join("")d.join("")",
      "Result": "",
      "ResultPath": "$.heap31.string",
      "Type": "Pass",
    },
    "returnEmpty__return b.join("")c.join("")d.join("")": {
      "Next": "c.join("")",
      "Result": "",
      "ResultPath": "$.heap23.string",
      "Type": "Pass",
    },
    "set__end__1__b = ["b"].map(function (v))": {
      "InputPath": "$.heap1.result[1:]",
      "Next": "c = ["c"].map(function (v))",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__1__c = ["c"].map(function (v))": {
      "InputPath": "$.heap8.result[1:]",
      "Next": "d = await Promise.all(["d"].map(function (v)))",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "set__end__1__d = await Promise.all(["d"].map(function (v)))": {
      "InputPath": "$.heap15.result[1:]",
      "Next": "return b.join("")c.join("")d.join("")",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "tail__c.join("")": {
      "InputPath": "$.heap26[1:]",
      "Next": "hasNext__c.join("")",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "tail__d.join("")": {
      "InputPath": "$.heap30[1:]",
      "Next": "hasNext__d.join("")",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "tail__for(i of [1, 2, 3])": {
      "InputPath": "$.heap6[1:]",
      "Next": "hasNext__for(i of [1, 2, 3])",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "tail__for(i of await arrFunc()) 1": {
      "InputPath": "$.heap21[1:]",
      "Next": "hasNext__for(i of await arrFunc()) 1",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": {
      "InputPath": "$.heap13[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "tail__return b.join("")c.join("")d.join("")": {
      "InputPath": "$.heap22[1:]",
      "Next": "hasNext__return b.join("")c.join("")d.join("")",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "v": {
      "InputPath": "$.heap1.arr[0]",
      "Next": "for(i of [1, 2, 3])",
      "ResultPath": "$.v",
      "Type": "Pass",
    },
    "v 1": {
      "InputPath": "$.heap8.arr[0]",
      "Next": "for(i of input.arr)",
      "ResultPath": "$.v__1",
      "Type": "Pass",
    },
    "v 2": {
      "InputPath": "$.heap15.arr[0]",
      "Next": "for(i of await arrFunc())",
      "ResultPath": "$.v__2",
      "Type": "Pass",
    },
    "vai": {
      "Next": "1__return vai",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.v,$.a,$.i)",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "vai 1": {
      "Next": "1__return vai 1",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.v__1,$.a,$.i__1)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "vai 2": {
      "Next": "1__return vai 2",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.v__2,$.a,$.i__2)",
      },
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
  },
}
`;

exports[`for of 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "--aj": {
      "Next": "a = --aj 1",
      "Parameters": {
        "string.$": "States.Format('{}--{}',$.a,$.j)",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "for(i of input.arr)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = --aj 1": {
      "InputPath": "$.heap11.string",
      "Next": "tail__for(i of input.arr) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ai 1": {
      "InputPath": "$.heap2.string",
      "Next": "tail__for(i of input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = |iajij 1": {
      "InputPath": "$.heap7.string",
      "Next": "tail__for(j of input.arr)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ai": {
      "Next": "a = ai 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap3[0])",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "for(i of input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "for(i of input.arr) 1": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(i of input.arr) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "for(j of input.arr)": {
      "InputPath": "$.input.arr",
      "Next": "hasNext__for(j of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "hasNext__for(i of input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ai",
          "Variable": "$.heap3[0]",
        },
      ],
      "Default": "for(i of input.arr) 1",
      "Type": "Choice",
    },
    "hasNext__for(i of input.arr) 1": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "i 2",
          "Variable": "$.heap12[0]",
        },
      ],
      "Default": "return a",
      "Type": "Choice",
    },
    "hasNext__for(j of input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "j",
          "Variable": "$.heap8[0]",
        },
      ],
      "Default": "--aj",
      "Type": "Choice",
    },
    "i 2": {
      "InputPath": "$.heap12[0]",
      "Next": "j = 1",
      "ResultPath": "$.i__1",
      "Type": "Pass",
    },
    "j": {
      "InputPath": "$.heap8[0]",
      "Next": "|iajij",
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "j = 1": {
      "Next": "for(j of input.arr)",
      "Result": 1,
      "ResultPath": "$.j",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "tail__for(i of input.arr)": {
      "InputPath": "$.heap3[1:]",
      "Next": "hasNext__for(i of input.arr)",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "tail__for(i of input.arr) 1": {
      "InputPath": "$.heap12[1:]",
      "Next": "hasNext__for(i of input.arr) 1",
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "tail__for(j of input.arr)": {
      "InputPath": "$.heap8[1:]",
      "Next": "hasNext__for(j of input.arr)",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "|iajij": {
      "Next": "a = |iajij 1",
      "Parameters": {
        "string.$": "States.Format('{}|i{}j{}',$.a,$.i__1,$.j)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
  },
}
`;

exports[`foreach 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "input.arr.forEach(function (x))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aax 1": {
      "InputPath": "$.heap3.string",
      "Next": "return a 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aax": {
      "Next": "a = aax 1",
      "Parameters": {
        "string.$": "States.Format('{}a{}',$.a,$.heap0.arr[0])",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "check__input.arr.forEach(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "aax",
          "Variable": "$.heap0.arr[0]",
        },
      ],
      "Default": "end__input.arr.forEach(function (x))",
      "Type": "Choice",
    },
    "end__input.arr.forEach(function (x))": {
      "Next": "return a",
      "Result": "$.fnl_context.null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "input.arr.forEach(function (x))": {
      "Next": "check__input.arr.forEach(function (x))",
      "Parameters": {
        "arr.$": "$.input.arr",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return a 1": {
      "InputPath": "$.a",
      "Next": "tail__input.arr.forEach(function (x))",
      "ResultPath": "$.heap0.arr[0]",
      "Type": "Pass",
    },
    "tail__input.arr.forEach(function (x))": {
      "InputPath": "$.heap0.arr[1:]",
      "Next": "check__input.arr.forEach(function (x))",
      "ResultPath": "$.heap0.arr",
      "Type": "Pass",
    },
  },
}
`;

exports[`intrinsics 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.base64Encode("test")": {
      "Next": "1__$SFN.base64Encode("test")",
      "Parameters": {
        "out.$": "States.Base64Encode('test')",
      },
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "$SFN.base64Encode(input.baseTest)": {
      "Next": "1__$SFN.base64Encode(input.baseTest)",
      "Parameters": {
        "out.$": "States.Base64Encode($.input.baseTest)",
      },
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "$SFN.range(input.range.start, input.range.end, input.range.step).map(functi": {
      "Next": "1__$SFN.range(input.range.start, input.range.end, input.range.step).map(fun 1",
      "Parameters": {
        "out.$": "States.ArrayRange($.input.range.start,$.input.range.end,$.input.range.step)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "$SFN.unique(input.arr)": {
      "Next": "1__$SFN.unique(input.arr)",
      "Parameters": {
        "out.$": "States.ArrayUnique($.input.arr)",
      },
      "ResultPath": "$.heap55",
      "Type": "Pass",
    },
    "10__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "$SFN.base64Encode("test")",
      "Parameters": {
        "out.$": "States.ArrayUnique($.input.arr)",
      },
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "18__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "[1, 2, 3, 4].includes(2)",
      "Parameters": {
        "out.$": "States.Hash($.input.hashTest,$.input.hashAlgo)",
      },
      "ResultPath": "$.heap31",
      "Type": "Pass",
    },
    "1__$SFN.base64Encode("test")": {
      "Next": "$SFN.base64Encode(input.baseTest)",
      "Parameters": {
        "out.$": "States.Base64Decode($.heap22.out)",
      },
      "ResultPath": "$.heap23",
      "Type": "Pass",
    },
    "1__$SFN.base64Encode(input.baseTest)": {
      "Next": "1__$SFN.hash("hide me", "SHA-1")",
      "Parameters": {
        "out.$": "States.Base64Decode($.heap25.out)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "1__$SFN.hash("hide me", "SHA-1")": {
      "Next": "18__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.Hash('hide me','SHA-1')",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "1__$SFN.range(input.range.start, input.range.end, input.range.step).map(fun": {
      "ItemsPath": "$.heap10",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default",
            "Type": "Choice",
          },
          "assign__Default": {
            "End": true,
            "InputPath": "$.heap15.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1": {
            "InputPath": "$.item",
            "Next": "assign__Default",
            "ResultPath": "$.heap15.str",
            "Type": "Pass",
          },
          "format__Default": {
            "Next": "assign__Default",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap15",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__1__$SFN.range(input.range.start, input.range.end, input.range.step",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap13",
      "Type": "Map",
    },
    "1__$SFN.range(input.range.start, input.range.end, input.range.step).map(fun 1": {
      "Next": "check__1__$SFN.range(input.range.start, input.range.end, input.range.step).",
      "Parameters": {
        "arr.$": "$.heap9.out",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "1__$SFN.unique(input.arr)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__1__$SFN.unique(input.arr)",
          "Variable": "$.heap55.out[0]",
        },
        {
          "IsPresent": true,
          "Next": "object__1__$SFN.unique(input.arr)",
          "Variable": "$.heap55.out['length']",
        },
      ],
      "Default": "stringify__1__$SFN.unique(input.arr)",
      "Type": "Choice",
    },
    "1__["a", 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, "a", "b"]": {
      "Next": "10__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.ArrayUnique($.heap17)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "1__[1, 2, 3, 4].includes(2)": {
      "Next": "22__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.ArrayContains($.heap33,2)",
      },
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "1__return nn": {
      "InputPath": "$.heap12.string",
      "Next": "handleResult__1__$SFN.range(input.range.start, input.range.end, input.range",
      "ResultPath": "$.heap10.arr[0]",
      "Type": "Pass",
    },
    "1__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ": {
      "End": true,
      "InputPath": "$.heap70.out",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:  2": {
      "Next": "2__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ",
      "Parameters": {
        "out.$": "States.ArrayPartition($.heap2,4)",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "22__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "24__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.ArrayContains($.input.arr,$.input.part)",
      },
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "24__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "input.part",
      "Parameters": {
        "out.$": "States.ArrayContains($.input.arr,'a')",
      },
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "28__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "30__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.ArrayGetItem($.input.arr,0)",
      },
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "2__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ": {
      "Next": "4__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ",
      "Parameters": {
        "out.$": "States.ArrayPartition($.input.arr,$.input.part)",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "30__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "input.part in input.arr",
      "Parameters": {
        "out.$": "States.ArrayGetItem($.input.arr,$.input.part)",
      },
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "48__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "InputPath": "$.input.arr[1:3]",
      "Next": "input.arr.slice(input.part, input.end)",
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "4__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ": {
      "Next": "$SFN.range(input.range.start, input.range.end, input.range.step).map(functi",
      "Parameters": {
        "out.$": "States.ArrayRange(4,30,5)",
      },
      "ResultPath": "$.heap7",
      "Type": "Pass",
    },
    "50__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "InputPath": "$.heap64.arr[1:]",
      "Next": "input.arr.slice(input.end)",
      "ResultPath": "$.heap65",
      "Type": "Pass",
    },
    "52__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "53__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "base64.$": "$.heap23.out",
        "base64Ref.$": "$.heap26.out",
        "get": 1,
        "getFunc.$": "$.heap42.out",
        "getFuncRef.$": "$.heap44.out",
        "getRef.$": "$.heap40.out",
        "hash.$": "$.heap29.out",
        "hashRef.$": "$.heap31.out",
        "includes.$": "$.heap34.out",
        "includesRes.$": "$.heap36.out",
        "notIncludesRes.$": "$.heap38.out",
        "objAccess.$": "$.objAccess",
        "partition.$": "$.heap3.out",
        "partitionRef.$": "$.heap5.out",
        "range.$": "$.heap7.out",
        "rangeRef.$": "$.heap14.string",
        "unique.$": "$.heap18.out",
        "uniqueRef.$": "$.heap20.out",
      },
      "ResultPath": "$.heap67",
      "Type": "Pass",
    },
    "53__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "54__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "getLength": 4,
        "inRef.$": "$.heap48.out",
        "inRefFalse.$": "$.heap50.out",
        "lengthObj.$": "$.heap58.val",
        "lengthRef.$": "$.heap53.val",
        "objIn.$": "$.objIn",
        "uniqueLength.$": "$.heap56.val",
      },
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "54__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "55__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "emptyLength.$": "$.heap61.val",
        "slice.$": "$.heap63",
        "sliceRef.$": "$.heap65",
        "sliceRefStart.$": "$.heap66.arr[1:]",
      },
      "ResultPath": "$.heap69",
      "Type": "Pass",
    },
    "55__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:": {
      "Next": "1__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: ",
      "Parameters": {
        "out.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap67,$.input.range,false),$.heap68,false),$.input.lengthObj,false),$.heap69,false)",
      },
      "ResultPath": "$.heap70",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "objAccess = input.range[input.key]",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "["a", 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, "a", "b"]": {
      "Next": "1__["a", 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, "a", "b"]",
      "Result": [
        "a",
        5,
        4,
        3,
        2,
        1,
        1,
        2,
        3,
        4,
        5,
        "a",
        "b",
      ],
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "[1, 2, 3, 4].includes(2)": {
      "Next": "1__[1, 2, 3, 4].includes(2)",
      "Result": [
        1,
        2,
        3,
        4,
      ],
      "ResultPath": "$.heap33",
      "Type": "Pass",
    },
    "append__1__$SFN.range(input.range.start, input.range.end, input.range.step)": {
      "Next": "tail__1__$SFN.range(input.range.start, input.range.end, input.range.step).m 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.heap14.string,$.heap13[0])",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "array__1__$SFN.unique(input.arr)": {
      "Next": "input.lengthObj",
      "Parameters": {
        "val.$": "States.ArrayLength($.heap55.out)",
      },
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "array__input.arr": {
      "Next": "$SFN.unique(input.arr)",
      "Parameters": {
        "val.$": "States.ArrayLength($.input.arr)",
      },
      "ResultPath": "$.heap53",
      "Type": "Pass",
    },
    "array__input.emptyArr": {
      "Next": "48__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "val.$": "States.ArrayLength($.input.emptyArr)",
      },
      "ResultPath": "$.heap61",
      "Type": "Pass",
    },
    "array__input.large in input.arr": {
      "Next": "check__array__input.large in input.arr",
      "Parameters": {
        "out.$": "States.ArrayLength($.input.arr)",
      },
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "array__input.lengthObj": {
      "Next": "input.emptyArr",
      "Parameters": {
        "val.$": "States.ArrayLength($.input.lengthObj)",
      },
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "array__input.part": {
      "Next": "28__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "out.$": "States.ArrayGetItem($.input.arr,$.input.part)",
      },
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "array__input.part in input.arr": {
      "Next": "check__array__input.part in input.arr",
      "Parameters": {
        "out.$": "States.ArrayLength($.input.arr)",
      },
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "array__objAccess = input.range[input.key]": {
      "Next": "objAccess = input.range[input.key] 1",
      "Parameters": {
        "out.$": "States.ArrayGetItem($.input.range,$.input.key)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "array__try": {
      "Next": "check__array__try",
      "Parameters": {
        "out.$": "States.ArrayLength($.input.range)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "assignAndTail__input.arr.slice(input.end)": {
      "Next": "checkRange__input.arr.slice(input.end)",
      "Parameters": {
        "indices.$": "$.heap66.indices[1:]",
        "str.$": "States.Format('{},{}',$.heap66.str,States.JsonToString(States.ArrayGetItem($.input.arr,$.heap66.indices[0])))",
      },
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "assignAndTail__input.arr.slice(input.part, input.end)": {
      "Next": "checkRange__input.arr.slice(input.part, input.end)",
      "Parameters": {
        "indices.$": "$.heap64.indices[1:]",
        "str.$": "States.Format('{},{}',$.heap64.str,States.JsonToString(States.ArrayGetItem($.input.arr,$.heap64.indices[0])))",
      },
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "checkRange__input.arr.slice(input.end)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "assignAndTail__input.arr.slice(input.end)",
          "Variable": "$.heap66.indices[0]",
        },
      ],
      "Default": "final__input.arr.slice(input.end)",
      "Type": "Choice",
    },
    "checkRange__input.arr.slice(input.part, input.end)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "assignAndTail__input.arr.slice(input.part, input.end)",
          "Variable": "$.heap64.indices[0]",
        },
      ],
      "Default": "final__input.arr.slice(input.part, input.end)",
      "Type": "Choice",
    },
    "checkString__1__$SFN.unique(input.arr)": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap56.val.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap56.val.str",
            },
          ],
          "Next": "array__1__$SFN.unique(input.arr)",
        },
      ],
      "Default": "object__1__$SFN.unique(input.arr)",
      "Type": "Choice",
    },
    "checkString__input.arr": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap53.val.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap53.val.str",
            },
          ],
          "Next": "array__input.arr",
        },
      ],
      "Default": "object__input.arr",
      "Type": "Choice",
    },
    "checkString__input.emptyArr": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap61.val.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap61.val.str",
            },
          ],
          "Next": "array__input.emptyArr",
        },
      ],
      "Default": "object__input.emptyArr",
      "Type": "Choice",
    },
    "checkString__input.large in input.arr": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap50.out.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap50.out.str",
            },
          ],
          "Next": "array__input.large in input.arr",
        },
      ],
      "Default": "object__input.large in input.arr",
      "Type": "Choice",
    },
    "checkString__input.lengthObj": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap58.val.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap58.val.str",
            },
          ],
          "Next": "array__input.lengthObj",
        },
      ],
      "Default": "object__input.lengthObj",
      "Type": "Choice",
    },
    "checkString__input.part": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap40.out.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap40.out.str",
            },
          ],
          "Next": "array__input.part",
        },
      ],
      "Default": "object__input.part",
      "Type": "Choice",
    },
    "checkString__input.part in input.arr": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap48.out.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap48.out.str",
            },
          ],
          "Next": "array__input.part in input.arr",
        },
      ],
      "Default": "object__input.part in input.arr",
      "Type": "Choice",
    },
    "checkString__objAccess = input.range[input.key]": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap0.out.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap0.out.str",
            },
          ],
          "Next": "array__objAccess = input.range[input.key]",
        },
      ],
      "Default": "object__objAccess = input.range[input.key]",
      "Type": "Choice",
    },
    "checkString__try": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.heap1.out.str",
            },
            {
              "StringEquals": "[]",
              "Variable": "$.heap1.out.str",
            },
          ],
          "Next": "array__try",
        },
      ],
      "Default": "object__try",
      "Type": "Choice",
    },
    "check__1__$SFN.range(input.range.start, input.range.end, input.range.step).": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "nn",
          "Variable": "$.heap10.arr[0]",
        },
      ],
      "Default": "end__1__$SFN.range(input.range.start, input.range.end, input.range.step).ma",
      "Type": "Choice",
    },
    "check__array__input.large in input.arr": {
      "Choices": [
        {
          "And": [
            {
              "NumericLessThanPath": "$.heap50.out",
              "Variable": "$.input.large",
            },
            {
              "NumericGreaterThanEquals": 0,
              "Variable": "$.input.large",
            },
          ],
          "Next": "true__check__array__input.large in input.arr",
        },
      ],
      "Default": "false__check__array__input.large in input.arr",
      "Type": "Choice",
    },
    "check__array__input.part in input.arr": {
      "Choices": [
        {
          "And": [
            {
              "NumericLessThanPath": "$.heap48.out",
              "Variable": "$.input.part",
            },
            {
              "NumericGreaterThanEquals": 0,
              "Variable": "$.input.part",
            },
          ],
          "Next": "true__check__array__input.part in input.arr",
        },
      ],
      "Default": "false__check__array__input.part in input.arr",
      "Type": "Choice",
    },
    "check__array__try": {
      "Choices": [
        {
          "And": [
            {
              "NumericLessThanPath": "$.heap1.out",
              "Variable": "$.input.key",
            },
            {
              "NumericGreaterThanEquals": 0,
              "Variable": "$.input.key",
            },
          ],
          "Next": "true__check__array__try",
        },
      ],
      "Default": "false__check__array__try",
      "Type": "Choice",
    },
    "end__1__$SFN.range(input.range.start, input.range.end, input.range.step).ma": {
      "Next": "set__end__1__$SFN.range(input.range.start, input.range.end, input.range.ste",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap10.arrStr))",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "false__check__array__input.large in input.arr": {
      "Next": "input.arr",
      "Result": false,
      "ResultPath": "$.heap50.out",
      "Type": "Pass",
    },
    "false__check__array__input.part in input.arr": {
      "Next": "input.large in input.arr",
      "Result": false,
      "ResultPath": "$.heap48.out",
      "Type": "Pass",
    },
    "false__check__array__try": {
      "Next": "objIn = input.key in input.range",
      "Result": false,
      "ResultPath": "$.heap1.out",
      "Type": "Pass",
    },
    "final__input.arr.slice(input.end)": {
      "Next": "52__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "arr.$": "States.StringToJson(States.Format('{}]',$.heap66.str))",
      },
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "final__input.arr.slice(input.part, input.end)": {
      "Next": "50__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "Parameters": {
        "arr.$": "States.StringToJson(States.Format('{}]',$.heap64.str))",
      },
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "handleResult__1__$SFN.range(input.range.start, input.range.end, input.range": {
      "Next": "check__1__$SFN.range(input.range.start, input.range.end, input.range.step).",
      "Parameters": {
        "arr.$": "$.heap10.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap10.arrStr,States.JsonToString($.heap10.arr[0]))",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "hasNext__1__$SFN.range(input.range.start, input.range.end, input.range.step": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap13[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap14",
              },
            },
          ],
          "Next": "initValue__1__$SFN.range(input.range.start, input.range.end, input.range.st",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap13[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap14",
            },
          ],
          "Next": "returnEmpty__1__$SFN.range(input.range.start, input.range.end, input.range.",
        },
        {
          "IsPresent": true,
          "Next": "append__1__$SFN.range(input.range.start, input.range.end, input.range.step)",
          "Variable": "$.heap13[0]",
        },
      ],
      "Default": "["a", 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, "a", "b"]",
      "Type": "Choice",
    },
    "initValue__1__$SFN.range(input.range.start, input.range.end, input.range.st": {
      "InputPath": "$.heap13[0]",
      "Next": "tail__1__$SFN.range(input.range.start, input.range.end, input.range.step).m 1",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "input.arr": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.arr",
          "Variable": "$.input.arr[0]",
        },
        {
          "IsPresent": true,
          "Next": "object__input.arr",
          "Variable": "$.input.arr['length']",
        },
      ],
      "Default": "stringify__input.arr",
      "Type": "Choice",
    },
    "input.arr.slice(input.end)": {
      "Next": "checkRange__input.arr.slice(input.end)",
      "Parameters": {
        "indices.$": "States.ArrayRange($.input.end,States.MathAdd(States.ArrayLength($.input.arr),-1),1)",
        "str": "[null",
      },
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "input.arr.slice(input.part, input.end)": {
      "Next": "checkRange__input.arr.slice(input.part, input.end)",
      "Parameters": {
        "indices.$": "States.ArrayRange($.input.part,States.MathAdd($.input.end,-1),1)",
        "str": "[null",
      },
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "input.emptyArr": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.emptyArr",
          "Variable": "$.input.emptyArr[0]",
        },
        {
          "IsPresent": true,
          "Next": "object__input.emptyArr",
          "Variable": "$.input.emptyArr['length']",
        },
      ],
      "Default": "stringify__input.emptyArr",
      "Type": "Choice",
    },
    "input.large in input.arr": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.large in input.arr",
          "Variable": "$.input.arr[0]",
        },
      ],
      "Default": "stringify__input.large in input.arr",
      "Type": "Choice",
    },
    "input.lengthObj": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.lengthObj",
          "Variable": "$.input.lengthObj[0]",
        },
        {
          "IsPresent": true,
          "Next": "object__input.lengthObj",
          "Variable": "$.input.lengthObj['length']",
        },
      ],
      "Default": "stringify__input.lengthObj",
      "Type": "Choice",
    },
    "input.part": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.part",
          "Variable": "$.input.arr[0]",
        },
      ],
      "Default": "stringify__input.part",
      "Type": "Choice",
    },
    "input.part in input.arr": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__input.part in input.arr",
          "Variable": "$.input.arr[0]",
        },
      ],
      "Default": "stringify__input.part in input.arr",
      "Type": "Choice",
    },
    "nn": {
      "Next": "1__return nn",
      "Parameters": {
        "string.$": "States.Format('n{}',$.heap10.arr[0])",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "objAccess = err.cause": {
      "InputPath": "$.fnl_tmp_0.cause",
      "Next": "try",
      "ResultPath": "$.objAccess",
      "Type": "Pass",
    },
    "objAccess = input.range[input.key]": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__objAccess = input.range[input.key]",
          "Variable": "$.input.range[0]",
        },
      ],
      "Default": "stringify__objAccess = input.range[input.key]",
      "Type": "Choice",
    },
    "objAccess = input.range[input.key] 1": {
      "InputPath": "$.heap0.out",
      "Next": "try",
      "ResultPath": "$.objAccess",
      "Type": "Pass",
    },
    "objIn = err.cause": {
      "InputPath": "$.fnl_tmp_1.cause",
      "Next": "return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: $SF",
      "ResultPath": "$.objIn",
      "Type": "Pass",
    },
    "objIn = input.key in input.range": {
      "InputPath": "$.heap1.out",
      "Next": "return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: $SF",
      "ResultPath": "$.objIn",
      "Type": "Pass",
    },
    "object__1__$SFN.unique(input.arr)": {
      "InputPath": "$.heap55.out.length",
      "Next": "input.lengthObj",
      "ResultPath": "$.heap56.val",
      "Type": "Pass",
    },
    "object__input.arr": {
      "InputPath": "$.input.arr.length",
      "Next": "$SFN.unique(input.arr)",
      "ResultPath": "$.heap53.val",
      "Type": "Pass",
    },
    "object__input.emptyArr": {
      "InputPath": "$.input.emptyArr.length",
      "Next": "48__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:",
      "ResultPath": "$.heap61.val",
      "Type": "Pass",
    },
    "object__input.large in input.arr": {
      "Cause": "Reference element access is not valid for objects.",
      "Error": "Functionless.InvalidAccess",
      "Type": "Fail",
    },
    "object__input.lengthObj": {
      "InputPath": "$.input.lengthObj.length",
      "Next": "input.emptyArr",
      "ResultPath": "$.heap58.val",
      "Type": "Pass",
    },
    "object__input.part": {
      "Cause": "Reference element access is not valid for objects.",
      "Error": "Functionless.InvalidAccess",
      "Type": "Fail",
    },
    "object__input.part in input.arr": {
      "Cause": "Reference element access is not valid for objects.",
      "Error": "Functionless.InvalidAccess",
      "Type": "Fail",
    },
    "object__objAccess = input.range[input.key]": {
      "Next": "objAccess = err.cause",
      "Parameters": {
        "cause": "Reference element access is not valid for objects.",
        "error": "Functionless.InvalidAccess",
      },
      "ResultPath": "$.fnl_tmp_0",
      "Type": "Pass",
    },
    "object__try": {
      "Next": "objIn = err.cause",
      "Parameters": {
        "cause": "Reference element access is not valid for objects.",
        "error": "Functionless.InvalidAccess",
      },
      "ResultPath": "$.fnl_tmp_1",
      "Type": "Pass",
    },
    "return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef: $SF": {
      "Next": "1__return {partition: $SFN.partition([1, 2, 3, 4, 5, 6], 4), partitionRef:  2",
      "Result": [
        1,
        2,
        3,
        4,
        5,
        6,
      ],
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "returnEmpty__1__$SFN.range(input.range.start, input.range.end, input.range.": {
      "Next": "["a", 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, "a", "b"]",
      "Result": "",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "set__end__1__$SFN.range(input.range.start, input.range.end, input.range.ste": {
      "InputPath": "$.heap10.result[1:]",
      "Next": "1__$SFN.range(input.range.start, input.range.end, input.range.step).map(fun",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "stringify__1__$SFN.unique(input.arr)": {
      "Next": "checkString__1__$SFN.unique(input.arr)",
      "Parameters": {
        "str.$": "States.JsonToString($.heap55.out)",
      },
      "ResultPath": "$.heap56.val",
      "Type": "Pass",
    },
    "stringify__input.arr": {
      "Next": "checkString__input.arr",
      "Parameters": {
        "str.$": "States.JsonToString($.input.arr)",
      },
      "ResultPath": "$.heap53.val",
      "Type": "Pass",
    },
    "stringify__input.emptyArr": {
      "Next": "checkString__input.emptyArr",
      "Parameters": {
        "str.$": "States.JsonToString($.input.emptyArr)",
      },
      "ResultPath": "$.heap61.val",
      "Type": "Pass",
    },
    "stringify__input.large in input.arr": {
      "Next": "checkString__input.large in input.arr",
      "Parameters": {
        "str.$": "States.JsonToString($.input.arr)",
      },
      "ResultPath": "$.heap50.out",
      "Type": "Pass",
    },
    "stringify__input.lengthObj": {
      "Next": "checkString__input.lengthObj",
      "Parameters": {
        "str.$": "States.JsonToString($.input.lengthObj)",
      },
      "ResultPath": "$.heap58.val",
      "Type": "Pass",
    },
    "stringify__input.part": {
      "Next": "checkString__input.part",
      "Parameters": {
        "str.$": "States.JsonToString($.input.arr)",
      },
      "ResultPath": "$.heap40.out",
      "Type": "Pass",
    },
    "stringify__input.part in input.arr": {
      "Next": "checkString__input.part in input.arr",
      "Parameters": {
        "str.$": "States.JsonToString($.input.arr)",
      },
      "ResultPath": "$.heap48.out",
      "Type": "Pass",
    },
    "stringify__objAccess = input.range[input.key]": {
      "Next": "checkString__objAccess = input.range[input.key]",
      "Parameters": {
        "str.$": "States.JsonToString($.input.range)",
      },
      "ResultPath": "$.heap0.out",
      "Type": "Pass",
    },
    "stringify__try": {
      "Next": "checkString__try",
      "Parameters": {
        "str.$": "States.JsonToString($.input.range)",
      },
      "ResultPath": "$.heap1.out",
      "Type": "Pass",
    },
    "tail__1__$SFN.range(input.range.start, input.range.end, input.range.step).m 1": {
      "InputPath": "$.heap13[1:]",
      "Next": "hasNext__1__$SFN.range(input.range.start, input.range.end, input.range.step",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "true__check__array__input.large in input.arr": {
      "Next": "input.arr",
      "Result": true,
      "ResultPath": "$.heap50.out",
      "Type": "Pass",
    },
    "true__check__array__input.part in input.arr": {
      "Next": "input.large in input.arr",
      "Result": true,
      "ResultPath": "$.heap48.out",
      "Type": "Pass",
    },
    "true__check__array__try": {
      "Next": "objIn = input.key in input.range",
      "Result": true,
      "ResultPath": "$.heap1.out",
      "Type": "Pass",
    },
    "try": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "array__try",
          "Variable": "$.input.range[0]",
        },
      ],
      "Default": "stringify__try",
      "Type": "Choice",
    },
  },
}
`;

exports[`join 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "ItemsPath": "$.heap22.out",
      "Iterator": {
        "StartAt": "Default 4",
        "States": {
          "Default 4": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 4 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 4",
            "Type": "Choice",
          },
          "assign__Default 4": {
            "End": true,
            "InputPath": "$.heap25.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 4 1": {
            "InputPath": "$.item",
            "Next": "assign__Default 4",
            "ResultPath": "$.heap25.str",
            "Type": "Pass",
          },
          "format__Default 4": {
            "Next": "assign__Default 4",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap25",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap23",
      "Type": "Map",
    },
    "1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=") 1": {
      "Next": "["a", {a: "a"}, ["b"], input.obj, input.arr, null]",
      "Result": [
        "b",
      ],
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "1__["d", "e", "f"].join(input.sep)": {
      "ItemsPath": "$.heap8",
      "Iterator": {
        "StartAt": "Default 2",
        "States": {
          "Default 2": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 2 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 2",
            "Type": "Choice",
          },
          "assign__Default 2": {
            "End": true,
            "InputPath": "$.heap11.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 2 1": {
            "InputPath": "$.item",
            "Next": "assign__Default 2",
            "ResultPath": "$.heap11.str",
            "Type": "Pass",
          },
          "format__Default 2": {
            "Next": "assign__Default 2",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap11",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__1__["d", "e", "f"].join(input.sep)",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap9",
      "Type": "Map",
    },
    "1__return resultArr.join("#")": {
      "End": true,
      "InputPath": "$.heap29.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.arr.join",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "["a", {a: "a"}, ["b"], input.obj, input.arr, null]": {
      "Next": "1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "Parameters": {
        "out.$": "States.Array('a',$.heap17,$.heap18,$.input.obj,$.input.arr,$.fnl_context.null)",
      },
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "Next": "1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=") 1",
      "Result": {
        "a": "a",
      },
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "["d", "e", "f"].join(input.sep)": {
      "Next": "1__["d", "e", "f"].join(input.sep)",
      "Result": [
        "d",
        "e",
        "f",
      ],
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "[["a", "b", "c"].join("/"), input.arr.join("-"), input.arr.join(input.sep),": {
      "Next": "return resultArr.join("#")",
      "Parameters": {
        "out.$": "States.Array('a/b/c',$.heap1.string,$.heap5.string,$.heap10.string,'',$.heap14.string,$.heap24.string)",
      },
      "ResultPath": "$.heap27",
      "Type": "Pass",
    },
    "append__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "Next": "tail__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "Parameters": {
        "string.$": "States.Format('{}={}',$.heap24.string,$.heap23[0])",
      },
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "append__1__["d", "e", "f"].join(input.sep)": {
      "Next": "tail__1__["d", "e", "f"].join(input.sep)",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.heap10.string,$.input.sep,$.heap9[0])",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "append__input.arr.join()": {
      "Next": "tail__input.arr.join()",
      "Parameters": {
        "string.$": "States.Format('{},{}',$.heap14.string,$.heap13[0])",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "append__input.arr.join(input.sep)": {
      "Next": "tail__input.arr.join(input.sep)",
      "Parameters": {
        "string.$": "States.Format('{}{}{}',$.heap5.string,$.input.sep,$.heap4[0])",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "append__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.": {
      "Next": "tail__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.ar",
      "Parameters": {
        "string.$": "States.Format('{}-{}',$.heap1.string,$.heap0[0])",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "append__return resultArr.join("#")": {
      "Next": "tail__return resultArr.join("#")",
      "Parameters": {
        "string.$": "States.Format('{}#{}',$.heap29.string,$.heap28[0])",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "hasNext__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap23[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap24",
              },
            },
          ],
          "Next": "initValue__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap23[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap24",
            },
          ],
          "Next": "returnEmpty__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("="",
        },
        {
          "IsPresent": true,
          "Next": "append__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
          "Variable": "$.heap23[0]",
        },
      ],
      "Default": "[["a", "b", "c"].join("/"), input.arr.join("-"), input.arr.join(input.sep),",
      "Type": "Choice",
    },
    "hasNext__1__["d", "e", "f"].join(input.sep)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap9[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap10",
              },
            },
          ],
          "Next": "initValue__1__["d", "e", "f"].join(input.sep)",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap9[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap10",
            },
          ],
          "Next": "returnEmpty__1__["d", "e", "f"].join(input.sep)",
        },
        {
          "IsPresent": true,
          "Next": "append__1__["d", "e", "f"].join(input.sep)",
          "Variable": "$.heap9[0]",
        },
      ],
      "Default": "input.arr.join()",
      "Type": "Choice",
    },
    "hasNext__input.arr.join()": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap13[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap14",
              },
            },
          ],
          "Next": "initValue__input.arr.join()",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap13[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap14",
            },
          ],
          "Next": "returnEmpty__input.arr.join()",
        },
        {
          "IsPresent": true,
          "Next": "append__input.arr.join()",
          "Variable": "$.heap13[0]",
        },
      ],
      "Default": "["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "Type": "Choice",
    },
    "hasNext__input.arr.join(input.sep)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap4[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap5",
              },
            },
          ],
          "Next": "initValue__input.arr.join(input.sep)",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap4[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap5",
            },
          ],
          "Next": "returnEmpty__input.arr.join(input.sep)",
        },
        {
          "IsPresent": true,
          "Next": "append__input.arr.join(input.sep)",
          "Variable": "$.heap4[0]",
        },
      ],
      "Default": "["d", "e", "f"].join(input.sep)",
      "Type": "Choice",
    },
    "hasNext__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap0[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap1",
              },
            },
          ],
          "Next": "initValue__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), inp",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap0[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap1",
            },
          ],
          "Next": "returnEmpty__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), i",
        },
        {
          "IsPresent": true,
          "Next": "append__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.",
          "Variable": "$.heap0[0]",
        },
      ],
      "Default": "input.arr.join(input.sep)",
      "Type": "Choice",
    },
    "hasNext__return resultArr.join("#")": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap28[0]",
            },
            {
              "Not": {
                "IsPresent": true,
                "Variable": "$.heap29",
              },
            },
          ],
          "Next": "initValue__return resultArr.join("#")",
        },
        {
          "And": [
            {
              "IsPresent": false,
              "Variable": "$.heap28[0]",
            },
            {
              "IsPresent": false,
              "Variable": "$.heap29",
            },
          ],
          "Next": "returnEmpty__return resultArr.join("#")",
        },
        {
          "IsPresent": true,
          "Next": "append__return resultArr.join("#")",
          "Variable": "$.heap28[0]",
        },
      ],
      "Default": "1__return resultArr.join("#")",
      "Type": "Choice",
    },
    "initValue__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "InputPath": "$.heap23[0]",
      "Next": "tail__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "ResultPath": "$.heap24.string",
      "Type": "Pass",
    },
    "initValue__1__["d", "e", "f"].join(input.sep)": {
      "InputPath": "$.heap9[0]",
      "Next": "tail__1__["d", "e", "f"].join(input.sep)",
      "ResultPath": "$.heap10.string",
      "Type": "Pass",
    },
    "initValue__input.arr.join()": {
      "InputPath": "$.heap13[0]",
      "Next": "tail__input.arr.join()",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "initValue__input.arr.join(input.sep)": {
      "InputPath": "$.heap4[0]",
      "Next": "tail__input.arr.join(input.sep)",
      "ResultPath": "$.heap5.string",
      "Type": "Pass",
    },
    "initValue__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), inp": {
      "InputPath": "$.heap0[0]",
      "Next": "tail__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.ar",
      "ResultPath": "$.heap1.string",
      "Type": "Pass",
    },
    "initValue__return resultArr.join("#")": {
      "InputPath": "$.heap28[0]",
      "Next": "tail__return resultArr.join("#")",
      "ResultPath": "$.heap29.string",
      "Type": "Pass",
    },
    "input.arr.join()": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "Default 3",
        "States": {
          "Default 3": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 3 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 3",
            "Type": "Choice",
          },
          "assign__Default 3": {
            "End": true,
            "InputPath": "$.heap15.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 3 1": {
            "InputPath": "$.item",
            "Next": "assign__Default 3",
            "ResultPath": "$.heap15.str",
            "Type": "Pass",
          },
          "format__Default 3": {
            "Next": "assign__Default 3",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap15",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__input.arr.join()",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap13",
      "Type": "Map",
    },
    "input.arr.join(input.sep)": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "Default 1",
        "States": {
          "Default 1": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1 2",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 1",
            "Type": "Choice",
          },
          "assign__Default 1 1": {
            "End": true,
            "InputPath": "$.heap6.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1 2": {
            "InputPath": "$.item",
            "Next": "assign__Default 1 1",
            "ResultPath": "$.heap6.str",
            "Type": "Pass",
          },
          "format__Default 1": {
            "Next": "assign__Default 1 1",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap6",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__input.arr.join(input.sep)",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap4",
      "Type": "Map",
    },
    "resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.arr.join": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default",
            "Type": "Choice",
          },
          "assign__Default": {
            "End": true,
            "InputPath": "$.heap2.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 1": {
            "InputPath": "$.item",
            "Next": "assign__Default",
            "ResultPath": "$.heap2.str",
            "Type": "Pass",
          },
          "format__Default": {
            "Next": "assign__Default",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap2",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap0",
      "Type": "Map",
    },
    "return resultArr.join("#")": {
      "ItemsPath": "$.heap27.out",
      "Iterator": {
        "StartAt": "Default 5",
        "States": {
          "Default 5": {
            "Choices": [
              {
                "IsString": true,
                "Next": "assign__Default 5 1",
                "Variable": "$.item",
              },
            ],
            "Default": "format__Default 5",
            "Type": "Choice",
          },
          "assign__Default 5": {
            "End": true,
            "InputPath": "$.heap30.str",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "assign__Default 5 1": {
            "InputPath": "$.item",
            "Next": "assign__Default 5",
            "ResultPath": "$.heap30.str",
            "Type": "Pass",
          },
          "format__Default 5": {
            "Next": "assign__Default 5",
            "Parameters": {
              "str.$": "States.JsonToString($.item)",
            },
            "ResultPath": "$.heap30",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__return resultArr.join("#")",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap28",
      "Type": "Map",
    },
    "returnEmpty__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("="": {
      "Next": "[["a", "b", "c"].join("/"), input.arr.join("-"), input.arr.join(input.sep),",
      "Result": "",
      "ResultPath": "$.heap24.string",
      "Type": "Pass",
    },
    "returnEmpty__1__["d", "e", "f"].join(input.sep)": {
      "Next": "input.arr.join()",
      "Result": "",
      "ResultPath": "$.heap10.string",
      "Type": "Pass",
    },
    "returnEmpty__input.arr.join()": {
      "Next": "["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "Result": "",
      "ResultPath": "$.heap14.string",
      "Type": "Pass",
    },
    "returnEmpty__input.arr.join(input.sep)": {
      "Next": "["d", "e", "f"].join(input.sep)",
      "Result": "",
      "ResultPath": "$.heap5.string",
      "Type": "Pass",
    },
    "returnEmpty__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), i": {
      "Next": "input.arr.join(input.sep)",
      "Result": "",
      "ResultPath": "$.heap1.string",
      "Type": "Pass",
    },
    "returnEmpty__return resultArr.join("#")": {
      "Next": "1__return resultArr.join("#")",
      "Result": "",
      "ResultPath": "$.heap29.string",
      "Type": "Pass",
    },
    "tail__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")": {
      "InputPath": "$.heap23[1:]",
      "Next": "hasNext__1__["a", {a: "a"}, ["b"], input.obj, input.arr, null].join("=")",
      "ResultPath": "$.heap23",
      "Type": "Pass",
    },
    "tail__1__["d", "e", "f"].join(input.sep)": {
      "InputPath": "$.heap9[1:]",
      "Next": "hasNext__1__["d", "e", "f"].join(input.sep)",
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "tail__input.arr.join()": {
      "InputPath": "$.heap13[1:]",
      "Next": "hasNext__input.arr.join()",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "tail__input.arr.join(input.sep)": {
      "InputPath": "$.heap4[1:]",
      "Next": "hasNext__input.arr.join(input.sep)",
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "tail__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input.ar": {
      "InputPath": "$.heap0[1:]",
      "Next": "hasNext__resultArr = [["a", "b", "c"].join("/"), input.arr.join("-"), input",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "tail__return resultArr.join("#")": {
      "InputPath": "$.heap28[1:]",
      "Next": "hasNext__return resultArr.join("#")",
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
  },
}
`;

exports[`json parse and stringify 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {str: str, obj: obj, a: obj.a}": {
      "End": true,
      "Parameters": {
        "a.$": "$.obj.a",
        "obj.$": "$.obj",
        "str.$": "$.str",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {str: str, obj: obj, a: obj.a} 1": {
      "InputPath": "$.obj",
      "Next": "1__return {str: str, obj: obj, a: obj.a}",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "str = JSON.stringify(input)",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "obj": {
      "InputPath": "$.heap1.out",
      "Next": "return {str: str, obj: obj, a: obj.a}",
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
    "obj = JSON.parse(str)": {
      "Next": "obj",
      "Parameters": {
        "out.$": "States.StringToJson($.str)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "return {str: str, obj: obj, a: obj.a}": {
      "InputPath": "$.str",
      "Next": "1__return {str: str, obj: obj, a: obj.a} 1",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "str": {
      "InputPath": "$.heap0.out",
      "Next": "obj = JSON.parse(str)",
      "ResultPath": "$.str",
      "Type": "Pass",
    },
    "str = JSON.stringify(input)": {
      "Next": "str",
      "Parameters": {
        "out.$": "States.JsonToString($.input)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`map 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__l = await $SFN.retry(function ()).map(function (x))": {
      "Next": "check__1__l = await $SFN.retry(function ()).map(function (x))",
      "Parameters": {
        "arr.$": "$.heap1[0]",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]a": {
      "End": true,
      "InputPath": "$.heap21.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return nixhead": {
      "InputPath": "$.heap9.string",
      "Next": "handleResult__l2 = input.arr.map(function (x,i,[ head ]))",
      "ResultPath": "$.heap5.arr[0]",
      "Type": "Pass",
    },
    "1__return nx": {
      "InputPath": "$.heap4.string",
      "Next": "handleResult__1__l = await $SFN.retry(function ()).map(function (x))",
      "ResultPath": "$.heap2.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "l = await $SFN.retry(function ()).map(function (x))",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aax 1": {
      "InputPath": "$.heap13.string",
      "Next": "return a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aax": {
      "Next": "a = aax 1",
      "Parameters": {
        "string.$": "States.Format('{}a{}',$.a,$.heap10.arr[0])",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "check__1__l = await $SFN.retry(function ()).map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "nx",
          "Variable": "$.heap2.arr[0]",
        },
      ],
      "Default": "end__1__l = await $SFN.retry(function ()).map(function (x))",
      "Type": "Choice",
    },
    "check__input.arr.map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "aax",
          "Variable": "$.heap10.arr[0]",
        },
      ],
      "Default": "end__input.arr.map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x,i,[ head ]))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "nixhead",
          "Variable": "$.heap5.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x,i,[ head ]))",
      "Type": "Choice",
    },
    "end__1__l = await $SFN.retry(function ()).map(function (x))": {
      "Next": "set__end__1__l = await $SFN.retry(function ()).map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap2.arrStr))",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "end__input.arr.map(function (x))": {
      "Next": "set__end__input.arr.map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap10.arrStr))",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x,i,[ head ]))": {
      "Next": "set__end__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap5.arrStr))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "handleResult__1__l = await $SFN.retry(function ()).map(function (x))": {
      "Next": "check__1__l = await $SFN.retry(function ()).map(function (x))",
      "Parameters": {
        "arr.$": "$.heap2.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap2.arrStr,States.JsonToString($.heap2.arr[0]))",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "handleResult__input.arr.map(function (x))": {
      "Next": "check__input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.heap10.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap10.arrStr,States.JsonToString($.heap10.arr[0]))",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x,i,[ head ]))": {
      "Next": "check__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": {
        "arr.$": "$.heap5.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap5.arrStr,States.JsonToString($.heap5.arr[0]))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "input.arr.map(function (x))": {
      "Next": "check__input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "l": {
      "InputPath": "$.heap2",
      "Next": "l2 = input.arr.map(function (x,i,[ head ]))",
      "ResultPath": "$.l",
      "Type": "Pass",
    },
    "l = await $SFN.retry(function ()).map(function (x))": {
      "Branches": [
        {
          "StartAt": "return arrFunc()",
          "States": {
            "1__return arrFunc()": {
              "End": true,
              "InputPath": "$.heap0",
              "ResultPath": "$",
              "Type": "Pass",
            },
            "return arrFunc()": {
              "InputPath": "$.fnl_context.null",
              "Next": "1__return arrFunc()",
              "Resource": "__REPLACED_TOKEN",
              "ResultPath": "$.heap0",
              "Type": "Task",
            },
          },
        },
      ],
      "Next": "1__l = await $SFN.retry(function ()).map(function (x))",
      "Parameters": {
        "a.$": "$.a",
        "fnl_context.$": "$.fnl_context",
        "input.$": "$.input",
      },
      "ResultPath": "$.heap1",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
        },
      ],
      "Type": "Parallel",
    },
    "l2": {
      "InputPath": "$.heap5",
      "Next": "input.arr.map(function (x))",
      "ResultPath": "$.l2",
      "Type": "Pass",
    },
    "l2 = input.arr.map(function (x,i,[ head ]))": {
      "ItemsPath": "$.input.arr",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "check__l2 = input.arr.map(function (x,i,[ head ]))",
      "Parameters": {
        "index.$": "$$.Map.Item.Index",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap5",
      "ResultSelector": {
        "arr.$": "$",
        "arrStr": "[null",
      },
      "Type": "Map",
    },
    "l[0]l[1]l[2]l2[0]l2[1]l2[2]a": {
      "Next": "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]a",
      "Parameters": {
        "string.$": "States.Format('{}{}{}{}{}{}{}',$.l[0],$.l[1],$.l[2],$.l2[0],$.l2[1],$.l2[2],$.a)",
      },
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "nixhead": {
      "Next": "1__return nixhead",
      "Parameters": {
        "string.$": "States.Format('n{}{}{}',$.heap5.arr[0].index,$.heap5.arr[0].item,$.input.arr[0])",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "nx": {
      "Next": "1__return nx",
      "Parameters": {
        "string.$": "States.Format('n{}',$.heap2.arr[0])",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "return a": {
      "InputPath": "$.a",
      "Next": "handleResult__input.arr.map(function (x))",
      "ResultPath": "$.heap10.arr[0]",
      "Type": "Pass",
    },
    "set__end__1__l = await $SFN.retry(function ()).map(function (x))": {
      "InputPath": "$.heap2.result[1:]",
      "Next": "l",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "set__end__input.arr.map(function (x))": {
      "InputPath": "$.heap10.result[1:]",
      "Next": "l[0]l[1]l[2]l2[0]l2[1]l2[2]a",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x,i,[ head ]))": {
      "InputPath": "$.heap5.result[1:]",
      "Next": "l2",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
  },
}
`;

exports[`map uses input 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__l = await arrFunc().map(function (x))": {
      "Next": "check__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "arr.$": "$.heap0",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__return input.prefixx": {
      "InputPath": "$.heap4.string",
      "Next": "handleResult__1__l = await arrFunc().map(function (x))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return input.prefixx 1": {
      "InputPath": "$.heap8.string",
      "Next": "handleResult__l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap5.arr[0]",
      "Type": "Pass",
    },
    "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]": {
      "End": true,
      "InputPath": "$.heap15.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "l = await arrFunc().map(function (x))",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "check__1__l = await arrFunc().map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "input.prefixx",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__l = await arrFunc().map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "input.prefixx 1",
          "Variable": "$.heap5.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x))",
      "Type": "Choice",
    },
    "end__1__l = await arrFunc().map(function (x))": {
      "Next": "set__end__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x))": {
      "Next": "set__end__l2 = input.arr.map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap5.arrStr))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "handleResult__1__l = await arrFunc().map(function (x))": {
      "Next": "check__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap1.arrStr,States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x))": {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.heap5.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap5.arrStr,States.JsonToString($.heap5.arr[0]))",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "input.prefixx": {
      "Next": "1__return input.prefixx",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.input.prefix,$.heap1.arr[0])",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "input.prefixx 1": {
      "Next": "1__return input.prefixx 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.input.prefix,$.heap5.arr[0])",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "l": {
      "InputPath": "$.heap1",
      "Next": "l2 = input.arr.map(function (x))",
      "ResultPath": "$.l",
      "Type": "Pass",
    },
    "l = await arrFunc().map(function (x))": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__l = await arrFunc().map(function (x))",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "l2": {
      "InputPath": "$.heap5",
      "Next": "l[0]l[1]l[2]l2[0]l2[1]l2[2]",
      "ResultPath": "$.l2",
      "Type": "Pass",
    },
    "l2 = input.arr.map(function (x))": {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "l[0]l[1]l[2]l2[0]l2[1]l2[2]": {
      "Next": "1__return l[0]l[1]l[2]l2[0]l2[1]l2[2]",
      "Parameters": {
        "string.$": "States.Format('{}{}{}{}{}{}',$.l[0],$.l[1],$.l[2],$.l2[0],$.l2[1],$.l2[2])",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "set__end__1__l = await arrFunc().map(function (x))": {
      "InputPath": "$.heap1.result[1:]",
      "Next": "l",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x))": {
      "InputPath": "$.heap5.result[1:]",
      "Next": "l2",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
  },
}
`;

exports[`map with dynamic for loops 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__l = await arrFunc().map(function (x))": {
      "Next": "check__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "arr.$": "$.heap0",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__return nx": {
      "InputPath": "$.heap3.string",
      "Next": "handleResult__1__l = await arrFunc().map(function (x))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "1__return nx 1": {
      "InputPath": "$.heap6.string",
      "Next": "handleResult__l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap4.arr[0]",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "l = await arrFunc().map(function (x))",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "for(x of l)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ax 1": {
      "InputPath": "$.heap9.string",
      "Next": "tail__for(x of l)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = ax 3": {
      "InputPath": "$.heap13.string",
      "Next": "tail__for(x of l2)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "ax": {
      "Next": "a = ax 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap10[0])",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "ax 1": {
      "Next": "a = ax 3",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.heap14[0])",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "check__1__l = await arrFunc().map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "nx",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__l = await arrFunc().map(function (x))",
      "Type": "Choice",
    },
    "check__l2 = input.arr.map(function (x))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "nx 1",
          "Variable": "$.heap4.arr[0]",
        },
      ],
      "Default": "end__l2 = input.arr.map(function (x))",
      "Type": "Choice",
    },
    "end__1__l = await arrFunc().map(function (x))": {
      "Next": "set__end__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__l2 = input.arr.map(function (x))": {
      "Next": "set__end__l2 = input.arr.map(function (x))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap4.arrStr))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "for(x of l)": {
      "InputPath": "$.heap1",
      "Next": "hasNext__for(x of l)",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "for(x of l2)": {
      "InputPath": "$.heap4",
      "Next": "hasNext__for(x of l2)",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "handleResult__1__l = await arrFunc().map(function (x))": {
      "Next": "check__1__l = await arrFunc().map(function (x))",
      "Parameters": {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap1.arrStr,States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__l2 = input.arr.map(function (x))": {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.heap4.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap4.arrStr,States.JsonToString($.heap4.arr[0]))",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "hasNext__for(x of l)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ax",
          "Variable": "$.heap10[0]",
        },
      ],
      "Default": "for(x of l2)",
      "Type": "Choice",
    },
    "hasNext__for(x of l2)": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "ax 1",
          "Variable": "$.heap14[0]",
        },
      ],
      "Default": "return a",
      "Type": "Choice",
    },
    "l = await arrFunc().map(function (x))": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__l = await arrFunc().map(function (x))",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap0",
      "Type": "Task",
    },
    "l2 = input.arr.map(function (x))": {
      "Next": "check__l2 = input.arr.map(function (x))",
      "Parameters": {
        "arr.$": "$.input.arr",
        "arrStr": "[null",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "nx": {
      "Next": "1__return nx",
      "Parameters": {
        "string.$": "States.Format('n{}',$.heap1.arr[0])",
      },
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "nx 1": {
      "Next": "1__return nx 1",
      "Parameters": {
        "string.$": "States.Format('n{}',$.heap4.arr[0])",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "set__end__1__l = await arrFunc().map(function (x))": {
      "InputPath": "$.heap1.result[1:]",
      "Next": "l2 = input.arr.map(function (x))",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__l2 = input.arr.map(function (x))": {
      "InputPath": "$.heap4.result[1:]",
      "Next": "a = """,
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "tail__for(x of l)": {
      "InputPath": "$.heap10[1:]",
      "Next": "hasNext__for(x of l)",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "tail__for(x of l2)": {
      "InputPath": "$.heap14[1:]",
      "Next": "hasNext__for(x of l2)",
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
  },
}
`;

exports[`math 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1 + input.str": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__true__1 + input.str",
        },
        {
          "IsString": true,
          "Next": "format__true__1 + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsPresent": false,
          "Next": "null__false__1 + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__false__1 + input.str",
        },
        {
          "IsNull": true,
          "Next": "zero__false__1 + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__false__1 + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__1 + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__false__1 + input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__false__1 + input.str",
        },
      ],
      "Default": "null__false__1 + input.str",
      "Type": "Choice",
    },
    "1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNull": true,
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
      ],
      "Default": "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNull": true,
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.n",
        },
        {
          "IsString": true,
          "Next": "format__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.n",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "one__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.n",
            },
          ],
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
      ],
      "Default": "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNull": true,
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.input.z",
        },
        {
          "IsString": true,
          "Next": "format__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.z",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "one__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.z",
            },
          ],
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
      ],
      "Default": "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "Parameters": {
        "out.$": "States.MathAdd($.heap71.num,-1)",
      },
      "ResultPath": "$.heap72",
      "Type": "Pass",
    },
    "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "a++",
      "Parameters": {
        "out.$": "States.MathAdd($.heap74.num,1)",
      },
      "ResultPath": "$.heap75",
      "Type": "Pass",
    },
    "1__41__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "InputPath": "$.heap80.out",
      "Next": "a--",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "1__45__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "InputPath": "$.heap85.out",
      "Next": "input.p",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "1__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "input.str + true",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap100.str.left.str,'b')",
      },
      "ResultPath": "$.heap100",
      "Type": "Pass",
    },
    "1__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "true + input.str",
      "Parameters": {
        "str.$": "States.Format('{}{}','b',$.heap110.str.right.str)",
      },
      "ResultPath": "$.heap110",
      "Type": "Pass",
    },
    "1__a++": {
      "Next": "2__a++",
      "Parameters": {
        "out.$": "States.MathAdd($.a,1)",
      },
      "ResultPath": "$.heap77",
      "Type": "Pass",
    },
    "1__a--": {
      "Next": "2__a--",
      "Parameters": {
        "out.$": "States.MathAdd($.a,-1)",
      },
      "ResultPath": "$.heap82",
      "Type": "Pass",
    },
    "1__b += input.p": {
      "InputPath": "$.heap6",
      "Next": "b -= 1",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "1__b -= -1": {
      "InputPath": "$.heap17.out",
      "Next": "input.p + input.p",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "1__b -= -1 1": {
      "Next": "1__b -= -1",
      "Parameters": {
        "out.$": "States.MathAdd($.heap16.num,1)",
      },
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "1__b -= 1": {
      "InputPath": "$.heap9.out",
      "Next": "b -= input.p",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "1__b -= 1 1": {
      "Next": "1__b -= 1",
      "Parameters": {
        "out.$": "States.MathAdd($.heap8.num,-1)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "1__b -= input.p": {
      "InputPath": "$.heap14.out",
      "Next": "b -= -1",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "1__b -= input.p 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__b -= input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__b -= input.p 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__b -= input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__1__b -= input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__b -= input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__b -= input.p 1",
        },
      ],
      "Default": "null__1__b -= input.p 1",
      "Type": "Choice",
    },
    "1__false__1 + input.str": {
      "InputPath": "$.heap107.str",
      "Next": "61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "1__false__1 + input.str 1": {
      "Next": "1__false__1 + input.str",
      "Parameters": {
        "str.$": "States.MathAdd(1,$.heap107.str.right.num)",
      },
      "ResultPath": "$.heap107",
      "Type": "Pass",
    },
    "1__false__b += input.p": {
      "InputPath": "$.heap5.str",
      "Next": "1__b += input.p",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "1__false__b += input.p 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__b += input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__false__b += input.p 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__b += input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__1__false__b += input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__b += input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__false__b += input.p 1",
        },
      ],
      "Default": "null__1__false__b += input.p 1",
      "Type": "Choice",
    },
    "1__false__input.b + input.b": {
      "InputPath": "$.heap53.str",
      "Next": "29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "1__false__input.b + input.b 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__input.b + input.b 1",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.b",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.b + input.b 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__input.b + input.b 1",
          "Variable": "$.input.b",
        },
        {
          "IsString": true,
          "Next": "format__1__false__input.b + input.b 1",
          "Variable": "$.input.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__input.b + input.b 1",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "one__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.b",
            },
          ],
          "Next": "zero__1__false__input.b + input.b 1",
        },
      ],
      "Default": "null__1__false__input.b + input.b 1",
      "Type": "Choice",
    },
    "1__false__input.b + true": {
      "InputPath": "$.heap49.str",
      "Next": "input.b + input.b",
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "1__false__input.b + true 1": {
      "Next": "1__false__input.b + true",
      "Parameters": {
        "str.$": "States.MathAdd($.heap49.str.left.num,1)",
      },
      "ResultPath": "$.heap49",
      "Type": "Pass",
    },
    "1__false__input.p + -0": {
      "InputPath": "$.heap41.str",
      "Next": "input.p + true",
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "1__false__input.p + -0 1": {
      "Next": "1__false__input.p + -0",
      "Parameters": {
        "str.$": "States.MathAdd($.heap41.str.left.num,0)",
      },
      "ResultPath": "$.heap41",
      "Type": "Pass",
    },
    "1__false__input.p + -1": {
      "InputPath": "$.heap37.str",
      "Next": "input.p + -0",
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "1__false__input.p + -1 1": {
      "Next": "1__false__input.p + -1",
      "Parameters": {
        "str.$": "States.MathAdd($.heap37.str.left.num,-1)",
      },
      "ResultPath": "$.heap37",
      "Type": "Pass",
    },
    "1__false__input.p + 1": {
      "InputPath": "$.heap33.str",
      "Next": "input.p + -1",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "1__false__input.p + 1 1": {
      "Next": "1__false__input.p + 1",
      "Parameters": {
        "str.$": "States.MathAdd($.heap33.str.left.num,1)",
      },
      "ResultPath": "$.heap33",
      "Type": "Pass",
    },
    "1__false__input.p + input.n": {
      "InputPath": "$.heap25.str",
      "Next": "input.p + input.z",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "1__false__input.p + input.n 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__input.p + input.n 1",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.n 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__input.p + input.n 1",
          "Variable": "$.input.n",
        },
        {
          "IsString": true,
          "Next": "format__1__false__input.p + input.n 1",
          "Variable": "$.input.n",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__input.p + input.n 1",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "one__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.n",
            },
          ],
          "Next": "zero__1__false__input.p + input.n 1",
        },
      ],
      "Default": "null__1__false__input.p + input.n 1",
      "Type": "Choice",
    },
    "1__false__input.p + input.p": {
      "InputPath": "$.heap21.str",
      "Next": "input.p + input.n",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "1__false__input.p + input.p 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__input.p + input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.p 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__input.p + input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__1__false__input.p + input.p 1",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__input.p + input.p 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__false__input.p + input.p 1",
        },
      ],
      "Default": "null__1__false__input.p + input.p 1",
      "Type": "Choice",
    },
    "1__false__input.p + input.z": {
      "InputPath": "$.heap29.str",
      "Next": "input.p + 1",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "1__false__input.p + input.z 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__input.p + input.z 1",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.z 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__input.p + input.z 1",
          "Variable": "$.input.z",
        },
        {
          "IsString": true,
          "Next": "format__1__false__input.p + input.z 1",
          "Variable": "$.input.z",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__input.p + input.z 1",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "one__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.z",
            },
          ],
          "Next": "zero__1__false__input.p + input.z 1",
        },
      ],
      "Default": "null__1__false__input.p + input.z 1",
      "Type": "Choice",
    },
    "1__false__input.p + true": {
      "InputPath": "$.heap45.str",
      "Next": "input.b + true",
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "1__false__input.p + true 1": {
      "Next": "1__false__input.p + true",
      "Parameters": {
        "str.$": "States.MathAdd($.heap45.str.left.num,1)",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "1__false__input.str + 1": {
      "InputPath": "$.heap97.str",
      "Next": "55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "1__false__input.str + 1 1": {
      "Next": "1__false__input.str + 1",
      "Parameters": {
        "str.$": "States.MathAdd($.heap97.str.left.num,1)",
      },
      "ResultPath": "$.heap97",
      "Type": "Pass",
    },
    "1__false__input.str + input.str": {
      "InputPath": "$.heap117.str",
      "Next": "66__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "1__false__input.str + input.str 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__1__false__input.str + input.str 1",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.str + input.str 1",
        },
        {
          "IsNull": true,
          "Next": "zero__1__false__input.str + input.str 1",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__1__false__input.str + input.str 1",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__1__false__input.str + input.str 1",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__1__false__input.str + input.str 1",
        },
      ],
      "Default": "null__1__false__input.str + input.str 1",
      "Type": "Choice",
    },
    "1__false__input.str + true": {
      "InputPath": "$.heap103.str",
      "Next": "1 + input.str",
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "1__false__input.str + true 1": {
      "Next": "1__false__input.str + true",
      "Parameters": {
        "str.$": "States.MathAdd($.heap103.str.left.num,1)",
      },
      "ResultPath": "$.heap103",
      "Type": "Pass",
    },
    "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.heap1.str",
      "Next": "1__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqual 2",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1": {
      "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Parameters": {
        "str.$": "States.MathAdd($.heap1.str.left.num,1)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__false__true + input.str": {
      "InputPath": "$.heap113.str",
      "Next": "input.str + input.str",
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "1__false__true + input.str 1": {
      "Next": "1__false__true + input.str",
      "Parameters": {
        "str.$": "States.MathAdd(1,$.heap113.str.right.num)",
      },
      "ResultPath": "$.heap113",
      "Type": "Pass",
    },
    "1__input.n": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__1__input.n",
          "Variable": "$.heap90.num",
        },
        {
          "Next": "negative__1__input.n",
          "NumericLessThan": 0,
          "Variable": "$.heap90.num",
        },
      ],
      "Default": "positive__1__input.n",
      "Type": "Choice",
    },
    "1__input.p": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__1__input.p",
          "Variable": "$.heap87.num",
        },
        {
          "Next": "negative__1__input.p",
          "NumericLessThan": 0,
          "Variable": "$.heap87.num",
        },
      ],
      "Default": "positive__1__input.p",
      "Type": "Choice",
    },
    "1__input.z": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__1__input.z",
          "Variable": "$.heap93.num",
        },
        {
          "Next": "negative__1__input.z",
          "NumericLessThan": 0,
          "Variable": "$.heap93.num",
        },
      ],
      "Default": "positive__1__input.z",
      "Type": "Choice",
    },
    "1__negative__1__input.n": {
      "Next": "input.z",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap91.num,0))",
      },
      "ResultPath": "$.heap91",
      "Type": "Pass",
    },
    "1__negative__1__input.p": {
      "Next": "input.n",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap88.num,0))",
      },
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "1__negative__1__input.z": {
      "Next": "input.str + 1",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap94.num,0))",
      },
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "1__negative__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += in": {
      "Next": "3__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap58.num,0))",
      },
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "1__negative__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += in": {
      "Next": "3__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap63.num,0))",
      },
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "1__negative__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += in": {
      "Next": "3__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap68.num,0))",
      },
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "1__negative__2__b -= input.p": {
      "Next": "3__b -= input.p",
      "Parameters": {
        "num.$": "States.StringToJson(States.ArrayGetItem($.heap13.num,0))",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "1__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqual": {
      "End": true,
      "Parameters": {
        "b.$": "$.b",
        "booleanConstPlusRefString.$": "$.heap114",
        "constBooleanPlusBooleanConst": 2,
        "constStringPlusBooleanConst": "atrue",
        "constStringPlusNumberConst": "a1",
        "constStringPlusStringConst": "ab",
        "minusEqualsConst.$": "$.heap9.out",
        "minusEqualsNegConst.$": "$.heap17.out",
        "minusEqualsRef.$": "$.heap14.out",
        "negateNegRef.$": "$.heap91.num",
        "negateRef.$": "$.heap88.num",
        "negateZeroRef.$": "$.heap94.num",
        "numberConstPlusRefString.$": "$.heap108",
        "plusEqualsConst.$": "$.heap2",
        "plusEqualsRef.$": "$.heap6",
        "postMinusMinus.$": "$.heap83",
        "postPlusPlus.$": "$.heap78",
        "preMinusMinus.$": "$.heap85.out",
        "prePlusPlus.$": "$.heap80.out",
        "refBooleanPlusBooleanConst.$": "$.heap50",
        "refBooleanPlusBooleanRef.$": "$.heap54",
        "refMinusConst.$": "$.heap72.out",
        "refMinusNegConst.$": "$.heap75.out",
        "refMinusNegRef.$": "$.heap64.out",
        "refMinusRef.$": "$.heap59.out",
        "refMinusZeroRef.$": "$.heap69.out",
        "refPlusBooleanConst.$": "$.heap46",
        "refPlusConst.$": "$.heap34",
        "refPlusNegConst.$": "$.heap38",
        "refPlusNegRef.$": "$.heap26",
        "refPlusRef.$": "$.heap22",
        "refPlusZeroConst.$": "$.heap42",
        "refPlusZeroRef.$": "$.heap30",
        "refStringPlusBooleanConst.$": "$.heap104",
        "refStringPlusNumberConst.$": "$.heap98",
        "refStringPlusRefString.$": "$.heap118",
        "refStringPlusStringConst.$": "$.heap100.str",
        "stringConstPlusRefString.$": "$.heap110.str",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqual 2": {
      "InputPath": "$.heap2",
      "Next": "b += input.p",
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "1__true__1 + input.str": {
      "InputPath": "$.heap106.str",
      "Next": "61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap108",
      "Type": "Pass",
    },
    "1__true__1 + input.str 1": {
      "Next": "1__true__1 + input.str",
      "Parameters": {
        "str.$": "States.Format('{}{}','1',$.heap106.str.right.str)",
      },
      "ResultPath": "$.heap106",
      "Type": "Pass",
    },
    "1__true__b += input.p": {
      "InputPath": "$.heap4.str",
      "Next": "1__b += input.p",
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "1__true__b += input.p 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__b += input.p 1",
          "Variable": "$.input.p",
        },
      ],
      "Default": "format__1__true__b += input.p 1",
      "Type": "Choice",
    },
    "1__true__input.b + input.b": {
      "InputPath": "$.heap52.str",
      "Next": "29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "1__true__input.b + input.b 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__input.b + input.b 1",
          "Variable": "$.input.b",
        },
      ],
      "Default": "format__1__true__input.b + input.b 1",
      "Type": "Choice",
    },
    "1__true__input.b + true": {
      "InputPath": "$.heap48.str",
      "Next": "input.b + input.b",
      "ResultPath": "$.heap50",
      "Type": "Pass",
    },
    "1__true__input.b + true 1": {
      "Next": "1__true__input.b + true",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap48.str.left.str,'true')",
      },
      "ResultPath": "$.heap48",
      "Type": "Pass",
    },
    "1__true__input.p + -0": {
      "InputPath": "$.heap40.str",
      "Next": "input.p + true",
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "1__true__input.p + -0 1": {
      "Next": "1__true__input.p + -0",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap40.str.left.str,'0')",
      },
      "ResultPath": "$.heap40",
      "Type": "Pass",
    },
    "1__true__input.p + -1": {
      "InputPath": "$.heap36.str",
      "Next": "input.p + -0",
      "ResultPath": "$.heap38",
      "Type": "Pass",
    },
    "1__true__input.p + -1 1": {
      "Next": "1__true__input.p + -1",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap36.str.left.str,'-1')",
      },
      "ResultPath": "$.heap36",
      "Type": "Pass",
    },
    "1__true__input.p + 1": {
      "InputPath": "$.heap32.str",
      "Next": "input.p + -1",
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "1__true__input.p + 1 1": {
      "Next": "1__true__input.p + 1",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap32.str.left.str,'1')",
      },
      "ResultPath": "$.heap32",
      "Type": "Pass",
    },
    "1__true__input.p + input.n": {
      "InputPath": "$.heap24.str",
      "Next": "input.p + input.z",
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "1__true__input.p + input.n 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__input.p + input.n 1",
          "Variable": "$.input.n",
        },
      ],
      "Default": "format__1__true__input.p + input.n 1",
      "Type": "Choice",
    },
    "1__true__input.p + input.p": {
      "InputPath": "$.heap20.str",
      "Next": "input.p + input.n",
      "ResultPath": "$.heap22",
      "Type": "Pass",
    },
    "1__true__input.p + input.p 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__input.p + input.p 1",
          "Variable": "$.input.p",
        },
      ],
      "Default": "format__1__true__input.p + input.p 1",
      "Type": "Choice",
    },
    "1__true__input.p + input.z": {
      "InputPath": "$.heap28.str",
      "Next": "input.p + 1",
      "ResultPath": "$.heap30",
      "Type": "Pass",
    },
    "1__true__input.p + input.z 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__input.p + input.z 1",
          "Variable": "$.input.z",
        },
      ],
      "Default": "format__1__true__input.p + input.z 1",
      "Type": "Choice",
    },
    "1__true__input.p + true": {
      "InputPath": "$.heap44.str",
      "Next": "input.b + true",
      "ResultPath": "$.heap46",
      "Type": "Pass",
    },
    "1__true__input.p + true 1": {
      "Next": "1__true__input.p + true",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap44.str.left.str,'true')",
      },
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "1__true__input.str + 1": {
      "InputPath": "$.heap96.str",
      "Next": "55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap98",
      "Type": "Pass",
    },
    "1__true__input.str + 1 1": {
      "Next": "1__true__input.str + 1",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap96.str.left.str,'1')",
      },
      "ResultPath": "$.heap96",
      "Type": "Pass",
    },
    "1__true__input.str + input.str": {
      "InputPath": "$.heap116.str",
      "Next": "66__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.heap118",
      "Type": "Pass",
    },
    "1__true__input.str + input.str 1": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__1__true__input.str + input.str 1",
          "Variable": "$.input.str",
        },
      ],
      "Default": "format__1__true__input.str + input.str 1",
      "Type": "Choice",
    },
    "1__true__input.str + true": {
      "InputPath": "$.heap102.str",
      "Next": "1 + input.str",
      "ResultPath": "$.heap104",
      "Type": "Pass",
    },
    "1__true__input.str + true 1": {
      "Next": "1__true__input.str + true",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap102.str.left.str,'true')",
      },
      "ResultPath": "$.heap102",
      "Type": "Pass",
    },
    "1__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "InputPath": "$.heap0.str",
      "Next": "1__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqual 2",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "1__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu 1": {
      "Next": "1__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap0.str.left.str,'1')",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "1__true__true + input.str": {
      "InputPath": "$.heap112.str",
      "Next": "input.str + input.str",
      "ResultPath": "$.heap114",
      "Type": "Pass",
    },
    "1__true__true + input.str 1": {
      "Next": "1__true__true + input.str",
      "Parameters": {
        "str.$": "States.Format('{}{}','true',$.heap112.str.right.str)",
      },
      "ResultPath": "$.heap112",
      "Type": "Pass",
    },
    "29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
        {
          "IsNull": true,
          "Next": "zero__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
      ],
      "Default": "null__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.heap57.num",
        },
        {
          "Next": "negative__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "NumericLessThan": 0,
          "Variable": "$.heap57.num",
        },
      ],
      "Default": "positive__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
      "Type": "Choice",
    },
    "2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.heap62.num",
        },
        {
          "Next": "negative__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "NumericLessThan": 0,
          "Variable": "$.heap62.num",
        },
      ],
      "Default": "positive__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
      "Type": "Choice",
    },
    "2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.heap67.num",
        },
        {
          "Next": "negative__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "NumericLessThan": 0,
          "Variable": "$.heap67.num",
        },
      ],
      "Default": "positive__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
      "Type": "Choice",
    },
    "2__a++": {
      "InputPath": "$.heap77.out",
      "Next": "41__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "2__a--": {
      "InputPath": "$.heap82.out",
      "Next": "45__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "2__b -= input.p": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "NaN__2__b -= input.p",
          "Variable": "$.heap12.num",
        },
        {
          "Next": "negative__2__b -= input.p",
          "NumericLessThan": 0,
          "Variable": "$.heap12.num",
        },
      ],
      "Default": "positive__2__b -= input.p",
      "Type": "Choice",
    },
    "2__false__b += input.p": {
      "Next": "1__false__b += input.p",
      "Parameters": {
        "str.$": "States.MathAdd($.heap5.str.left.num,$.heap5.str.right.num)",
      },
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "2__false__input.b + input.b": {
      "Next": "1__false__input.b + input.b",
      "Parameters": {
        "str.$": "States.MathAdd($.heap53.str.left.num,$.heap53.str.right.num)",
      },
      "ResultPath": "$.heap53",
      "Type": "Pass",
    },
    "2__false__input.p + input.n": {
      "Next": "1__false__input.p + input.n",
      "Parameters": {
        "str.$": "States.MathAdd($.heap25.str.left.num,$.heap25.str.right.num)",
      },
      "ResultPath": "$.heap25",
      "Type": "Pass",
    },
    "2__false__input.p + input.p": {
      "Next": "1__false__input.p + input.p",
      "Parameters": {
        "str.$": "States.MathAdd($.heap21.str.left.num,$.heap21.str.right.num)",
      },
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "2__false__input.p + input.z": {
      "Next": "1__false__input.p + input.z",
      "Parameters": {
        "str.$": "States.MathAdd($.heap29.str.left.num,$.heap29.str.right.num)",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "2__false__input.str + input.str": {
      "Next": "1__false__input.str + input.str",
      "Parameters": {
        "str.$": "States.MathAdd($.heap117.str.left.num,$.heap117.str.right.num)",
      },
      "ResultPath": "$.heap117",
      "Type": "Pass",
    },
    "2__true__b += input.p": {
      "Next": "1__true__b += input.p",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap4.str.left.str,$.heap4.str.right.str)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "2__true__input.b + input.b": {
      "Next": "1__true__input.b + input.b",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap52.str.left.str,$.heap52.str.right.str)",
      },
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "2__true__input.p + input.n": {
      "Next": "1__true__input.p + input.n",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap24.str.left.str,$.heap24.str.right.str)",
      },
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "2__true__input.p + input.p": {
      "Next": "1__true__input.p + input.p",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap20.str.left.str,$.heap20.str.right.str)",
      },
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "2__true__input.p + input.z": {
      "Next": "1__true__input.p + input.z",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap28.str.left.str,$.heap28.str.right.str)",
      },
      "ResultPath": "$.heap28",
      "Type": "Pass",
    },
    "2__true__input.str + input.str": {
      "Next": "1__true__input.str + input.str",
      "Parameters": {
        "str.$": "States.Format('{}{}',$.heap116.str.left.str,$.heap116.str.right.str)",
      },
      "ResultPath": "$.heap116",
      "Type": "Pass",
    },
    "31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
        {
          "IsNull": true,
          "Next": "zero__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
      ],
      "Default": "null__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
        {
          "IsNull": true,
          "Next": "zero__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
      ],
      "Default": "null__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
        {
          "IsNull": true,
          "Next": "zero__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
      ],
      "Default": "null__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
        {
          "IsNull": true,
          "Next": "zero__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
        },
      ],
      "Default": "null__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "3__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "Parameters": {
        "out.$": "States.MathAdd($.heap56.num,$.heap58.num)",
      },
      "ResultPath": "$.heap59",
      "Type": "Pass",
    },
    "3__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "Parameters": {
        "out.$": "States.MathAdd($.heap61.num,$.heap63.num)",
      },
      "ResultPath": "$.heap64",
      "Type": "Pass",
    },
    "3__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE": {
      "Next": "35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua",
      "Parameters": {
        "out.$": "States.MathAdd($.heap66.num,$.heap68.num)",
      },
      "ResultPath": "$.heap69",
      "Type": "Pass",
    },
    "3__b -= input.p": {
      "Next": "1__b -= input.p",
      "Parameters": {
        "out.$": "States.MathAdd($.heap11.num,$.heap13.num)",
      },
      "ResultPath": "$.heap14",
      "Type": "Pass",
    },
    "41__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Next": "1__41__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "out.$": "States.MathAdd($.a,1)",
      },
      "ResultPath": "$.heap80",
      "Type": "Pass",
    },
    "45__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Next": "1__45__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "out.$": "States.MathAdd($.a,-1)",
      },
      "ResultPath": "$.heap85",
      "Type": "Pass",
    },
    "55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.str",
        },
      ],
      "Default": "format__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
      "Type": "Choice",
    },
    "61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "Choices": [
        {
          "IsString": true,
          "Next": "assign__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
          "Variable": "$.input.str",
        },
      ],
      "Default": "format__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
      "Type": "Choice",
    },
    "66__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqua": {
      "InputPath": "$.heap118",
      "Next": "1__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqual",
      "ResultPath": "$.heap119",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = input.p",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "NaN__1__input.n": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.z",
      "ResultPath": "$.heap91.num",
      "Type": "Pass",
    },
    "NaN__1__input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.n",
      "ResultPath": "$.heap88.num",
      "Type": "Pass",
    },
    "NaN__1__input.z": {
      "InputPath": "$.fnl_context.null",
      "Next": "input.str + 1",
      "ResultPath": "$.heap94.num",
      "Type": "Pass",
    },
    "NaN__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.fnl_context.null",
      "Next": "3__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap58.num",
      "Type": "Pass",
    },
    "NaN__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.fnl_context.null",
      "Next": "3__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap63.num",
      "Type": "Pass",
    },
    "NaN__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.fnl_context.null",
      "Next": "3__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap68.num",
      "Type": "Pass",
    },
    "NaN__2__b -= input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "3__b -= input.p",
      "ResultPath": "$.heap13.num",
      "Type": "Pass",
    },
    "a = input.p": {
      "InputPath": "$.input.p",
      "Next": "b = 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a++": {
      "InputPath": "$.a",
      "Next": "1__a++",
      "ResultPath": "$.heap78",
      "Type": "Pass",
    },
    "a--": {
      "InputPath": "$.a",
      "Next": "1__a--",
      "ResultPath": "$.heap83",
      "Type": "Pass",
    },
    "assign__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "InputPath": "$.input.p",
      "Next": "2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap57.num",
      "Type": "Pass",
    },
    "assign__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "InputPath": "$.input.n",
      "Next": "2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap62.num",
      "Type": "Pass",
    },
    "assign__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "InputPath": "$.input.z",
      "Next": "2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap67.num",
      "Type": "Pass",
    },
    "assign__1__b -= input.p 1": {
      "InputPath": "$.input.p",
      "Next": "2__b -= input.p",
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "assign__1__false__b += input.p 1": {
      "InputPath": "$.input.p",
      "Next": "2__false__b += input.p",
      "ResultPath": "$.heap5.str.right.num",
      "Type": "Pass",
    },
    "assign__1__false__input.b + input.b 1": {
      "InputPath": "$.input.b",
      "Next": "2__false__input.b + input.b",
      "ResultPath": "$.heap53.str.right.num",
      "Type": "Pass",
    },
    "assign__1__false__input.p + input.n 1": {
      "InputPath": "$.input.n",
      "Next": "2__false__input.p + input.n",
      "ResultPath": "$.heap25.str.right.num",
      "Type": "Pass",
    },
    "assign__1__false__input.p + input.p 1": {
      "InputPath": "$.input.p",
      "Next": "2__false__input.p + input.p",
      "ResultPath": "$.heap21.str.right.num",
      "Type": "Pass",
    },
    "assign__1__false__input.p + input.z 1": {
      "InputPath": "$.input.z",
      "Next": "2__false__input.p + input.z",
      "ResultPath": "$.heap29.str.right.num",
      "Type": "Pass",
    },
    "assign__1__false__input.str + input.str 1": {
      "InputPath": "$.input.str",
      "Next": "2__false__input.str + input.str",
      "ResultPath": "$.heap117.str.right.num",
      "Type": "Pass",
    },
    "assign__1__true__b += input.p 1": {
      "InputPath": "$.input.p",
      "Next": "2__true__b += input.p",
      "ResultPath": "$.heap4.str.right.str",
      "Type": "Pass",
    },
    "assign__1__true__input.b + input.b 1": {
      "InputPath": "$.input.b",
      "Next": "2__true__input.b + input.b",
      "ResultPath": "$.heap52.str.right.str",
      "Type": "Pass",
    },
    "assign__1__true__input.p + input.n 1": {
      "InputPath": "$.input.n",
      "Next": "2__true__input.p + input.n",
      "ResultPath": "$.heap24.str.right.str",
      "Type": "Pass",
    },
    "assign__1__true__input.p + input.p 1": {
      "InputPath": "$.input.p",
      "Next": "2__true__input.p + input.p",
      "ResultPath": "$.heap20.str.right.str",
      "Type": "Pass",
    },
    "assign__1__true__input.p + input.z 1": {
      "InputPath": "$.input.z",
      "Next": "2__true__input.p + input.z",
      "ResultPath": "$.heap28.str.right.str",
      "Type": "Pass",
    },
    "assign__1__true__input.str + input.str 1": {
      "InputPath": "$.input.str",
      "Next": "2__true__input.str + input.str",
      "ResultPath": "$.heap116.str.right.str",
      "Type": "Pass",
    },
    "assign__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.p",
      "Next": "1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap56.num",
      "Type": "Pass",
    },
    "assign__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.p",
      "Next": "1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap61.num",
      "Type": "Pass",
    },
    "assign__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.p",
      "Next": "1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap66.num",
      "Type": "Pass",
    },
    "assign__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.p",
      "Next": "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap71.num",
      "Type": "Pass",
    },
    "assign__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.p",
      "Next": "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap74.num",
      "Type": "Pass",
    },
    "assign__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.str",
      "Next": "1__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap100.str.left.str",
      "Type": "Pass",
    },
    "assign__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "InputPath": "$.input.str",
      "Next": "1__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap110.str.right.str",
      "Type": "Pass",
    },
    "assign__b -= -1": {
      "InputPath": "$.b",
      "Next": "1__b -= -1 1",
      "ResultPath": "$.heap16.num",
      "Type": "Pass",
    },
    "assign__b -= 1": {
      "InputPath": "$.b",
      "Next": "1__b -= 1 1",
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "assign__b -= input.p": {
      "InputPath": "$.b",
      "Next": "1__b -= input.p 1",
      "ResultPath": "$.heap11.num",
      "Type": "Pass",
    },
    "assign__false__1 + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__false__1 + input.str 1",
      "ResultPath": "$.heap107.str.right.num",
      "Type": "Pass",
    },
    "assign__false__b += input.p": {
      "InputPath": "$.b",
      "Next": "1__false__b += input.p 1",
      "ResultPath": "$.heap5.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.b + input.b": {
      "InputPath": "$.input.b",
      "Next": "1__false__input.b + input.b 1",
      "ResultPath": "$.heap53.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.b + true": {
      "InputPath": "$.input.b",
      "Next": "1__false__input.b + true 1",
      "ResultPath": "$.heap49.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + -0": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + -0 1",
      "ResultPath": "$.heap41.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + -1": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + -1 1",
      "ResultPath": "$.heap37.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + 1": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + 1 1",
      "ResultPath": "$.heap33.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + input.n": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + input.n 1",
      "ResultPath": "$.heap25.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + input.p": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + input.p 1",
      "ResultPath": "$.heap21.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + input.z": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + input.z 1",
      "ResultPath": "$.heap29.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.p + true": {
      "InputPath": "$.input.p",
      "Next": "1__false__input.p + true 1",
      "ResultPath": "$.heap45.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.str + 1": {
      "InputPath": "$.input.str",
      "Next": "1__false__input.str + 1 1",
      "ResultPath": "$.heap97.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.str + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__false__input.str + input.str 1",
      "ResultPath": "$.heap117.str.left.num",
      "Type": "Pass",
    },
    "assign__false__input.str + true": {
      "InputPath": "$.input.str",
      "Next": "1__false__input.str + true 1",
      "ResultPath": "$.heap103.str.left.num",
      "Type": "Pass",
    },
    "assign__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "InputPath": "$.b",
      "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1",
      "ResultPath": "$.heap1.str.left.num",
      "Type": "Pass",
    },
    "assign__false__true + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__false__true + input.str 1",
      "ResultPath": "$.heap113.str.right.num",
      "Type": "Pass",
    },
    "assign__input.n": {
      "InputPath": "$.input.n",
      "Next": "1__input.n",
      "ResultPath": "$.heap90.num",
      "Type": "Pass",
    },
    "assign__input.p": {
      "InputPath": "$.input.p",
      "Next": "1__input.p",
      "ResultPath": "$.heap87.num",
      "Type": "Pass",
    },
    "assign__input.z": {
      "InputPath": "$.input.z",
      "Next": "1__input.z",
      "ResultPath": "$.heap93.num",
      "Type": "Pass",
    },
    "assign__true__1 + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__true__1 + input.str 1",
      "ResultPath": "$.heap106.str.right.str",
      "Type": "Pass",
    },
    "assign__true__b += input.p": {
      "InputPath": "$.b",
      "Next": "1__true__b += input.p 1",
      "ResultPath": "$.heap4.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.b + input.b": {
      "InputPath": "$.input.b",
      "Next": "1__true__input.b + input.b 1",
      "ResultPath": "$.heap52.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.b + true": {
      "InputPath": "$.input.b",
      "Next": "1__true__input.b + true 1",
      "ResultPath": "$.heap48.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + -0": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + -0 1",
      "ResultPath": "$.heap40.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + -1": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + -1 1",
      "ResultPath": "$.heap36.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + 1": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + 1 1",
      "ResultPath": "$.heap32.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + input.n": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + input.n 1",
      "ResultPath": "$.heap24.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + input.p": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + input.p 1",
      "ResultPath": "$.heap20.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + input.z": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + input.z 1",
      "ResultPath": "$.heap28.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.p + true": {
      "InputPath": "$.input.p",
      "Next": "1__true__input.p + true 1",
      "ResultPath": "$.heap44.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.str + 1": {
      "InputPath": "$.input.str",
      "Next": "1__true__input.str + 1 1",
      "ResultPath": "$.heap96.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.str + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__true__input.str + input.str 1",
      "ResultPath": "$.heap116.str.left.str",
      "Type": "Pass",
    },
    "assign__true__input.str + true": {
      "InputPath": "$.input.str",
      "Next": "1__true__input.str + true 1",
      "ResultPath": "$.heap102.str.left.str",
      "Type": "Pass",
    },
    "assign__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p,": {
      "InputPath": "$.b",
      "Next": "1__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu 1",
      "ResultPath": "$.heap0.str.left.str",
      "Type": "Pass",
    },
    "assign__true__true + input.str": {
      "InputPath": "$.input.str",
      "Next": "1__true__true + input.str 1",
      "ResultPath": "$.heap112.str.right.str",
      "Type": "Pass",
    },
    "b += input.p": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.b",
            },
          ],
          "Next": "assign__true__b += input.p",
        },
        {
          "Next": "format__true__b += input.p",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__b += input.p",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.b",
                },
              ],
            },
          ],
          "Next": "zero__false__b += input.p",
        },
        {
          "IsNull": true,
          "Next": "zero__false__b += input.p",
          "Variable": "$.b",
        },
        {
          "IsString": true,
          "Next": "format__false__b += input.p",
          "Variable": "$.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__b += input.p",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.b",
            },
          ],
          "Next": "one__false__b += input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.b",
            },
          ],
          "Next": "zero__false__b += input.p",
        },
      ],
      "Default": "null__false__b += input.p",
      "Type": "Choice",
    },
    "b -= -1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__b -= -1",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.b",
                },
              ],
            },
          ],
          "Next": "zero__b -= -1",
        },
        {
          "IsNull": true,
          "Next": "zero__b -= -1",
          "Variable": "$.b",
        },
        {
          "IsString": true,
          "Next": "format__b -= -1",
          "Variable": "$.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__b -= -1",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.b",
            },
          ],
          "Next": "one__b -= -1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.b",
            },
          ],
          "Next": "zero__b -= -1",
        },
      ],
      "Default": "null__b -= -1",
      "Type": "Choice",
    },
    "b -= 1": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__b -= 1",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.b",
                },
              ],
            },
          ],
          "Next": "zero__b -= 1",
        },
        {
          "IsNull": true,
          "Next": "zero__b -= 1",
          "Variable": "$.b",
        },
        {
          "IsString": true,
          "Next": "format__b -= 1",
          "Variable": "$.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__b -= 1",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.b",
            },
          ],
          "Next": "one__b -= 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.b",
            },
          ],
          "Next": "zero__b -= 1",
        },
      ],
      "Default": "null__b -= 1",
      "Type": "Choice",
    },
    "b -= input.p": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__b -= input.p",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.b",
                },
              ],
            },
          ],
          "Next": "zero__b -= input.p",
        },
        {
          "IsNull": true,
          "Next": "zero__b -= input.p",
          "Variable": "$.b",
        },
        {
          "IsString": true,
          "Next": "format__b -= input.p",
          "Variable": "$.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__b -= input.p",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.b",
            },
          ],
          "Next": "one__b -= input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.b",
            },
          ],
          "Next": "zero__b -= input.p",
        },
      ],
      "Default": "null__b -= input.p",
      "Type": "Choice",
    },
    "b = 1": {
      "Next": "return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqualsCo",
      "Result": 1,
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "checkStringOutput__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap57.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap57.num",
            },
          ],
          "Next": "NaN__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap57.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap57.num",
            },
          ],
          "Next": "negative__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
        },
        {
          "IsNumeric": true,
          "Next": "positive__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "Variable": "$.heap57.num",
        },
      ],
      "Default": "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "checkStringOutput__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap62.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap62.num",
            },
          ],
          "Next": "NaN__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap62.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap62.num",
            },
          ],
          "Next": "negative__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
        },
        {
          "IsNumeric": true,
          "Next": "positive__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "Variable": "$.heap62.num",
        },
      ],
      "Default": "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "checkStringOutput__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap67.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap67.num",
            },
          ],
          "Next": "NaN__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap67.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap67.num",
            },
          ],
          "Next": "negative__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
        },
        {
          "IsNumeric": true,
          "Next": "positive__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input",
          "Variable": "$.heap67.num",
        },
      ],
      "Default": "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "checkStringOutput__1__b -= input.p 1": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap12.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap12.num",
            },
          ],
          "Next": "NaN__2__b -= input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap12.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap12.num",
            },
          ],
          "Next": "negative__2__b -= input.p",
        },
        {
          "IsNumeric": true,
          "Next": "positive__2__b -= input.p",
          "Variable": "$.heap12.num",
        },
      ],
      "Default": "null__1__b -= input.p 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__b += input.p 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__b += input.p",
          "Variable": "$.heap5.str.right.num",
        },
      ],
      "Default": "null__1__false__b += input.p 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__input.b + input.b 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__input.b + input.b",
          "Variable": "$.heap53.str.right.num",
        },
      ],
      "Default": "null__1__false__input.b + input.b 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__input.p + input.n 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__input.p + input.n",
          "Variable": "$.heap25.str.right.num",
        },
      ],
      "Default": "null__1__false__input.p + input.n 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__input.p + input.p 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__input.p + input.p",
          "Variable": "$.heap21.str.right.num",
        },
      ],
      "Default": "null__1__false__input.p + input.p 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__input.p + input.z 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__input.p + input.z",
          "Variable": "$.heap29.str.right.num",
        },
      ],
      "Default": "null__1__false__input.p + input.z 1",
      "Type": "Choice",
    },
    "checkStringOutput__1__false__input.str + input.str 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "2__false__input.str + input.str",
          "Variable": "$.heap117.str.right.num",
        },
      ],
      "Default": "null__1__false__input.str + input.str 1",
      "Type": "Choice",
    },
    "checkStringOutput__29__return {plusEqualsConst: b += 1, plusEqualsRef: b +=": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.p",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.p",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "format__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "one__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap56.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.heap56.num",
        },
      ],
      "Default": "null__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "checkStringOutput__31__return {plusEqualsConst: b += 1, plusEqualsRef: b +=": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.n",
            },
          ],
          "Next": "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "format__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "assign__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.n",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "one__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap61.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.n",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.heap61.num",
        },
      ],
      "Default": "null__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "checkStringOutput__33__return {plusEqualsConst: b += 1, plusEqualsRef: b +=": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.z",
            },
          ],
          "Next": "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.z",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.z",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "format__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "assign__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.z",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "one__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap66.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.z",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.heap66.num",
        },
      ],
      "Default": "null__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "checkStringOutput__35__return {plusEqualsConst: b += 1, plusEqualsRef: b +=": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
          "Variable": "$.heap71.num",
        },
      ],
      "Default": "null__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "checkStringOutput__37__return {plusEqualsConst: b += 1, plusEqualsRef: b +=": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
          "Variable": "$.heap74.num",
        },
      ],
      "Default": "null__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min",
      "Type": "Choice",
    },
    "checkStringOutput__b -= -1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__b -= -1 1",
          "Variable": "$.heap16.num",
        },
      ],
      "Default": "null__b -= -1",
      "Type": "Choice",
    },
    "checkStringOutput__b -= 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__b -= 1 1",
          "Variable": "$.heap8.num",
        },
      ],
      "Default": "null__b -= 1",
      "Type": "Choice",
    },
    "checkStringOutput__b -= input.p": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "null__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.p",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.p",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "format__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "one__1__b -= input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap11.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__b -= input.p 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__b -= input.p 1",
          "Variable": "$.heap11.num",
        },
      ],
      "Default": "null__b -= input.p",
      "Type": "Choice",
    },
    "checkStringOutput__false__1 + input.str": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__1 + input.str 1",
          "Variable": "$.heap107.str.right.num",
        },
      ],
      "Default": "null__false__1 + input.str",
      "Type": "Choice",
    },
    "checkStringOutput__false__b += input.p": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "null__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.p",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.p",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "format__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "one__1__false__b += input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap5.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__false__b += input.p 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__b += input.p 1",
          "Variable": "$.heap5.str.left.num",
        },
      ],
      "Default": "null__false__b += input.p",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.b + input.b": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.b",
            },
          ],
          "Next": "null__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.b",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.b",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "zero__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "format__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "assign__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.b",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.b",
                },
              ],
            },
          ],
          "Next": "one__1__false__input.b + input.b 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap53.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.b",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.b",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.b + input.b 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__input.b + input.b 1",
          "Variable": "$.heap53.str.left.num",
        },
      ],
      "Default": "null__false__input.b + input.b",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.b + true": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.b + true 1",
          "Variable": "$.heap49.str.left.num",
        },
      ],
      "Default": "null__false__input.b + true",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + -0": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.p + -0 1",
          "Variable": "$.heap41.str.left.num",
        },
      ],
      "Default": "null__false__input.p + -0",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + -1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.p + -1 1",
          "Variable": "$.heap37.str.left.num",
        },
      ],
      "Default": "null__false__input.p + -1",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.p + 1 1",
          "Variable": "$.heap33.str.left.num",
        },
      ],
      "Default": "null__false__input.p + 1",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.n",
            },
          ],
          "Next": "null__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.n",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.n",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "zero__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "format__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "assign__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.n",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "one__1__false__input.p + input.n 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap25.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.n",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.n 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__input.p + input.n 1",
          "Variable": "$.heap25.str.left.num",
        },
      ],
      "Default": "null__false__input.p + input.n",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + input.p": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "null__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.p",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.p",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "format__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "one__1__false__input.p + input.p 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap21.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.p",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.p 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__input.p + input.p 1",
          "Variable": "$.heap21.str.left.num",
        },
      ],
      "Default": "null__false__input.p + input.p",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + input.z": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.z",
            },
          ],
          "Next": "null__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.z",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.z",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "zero__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "format__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "assign__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.z",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "one__1__false__input.p + input.z 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap29.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.z",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.p + input.z 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__input.p + input.z 1",
          "Variable": "$.heap29.str.left.num",
        },
      ],
      "Default": "null__false__input.p + input.z",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.p + true": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.p + true 1",
          "Variable": "$.heap45.str.left.num",
        },
      ],
      "Default": "null__false__input.p + true",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.str + 1": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.str + 1 1",
          "Variable": "$.heap97.str.left.num",
        },
      ],
      "Default": "null__false__input.str + 1",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.str + input.str": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "IsPresent": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "null__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.str",
                    },
                    {
                      "StringEquals": "",
                      "Variable": "$.input.str",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "IsNull": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "format__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.str",
                },
                {
                  "BooleanEquals": true,
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "one__1__false__input.str + input.str 1",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap117.str.left.num",
            },
            {
              "And": [
                {
                  "IsBoolean": true,
                  "Variable": "$.input.str",
                },
                {
                  "BooleanEquals": false,
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__1__false__input.str + input.str 1",
        },
        {
          "IsNumeric": true,
          "Next": "null__1__false__input.str + input.str 1",
          "Variable": "$.heap117.str.left.num",
        },
      ],
      "Default": "null__false__input.str + input.str",
      "Type": "Choice",
    },
    "checkStringOutput__false__input.str + true": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__input.str + true 1",
          "Variable": "$.heap103.str.left.num",
        },
      ],
      "Default": "null__false__input.str + true",
      "Type": "Choice",
    },
    "checkStringOutput__false__return {plusEqualsConst: b += 1, plusEqualsRef: b": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1",
          "Variable": "$.heap1.str.left.num",
        },
      ],
      "Default": "null__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "checkStringOutput__false__true + input.str": {
      "Choices": [
        {
          "IsNumeric": true,
          "Next": "1__false__true + input.str 1",
          "Variable": "$.heap113.str.right.num",
        },
      ],
      "Default": "null__false__true + input.str",
      "Type": "Choice",
    },
    "checkStringOutput__input.n": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap90.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap90.num",
            },
          ],
          "Next": "NaN__1__input.n",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap90.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap90.num",
            },
          ],
          "Next": "negative__1__input.n",
        },
        {
          "IsNumeric": true,
          "Next": "positive__1__input.n",
          "Variable": "$.heap90.num",
        },
      ],
      "Default": "null__input.n",
      "Type": "Choice",
    },
    "checkStringOutput__input.p": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap87.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap87.num",
            },
          ],
          "Next": "NaN__1__input.p",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap87.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap87.num",
            },
          ],
          "Next": "negative__1__input.p",
        },
        {
          "IsNumeric": true,
          "Next": "positive__1__input.p",
          "Variable": "$.heap87.num",
        },
      ],
      "Default": "null__input.p",
      "Type": "Choice",
    },
    "checkStringOutput__input.z": {
      "Choices": [
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap93.num",
            },
            {
              "IsNull": true,
              "Variable": "$.heap93.num",
            },
          ],
          "Next": "NaN__1__input.z",
        },
        {
          "And": [
            {
              "IsNumeric": true,
              "Variable": "$.heap93.num",
            },
            {
              "NumericLessThan": 0,
              "Variable": "$.heap93.num",
            },
          ],
          "Next": "negative__1__input.z",
        },
        {
          "IsNumeric": true,
          "Next": "positive__1__input.z",
          "Variable": "$.heap93.num",
        },
      ],
      "Default": "null__input.z",
      "Type": "Choice",
    },
    "format__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "Next": "checkStringOutput__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap57",
      "Type": "Pass",
    },
    "format__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "Next": "checkStringOutput__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b",
      "Parameters": {
        "num.$": "States.StringToJson($.input.n)",
      },
      "ResultPath": "$.heap62",
      "Type": "Pass",
    },
    "format__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "Next": "checkStringOutput__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b",
      "Parameters": {
        "num.$": "States.StringToJson($.input.z)",
      },
      "ResultPath": "$.heap67",
      "Type": "Pass",
    },
    "format__1__b -= input.p 1": {
      "Next": "checkStringOutput__1__b -= input.p 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "format__1__false__b += input.p 1": {
      "Next": "checkStringOutput__1__false__b += input.p 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap5.str.right",
      "Type": "Pass",
    },
    "format__1__false__input.b + input.b 1": {
      "Next": "checkStringOutput__1__false__input.b + input.b 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.b)",
      },
      "ResultPath": "$.heap53.str.right",
      "Type": "Pass",
    },
    "format__1__false__input.p + input.n 1": {
      "Next": "checkStringOutput__1__false__input.p + input.n 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.n)",
      },
      "ResultPath": "$.heap25.str.right",
      "Type": "Pass",
    },
    "format__1__false__input.p + input.p 1": {
      "Next": "checkStringOutput__1__false__input.p + input.p 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap21.str.right",
      "Type": "Pass",
    },
    "format__1__false__input.p + input.z 1": {
      "Next": "checkStringOutput__1__false__input.p + input.z 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.z)",
      },
      "ResultPath": "$.heap29.str.right",
      "Type": "Pass",
    },
    "format__1__false__input.str + input.str 1": {
      "Next": "checkStringOutput__1__false__input.str + input.str 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap117.str.right",
      "Type": "Pass",
    },
    "format__1__true__b += input.p 1": {
      "Next": "2__true__b += input.p",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap4.str.right",
      "Type": "Pass",
    },
    "format__1__true__input.b + input.b 1": {
      "Next": "2__true__input.b + input.b",
      "Parameters": {
        "str.$": "States.JsonToString($.input.b)",
      },
      "ResultPath": "$.heap52.str.right",
      "Type": "Pass",
    },
    "format__1__true__input.p + input.n 1": {
      "Next": "2__true__input.p + input.n",
      "Parameters": {
        "str.$": "States.JsonToString($.input.n)",
      },
      "ResultPath": "$.heap24.str.right",
      "Type": "Pass",
    },
    "format__1__true__input.p + input.p 1": {
      "Next": "2__true__input.p + input.p",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap20.str.right",
      "Type": "Pass",
    },
    "format__1__true__input.p + input.z 1": {
      "Next": "2__true__input.p + input.z",
      "Parameters": {
        "str.$": "States.JsonToString($.input.z)",
      },
      "ResultPath": "$.heap28.str.right",
      "Type": "Pass",
    },
    "format__1__true__input.str + input.str 1": {
      "Next": "2__true__input.str + input.str",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap116.str.right",
      "Type": "Pass",
    },
    "format__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "checkStringOutput__29__return {plusEqualsConst: b += 1, plusEqualsRef: b +=",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap56",
      "Type": "Pass",
    },
    "format__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "checkStringOutput__31__return {plusEqualsConst: b += 1, plusEqualsRef: b +=",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap61",
      "Type": "Pass",
    },
    "format__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "checkStringOutput__33__return {plusEqualsConst: b += 1, plusEqualsRef: b +=",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap66",
      "Type": "Pass",
    },
    "format__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "checkStringOutput__35__return {plusEqualsConst: b += 1, plusEqualsRef: b +=",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap71",
      "Type": "Pass",
    },
    "format__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "checkStringOutput__37__return {plusEqualsConst: b += 1, plusEqualsRef: b +=",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "format__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "1__55__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap100.str.left",
      "Type": "Pass",
    },
    "format__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "1__61__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap110.str.right",
      "Type": "Pass",
    },
    "format__b -= -1": {
      "Next": "checkStringOutput__b -= -1",
      "Parameters": {
        "num.$": "States.StringToJson($.b)",
      },
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "format__b -= 1": {
      "Next": "checkStringOutput__b -= 1",
      "Parameters": {
        "num.$": "States.StringToJson($.b)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "format__b -= input.p": {
      "Next": "checkStringOutput__b -= input.p",
      "Parameters": {
        "num.$": "States.StringToJson($.b)",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "format__false__1 + input.str": {
      "Next": "checkStringOutput__false__1 + input.str",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap107.str.right",
      "Type": "Pass",
    },
    "format__false__b += input.p": {
      "Next": "checkStringOutput__false__b += input.p",
      "Parameters": {
        "num.$": "States.StringToJson($.b)",
      },
      "ResultPath": "$.heap5.str.left",
      "Type": "Pass",
    },
    "format__false__input.b + input.b": {
      "Next": "checkStringOutput__false__input.b + input.b",
      "Parameters": {
        "num.$": "States.StringToJson($.input.b)",
      },
      "ResultPath": "$.heap53.str.left",
      "Type": "Pass",
    },
    "format__false__input.b + true": {
      "Next": "checkStringOutput__false__input.b + true",
      "Parameters": {
        "num.$": "States.StringToJson($.input.b)",
      },
      "ResultPath": "$.heap49.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + -0": {
      "Next": "checkStringOutput__false__input.p + -0",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap41.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + -1": {
      "Next": "checkStringOutput__false__input.p + -1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap37.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + 1": {
      "Next": "checkStringOutput__false__input.p + 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap33.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + input.n": {
      "Next": "checkStringOutput__false__input.p + input.n",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap25.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + input.p": {
      "Next": "checkStringOutput__false__input.p + input.p",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap21.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + input.z": {
      "Next": "checkStringOutput__false__input.p + input.z",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap29.str.left",
      "Type": "Pass",
    },
    "format__false__input.p + true": {
      "Next": "checkStringOutput__false__input.p + true",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap45.str.left",
      "Type": "Pass",
    },
    "format__false__input.str + 1": {
      "Next": "checkStringOutput__false__input.str + 1",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap97.str.left",
      "Type": "Pass",
    },
    "format__false__input.str + input.str": {
      "Next": "checkStringOutput__false__input.str + input.str",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap117.str.left",
      "Type": "Pass",
    },
    "format__false__input.str + true": {
      "Next": "checkStringOutput__false__input.str + true",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap103.str.left",
      "Type": "Pass",
    },
    "format__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p": {
      "Next": "checkStringOutput__false__return {plusEqualsConst: b += 1, plusEqualsRef: b",
      "Parameters": {
        "num.$": "States.StringToJson($.b)",
      },
      "ResultPath": "$.heap1.str.left",
      "Type": "Pass",
    },
    "format__false__true + input.str": {
      "Next": "checkStringOutput__false__true + input.str",
      "Parameters": {
        "num.$": "States.StringToJson($.input.str)",
      },
      "ResultPath": "$.heap113.str.right",
      "Type": "Pass",
    },
    "format__input.n": {
      "Next": "checkStringOutput__input.n",
      "Parameters": {
        "num.$": "States.StringToJson($.input.n)",
      },
      "ResultPath": "$.heap90",
      "Type": "Pass",
    },
    "format__input.p": {
      "Next": "checkStringOutput__input.p",
      "Parameters": {
        "num.$": "States.StringToJson($.input.p)",
      },
      "ResultPath": "$.heap87",
      "Type": "Pass",
    },
    "format__input.z": {
      "Next": "checkStringOutput__input.z",
      "Parameters": {
        "num.$": "States.StringToJson($.input.z)",
      },
      "ResultPath": "$.heap93",
      "Type": "Pass",
    },
    "format__true__1 + input.str": {
      "Next": "1__true__1 + input.str 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap106.str.right",
      "Type": "Pass",
    },
    "format__true__b += input.p": {
      "Next": "1__true__b += input.p 1",
      "Parameters": {
        "str.$": "States.JsonToString($.b)",
      },
      "ResultPath": "$.heap4.str.left",
      "Type": "Pass",
    },
    "format__true__input.b + input.b": {
      "Next": "1__true__input.b + input.b 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.b)",
      },
      "ResultPath": "$.heap52.str.left",
      "Type": "Pass",
    },
    "format__true__input.b + true": {
      "Next": "1__true__input.b + true 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.b)",
      },
      "ResultPath": "$.heap48.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + -0": {
      "Next": "1__true__input.p + -0 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap40.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + -1": {
      "Next": "1__true__input.p + -1 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap36.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + 1": {
      "Next": "1__true__input.p + 1 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap32.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + input.n": {
      "Next": "1__true__input.p + input.n 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap24.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + input.p": {
      "Next": "1__true__input.p + input.p 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap20.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + input.z": {
      "Next": "1__true__input.p + input.z 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap28.str.left",
      "Type": "Pass",
    },
    "format__true__input.p + true": {
      "Next": "1__true__input.p + true 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.p)",
      },
      "ResultPath": "$.heap44.str.left",
      "Type": "Pass",
    },
    "format__true__input.str + 1": {
      "Next": "1__true__input.str + 1 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap96.str.left",
      "Type": "Pass",
    },
    "format__true__input.str + input.str": {
      "Next": "1__true__input.str + input.str 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap116.str.left",
      "Type": "Pass",
    },
    "format__true__input.str + true": {
      "Next": "1__true__input.str + true 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap102.str.left",
      "Type": "Pass",
    },
    "format__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p,": {
      "Next": "1__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu 1",
      "Parameters": {
        "str.$": "States.JsonToString($.b)",
      },
      "ResultPath": "$.heap0.str.left",
      "Type": "Pass",
    },
    "format__true__true + input.str": {
      "Next": "1__true__true + input.str 1",
      "Parameters": {
        "str.$": "States.JsonToString($.input.str)",
      },
      "ResultPath": "$.heap112.str.right",
      "Type": "Pass",
    },
    "input.b + input.b": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "assign__true__input.b + input.b",
        },
        {
          "Next": "format__true__input.b + input.b",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.b + input.b",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.b",
                },
              ],
            },
          ],
          "Next": "zero__false__input.b + input.b",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.b + input.b",
          "Variable": "$.input.b",
        },
        {
          "IsString": true,
          "Next": "format__false__input.b + input.b",
          "Variable": "$.input.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.b + input.b",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "one__false__input.b + input.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.b",
            },
          ],
          "Next": "zero__false__input.b + input.b",
        },
      ],
      "Default": "null__false__input.b + input.b",
      "Type": "Choice",
    },
    "input.b + true": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "assign__true__input.b + true",
        },
        {
          "IsString": true,
          "Next": "format__true__input.b + true",
          "Variable": "$.input.b",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.b + true",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.b",
                },
              ],
            },
          ],
          "Next": "zero__false__input.b + true",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.b + true",
          "Variable": "$.input.b",
        },
        {
          "IsString": true,
          "Next": "format__false__input.b + true",
          "Variable": "$.input.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.b + true",
          "Variable": "$.input.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.b",
            },
          ],
          "Next": "one__false__input.b + true",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.b",
            },
          ],
          "Next": "zero__false__input.b + true",
        },
      ],
      "Default": "null__false__input.b + true",
      "Type": "Choice",
    },
    "input.n": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.n",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.n",
                },
              ],
            },
          ],
          "Next": "zero__input.n",
        },
        {
          "IsNull": true,
          "Next": "zero__input.n",
          "Variable": "$.input.n",
        },
        {
          "IsString": true,
          "Next": "format__input.n",
          "Variable": "$.input.n",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.n",
          "Variable": "$.input.n",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.n",
            },
          ],
          "Next": "one__input.n",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.n",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.n",
            },
          ],
          "Next": "zero__input.n",
        },
      ],
      "Default": "null__input.n",
      "Type": "Choice",
    },
    "input.p": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.p",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__input.p",
        },
        {
          "IsNull": true,
          "Next": "zero__input.p",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__input.p",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.p",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__input.p",
        },
      ],
      "Default": "null__input.p",
      "Type": "Choice",
    },
    "input.p + -0": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + -0",
        },
        {
          "IsString": true,
          "Next": "format__true__input.p + -0",
          "Variable": "$.input.p",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + -0",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + -0",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + -0",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + -0",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + -0",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + -0",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + -0",
        },
      ],
      "Default": "null__false__input.p + -0",
      "Type": "Choice",
    },
    "input.p + -1": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + -1",
        },
        {
          "IsString": true,
          "Next": "format__true__input.p + -1",
          "Variable": "$.input.p",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + -1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + -1",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + -1",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + -1",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + -1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + -1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + -1",
        },
      ],
      "Default": "null__false__input.p + -1",
      "Type": "Choice",
    },
    "input.p + 1": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + 1",
        },
        {
          "IsString": true,
          "Next": "format__true__input.p + 1",
          "Variable": "$.input.p",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + 1",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + 1",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + 1",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + 1",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + 1",
        },
      ],
      "Default": "null__false__input.p + 1",
      "Type": "Choice",
    },
    "input.p + input.n": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.n",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + input.n",
        },
        {
          "Next": "format__true__input.p + input.n",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.n",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + input.n",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + input.n",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + input.n",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + input.n",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + input.n",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + input.n",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + input.n",
        },
      ],
      "Default": "null__false__input.p + input.n",
      "Type": "Choice",
    },
    "input.p + input.p": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + input.p",
        },
        {
          "Next": "format__true__input.p + input.p",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + input.p",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + input.p",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + input.p",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + input.p",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + input.p",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + input.p",
        },
      ],
      "Default": "null__false__input.p + input.p",
      "Type": "Choice",
    },
    "input.p + input.z": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + input.z",
        },
        {
          "Next": "format__true__input.p + input.z",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + input.z",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + input.z",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + input.z",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + input.z",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + input.z",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + input.z",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + input.z",
        },
      ],
      "Default": "null__false__input.p + input.z",
      "Type": "Choice",
    },
    "input.p + true": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "assign__true__input.p + true",
        },
        {
          "IsString": true,
          "Next": "format__true__input.p + true",
          "Variable": "$.input.p",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.p + true",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.p",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.p",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.p",
                },
              ],
            },
          ],
          "Next": "zero__false__input.p + true",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.p + true",
          "Variable": "$.input.p",
        },
        {
          "IsString": true,
          "Next": "format__false__input.p + true",
          "Variable": "$.input.p",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.p + true",
          "Variable": "$.input.p",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.p",
            },
          ],
          "Next": "one__false__input.p + true",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.p",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.p",
            },
          ],
          "Next": "zero__false__input.p + true",
        },
      ],
      "Default": "null__false__input.p + true",
      "Type": "Choice",
    },
    "input.str + 1": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__true__input.str + 1",
        },
        {
          "IsString": true,
          "Next": "format__true__input.str + 1",
          "Variable": "$.input.str",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.str + 1",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__false__input.str + 1",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.str + 1",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__false__input.str + 1",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.str + 1",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__false__input.str + 1",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__false__input.str + 1",
        },
      ],
      "Default": "null__false__input.str + 1",
      "Type": "Choice",
    },
    "input.str + input.str": {
      "Choices": [
        {
          "And": [
            {
              "Or": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
              ],
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__true__input.str + input.str",
        },
        {
          "Next": "format__true__input.str + input.str",
          "Or": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.str + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__false__input.str + input.str",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.str + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__false__input.str + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.str + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__false__input.str + input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__false__input.str + input.str",
        },
      ],
      "Default": "null__false__input.str + input.str",
      "Type": "Choice",
    },
    "input.str + true": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__true__input.str + true",
        },
        {
          "IsString": true,
          "Next": "format__true__input.str + true",
          "Variable": "$.input.str",
        },
        {
          "IsPresent": false,
          "Next": "null__false__input.str + true",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__false__input.str + true",
        },
        {
          "IsNull": true,
          "Next": "zero__false__input.str + true",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__false__input.str + true",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__input.str + true",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__false__input.str + true",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__false__input.str + true",
        },
      ],
      "Default": "null__false__input.str + true",
      "Type": "Choice",
    },
    "input.z": {
      "Choices": [
        {
          "IsPresent": false,
          "Next": "null__input.z",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.z",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.z",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.z",
                },
              ],
            },
          ],
          "Next": "zero__input.z",
        },
        {
          "IsNull": true,
          "Next": "zero__input.z",
          "Variable": "$.input.z",
        },
        {
          "IsString": true,
          "Next": "format__input.z",
          "Variable": "$.input.z",
        },
        {
          "IsNumeric": true,
          "Next": "assign__input.z",
          "Variable": "$.input.z",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.z",
            },
          ],
          "Next": "one__input.z",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.z",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.z",
            },
          ],
          "Next": "zero__input.z",
        },
      ],
      "Default": "null__input.z",
      "Type": "Choice",
    },
    "negative__1__input.n": {
      "Next": "1__negative__1__input.n",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap90.num),'-')",
      },
      "ResultPath": "$.heap91",
      "Type": "Pass",
    },
    "negative__1__input.p": {
      "Next": "1__negative__1__input.p",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap87.num),'-')",
      },
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "negative__1__input.z": {
      "Next": "1__negative__1__input.z",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap93.num),'-')",
      },
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "negative__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "1__negative__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += in",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap57.num),'-')",
      },
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "negative__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "1__negative__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += in",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap62.num),'-')",
      },
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "negative__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "1__negative__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += in",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap67.num),'-')",
      },
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "negative__2__b -= input.p": {
      "Next": "1__negative__2__b -= input.p",
      "Parameters": {
        "num.$": "States.StringSplit(States.Format('{}',$.heap12.num),'-')",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "null__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap57.num",
      "Type": "Pass",
    },
    "null__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap62.num",
      "Type": "Pass",
    },
    "null__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap67.num",
      "Type": "Pass",
    },
    "null__1__b -= input.p 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__b -= input.p",
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "null__1__false__b += input.p 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__b += input.p",
      "ResultPath": "$.heap5.str.right.num",
      "Type": "Pass",
    },
    "null__1__false__input.b + input.b 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__input.b + input.b",
      "ResultPath": "$.heap53.str.right.num",
      "Type": "Pass",
    },
    "null__1__false__input.p + input.n 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__input.p + input.n",
      "ResultPath": "$.heap25.str.right.num",
      "Type": "Pass",
    },
    "null__1__false__input.p + input.p 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__input.p + input.p",
      "ResultPath": "$.heap21.str.right.num",
      "Type": "Pass",
    },
    "null__1__false__input.p + input.z 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__input.p + input.z",
      "ResultPath": "$.heap29.str.right.num",
      "Type": "Pass",
    },
    "null__1__false__input.str + input.str 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "2__false__input.str + input.str",
      "ResultPath": "$.heap117.str.right.num",
      "Type": "Pass",
    },
    "null__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap56.num",
      "Type": "Pass",
    },
    "null__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap61.num",
      "Type": "Pass",
    },
    "null__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap66.num",
      "Type": "Pass",
    },
    "null__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap71.num",
      "Type": "Pass",
    },
    "null__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "ResultPath": "$.heap74.num",
      "Type": "Pass",
    },
    "null__b -= -1": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__b -= -1 1",
      "ResultPath": "$.heap16.num",
      "Type": "Pass",
    },
    "null__b -= 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__b -= 1 1",
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "null__b -= input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__b -= input.p 1",
      "ResultPath": "$.heap11.num",
      "Type": "Pass",
    },
    "null__false__1 + input.str": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__1 + input.str 1",
      "ResultPath": "$.heap107.str.right.num",
      "Type": "Pass",
    },
    "null__false__b += input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__b += input.p 1",
      "ResultPath": "$.heap5.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.b + input.b": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.b + input.b 1",
      "ResultPath": "$.heap53.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.b + true": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.b + true 1",
      "ResultPath": "$.heap49.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + -0": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + -0 1",
      "ResultPath": "$.heap41.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + -1": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + -1 1",
      "ResultPath": "$.heap37.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + 1 1",
      "ResultPath": "$.heap33.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + input.n": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + input.n 1",
      "ResultPath": "$.heap25.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + input.p 1",
      "ResultPath": "$.heap21.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + input.z": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + input.z 1",
      "ResultPath": "$.heap29.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.p + true": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.p + true 1",
      "ResultPath": "$.heap45.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.str + 1": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.str + 1 1",
      "ResultPath": "$.heap97.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.str + input.str": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.str + input.str 1",
      "ResultPath": "$.heap117.str.left.num",
      "Type": "Pass",
    },
    "null__false__input.str + true": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__input.str + true 1",
      "ResultPath": "$.heap103.str.left.num",
      "Type": "Pass",
    },
    "null__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1",
      "ResultPath": "$.heap1.str.left.num",
      "Type": "Pass",
    },
    "null__false__true + input.str": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__false__true + input.str 1",
      "ResultPath": "$.heap113.str.right.num",
      "Type": "Pass",
    },
    "null__input.n": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__input.n",
      "ResultPath": "$.heap90.num",
      "Type": "Pass",
    },
    "null__input.p": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__input.p",
      "ResultPath": "$.heap87.num",
      "Type": "Pass",
    },
    "null__input.z": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__input.z",
      "ResultPath": "$.heap93.num",
      "Type": "Pass",
    },
    "one__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap57.num",
      "Type": "Pass",
    },
    "one__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap62.num",
      "Type": "Pass",
    },
    "one__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap67.num",
      "Type": "Pass",
    },
    "one__1__b -= input.p 1": {
      "Next": "2__b -= input.p",
      "Result": 1,
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "one__1__false__b += input.p 1": {
      "Next": "2__false__b += input.p",
      "Result": 1,
      "ResultPath": "$.heap5.str.right.num",
      "Type": "Pass",
    },
    "one__1__false__input.b + input.b 1": {
      "Next": "2__false__input.b + input.b",
      "Result": 1,
      "ResultPath": "$.heap53.str.right.num",
      "Type": "Pass",
    },
    "one__1__false__input.p + input.n 1": {
      "Next": "2__false__input.p + input.n",
      "Result": 1,
      "ResultPath": "$.heap25.str.right.num",
      "Type": "Pass",
    },
    "one__1__false__input.p + input.p 1": {
      "Next": "2__false__input.p + input.p",
      "Result": 1,
      "ResultPath": "$.heap21.str.right.num",
      "Type": "Pass",
    },
    "one__1__false__input.p + input.z 1": {
      "Next": "2__false__input.p + input.z",
      "Result": 1,
      "ResultPath": "$.heap29.str.right.num",
      "Type": "Pass",
    },
    "one__1__false__input.str + input.str 1": {
      "Next": "2__false__input.str + input.str",
      "Result": 1,
      "ResultPath": "$.heap117.str.right.num",
      "Type": "Pass",
    },
    "one__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "Next": "1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap56.num",
      "Type": "Pass",
    },
    "one__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "Next": "1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap61.num",
      "Type": "Pass",
    },
    "one__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "Next": "1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap66.num",
      "Type": "Pass",
    },
    "one__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "Next": "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap71.num",
      "Type": "Pass",
    },
    "one__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minu": {
      "Next": "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 1,
      "ResultPath": "$.heap74.num",
      "Type": "Pass",
    },
    "one__b -= -1": {
      "Next": "1__b -= -1 1",
      "Result": 1,
      "ResultPath": "$.heap16.num",
      "Type": "Pass",
    },
    "one__b -= 1": {
      "Next": "1__b -= 1 1",
      "Result": 1,
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "one__b -= input.p": {
      "Next": "1__b -= input.p 1",
      "Result": 1,
      "ResultPath": "$.heap11.num",
      "Type": "Pass",
    },
    "one__false__1 + input.str": {
      "Next": "1__false__1 + input.str 1",
      "Result": 1,
      "ResultPath": "$.heap107.str.right.num",
      "Type": "Pass",
    },
    "one__false__b += input.p": {
      "Next": "1__false__b += input.p 1",
      "Result": 1,
      "ResultPath": "$.heap5.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.b + input.b": {
      "Next": "1__false__input.b + input.b 1",
      "Result": 1,
      "ResultPath": "$.heap53.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.b + true": {
      "Next": "1__false__input.b + true 1",
      "Result": 1,
      "ResultPath": "$.heap49.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + -0": {
      "Next": "1__false__input.p + -0 1",
      "Result": 1,
      "ResultPath": "$.heap41.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + -1": {
      "Next": "1__false__input.p + -1 1",
      "Result": 1,
      "ResultPath": "$.heap37.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + 1": {
      "Next": "1__false__input.p + 1 1",
      "Result": 1,
      "ResultPath": "$.heap33.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + input.n": {
      "Next": "1__false__input.p + input.n 1",
      "Result": 1,
      "ResultPath": "$.heap25.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + input.p": {
      "Next": "1__false__input.p + input.p 1",
      "Result": 1,
      "ResultPath": "$.heap21.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + input.z": {
      "Next": "1__false__input.p + input.z 1",
      "Result": 1,
      "ResultPath": "$.heap29.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.p + true": {
      "Next": "1__false__input.p + true 1",
      "Result": 1,
      "ResultPath": "$.heap45.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.str + 1": {
      "Next": "1__false__input.str + 1 1",
      "Result": 1,
      "ResultPath": "$.heap97.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.str + input.str": {
      "Next": "1__false__input.str + input.str 1",
      "Result": 1,
      "ResultPath": "$.heap117.str.left.num",
      "Type": "Pass",
    },
    "one__false__input.str + true": {
      "Next": "1__false__input.str + true 1",
      "Result": 1,
      "ResultPath": "$.heap103.str.left.num",
      "Type": "Pass",
    },
    "one__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m": {
      "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1",
      "Result": 1,
      "ResultPath": "$.heap1.str.left.num",
      "Type": "Pass",
    },
    "one__false__true + input.str": {
      "Next": "1__false__true + input.str 1",
      "Result": 1,
      "ResultPath": "$.heap113.str.right.num",
      "Type": "Pass",
    },
    "one__input.n": {
      "Next": "1__input.n",
      "Result": 1,
      "ResultPath": "$.heap90.num",
      "Type": "Pass",
    },
    "one__input.p": {
      "Next": "1__input.p",
      "Result": 1,
      "ResultPath": "$.heap87.num",
      "Type": "Pass",
    },
    "one__input.z": {
      "Next": "1__input.z",
      "Result": 1,
      "ResultPath": "$.heap93.num",
      "Type": "Pass",
    },
    "positive__1__input.n": {
      "Next": "input.z",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap90.num))",
      },
      "ResultPath": "$.heap91",
      "Type": "Pass",
    },
    "positive__1__input.p": {
      "Next": "input.n",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap87.num))",
      },
      "ResultPath": "$.heap88",
      "Type": "Pass",
    },
    "positive__1__input.z": {
      "Next": "input.str + 1",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap93.num))",
      },
      "ResultPath": "$.heap94",
      "Type": "Pass",
    },
    "positive__2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "3__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap57.num))",
      },
      "ResultPath": "$.heap58",
      "Type": "Pass",
    },
    "positive__2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "3__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap62.num))",
      },
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "positive__2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input": {
      "Next": "3__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap67.num))",
      },
      "ResultPath": "$.heap68",
      "Type": "Pass",
    },
    "positive__2__b -= input.p": {
      "Next": "3__b -= input.p",
      "Parameters": {
        "num.$": "States.StringToJson(States.Format('-{}',$.heap12.num))",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusEqualsCo": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "IsString": true,
              "Variable": "$.b",
            },
          ],
          "Next": "assign__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p,",
        },
        {
          "IsString": true,
          "Next": "format__true__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p,",
          "Variable": "$.b",
        },
        {
          "IsPresent": false,
          "Next": "null__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.b",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.b",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.b",
                },
              ],
            },
          ],
          "Next": "zero__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
        {
          "IsNull": true,
          "Next": "zero__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
          "Variable": "$.b",
        },
        {
          "IsString": true,
          "Next": "format__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.b",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p",
          "Variable": "$.b",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.b",
            },
          ],
          "Next": "one__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, m",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.b",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.b",
            },
          ],
          "Next": "zero__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
        },
      ],
      "Default": "null__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ",
      "Type": "Choice",
    },
    "true + input.str": {
      "Choices": [
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "assign__true__true + input.str",
        },
        {
          "IsString": true,
          "Next": "format__true__true + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsPresent": false,
          "Next": "null__false__true + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
            {
              "And": [
                {
                  "IsString": true,
                  "Variable": "$.input.str",
                },
                {
                  "StringEquals": "",
                  "Variable": "$.input.str",
                },
              ],
            },
          ],
          "Next": "zero__false__true + input.str",
        },
        {
          "IsNull": true,
          "Next": "zero__false__true + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsString": true,
          "Next": "format__false__true + input.str",
          "Variable": "$.input.str",
        },
        {
          "IsNumeric": true,
          "Next": "assign__false__true + input.str",
          "Variable": "$.input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "one__false__true + input.str",
        },
        {
          "And": [
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
            {
              "BooleanEquals": false,
              "Variable": "$.input.str",
            },
          ],
          "Next": "zero__false__true + input.str",
        },
      ],
      "Default": "null__false__true + input.str",
      "Type": "Choice",
    },
    "zero__1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "Next": "2__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap57.num",
      "Type": "Pass",
    },
    "zero__1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "Next": "2__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap62.num",
      "Type": "Pass",
    },
    "zero__1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "Next": "2__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap67.num",
      "Type": "Pass",
    },
    "zero__1__b -= input.p 1": {
      "Next": "2__b -= input.p",
      "Result": 0,
      "ResultPath": "$.heap12.num",
      "Type": "Pass",
    },
    "zero__1__false__b += input.p 1": {
      "Next": "2__false__b += input.p",
      "Result": 0,
      "ResultPath": "$.heap5.str.right.num",
      "Type": "Pass",
    },
    "zero__1__false__input.b + input.b 1": {
      "Next": "2__false__input.b + input.b",
      "Result": 0,
      "ResultPath": "$.heap53.str.right.num",
      "Type": "Pass",
    },
    "zero__1__false__input.p + input.n 1": {
      "Next": "2__false__input.p + input.n",
      "Result": 0,
      "ResultPath": "$.heap25.str.right.num",
      "Type": "Pass",
    },
    "zero__1__false__input.p + input.p 1": {
      "Next": "2__false__input.p + input.p",
      "Result": 0,
      "ResultPath": "$.heap21.str.right.num",
      "Type": "Pass",
    },
    "zero__1__false__input.p + input.z 1": {
      "Next": "2__false__input.p + input.z",
      "Result": 0,
      "ResultPath": "$.heap29.str.right.num",
      "Type": "Pass",
    },
    "zero__1__false__input.str + input.str 1": {
      "Next": "2__false__input.str + input.str",
      "Result": 0,
      "ResultPath": "$.heap117.str.right.num",
      "Type": "Pass",
    },
    "zero__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "Next": "1__29__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap56.num",
      "Type": "Pass",
    },
    "zero__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "Next": "1__31__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap61.num",
      "Type": "Pass",
    },
    "zero__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "Next": "1__33__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap66.num",
      "Type": "Pass",
    },
    "zero__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "Next": "1__35__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap71.num",
      "Type": "Pass",
    },
    "zero__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min": {
      "Next": "1__37__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, minusE",
      "Result": 0,
      "ResultPath": "$.heap74.num",
      "Type": "Pass",
    },
    "zero__b -= -1": {
      "Next": "1__b -= -1 1",
      "Result": 0,
      "ResultPath": "$.heap16.num",
      "Type": "Pass",
    },
    "zero__b -= 1": {
      "Next": "1__b -= 1 1",
      "Result": 0,
      "ResultPath": "$.heap8.num",
      "Type": "Pass",
    },
    "zero__b -= input.p": {
      "Next": "1__b -= input.p 1",
      "Result": 0,
      "ResultPath": "$.heap11.num",
      "Type": "Pass",
    },
    "zero__false__1 + input.str": {
      "Next": "1__false__1 + input.str 1",
      "Result": 0,
      "ResultPath": "$.heap107.str.right.num",
      "Type": "Pass",
    },
    "zero__false__b += input.p": {
      "Next": "1__false__b += input.p 1",
      "Result": 0,
      "ResultPath": "$.heap5.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.b + input.b": {
      "Next": "1__false__input.b + input.b 1",
      "Result": 0,
      "ResultPath": "$.heap53.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.b + true": {
      "Next": "1__false__input.b + true 1",
      "Result": 0,
      "ResultPath": "$.heap49.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + -0": {
      "Next": "1__false__input.p + -0 1",
      "Result": 0,
      "ResultPath": "$.heap41.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + -1": {
      "Next": "1__false__input.p + -1 1",
      "Result": 0,
      "ResultPath": "$.heap37.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + 1": {
      "Next": "1__false__input.p + 1 1",
      "Result": 0,
      "ResultPath": "$.heap33.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + input.n": {
      "Next": "1__false__input.p + input.n 1",
      "Result": 0,
      "ResultPath": "$.heap25.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + input.p": {
      "Next": "1__false__input.p + input.p 1",
      "Result": 0,
      "ResultPath": "$.heap21.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + input.z": {
      "Next": "1__false__input.p + input.z 1",
      "Result": 0,
      "ResultPath": "$.heap29.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.p + true": {
      "Next": "1__false__input.p + true 1",
      "Result": 0,
      "ResultPath": "$.heap45.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.str + 1": {
      "Next": "1__false__input.str + 1 1",
      "Result": 0,
      "ResultPath": "$.heap97.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.str + input.str": {
      "Next": "1__false__input.str + input.str 1",
      "Result": 0,
      "ResultPath": "$.heap117.str.left.num",
      "Type": "Pass",
    },
    "zero__false__input.str + true": {
      "Next": "1__false__input.str + true 1",
      "Result": 0,
      "ResultPath": "$.heap103.str.left.num",
      "Type": "Pass",
    },
    "zero__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, ": {
      "Next": "1__false__return {plusEqualsConst: b += 1, plusEqualsRef: b += input.p, min 1",
      "Result": 0,
      "ResultPath": "$.heap1.str.left.num",
      "Type": "Pass",
    },
    "zero__false__true + input.str": {
      "Next": "1__false__true + input.str 1",
      "Result": 0,
      "ResultPath": "$.heap113.str.right.num",
      "Type": "Pass",
    },
    "zero__input.n": {
      "Next": "1__input.n",
      "Result": 0,
      "ResultPath": "$.heap90.num",
      "Type": "Pass",
    },
    "zero__input.p": {
      "Next": "1__input.p",
      "Result": 0,
      "ResultPath": "$.heap87.num",
      "Type": "Pass",
    },
    "zero__input.z": {
      "Next": "1__input.z",
      "Result": 0,
      "ResultPath": "$.heap93.num",
      "Type": "Pass",
    },
  },
}
`;

exports[`no state pollution 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return a ?? null": {
      "End": true,
      "InputPath": "$.heap0",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "return a ?? null",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__return a ?? null": {
      "InputPath": "$.fnl_context.null",
      "Next": "1__return a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return a ?? null": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.a",
            },
            {
              "IsNull": false,
              "Variable": "$.a",
            },
          ],
          "Next": "true__return a ?? null",
        },
      ],
      "Default": "false__return a ?? null",
      "Type": "Choice",
    },
    "true__return a ?? null": {
      "InputPath": "$.a",
      "Next": "1__return a ?? null",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`object literal spread 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu": {
      "Next": "1__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, .",
      "Parameters": {
        "out.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0,$.input,false),$.input,false),$.heap74.out.d1,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.heap73,false)",
      },
      "ResultPath": "$.heap74",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 1": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
        "d1.$": "States.StringToJson('{"x":7,"y":8,"z":9,"a":1,"m":4}')",
      },
      "ResultPath": "$.heap74.out",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 2": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 1",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
      },
      "ResultPath": "$.heap74.out.d0",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 3": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 2",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
      },
      "ResultPath": "$.heap74.out.d0.d0",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 4": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 3",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0.d0.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
      },
      "ResultPath": "$.heap74.out.d0.d0.d0",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 5": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 4",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0.d0.d0.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.heap74.out.d0.d0.d0.d0.d0.d1,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
      },
      "ResultPath": "$.heap74.out.d0.d0.d0.d0",
      "Type": "Pass",
    },
    "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 6": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 5",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge($.heap74.out.d0.d0.d0.d0.d0.d0.d0,$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
        "d1.$": "States.StringToJson('{"m":0,"n":5,"o":6}')",
      },
      "ResultPath": "$.heap74.out.d0.d0.d0.d0.d0",
      "Type": "Pass",
    },
    "1__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, .": {
      "End": true,
      "InputPath": "$.heap74.out",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "72__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, ": {
      "Next": "73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, ",
      "Parameters": {
        "literalValueObjectLiterals.$": "$.heap0.out",
      },
      "ResultPath": "$.heap73",
      "Type": "Pass",
    },
    "73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, ": {
      "Next": "1__73__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...inpu 6",
      "Parameters": {
        "d0.$": "States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.JsonMerge(States.StringToJson('{"a":0,"b":2,"c":3}'),$.input,false),$.input,false),$.input,false),$.input,false),$.input,false)",
      },
      "ResultPath": "$.heap74.out.d0.d0.d0.d0.d0.d0",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "literalValueObjectLiterals = {x: 1, y: "a", j: {x: 2}, ...input}",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "literalValueObjectLiterals = {x: 1, y: "a", j: {x: 2}, ...input}": {
      "Next": "72__return {...{a: 0, b: 2, c: 3}, ...input, ...input, ...input, ...input, ",
      "Parameters": {
        "out.$": "States.JsonMerge(States.StringToJson('{"x":1,"y":"a","j":{"x":2}}'),$.input,false)",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`optimize cases 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,": {
      "End": true,
      "Parameters": {
        "a.$": "$.input.obj.a",
        "b.$": "$.input.arr[0]",
        "c": "a",
        "d": 1,
        "t.$": "$.heap11.string",
        "u": {
          "f": "e",
        },
        "v": "d",
        "w.$": "$.d.c",
        "x.$": "$.c.c",
        "y.$": "$.b",
        "z.$": "$.a",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "2__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,": {
      "Next": "3__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": "a",
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "3__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,": {
      "Next": "8__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": 1,
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "8__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,": {
      "Next": "9__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": "d",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "9__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,": {
      "Next": "this g.e 1",
      "Parameters": {
        "f": "e",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "obj = {1: "a"}",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = "a"": {
      "Next": "b = {c: ""}",
      "Result": "a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = "b"": {
      "Next": "b = {c: ""}",
      "Result": "b",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "arr = [1]": {
      "Next": "if(input.x)",
      "Result": [
        1,
      ],
      "ResultPath": "$.arr",
      "Type": "Pass",
    },
    "b = {c: ""}": {
      "Next": "if(input.x) 1",
      "Result": {
        "c": "",
      },
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b.c = "a"": {
      "Next": "c = {c: ""}",
      "Result": "a",
      "ResultPath": "$.b.c",
      "Type": "Pass",
    },
    "b.c = "b"": {
      "Next": "c = {c: ""}",
      "Result": "b",
      "ResultPath": "$.b.c",
      "Type": "Pass",
    },
    "c = {c: ""}": {
      "Next": "if(input.x) 2",
      "Result": {
        "c": "",
      },
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c.c = "a"": {
      "Next": "d = {c: {c: ""}}",
      "Result": "a",
      "ResultPath": "$.c.c",
      "Type": "Pass",
    },
    "c.c = "b"": {
      "Next": "d = {c: {c: ""}}",
      "Result": "b",
      "ResultPath": "$.c.c",
      "Type": "Pass",
    },
    "d = {c: {c: ""}}": {
      "Next": "xx = {c: "1"}",
      "Result": {
        "c": {
          "c": "",
        },
      },
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "d.c = xx": {
      "Next": "e = {d: "d"}",
      "Parameters": {
        "c": "1",
      },
      "ResultPath": "$.d.c",
      "Type": "Pass",
    },
    "d.c = yy": {
      "Next": "e = {d: "d"}",
      "Parameters": {
        "c": "2",
      },
      "ResultPath": "$.d.c",
      "Type": "Pass",
    },
    "e = {d: "d"}": {
      "Next": "v = e.d",
      "Result": {
        "d": "d",
      },
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "f = {e: {f: "e"}}": {
      "Next": "u = f.e",
      "Result": {
        "e": {
          "f": "e",
        },
      },
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "g = {e: "f"}": {
      "Next": "2__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,",
      "Result": {
        "e": "f",
      },
      "ResultPath": "$.g",
      "Type": "Pass",
    },
    "if(input.x)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "a = "a"",
        },
      ],
      "Default": "a = "b"",
      "Type": "Choice",
    },
    "if(input.x) 1": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "b.c = "a"",
        },
      ],
      "Default": "b.c = "b"",
      "Type": "Choice",
    },
    "if(input.x) 2": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "c.c = "a"",
        },
      ],
      "Default": "c.c = "b"",
      "Type": "Choice",
    },
    "if(input.x) 3": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.x",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.x",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.x",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.x",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.x",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.x",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.x",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.x",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "d.c = xx",
        },
      ],
      "Default": "d.c = yy",
      "Type": "Choice",
    },
    "obj = {1: "a"}": {
      "Next": "arr = [1]",
      "Result": {
        "1": "a",
      },
      "ResultPath": "$.obj",
      "Type": "Pass",
    },
    "this g.e 1": {
      "Next": "1__return {a: obj2.a, b: arr2[0], c: obj["1"], d: arr[0], z: z, y: y, x: x,",
      "Parameters": {
        "string.$": "States.Format('this {}','f')",
      },
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "u = f.e": {
      "Next": "g = {e: "f"}",
      "Parameters": {
        "f": "e",
      },
      "ResultPath": "$.u",
      "Type": "Pass",
    },
    "v = e.d": {
      "Next": "f = {e: {f: "e"}}",
      "Parameters": "d",
      "ResultPath": "$.v",
      "Type": "Pass",
    },
    "xx = {c: "1"}": {
      "Next": "yy = {c: "2"}",
      "Result": {
        "c": "1",
      },
      "ResultPath": "$.xx",
      "Type": "Pass",
    },
    "yy = {c: "2"}": {
      "Next": "if(input.x) 3",
      "Result": {
        "c": "2",
      },
      "ResultPath": "$.yy",
      "Type": "Pass",
    },
  },
}
`;

exports[`overlapping variable with input 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {a: input.a, b: a}": {
      "End": true,
      "Parameters": {
        "a.$": "$.input.a",
        "b": "2",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = "2"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = "2"": {
      "Next": "return {a: input.a, b: a}",
      "Result": "2",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "return {a: input.a, b: a}": {
      "InputPath": "$.input.a",
      "Next": "1__return {a: input.a, b: a}",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

exports[`queue 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__await queue.sendMessage({MessageBody: {id: "hello"}})": {
      "Next": "await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: "1",
      "Parameters": {
        "MessageBody.$": "States.JsonToString($.heap0)",
        "QueueUrl": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:sendMessage",
      "ResultPath": null,
      "Type": "Task",
    },
    "1__await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id:": {
      "ItemsPath": "$.heap2.Entries",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "Next": "unwrap Message__Default",
            "Parameters": {
              "value.$": "States.JsonToString($.entry.MessageBody)",
            },
            "ResultPath": "$.entry.MessageBody",
            "Type": "Pass",
          },
          "unwrap Message__Default": {
            "End": true,
            "InputPath": "$.entry.MessageBody.value",
            "OutputPath": "$.entry",
            "ResultPath": "$.entry.MessageBody",
            "Type": "Pass",
          },
        },
      },
      "Next": "send message batch__1__await queue.sendMessageBatch({Entries: [{MessageBody",
      "Parameters": {
        "entry.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap3",
      "Type": "Map",
    },
    "1__await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: 1": {
      "ItemsPath": "$.heap4.Entries",
      "Iterator": {
        "StartAt": "Default 1",
        "States": {
          "Default 1": {
            "Next": "unwrap Message__Default 1",
            "Parameters": {
              "value.$": "States.JsonToString($.entry.MessageBody)",
            },
            "ResultPath": "$.entry.MessageBody",
            "Type": "Pass",
          },
          "unwrap Message__Default 1": {
            "End": true,
            "InputPath": "$.entry.MessageBody.value",
            "OutputPath": "$.entry",
            "ResultPath": "$.entry.MessageBody",
            "Type": "Pass",
          },
        },
      },
      "Next": "send message batch__1__await queue.sendMessageBatch({Entries: [{MessageBody 1",
      "Parameters": {
        "entry.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap5",
      "Type": "Map",
    },
    "Initialize Functionless Context": {
      "Next": "await queue.sendMessage({MessageBody: {id: "hello"}})",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "await queue.purge()": {
      "Next": "return null",
      "Parameters": {
        "QueueUrl": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:purgeQueue",
      "ResultPath": null,
      "Type": "Task",
    },
    "await queue.receiveMessage()": {
      "Next": "parseIfMessages__await queue.receiveMessage()",
      "Parameters": {
        "QueueUrl": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:receiveMessage",
      "ResultPath": "$.heap6",
      "Type": "Task",
    },
    "await queue.sendMessage({MessageBody: {id: "hello"}})": {
      "Next": "1__await queue.sendMessage({MessageBody: {id: "hello"}})",
      "Parameters": {
        "id": "hello",
      },
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: "1": {
      "Next": "1__await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id:",
      "Result": {
        "Entries": [
          {
            "Id": "1",
            "MessageBody": {
              "id": "hello",
            },
          },
        ],
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: "2": {
      "Next": "1__await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: 1",
      "Result": {
        "Entries": [
          {
            "Id": "2",
            "MessageBody": {
              "id": "hello",
            },
          },
        ],
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "parseIfMessages__await queue.receiveMessage()": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "parse__await queue.receiveMessage()",
          "Variable": "$.heap6.Messages",
        },
      ],
      "Default": "await queue.purge()",
      "Type": "Choice",
    },
    "parse__await queue.receiveMessage()": {
      "ItemsPath": "$.heap6.Messages",
      "Iterator": {
        "StartAt": "Default 2",
        "States": {
          "Default 2": {
            "Next": "UnwrapMessage__Default 2",
            "Parameters": {
              "parsed.$": "States.StringToJson($.message.Body)",
            },
            "ResultPath": "$.message.Message",
            "Type": "Pass",
          },
          "UnwrapMessage__Default 2": {
            "End": true,
            "InputPath": "$.message.Message.parsed",
            "OutputPath": "$.message",
            "ResultPath": "$.message.Message",
            "Type": "Pass",
          },
        },
      },
      "Next": "await queue.purge()",
      "Parameters": {
        "message.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap6.Messages",
      "Type": "Map",
    },
    "return null": {
      "End": true,
      "InputPath": "$.fnl_context.null",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "send message batch__1__await queue.sendMessageBatch({Entries: [{MessageBody": {
      "Next": "await queue.sendMessageBatch({Entries: [{MessageBody: {id: "hello"}, Id: "2",
      "Parameters": {
        "Entries.$": "$.heap3",
        "QueueUrl": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:sendMessageBatch",
      "ResultPath": "$.heap3",
      "Type": "Task",
    },
    "send message batch__1__await queue.sendMessageBatch({Entries: [{MessageBody 1": {
      "Next": "await queue.receiveMessage()",
      "Parameters": {
        "Entries.$": "$.heap5",
        "QueueUrl": "__REPLACED_TOKEN",
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:sendMessageBatch",
      "ResultPath": "$.heap5",
      "Type": "Task",
    },
  },
}
`;

exports[`shadowing maintains state 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.map([7], function (f))": {
      "ItemsPath": "$.heap9",
      "Iterator": {
        "StartAt": "return abcdef",
        "States": {
          "1__return abcdef": {
            "End": true,
            "InputPath": "$.heap8.string",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "abcdef": {
            "Next": "1__return abcdef",
            "Parameters": {
              "string.$": "States.Format('{}{}{}{}{}{}',$.a__1,$.b__1,$.c__1,$.d__1,$.e__1,$.f__1)",
            },
            "ResultPath": "$.heap8",
            "Type": "Pass",
          },
          "return abcdef": {
            "InputPath": "$.a__1",
            "Next": "abcdef",
            "ResultPath": null,
            "Type": "Pass",
          },
        },
      },
      "Next": "-rabcdef",
      "Parameters": {
        "a__1.$": "$.a__1",
        "b__1.$": "$.b__1",
        "c__1.$": "$.c__1",
        "d__1.$": "$.d__1",
        "e__1.$": "$.e__1",
        "f.$": "$.f",
        "f__1.$": "$$.Map.Item.Value",
        "fnl_context.$": "$.fnl_context",
        "res.$": "$.res",
      },
      "ResultPath": "$.heap10",
      "Type": "Map",
    },
    "-rabcdef": {
      "Next": "res = -rabcdef 1",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.heap10[0],$.a__1,$.b__1,$.c__1,$.d__1,$.e__1,$.f)",
      },
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "-resabcde-fz": {
      "Next": "1__return -resabcde-fz",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}-{}',$.res,1,$.b,$.c,$.d,$.e,$.f,$.heap54[0])",
      },
      "ResultPath": "$.heap63",
      "Type": "Pass",
    },
    "-resabcdef": {
      "Next": "res = -resabcdef 4",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c__1,$.d__1,$.e,$.f)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "-resabcdef 1": {
      "Next": "res = -resabcdef 5",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c__1,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap34",
      "Type": "Pass",
    },
    "-resabcdef 2": {
      "Next": "res = -resabcdef 6",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b__1,$.c,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap42",
      "Type": "Pass",
    },
    "-resabcdef 3": {
      "Next": "res = -resabcdef 7",
      "Parameters": {
        "string.$": "States.Format('{}-{}{}{}{}{}{}',$.res,$.a__1,$.b,$.c,$.d,$.e,$.f)",
      },
      "ResultPath": "$.heap51",
      "Type": "Pass",
    },
    "1__await Promise.all([4].map(function (c)))": {
      "Next": "check__1__await Promise.all([4].map(function (c)))",
      "Parameters": {
        "arr": [
          4,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "1__for(a in [2])": {
      "ItemsPath": "$.heap52",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__for(a in [2])",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap52",
      "Type": "Map",
    },
    "1__for(e = 6;e === 6;e = 7)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.e__1",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.e__1",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.e__1",
                    },
                    {
                      "NumericEquals": 6,
                      "Variable": "$.e__1",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "r = await $SFN.map([7], function (f))[0]",
        },
      ],
      "Default": "-resabcdef",
      "Type": "Choice",
    },
    "1__return -resabcde-fz": {
      "End": true,
      "InputPath": "$.heap63.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1__z = [0].map(function (z))[0]": {
      "Next": "check__1__z = [0].map(function (z))[0]",
      "Parameters": {
        "arr": [
          0,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "[ a, b, c, d, e, f ] = [1, 1, 1, 1, 1, 1]",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "[ a, b, c, d, e, f ] = [1, 1, 1, 1, 1, 1]": {
      "Next": "b 1",
      "Result": 1,
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a": {
      "InputPath": "$.heap52[0].index",
      "Next": "for(b of [3])",
      "ResultPath": "$.a__1",
      "Type": "Pass",
    },
    "await Promise.all([4].map(function (c)))": {
      "Next": "1__await Promise.all([4].map(function (c)))",
      "Result": [
        4,
      ],
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "b 1": {
      "Next": "c 1",
      "Result": 1,
      "ResultPath": "$.b",
      "Type": "Pass",
    },
    "b 2": {
      "InputPath": "$.heap43[0]",
      "Next": "await Promise.all([4].map(function (c)))",
      "ResultPath": "$.b__1",
      "Type": "Pass",
    },
    "c 1": {
      "Next": "d 1",
      "Result": 1,
      "ResultPath": "$.c",
      "Type": "Pass",
    },
    "c 2": {
      "InputPath": "$.heap1.arr[0]",
      "Next": "if(c === 4)",
      "ResultPath": "$.c__1",
      "Type": "Pass",
    },
    "check__1__await Promise.all([4].map(function (c)))": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "c 2",
          "Variable": "$.heap1.arr[0]",
        },
      ],
      "Default": "end__1__await Promise.all([4].map(function (c)))",
      "Type": "Choice",
    },
    "check__1__z = [0].map(function (z))[0]": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "return z",
          "Variable": "$.heap54.arr[0]",
        },
      ],
      "Default": "end__1__z = [0].map(function (z))[0]",
      "Type": "Choice",
    },
    "d 1": {
      "Next": "e 1",
      "Result": 1,
      "ResultPath": "$.d",
      "Type": "Pass",
    },
    "d = 5": {
      "Next": "for(e = 6;e === 6;e = 7)",
      "Result": 5,
      "ResultPath": "$.d__1",
      "Type": "Pass",
    },
    "e 1": {
      "Next": "f 1",
      "Result": 1,
      "ResultPath": "$.e",
      "Type": "Pass",
    },
    "e = 7": {
      "Next": "1__for(e = 6;e === 6;e = 7)",
      "Result": 7,
      "ResultPath": "$.e__1",
      "Type": "Pass",
    },
    "end__1__await Promise.all([4].map(function (c)))": {
      "Next": "set__end__1__await Promise.all([4].map(function (c)))",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap1.arrStr))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "end__1__z = [0].map(function (z))[0]": {
      "Next": "set__end__1__z = [0].map(function (z))[0]",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap54.arrStr))",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "f 1": {
      "Next": "res = """,
      "Result": 1,
      "ResultPath": "$.f",
      "Type": "Pass",
    },
    "for(a in [2])": {
      "Next": "1__for(a in [2])",
      "Result": [
        2,
      ],
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "for(b of [3])": {
      "Next": "hasNext__for(b of [3])",
      "Result": [
        3,
      ],
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "for(e = 6;e === 6;e = 7)": {
      "Next": "1__for(e = 6;e === 6;e = 7)",
      "Result": 6,
      "ResultPath": "$.e__1",
      "Type": "Pass",
    },
    "handleResult__1__await Promise.all([4].map(function (c)))": {
      "Next": "check__1__await Promise.all([4].map(function (c)))",
      "Parameters": {
        "arr.$": "$.heap1.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap1.arrStr,States.JsonToString($.heap1.arr[0]))",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "handleResult__1__z = [0].map(function (z))[0]": {
      "Next": "check__1__z = [0].map(function (z))[0]",
      "Parameters": {
        "arr.$": "$.heap54.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap54.arrStr,States.JsonToString($.heap54.arr[0]))",
      },
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "hasNext__for(a in [2])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "a",
          "Variable": "$.heap52[0]",
        },
      ],
      "Default": "z = [0].map(function (z))[0]",
      "Type": "Choice",
    },
    "hasNext__for(b of [3])": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "b 2",
          "Variable": "$.heap43[0]",
        },
      ],
      "Default": "-resabcdef 3",
      "Type": "Choice",
    },
    "if(c === 4)": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.c__1",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.c__1",
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.c__1",
                    },
                    {
                      "NumericEquals": 4,
                      "Variable": "$.c__1",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "d = 5",
        },
      ],
      "Default": "-resabcdef 1",
      "Type": "Choice",
    },
    "r = await $SFN.map([7], function (f))[0]": {
      "Next": "$SFN.map([7], function (f))",
      "Result": [
        7,
      ],
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "res = """: {
      "Next": "for(a in [2])",
      "Result": "",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -rabcdef 1": {
      "InputPath": "$.heap18.string",
      "Next": "e = 7",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 4": {
      "InputPath": "$.heap26.string",
      "Next": "-resabcdef 1",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 5": {
      "InputPath": "$.heap34.string",
      "Next": "return null",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 6": {
      "InputPath": "$.heap42.string",
      "Next": "tail__for(b of [3])",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "res = -resabcdef 7": {
      "InputPath": "$.heap51.string",
      "Next": "tail__for(a in [2])",
      "ResultPath": "$.res",
      "Type": "Pass",
    },
    "return null": {
      "InputPath": "$.fnl_context.null",
      "Next": "handleResult__1__await Promise.all([4].map(function (c)))",
      "ResultPath": "$.heap1.arr[0]",
      "Type": "Pass",
    },
    "return z": {
      "InputPath": "$.heap54.arr[0]",
      "Next": "handleResult__1__z = [0].map(function (z))[0]",
      "ResultPath": "$.heap54.arr[0]",
      "Type": "Pass",
    },
    "set__end__1__await Promise.all([4].map(function (c)))": {
      "InputPath": "$.heap1.result[1:]",
      "Next": "-resabcdef 2",
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "set__end__1__z = [0].map(function (z))[0]": {
      "InputPath": "$.heap54.result[1:]",
      "Next": "-resabcde-fz",
      "ResultPath": "$.heap54",
      "Type": "Pass",
    },
    "tail__for(a in [2])": {
      "InputPath": "$.heap52[1:]",
      "Next": "hasNext__for(a in [2])",
      "ResultPath": "$.heap52",
      "Type": "Pass",
    },
    "tail__for(b of [3])": {
      "InputPath": "$.heap43[1:]",
      "Next": "hasNext__for(b of [3])",
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "z = [0].map(function (z))[0]": {
      "Next": "1__z = [0].map(function (z))[0]",
      "Result": [
        0,
      ],
      "ResultPath": "$.heap53",
      "Type": "Pass",
    },
  },
}
`;

exports[`step function props are passed through to the resource 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "Initialize Functionless Context": {
      "Next": "return context.StateMachine.Name",
      "Parameters": {
        "_.$": "$$.Execution.Input",
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return context.StateMachine.Name": {
      "End": true,
      "InputPath": "$$.StateMachine.Name",
      "ResultPath": "$",
      "Type": "Pass",
    },
  },
}
`;

exports[`templates 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    " input.obj.str "hello" partOfTheTemplateStringinput.obj.items[0]": {
      "Next": "1__result = await echoStringFunc( input.obj.str "hello" partOfTheTemplateSt",
      "Parameters": {
        "string.$": "States.Format('{} hello {} {}',$.input.obj.str,$.heap2.string,$.input.obj.items[0])",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    " input.obj.str === "hullo"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj.str",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.input.obj.str",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.obj.str",
                    },
                    {
                      "StringEquals": "hullo",
                      "Variable": "$.input.obj.str",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__ input.obj.str === "hullo"",
        },
      ],
      "Default": "false__ input.obj.str === "hullo"",
      "Type": "Choice",
    },
    "1__result = await echoStringFunc( input.obj.str "hello" partOfTheTemplateSt": {
      "InputPath": "$.heap8.string",
      "Next": " input.obj.str === "hullo"",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap9",
      "Type": "Task",
    },
    "1__return the result:  result.str input.obj.str === "hullo"templateWithSpec": {
      "End": true,
      "InputPath": "$.heap13.string",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "partOfTheTemplateString = hello input.obj.str2 ?? "default"",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "false__ input.obj.str === "hullo"": {
      "Next": "the result:  result.str input.obj.str === "hullo"templateWithSpecial",
      "Result": false,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "false__partOfTheTemplateString = hello input.obj.str2 ?? "default"": {
      "Next": "hello input.obj.str2 ?? "default"",
      "Result": "default",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "hello input.obj.str2 ?? "default"": {
      "Next": "{{'\\\\\\\\'}}input.obj.str",
      "Parameters": {
        "string.$": "States.Format('hello {}',$.heap0)",
      },
      "ResultPath": "$.heap2",
      "Type": "Pass",
    },
    "partOfTheTemplateString = hello input.obj.str2 ?? "default"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj.str2",
            },
            {
              "IsNull": false,
              "Variable": "$.input.obj.str2",
            },
          ],
          "Next": "true__partOfTheTemplateString = hello input.obj.str2 ?? "default"",
        },
      ],
      "Default": "false__partOfTheTemplateString = hello input.obj.str2 ?? "default"",
      "Type": "Choice",
    },
    "the result:  result.str input.obj.str === "hullo"templateWithSpecial": {
      "Next": "1__return the result:  result.str input.obj.str === "hullo"templateWithSpec",
      "Parameters": {
        "string.$": "States.Format('the result: {} {} {}',$.heap9.str,$.heap11,$.heap4.string)",
      },
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "true__ input.obj.str === "hullo"": {
      "Next": "the result:  result.str input.obj.str === "hullo"templateWithSpecial",
      "Result": true,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "true__partOfTheTemplateString = hello input.obj.str2 ?? "default"": {
      "InputPath": "$.input.obj.str2",
      "Next": "hello input.obj.str2 ?? "default"",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "{{'\\\\\\\\'}}input.obj.str": {
      "Next": " input.obj.str "hello" partOfTheTemplateStringinput.obj.items[0]",
      "Parameters": {
        "string.$": "States.Format('\\{\\{\\'\\\\{}\\\\\\'\\}\\}',$.input.obj.str)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
  },
}
`;

exports[`ternary 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c": {
      "End": true,
      "Parameters": {
        "constantFalse.$": "$.heap17",
        "constantTrue.$": "$.heap15",
        "false.$": "$.heap13",
        "result.$": "$.a",
        "true.$": "$.heap11",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "1a": {
      "Next": "a = 1a 1",
      "Parameters": {
        "string.$": "States.Format('{}1',$.a)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "2a": {
      "Next": "a = 2a 1",
      "Parameters": {
        "string.$": "States.Format('{}2',$.a)",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "3a": {
      "Next": "a = 3a 1",
      "Parameters": {
        "string.$": "States.Format('{}3',$.a)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "4a": {
      "Next": "a = 4a 1",
      "Parameters": {
        "string.$": "States.Format('{}4',$.a)",
      },
      "ResultPath": "$.heap9",
      "Type": "Pass",
    },
    "7__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c": {
      "InputPath": "$.heap17",
      "Next": "1__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "if(input.t)",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 1a 1": {
      "InputPath": "$.heap1.string",
      "Next": "if(input.f)",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 2a 1": {
      "InputPath": "$.heap4.string",
      "Next": "if(input.t) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 3a 1": {
      "InputPath": "$.heap6.string",
      "Next": "if(input.t) 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = 4a 1": {
      "InputPath": "$.heap9.string",
      "Next": "return {true: if(input.t), false: if(input.f), constantTrue: if(true), cons",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "false__if(false)": {
      "Next": "7__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c",
      "Result": "d",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "false__if(input.f) 1": {
      "Next": "if(true)",
      "Result": "b",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "false__if(true)": {
      "Next": "if(false)",
      "Result": "d",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "false__return {true: if(input.t), false: if(input.f), constantTrue: if(true": {
      "Next": "if(input.f) 1",
      "Result": "b",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "if(false)": {
      "Choices": [
        {
          "IsNull": true,
          "Next": "true__if(false)",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__if(false)",
      "Type": "Choice",
    },
    "if(input.f)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.f",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.f",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.f",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.f",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.f",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.f",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.f",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.f",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "2a",
        },
      ],
      "Default": "3a",
      "Type": "Choice",
    },
    "if(input.f) 1": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.f",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.f",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.f",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.f",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.f",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.f",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.f",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.f",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.f",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.f",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__if(input.f) 1",
        },
      ],
      "Default": "false__if(input.f) 1",
      "Type": "Choice",
    },
    "if(input.t)": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.t",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "1a",
        },
      ],
      "Default": "if(input.f)",
      "Type": "Choice",
    },
    "if(input.t) 1": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.t",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "return {true: if(input.t), false: if(input.f), constantTrue: if(true), cons",
        },
      ],
      "Default": "4a",
      "Type": "Choice",
    },
    "if(true)": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "true__if(true)",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "false__if(true)",
      "Type": "Choice",
    },
    "return {true: if(input.t), false: if(input.f), constantTrue: if(true), cons": {
      "Choices": [
        {
          "And": [
            {
              "And": [
                {
                  "IsPresent": true,
                  "Variable": "$.input.t",
                },
                {
                  "IsNull": false,
                  "Variable": "$.input.t",
                },
              ],
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsString": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "StringEquals": "",
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsNumeric": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "Not": {
                        "And": [
                          {
                            "IsNumeric": true,
                            "Variable": "$.input.t",
                          },
                          {
                            "NumericEquals": 0,
                            "Variable": "$.input.t",
                          },
                        ],
                      },
                    },
                  ],
                },
                {
                  "And": [
                    {
                      "IsBoolean": true,
                      "Variable": "$.input.t",
                    },
                    {
                      "BooleanEquals": true,
                      "Variable": "$.input.t",
                    },
                  ],
                },
                {
                  "Not": {
                    "Or": [
                      {
                        "IsBoolean": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsNumeric": true,
                        "Variable": "$.input.t",
                      },
                      {
                        "IsString": true,
                        "Variable": "$.input.t",
                      },
                    ],
                  },
                },
              ],
            },
          ],
          "Next": "true__return {true: if(input.t), false: if(input.f), constantTrue: if(true)",
        },
      ],
      "Default": "false__return {true: if(input.t), false: if(input.f), constantTrue: if(true",
      "Type": "Choice",
    },
    "true__if(false)": {
      "Next": "7__return {true: if(input.t), false: if(input.f), constantTrue: if(true), c",
      "Result": "c",
      "ResultPath": "$.heap17",
      "Type": "Pass",
    },
    "true__if(input.f) 1": {
      "Next": "if(true)",
      "Result": "a",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "true__if(true)": {
      "Next": "if(false)",
      "Result": "c",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "true__return {true: if(input.t), false: if(input.f), constantTrue: if(true)": {
      "Next": "if(input.f) 1",
      "Result": "a",
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
  },
}
`;

exports[`throw catch finally 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "$SFN.map([1], function ())": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 10",
          "ResultPath": "$.fnl_tmp_11",
        },
      ],
      "ItemsPath": "$.heap39",
      "Iterator": {
        "StartAt": "return func()",
        "States": {
          "1__return func()": {
            "End": true,
            "InputPath": "$.heap38",
            "ResultPath": "$",
            "Type": "Pass",
          },
          "return func()": {
            "InputPath": "$.fnl_context.null",
            "Next": "1__return func()",
            "Resource": "__REPLACED_TOKEN",
            "ResultPath": "$.heap38",
            "Type": "Task",
          },
        },
      },
      "Next": "try 11",
      "Parameters": {
        "a.$": "$.a",
        "fnl_context.$": "$.fnl_context",
      },
      "ResultPath": null,
      "Type": "Map",
    },
    "1__catch__try 10": {
      "InputPath": "$.fnl_tmp_11.0_ParsedError",
      "Next": "sfnmapaerr.errorMessage",
      "ResultPath": "$.fnl_tmp_11",
      "Type": "Pass",
    },
    "1__catch__try 11": {
      "InputPath": "$.fnl_tmp_12.0_ParsedError",
      "Next": "arrmapaerr.errorMessage",
      "ResultPath": "$.fnl_tmp_12",
      "Type": "Pass",
    },
    "1__catch__try 5": {
      "InputPath": "$.fnl_tmp_4.0_ParsedError",
      "Next": "aerr.errorMessage",
      "ResultPath": "$.fnl_tmp_4",
      "Type": "Pass",
    },
    "1__catch__try 6": {
      "InputPath": "$.fnl_tmp_5.0_ParsedError",
      "Next": "foraerr.errorMessage",
      "ResultPath": "$.fnl_tmp_5",
      "Type": "Pass",
    },
    "1__catch__try 8": {
      "InputPath": "$.fnl_tmp_9.0_ParsedError",
      "Next": "whileaerr.errorMessage",
      "ResultPath": "$.fnl_tmp_9",
      "Type": "Pass",
    },
    "1__catch__try 9": {
      "InputPath": "$.fnl_tmp_10.0_ParsedError",
      "Next": "doaerr.errorMessage",
      "ResultPath": "$.fnl_tmp_10",
      "Type": "Pass",
    },
    "1__finally": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "recatchaerr.message",
          "Variable": "$.fnl_tmp_8",
        },
        {
          "IsNull": false,
          "Next": "await func() 1",
          "Variable": "$$.Execution.Id",
        },
        {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "1__return func() 1": {
      "InputPath": "$.heap46",
      "Next": "handleResult__1__try 11",
      "ResultPath": "$.heap45.arr[0]",
      "Type": "Pass",
    },
    "1__try 11": {
      "Next": "check__1__try 11",
      "Parameters": {
        "arr": [
          1,
        ],
        "arrStr": "[null",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "1__try 6": {
      "ItemsPath": "$.heap21",
      "Iterator": {
        "StartAt": "Default",
        "States": {
          "Default": {
            "End": true,
            "ResultPath": "$",
            "Type": "Pass",
          },
        },
      },
      "Next": "hasNext__try 6",
      "Parameters": {
        "index.$": "States.Format('{}',$$.Map.Item.Index)",
        "item.$": "$$.Map.Item.Value",
      },
      "ResultPath": "$.heap21",
      "Type": "Map",
    },
    "Initialize Functionless Context": {
      "Next": "a = """,
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "a = """: {
      "Next": "try",
      "Result": "",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aerr.errorMessage 1": {
      "InputPath": "$.heap19.string",
      "Next": "try 6",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = aerr.message 1": {
      "InputPath": "$.heap4.string",
      "Next": "try 2",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = arrmapaerr.errorMessage 1": {
      "InputPath": "$.heap49.string",
      "Next": "return a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = doaerr.errorMessage 1": {
      "InputPath": "$.heap37.string",
      "Next": "try 10",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error1a": {
      "InputPath": "$.heap1.string",
      "Next": "try 1",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error3a": {
      "InputPath": "$.heap6.string",
      "Next": "finally1a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = error4a": {
      "InputPath": "$.heap15.string",
      "Next": "try 5",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finally1a 1": {
      "InputPath": "$.heap8.string",
      "Next": "seta",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finally2a 1": {
      "InputPath": "$.heap12.string",
      "Next": "try 4",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = finallya": {
      "InputPath": "$.heap26.string",
      "Next": "1__finally",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = foraerr.errorMessage 1": {
      "InputPath": "$.heap24.string",
      "Next": "try 7",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = recatchaerr.message 1": {
      "InputPath": "$.heap29.string",
      "Next": "try 8",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = seta": {
      "InputPath": "$.heap10.string",
      "Next": "finally2a",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = sfnmapaerr.errorMessage 1": {
      "InputPath": "$.heap43.string",
      "Next": "try 11",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "a = whileaerr.errorMessage 1": {
      "InputPath": "$.heap33.string",
      "Next": "try 9",
      "ResultPath": "$.a",
      "Type": "Pass",
    },
    "aerr.errorMessage": {
      "Next": "a = aerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,$.fnl_tmp_4.errorMessage)",
      },
      "ResultPath": "$.heap19",
      "Type": "Pass",
    },
    "aerr.message": {
      "Next": "a = aerr.message 1",
      "Parameters": {
        "string.$": "States.Format('{}{}',$.a,'Error2')",
      },
      "ResultPath": "$.heap4",
      "Type": "Pass",
    },
    "arrmapaerr.errorMessage": {
      "Next": "a = arrmapaerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}arrmap{}',$.a,$.fnl_tmp_12.errorMessage)",
      },
      "ResultPath": "$.heap49",
      "Type": "Pass",
    },
    "await func()": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 6",
          "ResultPath": "$.fnl_tmp_5",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "tail__try 6",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "await func() 1": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 8",
          "ResultPath": "$.fnl_tmp_9",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 8",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "await func() 2": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 9",
          "ResultPath": "$.fnl_tmp_10",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 9",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "catch__try 1": {
      "Next": "aerr.message",
      "Parameters": {
        "message": "Error2",
      },
      "ResultPath": "$.err",
      "Type": "Pass",
    },
    "catch__try 10": {
      "Next": "1__catch__try 10",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_11.Cause)",
      },
      "ResultPath": "$.fnl_tmp_11",
      "Type": "Pass",
    },
    "catch__try 11": {
      "Next": "1__catch__try 11",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_12.Cause)",
      },
      "ResultPath": "$.fnl_tmp_12",
      "Type": "Pass",
    },
    "catch__try 5": {
      "Next": "1__catch__try 5",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_4.Cause)",
      },
      "ResultPath": "$.fnl_tmp_4",
      "Type": "Pass",
    },
    "catch__try 6": {
      "Next": "1__catch__try 6",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_5.Cause)",
      },
      "ResultPath": "$.fnl_tmp_5",
      "Type": "Pass",
    },
    "catch__try 7 1": {
      "Next": "finallya",
      "Result": {
        "message": "error6",
      },
      "ResultPath": "$.fnl_tmp_8",
      "Type": "Pass",
    },
    "catch__try 8": {
      "Next": "1__catch__try 8",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_9.Cause)",
      },
      "ResultPath": "$.fnl_tmp_9",
      "Type": "Pass",
    },
    "catch__try 9": {
      "Next": "1__catch__try 9",
      "Parameters": {
        "0_ParsedError.$": "States.StringToJson($.fnl_tmp_10.Cause)",
      },
      "ResultPath": "$.fnl_tmp_10",
      "Type": "Pass",
    },
    "check__1__try 11": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "return func() 1",
          "Variable": "$.heap45.arr[0]",
        },
      ],
      "Default": "end__1__try 11",
      "Type": "Choice",
    },
    "doaerr.errorMessage": {
      "Next": "a = doaerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}do{}',$.a,$.fnl_tmp_10.errorMessage)",
      },
      "ResultPath": "$.heap37",
      "Type": "Pass",
    },
    "end__1__try 11": {
      "Next": "set__end__1__try 11",
      "Parameters": {
        "result.$": "States.StringToJson(States.Format('{}]',$.heap45.arrStr))",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "error1a": {
      "Next": "a = error1a",
      "Parameters": {
        "string.$": "States.Format('{}error1',$.a)",
      },
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "error3a": {
      "Next": "a = error3a",
      "Parameters": {
        "string.$": "States.Format('{}error3',$.a)",
      },
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "error4a": {
      "Next": "a = error4a",
      "Parameters": {
        "string.$": "States.Format('{}error4',$.a)",
      },
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "finally1a": {
      "Next": "a = finally1a 1",
      "Parameters": {
        "string.$": "States.Format('{}finally1',$.a)",
      },
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "finally2a": {
      "Next": "a = finally2a 1",
      "Parameters": {
        "string.$": "States.Format('{}finally2',$.a)",
      },
      "ResultPath": "$.heap12",
      "Type": "Pass",
    },
    "finallya": {
      "Next": "a = finallya",
      "Parameters": {
        "string.$": "States.Format('{}finally',$.a)",
      },
      "ResultPath": "$.heap26",
      "Type": "Pass",
    },
    "foraerr.errorMessage": {
      "Next": "a = foraerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}for{}',$.a,$.fnl_tmp_5.errorMessage)",
      },
      "ResultPath": "$.heap24",
      "Type": "Pass",
    },
    "handleResult__1__try 11": {
      "Next": "check__1__try 11",
      "Parameters": {
        "arr.$": "$.heap45.arr[1:]",
        "arrStr.$": "States.Format('{},{}',$.heap45.arrStr,States.JsonToString($.heap45.arr[0]))",
      },
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "hasNext__try 6": {
      "Choices": [
        {
          "IsPresent": true,
          "Next": "await func()",
          "Variable": "$.heap21[0]",
        },
      ],
      "Default": "try 7",
      "Type": "Choice",
    },
    "recatchaerr.message": {
      "Next": "a = recatchaerr.message 1",
      "Parameters": {
        "string.$": "States.Format('{}recatch{}',$.a,$.fnl_tmp_8.message)",
      },
      "ResultPath": "$.heap29",
      "Type": "Pass",
    },
    "return a": {
      "End": true,
      "InputPath": "$.a",
      "ResultPath": "$",
      "Type": "Pass",
    },
    "return func() 1": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 11",
          "ResultPath": "$.fnl_tmp_12",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "1__return func() 1",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": "$.heap46",
      "Type": "Task",
    },
    "set__end__1__try 11": {
      "InputPath": "$.heap45.result[1:]",
      "Next": "return a",
      "ResultPath": "$.heap45",
      "Type": "Pass",
    },
    "seta": {
      "Next": "a = seta",
      "Parameters": {
        "string.$": "States.Format('{}set',$.a)",
      },
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "sfnmapaerr.errorMessage": {
      "Next": "a = sfnmapaerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}sfnmap{}',$.a,$.fnl_tmp_11.errorMessage)",
      },
      "ResultPath": "$.heap43",
      "Type": "Pass",
    },
    "tail__try 6": {
      "InputPath": "$.heap21[1:]",
      "Next": "hasNext__try 6",
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "try": {
      "Next": "error1a",
      "Result": {
        "message": "Error1",
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 1": {
      "Next": "catch__try 1",
      "Result": {
        "message": "Error2",
      },
      "ResultPath": "$.fnl_tmp_1",
      "Type": "Pass",
    },
    "try 10": {
      "Next": "$SFN.map([1], function ())",
      "Result": [
        1,
      ],
      "ResultPath": "$.heap39",
      "Type": "Pass",
    },
    "try 11": {
      "Next": "1__try 11",
      "Result": [
        1,
      ],
      "ResultPath": "$.heap44",
      "Type": "Pass",
    },
    "try 2": {
      "Next": "error3a",
      "Result": {
        "message": null,
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 4": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "error4a",
          "ResultPath": null,
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 5",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "try 5": {
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL",
          ],
          "Next": "catch__try 5",
          "ResultPath": "$.fnl_tmp_4",
        },
      ],
      "InputPath": "$.fnl_context.null",
      "Next": "try 6",
      "Resource": "__REPLACED_TOKEN",
      "ResultPath": null,
      "Type": "Task",
    },
    "try 6": {
      "Next": "1__try 6",
      "Result": [
        1,
      ],
      "ResultPath": "$.heap21",
      "Type": "Pass",
    },
    "try 7": {
      "Next": "catch__try 7 1",
      "Result": {
        "message": "error5",
      },
      "ResultPath": null,
      "Type": "Pass",
    },
    "try 8": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "await func() 1",
          "Variable": "$$.Execution.Id",
        },
        {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "try 9": {
      "Choices": [
        {
          "IsNull": false,
          "Next": "await func() 2",
          "Variable": "$$.Execution.Id",
        },
      ],
      "Default": "try 10",
      "Type": "Choice",
    },
    "whileaerr.errorMessage": {
      "Next": "a = whileaerr.errorMessage 1",
      "Parameters": {
        "string.$": "States.Format('{}while{}',$.a,$.fnl_tmp_9.errorMessage)",
      },
      "ResultPath": "$.heap33",
      "Type": "Pass",
    },
  },
}
`;

exports[`typeof 1`] = `
{
  "StartAt": "Initialize Functionless Context",
  "States": {
    "1__return {isString: typeof input.str === "string", stringType: typeof inpu": {
      "End": true,
      "Parameters": {
        "arrType.$": "$.heap20",
        "booleanType.$": "$.heap8",
        "isBool.$": "$.heap6",
        "isNumber.$": "$.heap11",
        "isObject.$": "$.heap16",
        "isString.$": "$.heap1",
        "numberType.$": "$.heap13",
        "objectType.$": "$.heap18",
        "stringType.$": "$.heap3",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Initialize Functionless Context": {
      "Next": "return {isString: typeof input.str === "string", stringType: typeof input.s",
      "Parameters": {
        "fnl_context": {
          "null": null,
        },
        "input.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "boolean__input.arr": {
      "Next": "1__return {isString: typeof input.str === "string", stringType: typeof inpu",
      "Result": "boolean",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "boolean__input.bool": {
      "Next": "typeof input.bool === "boolean"",
      "Result": "boolean",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "boolean__input.bool 1": {
      "Next": "input.num",
      "Result": "boolean",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "boolean__input.num": {
      "Next": "typeof input.num === "number"",
      "Result": "boolean",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "boolean__input.num 1": {
      "Next": "input.obj",
      "Result": "boolean",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "boolean__input.obj": {
      "Next": "typeof input.obj === "object"",
      "Result": "boolean",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "boolean__input.obj 1": {
      "Next": "input.arr",
      "Result": "boolean",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "boolean__input.str": {
      "Next": "input.bool",
      "Result": "boolean",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "boolean__return {isString: typeof input.str === "string", stringType: typeo": {
      "Next": "typeof input.str === "string"",
      "Result": "boolean",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "false__typeof input.bool === "boolean"": {
      "Next": "input.bool 1",
      "Result": false,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "false__typeof input.num === "number"": {
      "Next": "input.num 1",
      "Result": false,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "false__typeof input.obj === "object"": {
      "Next": "input.obj 1",
      "Result": false,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "false__typeof input.str === "string"": {
      "Next": "input.str",
      "Result": false,
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "input.arr": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            {
              "IsString": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "string__input.arr",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "boolean__input.arr",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.arr",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.arr",
            },
          ],
          "Next": "number__input.arr",
        },
        {
          "IsPresent": true,
          "Next": "object__input.arr",
          "Variable": "$.input.arr",
        },
      ],
      "Default": "undefined__input.arr",
      "Type": "Choice",
    },
    "input.bool": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsString": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "string__input.bool",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "boolean__input.bool",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "number__input.bool",
        },
        {
          "IsPresent": true,
          "Next": "object__input.bool",
          "Variable": "$.input.bool",
        },
      ],
      "Default": "undefined__input.bool",
      "Type": "Choice",
    },
    "input.bool 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsString": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "string__input.bool 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "boolean__input.bool 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.bool",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.bool",
            },
          ],
          "Next": "number__input.bool 1",
        },
        {
          "IsPresent": true,
          "Next": "object__input.bool 1",
          "Variable": "$.input.bool",
        },
      ],
      "Default": "undefined__input.bool 1",
      "Type": "Choice",
    },
    "input.num": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "string__input.num",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "boolean__input.num",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "number__input.num",
        },
        {
          "IsPresent": true,
          "Next": "object__input.num",
          "Variable": "$.input.num",
        },
      ],
      "Default": "undefined__input.num",
      "Type": "Choice",
    },
    "input.num 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsString": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "string__input.num 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "boolean__input.num 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.num",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.num",
            },
          ],
          "Next": "number__input.num 1",
        },
        {
          "IsPresent": true,
          "Next": "object__input.num 1",
          "Variable": "$.input.num",
        },
      ],
      "Default": "undefined__input.num 1",
      "Type": "Choice",
    },
    "input.obj": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsString": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "string__input.obj",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "boolean__input.obj",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "number__input.obj",
        },
        {
          "IsPresent": true,
          "Next": "object__input.obj",
          "Variable": "$.input.obj",
        },
      ],
      "Default": "undefined__input.obj",
      "Type": "Choice",
    },
    "input.obj 1": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsString": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "string__input.obj 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "boolean__input.obj 1",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.obj",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.obj",
            },
          ],
          "Next": "number__input.obj 1",
        },
        {
          "IsPresent": true,
          "Next": "object__input.obj 1",
          "Variable": "$.input.obj",
        },
      ],
      "Default": "undefined__input.obj 1",
      "Type": "Choice",
    },
    "input.str": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "string__input.str",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "boolean__input.str",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "number__input.str",
        },
        {
          "IsPresent": true,
          "Next": "object__input.str",
          "Variable": "$.input.str",
        },
      ],
      "Default": "undefined__input.str",
      "Type": "Choice",
    },
    "number__input.arr": {
      "Next": "1__return {isString: typeof input.str === "string", stringType: typeof inpu",
      "Result": "number",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "number__input.bool": {
      "Next": "typeof input.bool === "boolean"",
      "Result": "number",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "number__input.bool 1": {
      "Next": "input.num",
      "Result": "number",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "number__input.num": {
      "Next": "typeof input.num === "number"",
      "Result": "number",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "number__input.num 1": {
      "Next": "input.obj",
      "Result": "number",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "number__input.obj": {
      "Next": "typeof input.obj === "object"",
      "Result": "number",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "number__input.obj 1": {
      "Next": "input.arr",
      "Result": "number",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "number__input.str": {
      "Next": "input.bool",
      "Result": "number",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "number__return {isString: typeof input.str === "string", stringType: typeof": {
      "Next": "typeof input.str === "string"",
      "Result": "number",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "object__input.arr": {
      "Next": "1__return {isString: typeof input.str === "string", stringType: typeof inpu",
      "Result": "object",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "object__input.bool": {
      "Next": "typeof input.bool === "boolean"",
      "Result": "object",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "object__input.bool 1": {
      "Next": "input.num",
      "Result": "object",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "object__input.num": {
      "Next": "typeof input.num === "number"",
      "Result": "object",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "object__input.num 1": {
      "Next": "input.obj",
      "Result": "object",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "object__input.obj": {
      "Next": "typeof input.obj === "object"",
      "Result": "object",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "object__input.obj 1": {
      "Next": "input.arr",
      "Result": "object",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "object__input.str": {
      "Next": "input.bool",
      "Result": "object",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "object__return {isString: typeof input.str === "string", stringType: typeof": {
      "Next": "typeof input.str === "string"",
      "Result": "object",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "return {isString: typeof input.str === "string", stringType: typeof input.s": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsString": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "string__return {isString: typeof input.str === "string", stringType: typeof",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsBoolean": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "boolean__return {isString: typeof input.str === "string", stringType: typeo",
        },
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.input.str",
            },
            {
              "IsNumeric": true,
              "Variable": "$.input.str",
            },
          ],
          "Next": "number__return {isString: typeof input.str === "string", stringType: typeof",
        },
        {
          "IsPresent": true,
          "Next": "object__return {isString: typeof input.str === "string", stringType: typeof",
          "Variable": "$.input.str",
        },
      ],
      "Default": "undefined__return {isString: typeof input.str === "string", stringType: typ",
      "Type": "Choice",
    },
    "string__input.arr": {
      "Next": "1__return {isString: typeof input.str === "string", stringType: typeof inpu",
      "Result": "string",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "string__input.bool": {
      "Next": "typeof input.bool === "boolean"",
      "Result": "string",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "string__input.bool 1": {
      "Next": "input.num",
      "Result": "string",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "string__input.num": {
      "Next": "typeof input.num === "number"",
      "Result": "string",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "string__input.num 1": {
      "Next": "input.obj",
      "Result": "string",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "string__input.obj": {
      "Next": "typeof input.obj === "object"",
      "Result": "string",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "string__input.obj 1": {
      "Next": "input.arr",
      "Result": "string",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "string__input.str": {
      "Next": "input.bool",
      "Result": "string",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "string__return {isString: typeof input.str === "string", stringType: typeof": {
      "Next": "typeof input.str === "string"",
      "Result": "string",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
    "true__typeof input.bool === "boolean"": {
      "Next": "input.bool 1",
      "Result": true,
      "ResultPath": "$.heap6",
      "Type": "Pass",
    },
    "true__typeof input.num === "number"": {
      "Next": "input.num 1",
      "Result": true,
      "ResultPath": "$.heap11",
      "Type": "Pass",
    },
    "true__typeof input.obj === "object"": {
      "Next": "input.obj 1",
      "Result": true,
      "ResultPath": "$.heap16",
      "Type": "Pass",
    },
    "true__typeof input.str === "string"": {
      "Next": "input.str",
      "Result": true,
      "ResultPath": "$.heap1",
      "Type": "Pass",
    },
    "typeof input.bool === "boolean"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap5",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.heap5",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap5",
                    },
                    {
                      "StringEquals": "boolean",
                      "Variable": "$.heap5",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__typeof input.bool === "boolean"",
        },
      ],
      "Default": "false__typeof input.bool === "boolean"",
      "Type": "Choice",
    },
    "typeof input.num === "number"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap10",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.heap10",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap10",
                    },
                    {
                      "StringEquals": "number",
                      "Variable": "$.heap10",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__typeof input.num === "number"",
        },
      ],
      "Default": "false__typeof input.num === "number"",
      "Type": "Choice",
    },
    "typeof input.obj === "object"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap15",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.heap15",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap15",
                    },
                    {
                      "StringEquals": "object",
                      "Variable": "$.heap15",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__typeof input.obj === "object"",
        },
      ],
      "Default": "false__typeof input.obj === "object"",
      "Type": "Choice",
    },
    "typeof input.str === "string"": {
      "Choices": [
        {
          "And": [
            {
              "IsPresent": true,
              "Variable": "$.heap0",
            },
            {
              "And": [
                {
                  "IsNull": false,
                  "Variable": "$.heap0",
                },
                {
                  "And": [
                    {
                      "IsString": true,
                      "Variable": "$.heap0",
                    },
                    {
                      "StringEquals": "string",
                      "Variable": "$.heap0",
                    },
                  ],
                },
              ],
            },
          ],
          "Next": "true__typeof input.str === "string"",
        },
      ],
      "Default": "false__typeof input.str === "string"",
      "Type": "Choice",
    },
    "undefined__input.arr": {
      "Next": "1__return {isString: typeof input.str === "string", stringType: typeof inpu",
      "Result": "undefined",
      "ResultPath": "$.heap20",
      "Type": "Pass",
    },
    "undefined__input.bool": {
      "Next": "typeof input.bool === "boolean"",
      "Result": "undefined",
      "ResultPath": "$.heap5",
      "Type": "Pass",
    },
    "undefined__input.bool 1": {
      "Next": "input.num",
      "Result": "undefined",
      "ResultPath": "$.heap8",
      "Type": "Pass",
    },
    "undefined__input.num": {
      "Next": "typeof input.num === "number"",
      "Result": "undefined",
      "ResultPath": "$.heap10",
      "Type": "Pass",
    },
    "undefined__input.num 1": {
      "Next": "input.obj",
      "Result": "undefined",
      "ResultPath": "$.heap13",
      "Type": "Pass",
    },
    "undefined__input.obj": {
      "Next": "typeof input.obj === "object"",
      "Result": "undefined",
      "ResultPath": "$.heap15",
      "Type": "Pass",
    },
    "undefined__input.obj 1": {
      "Next": "input.arr",
      "Result": "undefined",
      "ResultPath": "$.heap18",
      "Type": "Pass",
    },
    "undefined__input.str": {
      "Next": "input.bool",
      "Result": "undefined",
      "ResultPath": "$.heap3",
      "Type": "Pass",
    },
    "undefined__return {isString: typeof input.str === "string", stringType: typ": {
      "Next": "typeof input.str === "string"",
      "Result": "undefined",
      "ResultPath": "$.heap0",
      "Type": "Pass",
    },
  },
}
`;

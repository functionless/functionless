// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`instantiating the AWS SDK without esbuild 1`] = `
"var v0;
const v2 = {};
const v3 = {};
v3.environment = \\"nodejs\\";
var v4;
var v5 = v3;
var v6 = undefined;
const v8 = process;
var v7 = v8;
v4 = function engine() { if (v5.isBrowser() && typeof v6 !== \\"undefined\\") {
    return undefined;
}
else {
    var engine = \\"darwin\\" + \\"/\\" + \\"v16.14.2\\";
    if (v7.env.AWS_EXECUTION_ENV) {
        engine += \\" exec-env/\\" + v7.env.AWS_EXECUTION_ENV;
    }
    return engine;
} };
const v9 = {};
v9.constructor = v4;
v4.prototype = v9;
v3.engine = v4;
var v10;
var v11 = require;
v10 = function userAgent() { var name = \\"nodejs\\"; var agent = \\"aws-sdk-\\" + name + \\"/\\" + v11(\\"./core\\").VERSION; if (name === \\"nodejs\\")
    agent += \\" \\" + v5.engine(); return agent; };
const v12 = {};
v12.constructor = v10;
v10.prototype = v12;
v3.userAgent = v10;
var v13;
const v15 = encodeURIComponent;
var v14 = v15;
const v17 = escape;
var v16 = v17;
v13 = function uriEscape(string) { var output = v14(string); output = output.replace(/[^A-Za-z0-9_.~\\\\-%]+/g, v16); output = output.replace(/[*]/g, function (ch) { return \\"%\\" + ch.charCodeAt(0).toString(16).toUpperCase(); }); return output; };
const v18 = {};
v18.constructor = v13;
v13.prototype = v18;
v3.uriEscape = v13;
var v19;
v19 = function uriEscapePath(string) { var parts = []; v5.arrayEach(string.split(\\"/\\"), function (part) { parts.push(v5.uriEscape(part)); }); return parts.join(\\"/\\"); };
const v20 = {};
v20.constructor = v19;
v19.prototype = v20;
v3.uriEscapePath = v19;
var v21;
const v22 = require(\\"url\\");
v21 = function urlParse(url) { return v22.parse(url); };
const v23 = {};
v23.constructor = v21;
v21.prototype = v23;
v3.urlParse = v21;
var v24;
v24 = function urlFormat(url) { return v22.format(url); };
const v25 = {};
v25.constructor = v24;
v24.prototype = v25;
v3.urlFormat = v24;
var v26;
const v27 = require(\\"querystring\\");
v26 = function queryStringParse(qs) { return v27.parse(qs); };
const v28 = {};
v28.constructor = v26;
v26.prototype = v28;
v3.queryStringParse = v26;
var v29;
const v31 = Atomics.constructor;
var v30 = v31;
const v33 = Array;
var v32 = v33;
v29 = function queryParamsToString(params) { var items = []; var escape = v5.uriEscape; var sortedKeys = v30.keys(params).sort(); v5.arrayEach(sortedKeys, function (name) { var value = params[name]; var ename = escape(name); var result = ename + \\"=\\"; if (v32.isArray(value)) {
    var vals = [];
    v5.arrayEach(value, function (item) { vals.push(escape(item)); });
    result = ename + \\"=\\" + vals.sort().join(\\"&\\" + ename + \\"=\\");
}
else if (value !== undefined && value !== null) {
    result = ename + \\"=\\" + escape(value);
} items.push(result); }); return items.join(\\"&\\"); };
const v34 = {};
v34.constructor = v29;
v29.prototype = v34;
v3.queryParamsToString = v29;
var v35;
v35 = function readFileSync(path) { if (v5.isBrowser())
    return null; return v11(\\"fs\\").readFileSync(path, \\"utf-8\\"); };
const v36 = {};
v36.constructor = v35;
v35.prototype = v36;
v3.readFileSync = v35;
const v37 = {};
var v38;
const v40 = Error;
var v39 = v40;
const v41 = {};
var v42;
const v44 = Uint8Array;
var v43 = v44;
v42 = function (data, encoding) { return (typeof v5.Buffer.from === \\"function\\" && v5.Buffer.from !== v43.from) ? v5.Buffer.from(data, encoding) : new v5.Buffer(data, encoding); };
const v45 = {};
v45.constructor = v42;
v42.prototype = v45;
v41.toBuffer = v42;
var v46;
v46 = function (size, fill, encoding) { if (typeof size !== \\"number\\") {
    throw new v39(\\"size passed to alloc must be a number.\\");
} if (typeof v5.Buffer.alloc === \\"function\\") {
    return v5.Buffer.alloc(size, fill, encoding);
}
else {
    var buf = new v5.Buffer(size);
    if (fill !== undefined && typeof buf.fill === \\"function\\") {
        buf.fill(fill, undefined, undefined, encoding);
    }
    return buf;
} };
const v47 = {};
v47.constructor = v46;
v46.prototype = v47;
v41.alloc = v46;
var v48;
v48 = function toStream(buffer) { if (!v5.Buffer.isBuffer(buffer))
    buffer = v41.toBuffer(buffer); var readable = new (v5.stream.Readable)(); var pos = 0; readable._read = function (size) { if (pos >= buffer.length)
    return readable.push(null); var end = pos + size; if (end > buffer.length)
    end = buffer.length; readable.push(buffer.slice(pos, end)); pos = end; }; return readable; };
const v49 = {};
v49.constructor = v48;
v48.prototype = v49;
v41.toStream = v48;
var v50;
v50 = function (buffers) { var length = 0, offset = 0, buffer = null, i; for (i = 0; i < buffers.length; i++) {
    length += buffers[i].length;
} buffer = v41.alloc(length); for (i = 0; i < buffers.length; i++) {
    buffers[i].copy(buffer, offset);
    offset += buffers[i].length;
} return buffer; };
const v51 = {};
v51.constructor = v50;
v50.prototype = v51;
v41.concat = v50;
v38 = function encode64(string) { if (typeof string === \\"number\\") {
    throw v5.error(new v39(\\"Cannot base64 encode number \\" + string));
} if (string === null || typeof string === \\"undefined\\") {
    return string;
} var buf = v41.toBuffer(string); return buf.toString(\\"base64\\"); };
const v52 = {};
v52.constructor = v38;
v38.prototype = v52;
v37.encode = v38;
var v53;
v53 = function decode64(string) { if (typeof string === \\"number\\") {
    throw v5.error(new v39(\\"Cannot base64 decode number \\" + string));
} if (string === null || typeof string === \\"undefined\\") {
    return string;
} return v41.toBuffer(string, \\"base64\\"); };
const v54 = {};
v54.constructor = v53;
v53.prototype = v54;
v37.decode = v53;
v3.base64 = v37;
v3.buffer = v41;
const v55 = {};
var v56;
v56 = function byteLength(string) { if (string === null || string === undefined)
    return 0; if (typeof string === \\"string\\")
    string = v41.toBuffer(string); if (typeof string.byteLength === \\"number\\") {
    return string.byteLength;
}
else if (typeof string.length === \\"number\\") {
    return string.length;
}
else if (typeof string.size === \\"number\\") {
    return string.size;
}
else if (typeof string.path === \\"string\\") {
    return v11(\\"fs\\").lstatSync(string.path).size;
}
else {
    throw v5.error(new v39(\\"Cannot determine length of \\" + string), { object: string });
} };
const v57 = {};
v57.constructor = v56;
v56.prototype = v57;
v55.byteLength = v56;
var v58;
v58 = function upperFirst(string) { return string[0].toUpperCase() + string.substr(1); };
const v59 = {};
v59.constructor = v58;
v58.prototype = v59;
v55.upperFirst = v58;
var v60;
v60 = function lowerFirst(string) { return string[0].toLowerCase() + string.substr(1); };
const v61 = {};
v61.constructor = v60;
v60.prototype = v61;
v55.lowerFirst = v60;
v3.string = v55;
const v62 = {};
var v63;
v63 = function string(ini) { var currentSection, map = {}; v5.arrayEach(ini.split(/\\\\r?\\\\n/), function (line) { line = line.split(/(^|\\\\s)[;#]/)[0].trim(); var isSection = line[0] === \\"[\\" && line[line.length - 1] === \\"]\\"; if (isSection) {
    currentSection = line.substring(1, line.length - 1);
    if (currentSection === \\"__proto__\\" || currentSection.split(/\\\\s/)[1] === \\"__proto__\\") {
        throw v5.error(new v39(\\"Cannot load profile name '\\" + currentSection + \\"' from shared ini file.\\"));
    }
}
else if (currentSection) {
    var indexOfEqualsSign = line.indexOf(\\"=\\");
    var start = 0;
    var end = line.length - 1;
    var isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;
    if (isAssignment) {
        var name = line.substring(0, indexOfEqualsSign).trim();
        var value = line.substring(indexOfEqualsSign + 1).trim();
        map[currentSection] = map[currentSection] || {};
        map[currentSection][name] = value;
    }
} }); return map; };
const v64 = {};
v64.constructor = v63;
v63.prototype = v64;
v62.parse = v63;
v3.ini = v62;
const v65 = {};
var v66;
v66 = function () { };
const v67 = {};
v67.constructor = v66;
v66.prototype = v67;
v65.noop = v66;
var v68;
v68 = function (err) { if (err)
    throw err; };
const v69 = {};
v69.constructor = v68;
v68.prototype = v69;
v65.callback = v68;
var v70;
const v71 = [];
v71.push();
v70 = function makeAsync(fn, expectedArgs) { if (expectedArgs && expectedArgs <= fn.length) {
    return fn;
} return function () { var args = v71.slice.call(arguments, 0); var callback = args.pop(); var result = fn.apply(null, args); callback(result); }; };
const v72 = {};
v72.constructor = v70;
v70.prototype = v72;
v65.makeAsync = v70;
v3.fn = v65;
const v73 = {};
var v74;
var v75 = v2;
const v77 = Date;
var v76 = v77;
v74 = function getDate() { if (!v75)
    AWS = v11(\\"./core\\"); if (0) {
    return new v76(new v76().getTime() + 0);
}
else {
    return new v76();
} };
const v78 = {};
v78.constructor = v74;
v74.prototype = v78;
v73.getDate = v74;
var v79;
v79 = function iso8601(date) { if (date === undefined) {
    date = v73.getDate();
} return date.toISOString().replace(/\\\\.\\\\d{3}Z$/, \\"Z\\"); };
const v80 = {};
v80.constructor = v79;
v79.prototype = v80;
v73.iso8601 = v79;
var v81;
v81 = function rfc822(date) { if (date === undefined) {
    date = v73.getDate();
} return date.toUTCString(); };
const v82 = {};
v82.constructor = v81;
v81.prototype = v82;
v73.rfc822 = v81;
var v83;
v83 = function unixTimestamp(date) { if (date === undefined) {
    date = v73.getDate();
} return date.getTime() / 1000; };
const v84 = {};
v84.constructor = v83;
v83.prototype = v84;
v73.unixTimestamp = v83;
var v85;
v85 = function format(date) { if (typeof date === \\"number\\") {
    return new v76(date * 1000);
}
else {
    return new v76(date);
} };
const v86 = {};
v86.constructor = v85;
v85.prototype = v86;
v73.from = v85;
var v87;
v87 = function format(date, formatter) { if (!formatter)
    formatter = \\"iso8601\\"; return v73[formatter](v73.from(date)); };
const v88 = {};
v88.constructor = v87;
v87.prototype = v88;
v73.format = v87;
var v89;
v89 = function parseTimestamp(value) { if (typeof value === \\"number\\") {
    return new v76(value * 1000);
}
else if (value.match(/^\\\\d+$/)) {
    return new v76(value * 1000);
}
else if (value.match(/^\\\\d{4}/)) {
    return new v76(value);
}
else if (value.match(/^\\\\w{3},/)) {
    return new v76(value);
}
else {
    throw v5.error(new v39(\\"unhandled timestamp format: \\" + value), { code: \\"TimestampParserError\\" });
} };
const v90 = {};
v90.constructor = v89;
v89.prototype = v90;
v73.parseTimestamp = v89;
v3.date = v73;
const v91 = {};
const v92 = [];
v92.push(0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918000, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117);
v91.crc32Table = v92;
var v93;
v93 = function crc32(data) { var tbl = v92; var crc = 0 ^ -1; if (typeof data === \\"string\\") {
    data = v41.toBuffer(data);
} for (var i = 0; i < data.length; i++) {
    var code = data.readUInt8(i);
    crc = (crc >>> 8) ^ tbl[(crc ^ code) && 255];
} return (crc ^ -1) >>> 0; };
const v94 = {};
v94.constructor = v93;
v93.prototype = v94;
v91.crc32 = v93;
var v95;
const v96 = require(\\"crypto\\");
v95 = function hmac(key, string, digest, fn) { if (!digest)
    digest = \\"binary\\"; if (digest === \\"buffer\\") {
    digest = undefined;
} if (!fn)
    fn = \\"sha256\\"; if (typeof string === \\"string\\")
    string = v41.toBuffer(string); return v96.createHmac(fn, key).update(string).digest(digest); };
const v97 = {};
v97.constructor = v95;
v95.prototype = v97;
v91.hmac = v95;
var v98;
v98 = function md5(data, digest, callback) { return v91.hash(\\"md5\\", data, digest, callback); };
const v99 = {};
v99.constructor = v98;
v98.prototype = v99;
v91.md5 = v98;
var v100;
v100 = function sha256(data, digest, callback) { return v91.hash(\\"sha256\\", data, digest, callback); };
const v101 = {};
v101.constructor = v100;
v100.prototype = v101;
v91.sha256 = v100;
var v102;
const v104 = ArrayBuffer;
var v103 = v104;
var v105 = undefined;
v102 = function (algorithm, data, digest, callback) { var hash = v91.createHash(algorithm); if (!digest) {
    digest = \\"binary\\";
} if (digest === \\"buffer\\") {
    digest = undefined;
} if (typeof data === \\"string\\")
    data = v41.toBuffer(data); var sliceFn = v5.arraySliceFn(data); var isBuffer = v5.Buffer.isBuffer(data); if (v5.isBrowser() && typeof v103 !== \\"undefined\\" && data && data.buffer instanceof v103)
    isBuffer = true; if (callback && typeof data === \\"object\\" && typeof data.on === \\"function\\" && !isBuffer) {
    data.on(\\"data\\", function (chunk) { hash.update(chunk); });
    data.on(\\"error\\", function (err) { callback(err); });
    data.on(\\"end\\", function () { callback(null, hash.digest(digest)); });
}
else if (callback && sliceFn && !isBuffer && typeof v105 !== \\"undefined\\") {
    var index = 0, size = 1024 * 512;
    var reader = new v105();
    reader.onerror = function () { callback(new v39(\\"Failed to read data.\\")); };
    reader.onload = function () { var buf = new v5.Buffer(new v43(reader.result)); hash.update(buf); index += buf.length; reader._continueReading(); };
    reader._continueReading = function () { if (index >= data.size) {
        callback(null, hash.digest(digest));
        return;
    } var back = index + size; if (back > data.size)
        back = data.size; reader.readAsArrayBuffer(sliceFn.call(data, index, back)); };
    reader._continueReading();
}
else {
    if (v5.isBrowser() && typeof data === \\"object\\" && !isBuffer) {
        data = new v5.Buffer(new v43(data));
    }
    var out = hash.update(data).digest(digest);
    if (callback)
        callback(null, out);
    return out;
} };
const v106 = {};
v106.constructor = v102;
v102.prototype = v106;
v91.hash = v102;
var v107;
v107 = function toHex(data) { var out = []; for (var i = 0; i < data.length; i++) {
    out.push((\\"0\\" + data.charCodeAt(i).toString(16)).substr(-2, 2));
} return out.join(\\"\\"); };
const v108 = {};
v108.constructor = v107;
v107.prototype = v108;
v91.toHex = v107;
var v109;
v109 = function createHash(algorithm) { return v96.createHash(algorithm); };
const v110 = {};
v110.constructor = v109;
v109.prototype = v110;
v91.createHash = v109;
v91.lib = v96;
v3.crypto = v91;
const v111 = {};
v3.abort = v111;
var v112;
const v113 = Atomics.constructor.prototype;
v112 = function each(object, iterFunction) { for (var key in object) {
    if (v113.hasOwnProperty.call(object, key)) {
        var ret = iterFunction.call(this, key, object[key]);
        if (ret === v111)
            break;
    }
} };
const v114 = {};
v114.constructor = v112;
v112.prototype = v114;
v3.each = v112;
var v115;
const v117 = Number.parseInt;
var v116 = v117;
v115 = function arrayEach(array, iterFunction) { for (var idx in array) {
    if (v113.hasOwnProperty.call(array, idx)) {
        var ret = iterFunction.call(this, array[idx], v116(idx, 10));
        if (ret === v111)
            break;
    }
} };
const v118 = {};
v118.constructor = v115;
v115.prototype = v118;
v3.arrayEach = v115;
var v119;
v119 = function update(obj1, obj2) { v5.each(obj2, function iterator(key, item) { obj1[key] = item; }); return obj1; };
const v120 = {};
v120.constructor = v119;
v119.prototype = v120;
v3.update = v119;
var v121;
var v122 = v3;
v121 = function merge(obj1, obj2) { return v122.update(v5.copy(obj1), obj2); };
const v123 = {};
v123.constructor = v121;
v121.prototype = v123;
v3.merge = v121;
var v124;
v124 = function copy(object) { if (object === null || object === undefined)
    return object; var dupe = {}; for (var key in object) {
    dupe[key] = object[key];
} return dupe; };
const v125 = {};
v125.constructor = v124;
v124.prototype = v125;
v3.copy = v124;
var v126;
v126 = function isEmpty(obj) { for (var prop in obj) {
    if (v113.hasOwnProperty.call(obj, prop)) {
        return false;
    }
} return true; };
const v127 = {};
v127.constructor = v126;
v126.prototype = v127;
v3.isEmpty = v126;
var v128;
v128 = function arraySliceFn(obj) { var fn = obj.slice || obj.webkitSlice || obj.mozSlice; return typeof fn === \\"function\\" ? fn : null; };
const v129 = {};
v129.constructor = v128;
v128.prototype = v129;
v3.arraySliceFn = v128;
var v130;
v130 = function isType(obj, type) { if (typeof type === \\"function\\")
    type = v5.typeName(type); return v113.toString.call(obj) === \\"[object \\" + type + \\"]\\"; };
const v131 = {};
v131.constructor = v130;
v130.prototype = v131;
v3.isType = v130;
var v132;
v132 = function typeName(type) { if (v113.hasOwnProperty.call(type, \\"name\\"))
    return type.name; var str = type.toString(); var match = str.match(/^\\\\s*function (.+)\\\\(/); return match ? match[1] : str; };
const v133 = {};
v133.constructor = v132;
v132.prototype = v133;
v3.typeName = v132;
var v134;
const v136 = String;
var v135 = v136;
v134 = function error(err, options) { var originalError = null; if (typeof err.message === \\"string\\" && err.message !== \\"\\") {
    if (typeof options === \\"string\\" || (options && options.message)) {
        originalError = v5.copy(err);
        originalError.message = err.message;
    }
} err.message = err.message || null; if (typeof options === \\"string\\") {
    err.message = options;
}
else if (typeof options === \\"object\\" && options !== null) {
    v5.update(err, options);
    if (options.message)
        err.message = options.message;
    if (options.code || options.name)
        err.code = options.code || options.name;
    if (options.stack)
        err.stack = options.stack;
} if (typeof v30.defineProperty === \\"function\\") {
    v30.defineProperty(err, \\"name\\", { writable: true, enumerable: false });
    v30.defineProperty(err, \\"message\\", { enumerable: true });
} err.name = v135(options && options.name || err.name || err.code || \\"Error\\"); err.time = new v76(); if (originalError)
    err.originalError = originalError; return err; };
const v137 = {};
v137.constructor = v134;
v134.prototype = v137;
v3.error = v134;
var v138;
v138 = function inherit(klass, features) { var newObject = null; if (features === undefined) {
    features = klass;
    klass = v30;
    newObject = {};
}
else {
    var ctor = function ConstructorWrapper() { };
    ctor.prototype = klass.prototype;
    newObject = new ctor();
} if (features.constructor === v30) {
    features.constructor = function () { if (klass !== v30) {
        return klass.apply(this, arguments);
    } };
} features.constructor.prototype = newObject; v5.update(features.constructor.prototype, features); features.constructor.__super__ = klass; return features.constructor; };
const v139 = {};
v139.constructor = v138;
v138.prototype = v139;
v3.inherit = v138;
var v140;
v140 = function mixin() { var klass = arguments[0]; for (var i = 1; i < arguments.length; i++) {
    for (var prop in arguments[i].prototype) {
        var fn = arguments[i].prototype[prop];
        if (prop !== \\"constructor\\") {
            klass.prototype[prop] = fn;
        }
    }
} return klass; };
const v141 = {};
v141.constructor = v140;
v140.prototype = v141;
v3.mixin = v140;
var v142;
v142 = function hideProperties(obj, props) { if (typeof v30.defineProperty !== \\"function\\")
    return; v5.arrayEach(props, function (key) { v30.defineProperty(obj, key, { enumerable: false, writable: true, configurable: true }); }); };
const v143 = {};
v143.constructor = v142;
v142.prototype = v143;
v3.hideProperties = v142;
var v144;
v144 = function property(obj, name, value, enumerable, isValue) { var opts = { configurable: true, enumerable: enumerable !== undefined ? enumerable : true }; if (typeof value === \\"function\\" && !isValue) {
    opts.get = value;
}
else {
    opts.value = value;
    opts.writable = true;
} v30.defineProperty(obj, name, opts); };
const v145 = {};
v145.constructor = v144;
v144.prototype = v145;
v3.property = v144;
var v146;
v146 = function memoizedProperty(obj, name, get, enumerable) { var cachedValue = null; v5.property(obj, name, function () { if (cachedValue === null) {
    cachedValue = get();
} return cachedValue; }, enumerable); };
const v147 = {};
v147.constructor = v146;
v146.prototype = v147;
v3.memoizedProperty = v146;
var v148;
v148 = function hoistPayloadMember(resp) { var req = resp.request; var operationName = req.operation; var operation = req.service.api.operations[operationName]; var output = operation.output; if (output.payload && !operation.hasEventOutput) {
    var payloadMember = output.members[output.payload];
    var responsePayload = resp.data[output.payload];
    if (payloadMember.type === \\"structure\\") {
        v5.each(responsePayload, function (key, value) { v5.property(resp.data, key, value, false); });
    }
} };
const v149 = {};
v149.constructor = v148;
v148.prototype = v149;
v3.hoistPayloadMember = v148;
var v150;
v150 = function computeSha256(body, done) { if (v5.isNode()) {
    var Stream = v5.stream.Stream;
    var fs = v11(\\"fs\\");
    if (typeof Stream === \\"function\\" && body instanceof Stream) {
        if (typeof body.path === \\"string\\") {
            var settings = {};
            if (typeof body.start === \\"number\\") {
                settings.start = body.start;
            }
            if (typeof body.end === \\"number\\") {
                settings.end = body.end;
            }
            body = fs.createReadStream(body.path, settings);
        }
        else {
            return done(new v39(\\"Non-file stream objects are \\" + \\"not supported with SigV4\\"));
        }
    }
} v91.sha256(body, \\"hex\\", function (err, sha) { if (err)
    done(err);
else
    done(null, sha); }); };
const v151 = {};
v151.constructor = v150;
v150.prototype = v151;
v3.computeSha256 = v150;
var v152;
const v153 = {};
var v154;
v154 = function Config(options) { if (options === undefined)
    options = {}; options = this.extractCredentials(options); v3.each.call(this, this.keys, function (key, value) { this.set(key, options[key], value); }); };
v154.prototype = v153;
v154.__super__ = v31;
v153.constructor = v154;
var v155;
var v156 = v40;
v155 = function getCredentials(callback) { var self = this; function finish(err) { callback(err, err ? null : self.credentials); } function credError(msg, err) { return new v3.error(err || new v156(), { code: \\"CredentialsError\\", message: msg, name: \\"CredentialsError\\" }); } function getAsyncCredentials() { self.credentials.get(function (err) { if (err) {
    var msg = \\"Could not load credentials from \\" + self.credentials.constructor.name;
    err = credError(msg, err);
} finish(err); }); } function getStaticCredentials() { var err = null; if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {
    err = credError(\\"Missing credentials\\");
} finish(err); } if (self.credentials) {
    if (typeof self.credentials.get === \\"function\\") {
        getAsyncCredentials();
    }
    else {
        getStaticCredentials();
    }
}
else if (self.credentialProvider) {
    self.credentialProvider.resolve(function (err, creds) { if (err) {
        err = credError(\\"Could not load credentials from any providers\\", err);
    } self.credentials = creds; finish(err); });
}
else {
    finish(credError(\\"No credentials to load\\"));
} };
const v157 = {};
v157.constructor = v155;
v155.prototype = v157;
v153.getCredentials = v155;
var v158;
var v159 = v2;
v158 = function update(options, allowUnknownKeys) { allowUnknownKeys = allowUnknownKeys || false; options = this.extractCredentials(options); v3.each.call(this, options, function (key, value) { if (allowUnknownKeys || v113.hasOwnProperty.call(this.keys, key) || v159.Service.hasService(key)) {
    this.set(key, value);
} }); };
const v160 = {};
v160.constructor = v158;
v158.prototype = v160;
v153.update = v158;
var v161;
const v163 = JSON;
var v162 = v163;
v161 = function loadFromPath(path) { this.clear(); var options = v162.parse(v3.readFileSync(path)); var fileSystemCreds = new v159.FileSystemCredentials(path); var chain = new v159.CredentialProviderChain(); chain.providers.unshift(fileSystemCreds); chain.resolve(function (err, creds) { if (err)
    throw err;
else
    options.credentials = creds; }); this.constructor(options); return this; };
const v164 = {};
v164.constructor = v161;
v161.prototype = v164;
v153.loadFromPath = v161;
var v165;
v165 = function clear() { v3.each.call(this, this.keys, function (key) { delete this[key]; }); this.set(\\"credentials\\", undefined); this.set(\\"credentialProvider\\", undefined); };
const v166 = {};
v166.constructor = v165;
v165.prototype = v166;
v153.clear = v165;
var v167;
v167 = function set(property, value, defaultValue) { if (value === undefined) {
    if (defaultValue === undefined) {
        defaultValue = this.keys[property];
    }
    if (typeof defaultValue === \\"function\\") {
        this[property] = defaultValue.call(this);
    }
    else {
        this[property] = defaultValue;
    }
}
else if (property === \\"httpOptions\\" && this[property]) {
    this[property] = v3.merge(this[property], value);
}
else {
    this[property] = value;
} };
const v168 = {};
v168.constructor = v167;
v167.prototype = v168;
v153.set = v167;
const v169 = {};
var v170;
var v171 = v2;
var v172 = v2;
v170 = function () { var credentials = null; new v171.CredentialProviderChain([function () { return new v171.EnvironmentCredentials(\\"AWS\\"); }, function () { return new v171.EnvironmentCredentials(\\"AMAZON\\"); }, function () { return new v172.SharedIniFileCredentials({ disableAssumeRole: true }); }]).resolve(function (err, creds) { if (!err)
    credentials = creds; }); return credentials; };
const v173 = {};
v173.constructor = v170;
v170.prototype = v173;
v169.credentials = v170;
var v174;
v174 = function () { return new v171.CredentialProviderChain(); };
const v175 = {};
v175.constructor = v174;
v174.prototype = v175;
v169.credentialProvider = v174;
var v176;
var v178;
var v179 = v8;
const v180 = {};
var v181;
v181 = function IniLoader() { this.resolvedProfiles = {}; };
v181.prototype = v180;
v181.__super__ = v31;
v180.constructor = v181;
var v182;
v182 = function clearCachedFiles() { this.resolvedProfiles = {}; };
const v183 = {};
v183.constructor = v182;
v182.prototype = v183;
v180.clearCachedFiles = v182;
var v184;
var v185 = v31;
v184 = function loadFrom(options) { options = options || {}; var isConfig = options.isConfig === true; var filename = options.filename || this.getDefaultFilePath(isConfig); if (!this.resolvedProfiles[filename]) {
    var fileContent = this.parseFile(filename, isConfig);
    v185.defineProperty(this.resolvedProfiles, filename, { value: fileContent });
} return this.resolvedProfiles[filename]; };
const v186 = {};
v186.constructor = v184;
v184.prototype = v186;
v180.loadFrom = v184;
var v187;
var v188 = v31;
v187 = function parseFile(filename, isConfig) { var content = v62.parse(v3.readFileSync(filename)); var tmpContent = {}; v188.keys(content).forEach(function (profileName) { var profileContent = content[profileName]; profileName = isConfig ? profileName.replace(/^profile\\\\s/, \\"\\") : profileName; v185.defineProperty(tmpContent, profileName, { value: profileContent, enumerable: true }); }); return tmpContent; };
const v189 = {};
v189.constructor = v187;
v187.prototype = v189;
v180.parseFile = v187;
var v190;
const v192 = require(\\"path\\");
var v191 = v192;
v190 = function getDefaultFilePath(isConfig) { return v191.join(this.getHomeDir(), \\".aws\\", isConfig ? \\"config\\" : \\"credentials\\"); };
const v193 = {};
v193.constructor = v190;
v190.prototype = v193;
v180.getDefaultFilePath = v190;
var v194;
var v195 = v8;
const v197 = require(\\"os\\");
var v196 = v197;
var v198 = v40;
v194 = function getHomeDir() { var env = v195.env; var home = env.HOME || env.USERPROFILE || (env.HOMEPATH ? ((env.HOMEDRIVE || \\"C:/\\") + env.HOMEPATH) : null); if (home) {
    return home;
} if (typeof v196.homedir === \\"function\\") {
    return v196.homedir();
} throw v3.error(new v198(\\"Cannot load credentials, HOME path not set\\")); };
const v199 = {};
v199.constructor = v194;
v194.prototype = v199;
v180.getHomeDir = v194;
const v200 = Object.create(v180);
const v201 = {};
v200.resolvedProfiles = v201;
v178 = function () { var env = v179.env; var region = env.AWS_REGION || env.AMAZON_REGION; if (env[\\"AWS_SDK_LOAD_CONFIG\\"]) {
    var toCheck = [{ filename: env[\\"AWS_SHARED_CREDENTIALS_FILE\\"] }, { isConfig: true, filename: env[\\"AWS_CONFIG_FILE\\"] }];
    var iniLoader = v200;
    while (!region && toCheck.length) {
        var configFile = {};
        var fileInfo = toCheck.shift();
        try {
            configFile = iniLoader.loadFrom(fileInfo);
        }
        catch (err) {
            if (fileInfo.isConfig)
                throw err;
        }
        var profile = configFile[env.AWS_PROFILE || \\"default\\"];
        region = profile && profile.region;
    }
} return region; };
const v202 = {};
v202.constructor = v178;
v178.prototype = v202;
var v177 = v178;
var v204;
v204 = function getRealRegion(region) { return [\\"fips-aws-global\\", \\"aws-fips\\", \\"aws-global\\"].includes(region) ? \\"us-east-1\\" : [\\"fips-aws-us-gov-global\\", \\"aws-us-gov-global\\"].includes(region) ? \\"us-gov-west-1\\" : region.replace(/fips-(dkr-|prod-)?|-fips/, \\"\\"); };
const v205 = {};
v205.constructor = v204;
v204.prototype = v205;
var v203 = v204;
v176 = function () { var region = v177(); return region ? v203(region) : undefined; };
const v206 = {};
v206.constructor = v176;
v176.prototype = v206;
v169.region = v176;
var v207;
var v208 = v8;
const v210 = console;
var v209 = v210;
v207 = function () { return v208.env.AWSJS_DEBUG ? v209 : null; };
const v211 = {};
v211.constructor = v207;
v207.prototype = v211;
v169.logger = v207;
const v212 = {};
v169.apiVersions = v212;
v169.apiVersion = null;
v169.endpoint = undefined;
const v213 = {};
v213.timeout = 120000;
v169.httpOptions = v213;
v169.maxRetries = undefined;
v169.maxRedirects = 10;
v169.paramValidation = true;
v169.sslEnabled = true;
v169.s3ForcePathStyle = false;
v169.s3BucketEndpoint = false;
v169.s3DisableBodySigning = true;
v169.s3UsEast1RegionalEndpoint = \\"legacy\\";
v169.s3UseArnRegion = undefined;
v169.computeChecksums = true;
v169.convertResponseTypes = true;
v169.correctClockSkew = false;
v169.customUserAgent = null;
v169.dynamoDbCrc32 = true;
v169.systemClockOffset = 0;
v169.signatureVersion = null;
v169.signatureCache = true;
const v214 = {};
v169.retryDelayOptions = v214;
v169.useAccelerateEndpoint = false;
v169.clientSideMonitoring = false;
v169.endpointDiscoveryEnabled = undefined;
v169.endpointCacheSize = 1000;
v169.hostPrefixEnabled = true;
v169.stsRegionalEndpoints = \\"legacy\\";
var v215;
var v216 = v178;
var v218;
v218 = function isFipsRegion(region) { return typeof region === \\"string\\" && (region.startsWith(\\"fips-\\") || region.endsWith(\\"-fips\\")); };
const v219 = {};
v219.constructor = v218;
v218.prototype = v219;
var v217 = v218;
var v220 = v3;
const v222 = {};
var v223;
var v225;
v225 = function (value) { return value === \\"true\\" ? true : value === \\"false\\" ? false : undefined; };
const v226 = {};
v226.constructor = v225;
v225.prototype = v226;
var v224 = v225;
v223 = function (env) { return v224(env[\\"AWS_USE_FIPS_ENDPOINT\\"]); };
const v227 = {};
v227.constructor = v223;
v223.prototype = v227;
v222.environmentVariableSelector = v223;
var v228;
v228 = function (profile) { return v224(profile[\\"use_fips_endpoint\\"]); };
const v229 = {};
v229.constructor = v228;
v228.prototype = v229;
v222.configFileSelector = v228;
v222.default = false;
var v221 = v222;
v215 = function () { var region = v216(); return v217(region) ? true : v220.loadConfig(v221); };
const v230 = {};
v230.constructor = v215;
v215.prototype = v230;
v169.useFipsEndpoint = v215;
var v231;
const v233 = {};
var v234;
v234 = function (env) { return v224(env[\\"AWS_USE_DUALSTACK_ENDPOINT\\"]); };
const v235 = {};
v235.constructor = v234;
v234.prototype = v235;
v233.environmentVariableSelector = v234;
var v236;
v236 = function (profile) { return v224(profile[\\"use_dualstack_endpoint\\"]); };
const v237 = {};
v237.constructor = v236;
v236.prototype = v237;
v233.configFileSelector = v236;
v233.default = false;
var v232 = v233;
v231 = function () { return v220.loadConfig(v232); };
const v238 = {};
v238.constructor = v231;
v231.prototype = v238;
v169.useDualstackEndpoint = v231;
v153.keys = v169;
var v239;
var v240 = v2;
v239 = function extractCredentials(options) { if (options.accessKeyId && options.secretAccessKey) {
    options = v3.copy(options);
    options.credentials = new v240.Credentials(options);
} return options; };
const v241 = {};
v241.constructor = v239;
v239.prototype = v241;
v153.extractCredentials = v239;
var v242;
const v244 = Promise;
var v243 = v244;
var v245 = v244;
var v246 = v2;
var v247 = undefined;
v242 = function setPromisesDependency(dep) { PromisesDependency = dep; if (dep === null && typeof v243 === \\"function\\") {
    PromisesDependency = v245;
} var constructors = [v240.Request, v246.Credentials, v240.CredentialProviderChain]; if (v240.S3) {
    constructors.push(v246.S3);
    if (v246.S3.ManagedUpload) {
        constructors.push(v246.S3.ManagedUpload);
    }
} v3.addPromises(constructors, v247); };
const v248 = {};
v248.constructor = v242;
v242.prototype = v248;
v153.setPromisesDependency = v242;
var v249;
v249 = function getPromisesDependency() { return v247; };
const v250 = {};
v250.constructor = v249;
v249.prototype = v250;
v153.getPromisesDependency = v249;
const v251 = Object.create(v153);
const v252 = {};
var v253;
v253 = function Credentials() { v3.hideProperties(this, [\\"secretAccessKey\\"]); this.expired = false; this.expireTime = null; this.refreshCallbacks = []; if (arguments.length === 1 && typeof arguments[0] === \\"object\\") {
    var creds = arguments[0].credentials || arguments[0];
    this.accessKeyId = creds.accessKeyId;
    this.secretAccessKey = creds.secretAccessKey;
    this.sessionToken = creds.sessionToken;
}
else {
    this.accessKeyId = arguments[0];
    this.secretAccessKey = arguments[1];
    this.sessionToken = arguments[2];
} };
v253.prototype = v252;
v253.__super__ = v31;
var v254;
v254 = function addPromisesToClass(PromiseDependency) { this.prototype.getPromise = v3.promisifyMethod(\\"get\\", PromiseDependency); this.prototype.refreshPromise = v3.promisifyMethod(\\"refresh\\", PromiseDependency); };
const v255 = {};
v255.constructor = v254;
v254.prototype = v255;
v253.addPromisesToClass = v254;
var v256;
v256 = function deletePromisesFromClass() { delete this.prototype.getPromise; delete this.prototype.refreshPromise; };
const v257 = {};
v257.constructor = v256;
v256.prototype = v257;
v253.deletePromisesFromClass = v256;
v252.constructor = v253;
v252.expiryWindow = 15;
var v258;
var v259 = v77;
v258 = function needsRefresh() { var currentTime = v73.getDate().getTime(); var adjustedTime = new v259(currentTime + this.expiryWindow * 1000); if (this.expireTime && adjustedTime > this.expireTime) {
    return true;
}
else {
    return this.expired || !this.accessKeyId || !this.secretAccessKey;
} };
const v260 = {};
v260.constructor = v258;
v258.prototype = v260;
v252.needsRefresh = v258;
var v261;
v261 = function get(callback) { var self = this; if (this.needsRefresh()) {
    this.refresh(function (err) { if (!err)
        self.expired = false; if (callback)
        callback(err); });
}
else if (callback) {
    callback();
} };
const v262 = {};
v262.constructor = v261;
v261.prototype = v262;
v252.get = v261;
var v263;
v263 = function refresh(callback) { this.expired = false; callback(); };
const v264 = {};
v264.constructor = v263;
v263.prototype = v264;
v252.refresh = v263;
var v265;
v265 = function coalesceRefresh(callback, sync) { var self = this; if (self.refreshCallbacks.push(callback) === 1) {
    self.load(function onLoad(err) { v3.arrayEach(self.refreshCallbacks, function (callback) { if (sync) {
        callback(err);
    }
    else {
        v3.defer(function () { callback(err); });
    } }); self.refreshCallbacks.length = 0; });
} };
const v266 = {};
v266.constructor = v265;
v265.prototype = v266;
v252.coalesceRefresh = v265;
var v267;
v267 = function load(callback) { callback(); };
const v268 = {};
v268.constructor = v267;
v267.prototype = v268;
v252.load = v267;
var v269;
var v270 = v244;
var v271 = \\"get\\";
v269 = function promise() { var self = this; var args = v71.slice.call(arguments); return new v270(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[v271].apply(self, args); }); };
const v272 = {};
v272.constructor = v269;
v269.prototype = v272;
v252.getPromise = v269;
var v273;
var v274 = v244;
var v275 = \\"refresh\\";
v273 = function promise() { var self = this; var args = v71.slice.call(arguments); return new v274(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[v275].apply(self, args); }); };
const v276 = {};
v276.constructor = v273;
v273.prototype = v276;
v252.refreshPromise = v273;
const v277 = Object.create(v252);
var v278;
var v279 = v2;
var v280 = v8;
const v282 = Boolean;
var v281 = v282;
var v283 = v282;
v278 = function SharedIniFileCredentials(options) { v279.Credentials.call(this); options = options || {}; this.filename = options.filename; this.profile = options.profile || v280.env.AWS_PROFILE || \\"default\\"; this.disableAssumeRole = v281(options.disableAssumeRole); this.preferStaticCredentials = v283(options.preferStaticCredentials); this.tokenCodeFn = options.tokenCodeFn || null; this.httpOptions = options.httpOptions || null; this.get(options.callback || v65.noop); };
v278.prototype = v277;
v278.__super__ = v253;
v277.constructor = v278;
var v284;
var v285 = v200;
var v286 = v31;
var v287 = v40;
var v288 = v40;
v284 = function load(callback) { var self = this; try {
    var profiles = v3.getProfilesFromSharedConfig(v285, this.filename);
    var profile = profiles[this.profile] || {};
    if (v286.keys(profile).length === 0) {
        throw v3.error(new v287(\\"Profile \\" + this.profile + \\" not found\\"), { code: \\"SharedIniFileCredentialsProviderFailure\\" });
    }
    var preferStaticCredentialsToRoleArn = v281(this.preferStaticCredentials && profile[\\"aws_access_key_id\\"] && profile[\\"aws_secret_access_key\\"]);
    if (profile[\\"role_arn\\"] && !preferStaticCredentialsToRoleArn) {
        this.loadRoleProfile(profiles, profile, function (err, data) { if (err) {
            callback(err);
        }
        else {
            self.expired = false;
            self.accessKeyId = data.Credentials.AccessKeyId;
            self.secretAccessKey = data.Credentials.SecretAccessKey;
            self.sessionToken = data.Credentials.SessionToken;
            self.expireTime = data.Credentials.Expiration;
            callback(null);
        } });
        return;
    }
    this.accessKeyId = profile[\\"aws_access_key_id\\"];
    this.secretAccessKey = profile[\\"aws_secret_access_key\\"];
    this.sessionToken = profile[\\"aws_session_token\\"];
    if (!this.accessKeyId || !this.secretAccessKey) {
        throw v3.error(new v288(\\"Credentials not set for profile \\" + this.profile), { code: \\"SharedIniFileCredentialsProviderFailure\\" });
    }
    this.expired = false;
    callback(null);
}
catch (err) {
    callback(err);
} };
const v289 = {};
v289.constructor = v284;
v284.prototype = v289;
v277.load = v284;
var v290;
var v291 = v200;
v290 = function refresh(callback) { v291.clearCachedFiles(); this.coalesceRefresh(callback || v65.callback, this.disableAssumeRole); };
const v292 = {};
v292.constructor = v290;
v290.prototype = v292;
v277.refresh = v290;
var v293;
var v294 = \\"us-east-1\\";
var v295 = v40;
var v297;
var v299;
var v300 = v40;
const v302 = {};
v302.isFipsRegion = v218;
var v303;
v303 = function isGlobalRegion(region) { return typeof region === \\"string\\" && [\\"aws-global\\", \\"aws-us-gov-global\\"].includes(region); };
const v304 = {};
v304.constructor = v303;
v303.prototype = v304;
v302.isGlobalRegion = v303;
v302.getRealRegion = v204;
var v301 = v302;
var v305 = v302;
var v306 = v302;
var v307 = v31;
var v308 = 1;
v299 = function Service(config) { if (!this.loadServiceClass) {
    throw v3.error(new v300(), \\"Service must be constructed with \`new' operator\\");
} if (config) {
    if (config.region) {
        var region = config.region;
        if (v301.isFipsRegion(region)) {
            config.region = v305.getRealRegion(region);
            config.useFipsEndpoint = true;
        }
        if (v306.isGlobalRegion(region)) {
            config.region = v306.getRealRegion(region);
        }
    }
    if (typeof config.useDualstack === \\"boolean\\" && typeof config.useDualstackEndpoint !== \\"boolean\\") {
        config.useDualstackEndpoint = config.useDualstack;
    }
} var ServiceClass = this.loadServiceClass(config || {}); if (ServiceClass) {
    var originalConfig = v3.copy(config);
    var svc = new ServiceClass(config);
    v307.defineProperty(svc, \\"_originalConfig\\", { get: function () { return originalConfig; }, enumerable: false, configurable: true });
    svc._clientId = ++v308;
    return svc;
} this.initialize(config); };
const v309 = {};
v309.constructor = v299;
var v310;
var v311 = v2;
const v313 = {};
var v314;
var v316;
var v318;
v318 = function generateRegionPrefix(region) { if (!region)
    return null; var parts = region.split(\\"-\\"); if (parts.length < 3)
    return null; return parts.slice(0, parts.length - 2).join(\\"-\\") + \\"-*\\"; };
const v319 = {};
v319.constructor = v318;
v318.prototype = v319;
var v317 = v318;
v316 = function derivedKeys(service) { var region = service.config.region; var regionPrefix = v317(region); var endpointPrefix = service.api.endpointPrefix; return [[region, endpointPrefix], [regionPrefix, endpointPrefix], [region, \\"*\\"], [regionPrefix, \\"*\\"], [\\"*\\", endpointPrefix], [\\"*\\", \\"*\\"]].map(function (item) { return item[0] && item[1] ? item.join(\\"/\\") : null; }); };
const v320 = {};
v320.constructor = v316;
v316.prototype = v320;
var v315 = v316;
const v321 = {};
const v322 = {};
v322.endpoint = \\"{service}-fips.{region}.api.aws\\";
v321[\\"*/*\\"] = v322;
const v323 = {};
v323.endpoint = \\"{service}-fips.{region}.api.amazonwebservices.com.cn\\";
v321[\\"cn-*/*\\"] = v323;
v321[\\"*/s3\\"] = \\"dualstackFipsLegacy\\";
v321[\\"cn-*/s3\\"] = \\"dualstackFipsLegacyCn\\";
v321[\\"*/s3-control\\"] = \\"dualstackFipsLegacy\\";
v321[\\"cn-*/s3-control\\"] = \\"dualstackFipsLegacyCn\\";
const v324 = {};
v324[\\"*/*\\"] = \\"fipsStandard\\";
v324[\\"us-gov-*/*\\"] = \\"fipsStandard\\";
const v325 = {};
v325.endpoint = \\"{service}-fips.{region}.c2s.ic.gov\\";
v324[\\"us-iso-*/*\\"] = v325;
v324[\\"us-iso-*/dms\\"] = \\"usIso\\";
const v326 = {};
v326.endpoint = \\"{service}-fips.{region}.sc2s.sgov.gov\\";
v324[\\"us-isob-*/*\\"] = v326;
v324[\\"us-isob-*/dms\\"] = \\"usIsob\\";
const v327 = {};
v327.endpoint = \\"{service}-fips.{region}.amazonaws.com.cn\\";
v324[\\"cn-*/*\\"] = v327;
v324[\\"*/api.ecr\\"] = \\"fips.api.ecr\\";
v324[\\"*/api.sagemaker\\"] = \\"fips.api.sagemaker\\";
v324[\\"*/batch\\"] = \\"fipsDotPrefix\\";
v324[\\"*/eks\\"] = \\"fipsDotPrefix\\";
v324[\\"*/models.lex\\"] = \\"fips.models.lex\\";
v324[\\"*/runtime.lex\\"] = \\"fips.runtime.lex\\";
const v328 = {};
v328.endpoint = \\"runtime-fips.sagemaker.{region}.amazonaws.com\\";
v324[\\"*/runtime.sagemaker\\"] = v328;
v324[\\"*/iam\\"] = \\"fipsWithoutRegion\\";
v324[\\"*/route53\\"] = \\"fipsWithoutRegion\\";
v324[\\"*/transcribe\\"] = \\"fipsDotPrefix\\";
v324[\\"*/waf\\"] = \\"fipsWithoutRegion\\";
v324[\\"us-gov-*/transcribe\\"] = \\"fipsDotPrefix\\";
v324[\\"us-gov-*/api.ecr\\"] = \\"fips.api.ecr\\";
v324[\\"us-gov-*/api.sagemaker\\"] = \\"fips.api.sagemaker\\";
v324[\\"us-gov-*/models.lex\\"] = \\"fips.models.lex\\";
v324[\\"us-gov-*/runtime.lex\\"] = \\"fips.runtime.lex\\";
v324[\\"us-gov-*/acm-pca\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/batch\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/config\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/eks\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/elasticmapreduce\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/identitystore\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/dynamodb\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/elasticloadbalancing\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/guardduty\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/monitoring\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/resource-groups\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/runtime.sagemaker\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/servicecatalog-appregistry\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/servicequotas\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/ssm\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/sts\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-*/support\\"] = \\"fipsWithServiceOnly\\";
v324[\\"us-gov-west-1/states\\"] = \\"fipsWithServiceOnly\\";
const v329 = {};
v329.endpoint = \\"elasticfilesystem-fips.{region}.c2s.ic.gov\\";
v324[\\"us-iso-east-1/elasticfilesystem\\"] = v329;
v324[\\"us-gov-west-1/organizations\\"] = \\"fipsWithServiceOnly\\";
const v330 = {};
v330.endpoint = \\"route53.us-gov.amazonaws.com\\";
v324[\\"us-gov-west-1/route53\\"] = v330;
const v331 = {};
const v332 = {};
v332.endpoint = \\"{service}.{region}.api.aws\\";
v331[\\"*/*\\"] = v332;
const v333 = {};
v333.endpoint = \\"{service}.{region}.api.amazonwebservices.com.cn\\";
v331[\\"cn-*/*\\"] = v333;
v331[\\"*/s3\\"] = \\"dualstackLegacy\\";
v331[\\"cn-*/s3\\"] = \\"dualstackLegacyCn\\";
v331[\\"*/s3-control\\"] = \\"dualstackLegacy\\";
v331[\\"cn-*/s3-control\\"] = \\"dualstackLegacyCn\\";
v331[\\"ap-south-1/ec2\\"] = \\"dualstackLegacyEc2\\";
v331[\\"eu-west-1/ec2\\"] = \\"dualstackLegacyEc2\\";
v331[\\"sa-east-1/ec2\\"] = \\"dualstackLegacyEc2\\";
v331[\\"us-east-1/ec2\\"] = \\"dualstackLegacyEc2\\";
v331[\\"us-east-2/ec2\\"] = \\"dualstackLegacyEc2\\";
v331[\\"us-west-2/ec2\\"] = \\"dualstackLegacyEc2\\";
const v334 = {};
const v335 = {};
v335.endpoint = \\"{service}.{region}.amazonaws.com\\";
v335.signatureVersion = \\"v4\\";
v334[\\"*/*\\"] = v335;
const v336 = {};
v336.endpoint = \\"{service}.{region}.amazonaws.com.cn\\";
v334[\\"cn-*/*\\"] = v336;
v334[\\"us-iso-*/*\\"] = \\"usIso\\";
v334[\\"us-isob-*/*\\"] = \\"usIsob\\";
v334[\\"*/budgets\\"] = \\"globalSSL\\";
v334[\\"*/cloudfront\\"] = \\"globalSSL\\";
v334[\\"*/sts\\"] = \\"globalSSL\\";
const v337 = {};
v337.endpoint = \\"{service}.amazonaws.com\\";
v337.signatureVersion = \\"v2\\";
v337.globalEndpoint = true;
v334[\\"*/importexport\\"] = v337;
v334[\\"*/route53\\"] = \\"globalSSL\\";
const v338 = {};
v338.endpoint = \\"{service}.amazonaws.com.cn\\";
v338.globalEndpoint = true;
v338.signingRegion = \\"cn-northwest-1\\";
v334[\\"cn-*/route53\\"] = v338;
v334[\\"us-gov-*/route53\\"] = \\"globalGovCloud\\";
const v339 = {};
v339.endpoint = \\"{service}.c2s.ic.gov\\";
v339.globalEndpoint = true;
v339.signingRegion = \\"us-iso-east-1\\";
v334[\\"us-iso-*/route53\\"] = v339;
const v340 = {};
v340.endpoint = \\"{service}.sc2s.sgov.gov\\";
v340.globalEndpoint = true;
v340.signingRegion = \\"us-isob-east-1\\";
v334[\\"us-isob-*/route53\\"] = v340;
v334[\\"*/waf\\"] = \\"globalSSL\\";
v334[\\"*/iam\\"] = \\"globalSSL\\";
const v341 = {};
v341.endpoint = \\"{service}.cn-north-1.amazonaws.com.cn\\";
v341.globalEndpoint = true;
v341.signingRegion = \\"cn-north-1\\";
v334[\\"cn-*/iam\\"] = v341;
v334[\\"us-gov-*/iam\\"] = \\"globalGovCloud\\";
const v342 = {};
v342.endpoint = \\"{service}.{region}.amazonaws.com\\";
v334[\\"us-gov-*/sts\\"] = v342;
v334[\\"us-gov-west-1/s3\\"] = \\"s3signature\\";
v334[\\"us-west-1/s3\\"] = \\"s3signature\\";
v334[\\"us-west-2/s3\\"] = \\"s3signature\\";
v334[\\"eu-west-1/s3\\"] = \\"s3signature\\";
v334[\\"ap-southeast-1/s3\\"] = \\"s3signature\\";
v334[\\"ap-southeast-2/s3\\"] = \\"s3signature\\";
v334[\\"ap-northeast-1/s3\\"] = \\"s3signature\\";
v334[\\"sa-east-1/s3\\"] = \\"s3signature\\";
const v343 = {};
v343.endpoint = \\"{service}.amazonaws.com\\";
v343.signatureVersion = \\"s3\\";
v334[\\"us-east-1/s3\\"] = v343;
const v344 = {};
v344.endpoint = \\"{service}.amazonaws.com\\";
v344.signatureVersion = \\"v2\\";
v334[\\"us-east-1/sdb\\"] = v344;
const v345 = {};
v345.endpoint = \\"{service}.{region}.amazonaws.com\\";
v345.signatureVersion = \\"v2\\";
v334[\\"*/sdb\\"] = v345;
const v346 = {};
const v347 = {};
v347.endpoint = \\"https://{service}.amazonaws.com\\";
v347.globalEndpoint = true;
v347.signingRegion = \\"us-east-1\\";
v346.globalSSL = v347;
const v348 = {};
v348.endpoint = \\"{service}.us-gov.amazonaws.com\\";
v348.globalEndpoint = true;
v348.signingRegion = \\"us-gov-west-1\\";
v346.globalGovCloud = v348;
const v349 = {};
v349.endpoint = \\"{service}.{region}.amazonaws.com\\";
v349.signatureVersion = \\"s3\\";
v346.s3signature = v349;
const v350 = {};
v350.endpoint = \\"{service}.{region}.c2s.ic.gov\\";
v346.usIso = v350;
const v351 = {};
v351.endpoint = \\"{service}.{region}.sc2s.sgov.gov\\";
v346.usIsob = v351;
const v352 = {};
v352.endpoint = \\"{service}-fips.{region}.amazonaws.com\\";
v346.fipsStandard = v352;
const v353 = {};
v353.endpoint = \\"fips.{service}.{region}.amazonaws.com\\";
v346.fipsDotPrefix = v353;
const v354 = {};
v354.endpoint = \\"{service}-fips.amazonaws.com\\";
v346.fipsWithoutRegion = v354;
const v355 = {};
v355.endpoint = \\"ecr-fips.{region}.amazonaws.com\\";
v346[\\"fips.api.ecr\\"] = v355;
const v356 = {};
v356.endpoint = \\"api-fips.sagemaker.{region}.amazonaws.com\\";
v346[\\"fips.api.sagemaker\\"] = v356;
const v357 = {};
v357.endpoint = \\"models-fips.lex.{region}.amazonaws.com\\";
v346[\\"fips.models.lex\\"] = v357;
const v358 = {};
v358.endpoint = \\"runtime-fips.lex.{region}.amazonaws.com\\";
v346[\\"fips.runtime.lex\\"] = v358;
const v359 = {};
v359.endpoint = \\"{service}.{region}.amazonaws.com\\";
v346.fipsWithServiceOnly = v359;
const v360 = {};
v360.endpoint = \\"{service}.dualstack.{region}.amazonaws.com\\";
v346.dualstackLegacy = v360;
const v361 = {};
v361.endpoint = \\"{service}.dualstack.{region}.amazonaws.com.cn\\";
v346.dualstackLegacyCn = v361;
const v362 = {};
v362.endpoint = \\"{service}-fips.dualstack.{region}.amazonaws.com\\";
v346.dualstackFipsLegacy = v362;
const v363 = {};
v363.endpoint = \\"{service}-fips.dualstack.{region}.amazonaws.com.cn\\";
v346.dualstackFipsLegacyCn = v363;
const v364 = {};
v364.endpoint = \\"api.ec2.{region}.aws\\";
v346.dualstackLegacyEc2 = v364;
var v366;
var v367 = v3;
v366 = function applyConfig(service, config) { v367.each(config, function (key, value) { if (key === \\"globalEndpoint\\")
    return; if (service.config[key] === undefined || service.config[key] === null) {
    service.config[key] = value;
} }); };
const v368 = {};
v368.constructor = v366;
v366.prototype = v368;
var v365 = v366;
v314 = function configureEndpoint(service) { var keys = v315(service); var useFipsEndpoint = service.config.useFipsEndpoint; var useDualstackEndpoint = service.config.useDualstackEndpoint; for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!key)
        continue;
    var rules = useFipsEndpoint ? useDualstackEndpoint ? v321 : v324 : useDualstackEndpoint ? v331 : v334;
    if (v113.hasOwnProperty.call(rules, key)) {
        var config = rules[key];
        if (typeof config === \\"string\\") {
            config = v346[config];
        }
        service.isGlobalEndpoint = !!config.globalEndpoint;
        if (config.signingRegion) {
            service.signingRegion = config.signingRegion;
        }
        if (!config.signatureVersion)
            config.signatureVersion = \\"v4\\";
        v365(service, config);
        return;
    }
} };
const v369 = {};
v369.constructor = v314;
v314.prototype = v369;
v313.configureEndpoint = v314;
var v370;
var v371 = v31;
const v373 = RegExp;
var v372 = v373;
v370 = function getEndpointSuffix(region) { var regionRegexes = { \\"^(us|eu|ap|sa|ca|me)\\\\\\\\-\\\\\\\\w+\\\\\\\\-\\\\\\\\d+$\\": \\"amazonaws.com\\", \\"^cn\\\\\\\\-\\\\\\\\w+\\\\\\\\-\\\\\\\\d+$\\": \\"amazonaws.com.cn\\", \\"^us\\\\\\\\-gov\\\\\\\\-\\\\\\\\w+\\\\\\\\-\\\\\\\\d+$\\": \\"amazonaws.com\\", \\"^us\\\\\\\\-iso\\\\\\\\-\\\\\\\\w+\\\\\\\\-\\\\\\\\d+$\\": \\"c2s.ic.gov\\", \\"^us\\\\\\\\-isob\\\\\\\\-\\\\\\\\w+\\\\\\\\-\\\\\\\\d+$\\": \\"sc2s.sgov.gov\\" }; var defaultSuffix = \\"amazonaws.com\\"; var regexes = v371.keys(regionRegexes); for (var i = 0; i < regexes.length; i++) {
    var regionPattern = v372(regexes[i]);
    var dnsSuffix = regionRegexes[regexes[i]];
    if (regionPattern.test(region))
        return dnsSuffix;
} return defaultSuffix; };
const v374 = {};
v374.constructor = v370;
v370.prototype = v374;
v313.getEndpointSuffix = v370;
var v312 = v313;
var v375 = v2;
var v376 = v8;
v310 = function initialize(config) { var svcConfig = v251[this.serviceIdentifier]; this.config = new v311.Config(v251); if (svcConfig)
    this.config.update(svcConfig, true); if (config)
    this.config.update(config, true); this.validateService(); if (!this.config.endpoint)
    v312.configureEndpoint(this); this.config.endpoint = this.endpointFromTemplate(this.config.endpoint); this.setEndpoint(this.config.endpoint); v375.SequentialExecutor.call(this); v375.Service.addDefaultMonitoringListeners(this); if ((this.config.clientSideMonitoring || undefined) && this.publisher) {
    var publisher = this.publisher;
    this.addNamedListener(\\"PUBLISH_API_CALL\\", \\"apiCall\\", function PUBLISH_API_CALL(event) { v376.nextTick(function () { publisher.eventHandler(event); }); });
    this.addNamedListener(\\"PUBLISH_API_ATTEMPT\\", \\"apiCallAttempt\\", function PUBLISH_API_ATTEMPT(event) { v376.nextTick(function () { publisher.eventHandler(event); }); });
} };
const v377 = {};
v377.constructor = v310;
v310.prototype = v377;
v309.initialize = v310;
var v378;
v378 = function validateService() { };
const v379 = {};
v379.constructor = v378;
v378.prototype = v379;
v309.validateService = v378;
var v380;
var v381 = v2;
v380 = function loadServiceClass(serviceConfig) { var config = serviceConfig; if (!v3.isEmpty(this.api)) {
    return null;
}
else if (config.apiConfig) {
    return v381.Service.defineServiceApi(this.constructor, config.apiConfig);
}
else if (!this.constructor.services) {
    return null;
}
else {
    config = new v375.Config(v251);
    config.update(serviceConfig, true);
    var version = config.apiVersions[this.constructor.serviceIdentifier];
    version = version || config.apiVersion;
    return this.getLatestServiceClass(version);
} };
const v382 = {};
v382.constructor = v380;
v380.prototype = v382;
v309.loadServiceClass = v380;
var v383;
v383 = function getLatestServiceClass(version) { version = this.getLatestServiceVersion(version); if (this.constructor.services[version] === null) {
    v375.Service.defineServiceApi(this.constructor, version);
} return this.constructor.services[version]; };
const v384 = {};
v384.constructor = v383;
v383.prototype = v384;
v309.getLatestServiceClass = v383;
var v385;
var v386 = v77;
var v387 = v31;
var v388 = v31;
var v389 = v40;
v385 = function getLatestServiceVersion(version) { if (!this.constructor.services || this.constructor.services.length === 0) {
    throw new v300(\\"No services defined on \\" + this.constructor.serviceIdentifier);
} if (!version) {
    version = \\"latest\\";
}
else if (v3.isType(version, v386)) {
    version = v73.iso8601(version).split(\\"T\\")[0];
} if (v387.hasOwnProperty(this.constructor.services, version)) {
    return version;
} var keys = v388.keys(this.constructor.services).sort(); var selectedVersion = null; for (var i = keys.length - 1; i >= 0; i--) {
    if (keys[i][keys[i].length - 1] !== \\"*\\") {
        selectedVersion = keys[i];
    }
    if (keys[i].substr(0, 10) <= version) {
        return selectedVersion;
    }
} throw new v389(\\"Could not find \\" + this.constructor.serviceIdentifier + \\" API to satisfy version constraint \`\\" + version + \\"'\\"); };
const v390 = {};
v390.constructor = v385;
v385.prototype = v390;
v309.getLatestServiceVersion = v385;
const v391 = {};
v309.api = v391;
v309.defaultRetryCount = 3;
var v392;
v392 = function customizeRequests(callback) { if (!callback) {
    this.customRequestHandler = null;
}
else if (typeof callback === \\"function\\") {
    this.customRequestHandler = callback;
}
else {
    throw new v389(\\"Invalid callback type '\\" + typeof callback + \\"' provided in customizeRequests\\");
} };
const v393 = {};
v393.constructor = v392;
v392.prototype = v393;
v309.customizeRequests = v392;
var v394;
v394 = function makeRequest(operation, params, callback) { if (typeof params === \\"function\\") {
    callback = params;
    params = null;
} params = params || {}; if (this.config.params) {
    var rules = this.api.operations[operation];
    if (rules) {
        params = v3.copy(params);
        v3.each(this.config.params, function (key, value) { if (rules.input.members[key]) {
            if (params[key] === undefined || params[key] === null) {
                params[key] = value;
            }
        } });
    }
} var request = new v311.Request(this, operation, params); this.addAllRequestListeners(request); this.attachMonitoringEmitter(request); if (callback)
    request.send(callback); return request; };
const v395 = {};
v395.constructor = v394;
v394.prototype = v395;
v309.makeRequest = v394;
var v396;
v396 = function makeUnauthenticatedRequest(operation, params, callback) { if (typeof params === \\"function\\") {
    callback = params;
    params = {};
} var request = this.makeRequest(operation, params).toUnauthenticated(); return callback ? request.send(callback) : request; };
const v397 = {};
v397.constructor = v396;
v396.prototype = v397;
v309.makeUnauthenticatedRequest = v396;
var v398;
v398 = function waitFor(state, params, callback) { var waiter = new v381.ResourceWaiter(this, state); return waiter.wait(params, callback); };
const v399 = {};
v399.constructor = v398;
v398.prototype = v399;
v309.waitFor = v398;
var v400;
const v401 = {};
var v402;
v402 = function SequentialExecutor() { this._events = {}; };
v402.prototype = v401;
v402.__super__ = v31;
v401.constructor = v402;
var v403;
v403 = function listeners(eventName) { return this._events[eventName] ? this._events[eventName].slice(0) : []; };
const v404 = {};
v404.constructor = v403;
v403.prototype = v404;
v401.listeners = v403;
var v405;
v405 = function on(eventName, listener, toHead) { if (this._events[eventName]) {
    toHead ? this._events[eventName].unshift(listener) : this._events[eventName].push(listener);
}
else {
    this._events[eventName] = [listener];
} return this; };
const v406 = {};
v406.constructor = v405;
v405.prototype = v406;
v401.on = v405;
var v407;
v407 = function onAsync(eventName, listener, toHead) { listener._isAsync = true; return this.on(eventName, listener, toHead); };
const v408 = {};
v408.constructor = v407;
v407.prototype = v408;
v401.onAsync = v407;
var v409;
v409 = function removeListener(eventName, listener) { var listeners = this._events[eventName]; if (listeners) {
    var length = listeners.length;
    var position = -1;
    for (var i = 0; i < length; ++i) {
        if (listeners[i] === listener) {
            position = i;
        }
    }
    if (position > -1) {
        listeners.splice(position, 1);
    }
} return this; };
const v410 = {};
v410.constructor = v409;
v409.prototype = v410;
v401.removeListener = v409;
var v411;
v411 = function removeAllListeners(eventName) { if (eventName) {
    delete this._events[eventName];
}
else {
    this._events = {};
} return this; };
const v412 = {};
v412.constructor = v411;
v411.prototype = v412;
v401.removeAllListeners = v411;
var v413;
v413 = function emit(eventName, eventArgs, doneCallback) { if (!doneCallback)
    doneCallback = function () { }; var listeners = this.listeners(eventName); var count = listeners.length; this.callListeners(listeners, eventArgs, doneCallback); return count > 0; };
const v414 = {};
v414.constructor = v413;
v413.prototype = v414;
v401.emit = v413;
var v415;
var v416 = v40;
v415 = function callListeners(listeners, args, doneCallback, prevError) { var self = this; var error = prevError || null; function callNextListener(err) { if (err) {
    error = v3.error(error || new v416(), err);
    if (self._haltHandlersOnError) {
        return doneCallback.call(self, error);
    }
} self.callListeners(listeners, args, doneCallback, error); } while (listeners.length > 0) {
    var listener = listeners.shift();
    if (listener._isAsync) {
        listener.apply(self, args.concat([callNextListener]));
        return;
    }
    else {
        try {
            listener.apply(self, args);
        }
        catch (err) {
            error = v3.error(error || new v416(), err);
        }
        if (error && self._haltHandlersOnError) {
            doneCallback.call(self, error);
            return;
        }
    }
} doneCallback.call(self, error); };
const v417 = {};
v417.constructor = v415;
v415.prototype = v417;
v401.callListeners = v415;
var v418;
v418 = function addListeners(listeners) { var self = this; if (listeners._events)
    listeners = listeners._events; v3.each(listeners, function (event, callbacks) { if (typeof callbacks === \\"function\\")
    callbacks = [callbacks]; v3.arrayEach(callbacks, function (callback) { self.on(event, callback); }); }); return self; };
const v419 = {};
v419.constructor = v418;
v418.prototype = v419;
v401.addListeners = v418;
var v420;
v420 = function addNamedListener(name, eventName, callback, toHead) { this[name] = callback; this.addListener(eventName, callback, toHead); return this; };
const v421 = {};
v421.constructor = v420;
v420.prototype = v421;
v401.addNamedListener = v420;
var v422;
v422 = function addNamedAsyncListener(name, eventName, callback, toHead) { callback._isAsync = true; return this.addNamedListener(name, eventName, callback, toHead); };
const v423 = {};
v423.constructor = v422;
v422.prototype = v423;
v401.addNamedAsyncListener = v422;
var v424;
v424 = function addNamedListeners(callback) { var self = this; callback(function () { self.addNamedListener.apply(self, arguments); }, function () { self.addNamedAsyncListener.apply(self, arguments); }); return this; };
const v425 = {};
v425.constructor = v424;
v424.prototype = v425;
v401.addNamedListeners = v424;
v401.addListener = v405;
const v426 = Object.create(v401);
const v427 = {};
v426._events = v427;
const v428 = Object.create(v401);
const v429 = {};
const v430 = [];
var v431;
v431 = function VALIDATE_CREDENTIALS(req, done) { if (!req.service.api.signatureVersion && !req.service.config.signatureVersion)
    return done(); req.service.config.getCredentials(function (err) { if (err) {
    req.response.error = v3.error(err, { code: \\"CredentialsError\\", message: \\"Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1\\" });
} done(); }); };
const v432 = {};
v432.constructor = v431;
v431.prototype = v432;
v431._isAsync = true;
var v433;
var v434 = v373;
var v435 = v40;
var v436 = v40;
v433 = function VALIDATE_REGION(req) { if (!req.service.isGlobalEndpoint) {
    var dnsHostRegex = new v434(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);
    if (!req.service.config.region) {
        req.response.error = v3.error(new v435(), { code: \\"ConfigError\\", message: \\"Missing region in config\\" });
    }
    else if (!dnsHostRegex.test(req.service.config.region)) {
        req.response.error = v3.error(new v436(), { code: \\"ConfigError\\", message: \\"Invalid region in config\\" });
    }
} };
const v437 = {};
v437.constructor = v433;
v433.prototype = v437;
var v438;
const v439 = {};
var v440;
v440 = function uuidV4() { return v11(\\"uuid\\").v4(); };
const v441 = {};
v441.constructor = v440;
v440.prototype = v441;
v439.v4 = v440;
v438 = function BUILD_IDEMPOTENCY_TOKENS(req) { if (!req.service.api.operations) {
    return;
} var operation = req.service.api.operations[req.operation]; if (!operation) {
    return;
} var idempotentMembers = operation.idempotentMembers; if (!idempotentMembers.length) {
    return;
} var params = v3.copy(req.params); for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {
    if (!params[idempotentMembers[i]]) {
        params[idempotentMembers[i]] = v439.v4();
    }
} req.params = params; };
const v442 = {};
v442.constructor = v438;
v438.prototype = v442;
var v443;
var v444 = v2;
v443 = function VALIDATE_PARAMETERS(req) { if (!req.service.api.operations) {
    return;
} var rules = req.service.api.operations[req.operation].input; var validation = req.service.config.paramValidation; new v444.ParamValidator(validation).validate(rules, req.params); };
const v445 = {};
v445.constructor = v443;
v443.prototype = v445;
v430.push(v431, v433, v438, v443);
v429.validate = v430;
const v446 = [];
var v447;
v447 = function COMPUTE_CHECKSUM(req) { if (!req.service.api.operations) {
    return;
} var operation = req.service.api.operations[req.operation]; if (!operation) {
    return;
} var body = req.httpRequest.body; var isNonStreamingPayload = body && (v3.Buffer.isBuffer(body) || typeof body === \\"string\\"); var headers = req.httpRequest.headers; if (operation.httpChecksumRequired && req.service.config.computeChecksums && isNonStreamingPayload && !headers[\\"Content-MD5\\"]) {
    var md5 = v91.md5(body, \\"base64\\");
    headers[\\"Content-MD5\\"] = md5;
} };
const v448 = {};
v448.constructor = v447;
v447.prototype = v448;
var v449;
const v450 = {};
var v451;
v451 = function RequestSigner(request) { this.request = request; };
const v452 = {};
v452.constructor = v451;
var v453;
v453 = function setServiceClientId(id) { this.serviceClientId = id; };
const v454 = {};
v454.constructor = v453;
v453.prototype = v454;
v452.setServiceClientId = v453;
var v455;
v455 = function getServiceClientId() { return this.serviceClientId; };
const v456 = {};
v456.constructor = v455;
v455.prototype = v456;
v452.getServiceClientId = v455;
v451.prototype = v452;
v451.__super__ = v31;
var v457;
var v458 = v40;
v457 = function getVersion(version) { switch (version) {
    case \\"v2\\": return v450.V2;
    case \\"v3\\": return v450.V3;
    case \\"s3v4\\": return v450.V4;
    case \\"v4\\": return v450.V4;
    case \\"s3\\": return v450.S3;
    case \\"v3https\\": return v450.V3Https;
} throw new v458(\\"Unknown signing version \\" + version); };
const v459 = {};
v459.constructor = v457;
v457.prototype = v459;
v451.getVersion = v457;
v450.RequestSigner = v451;
var v460;
var v461 = v451;
v460 = function () { if (v461 !== v30) {
    return v298.apply(this, arguments);
} };
const v462 = Object.create(v452);
var v463;
v463 = function addAuthorization(credentials, date) { if (!date)
    date = v73.getDate(); var r = this.request; r.params.Timestamp = v73.iso8601(date); r.params.SignatureVersion = \\"2\\"; r.params.SignatureMethod = \\"HmacSHA256\\"; r.params.AWSAccessKeyId = credentials.accessKeyId; if (credentials.sessionToken) {
    r.params.SecurityToken = credentials.sessionToken;
} delete r.params.Signature; r.params.Signature = this.signature(credentials); r.body = v3.queryParamsToString(r.params); r.headers[\\"Content-Length\\"] = r.body.length; };
const v464 = {};
v464.constructor = v463;
v463.prototype = v464;
v462.addAuthorization = v463;
var v465;
v465 = function signature(credentials) { return v91.hmac(credentials.secretAccessKey, this.stringToSign(), \\"base64\\"); };
const v466 = {};
v466.constructor = v465;
v465.prototype = v466;
v462.signature = v465;
var v467;
v467 = function stringToSign() { var parts = []; parts.push(this.request.method); parts.push(this.request.endpoint.host.toLowerCase()); parts.push(this.request.pathname()); parts.push(v3.queryParamsToString(this.request.params)); return parts.join(\\"\\\\n\\"); };
const v468 = {};
v468.constructor = v467;
v467.prototype = v468;
v462.stringToSign = v467;
v462.constructor = v460;
v460.prototype = v462;
v460.__super__ = v451;
v450.V2 = v460;
var v469;
var v470 = v451;
var v471 = v31;
v469 = function () { if (v470 !== v471) {
    return v461.apply(this, arguments);
} };
const v472 = Object.create(v452);
var v473;
v473 = function addAuthorization(credentials, date) { var datetime = v73.rfc822(date); this.request.headers[\\"X-Amz-Date\\"] = datetime; if (credentials.sessionToken) {
    this.request.headers[\\"x-amz-security-token\\"] = credentials.sessionToken;
} this.request.headers[\\"X-Amzn-Authorization\\"] = this.authorization(credentials, datetime); };
const v474 = {};
v474.constructor = v473;
v473.prototype = v474;
v472.addAuthorization = v473;
var v475;
v475 = function authorization(credentials) { return \\"AWS3 \\" + \\"AWSAccessKeyId=\\" + credentials.accessKeyId + \\",\\" + \\"Algorithm=HmacSHA256,\\" + \\"SignedHeaders=\\" + this.signedHeaders() + \\",\\" + \\"Signature=\\" + this.signature(credentials); };
const v476 = {};
v476.constructor = v475;
v475.prototype = v476;
v472.authorization = v475;
var v477;
v477 = function signedHeaders() { var headers = []; v3.arrayEach(this.headersToSign(), function iterator(h) { headers.push(h.toLowerCase()); }); return headers.sort().join(\\";\\"); };
const v478 = {};
v478.constructor = v477;
v477.prototype = v478;
v472.signedHeaders = v477;
var v479;
var v480 = v136;
v479 = function canonicalHeaders() { var headers = this.request.headers; var parts = []; v3.arrayEach(this.headersToSign(), function iterator(h) { parts.push(h.toLowerCase().trim() + \\":\\" + v480(headers[h]).trim()); }); return parts.sort().join(\\"\\\\n\\") + \\"\\\\n\\"; };
const v481 = {};
v481.constructor = v479;
v479.prototype = v481;
v472.canonicalHeaders = v479;
var v482;
v482 = function headersToSign() { var headers = []; v3.each(this.request.headers, function iterator(k) { if (k === \\"Host\\" || k === \\"Content-Encoding\\" || k.match(/^X-Amz/i)) {
    headers.push(k);
} }); return headers; };
const v483 = {};
v483.constructor = v482;
v482.prototype = v483;
v472.headersToSign = v482;
var v484;
v484 = function signature(credentials) { return v91.hmac(credentials.secretAccessKey, this.stringToSign(), \\"base64\\"); };
const v485 = {};
v485.constructor = v484;
v484.prototype = v485;
v472.signature = v484;
var v486;
v486 = function stringToSign() { var parts = []; parts.push(this.request.method); parts.push(\\"/\\"); parts.push(\\"\\"); parts.push(this.canonicalHeaders()); parts.push(this.request.body); return v91.sha256(parts.join(\\"\\\\n\\")); };
const v487 = {};
v487.constructor = v486;
v486.prototype = v487;
v472.stringToSign = v486;
v472.constructor = v469;
v469.prototype = v472;
v469.__super__ = v451;
v450.V3 = v469;
var v488;
var v489 = v469;
var v490 = v31;
v488 = function () { if (v489 !== v490) {
    return v470.apply(this, arguments);
} };
const v491 = Object.create(v472);
var v492;
v492 = function authorization(credentials) { return \\"AWS3-HTTPS \\" + \\"AWSAccessKeyId=\\" + credentials.accessKeyId + \\",\\" + \\"Algorithm=HmacSHA256,\\" + \\"Signature=\\" + this.signature(credentials); };
const v493 = {};
v493.constructor = v492;
v492.prototype = v493;
v491.authorization = v492;
var v494;
v494 = function stringToSign() { return this.request.headers[\\"X-Amz-Date\\"]; };
const v495 = {};
v495.constructor = v494;
v494.prototype = v495;
v491.stringToSign = v494;
v491.constructor = v488;
v488.prototype = v491;
v488.__super__ = v469;
v450.V3Https = v488;
var v496;
v496 = function V4(request, serviceName, options) { v450.RequestSigner.call(this, request); this.serviceName = serviceName; options = options || {}; this.signatureCache = typeof options.signatureCache === \\"boolean\\" ? options.signatureCache : true; this.operation = options.operation; this.signatureVersion = options.signatureVersion; };
const v497 = Object.create(v452);
v497.constructor = v496;
v497.algorithm = \\"AWS4-HMAC-SHA256\\";
var v498;
v498 = function addAuthorization(credentials, date) { var datetime = v73.iso8601(date).replace(/[:\\\\-]|\\\\.\\\\d{3}/g, \\"\\"); if (this.isPresigned()) {
    this.updateForPresigned(credentials, datetime);
}
else {
    this.addHeaders(credentials, datetime);
} this.request.headers[\\"Authorization\\"] = this.authorization(credentials, datetime); };
const v499 = {};
v499.constructor = v498;
v498.prototype = v499;
v497.addAuthorization = v498;
var v500;
v500 = function addHeaders(credentials, datetime) { this.request.headers[\\"X-Amz-Date\\"] = datetime; if (credentials.sessionToken) {
    this.request.headers[\\"x-amz-security-token\\"] = credentials.sessionToken;
} };
const v501 = {};
v501.constructor = v500;
v500.prototype = v501;
v497.addHeaders = v500;
var v502;
var v503 = \\"presigned-expires\\";
var v504 = \\"presigned-expires\\";
v502 = function updateForPresigned(credentials, datetime) { var credString = this.credentialString(datetime); var qs = { \\"X-Amz-Date\\": datetime, \\"X-Amz-Algorithm\\": this.algorithm, \\"X-Amz-Credential\\": credentials.accessKeyId + \\"/\\" + credString, \\"X-Amz-Expires\\": this.request.headers[v503], \\"X-Amz-SignedHeaders\\": this.signedHeaders() }; if (credentials.sessionToken) {
    qs[\\"X-Amz-Security-Token\\"] = credentials.sessionToken;
} if (this.request.headers[\\"Content-Type\\"]) {
    qs[\\"Content-Type\\"] = this.request.headers[\\"Content-Type\\"];
} if (this.request.headers[\\"Content-MD5\\"]) {
    qs[\\"Content-MD5\\"] = this.request.headers[\\"Content-MD5\\"];
} if (this.request.headers[\\"Cache-Control\\"]) {
    qs[\\"Cache-Control\\"] = this.request.headers[\\"Cache-Control\\"];
} v3.each.call(this, this.request.headers, function (key, value) { if (key === v504)
    return; if (this.isSignableHeader(key)) {
    var lowerKey = key.toLowerCase();
    if (lowerKey.indexOf(\\"x-amz-meta-\\") === 0) {
        qs[lowerKey] = value;
    }
    else if (lowerKey.indexOf(\\"x-amz-\\") === 0) {
        qs[key] = value;
    }
} }); var sep = this.request.path.indexOf(\\"?\\") >= 0 ? \\"&\\" : \\"?\\"; this.request.path += sep + v3.queryParamsToString(qs); };
const v505 = {};
v505.constructor = v502;
v502.prototype = v505;
v497.updateForPresigned = v502;
var v506;
v506 = function authorization(credentials, datetime) { var parts = []; var credString = this.credentialString(datetime); parts.push(this.algorithm + \\" Credential=\\" + credentials.accessKeyId + \\"/\\" + credString); parts.push(\\"SignedHeaders=\\" + this.signedHeaders()); parts.push(\\"Signature=\\" + this.signature(credentials, datetime)); return parts.join(\\", \\"); };
const v507 = {};
v507.constructor = v506;
v506.prototype = v507;
v497.authorization = v506;
var v508;
const v510 = {};
var v511;
var v512 = \\"aws4_request\\";
v511 = function createScope(date, region, serviceName) { return [date.substr(0, 8), region, serviceName, v512].join(\\"/\\"); };
const v513 = {};
v513.constructor = v511;
v511.prototype = v513;
v510.createScope = v511;
var v514;
const v516 = {};
var v515 = v516;
var v517 = \\"aws4_request\\";
var v518 = v516;
const v520 = [];
v520.push();
var v519 = v520;
var v521 = 50;
var v522 = v516;
var v523 = v520;
v514 = function getSigningKey(credentials, date, region, service, shouldCache) { var credsIdentifier = v91.hmac(credentials.secretAccessKey, credentials.accessKeyId, \\"base64\\"); var cacheKey = [credsIdentifier, date, region, service].join(\\"_\\"); shouldCache = shouldCache !== false; if (shouldCache && (cacheKey in v515)) {
    return v515[cacheKey];
} var kDate = v91.hmac(\\"AWS4\\" + credentials.secretAccessKey, date, \\"buffer\\"); var kRegion = v91.hmac(kDate, region, \\"buffer\\"); var kService = v91.hmac(kRegion, service, \\"buffer\\"); var signingKey = v91.hmac(kService, v517, \\"buffer\\"); if (shouldCache) {
    v518[cacheKey] = signingKey;
    v519.push(cacheKey);
    if (0 > v521) {
        delete v522[v523.shift()];
    }
} return signingKey; };
const v524 = {};
v524.constructor = v514;
v514.prototype = v524;
v510.getSigningKey = v514;
var v525;
v525 = function emptyCache() { cachedSecret = {}; cacheQueue = []; };
const v526 = {};
v526.constructor = v525;
v525.prototype = v526;
v510.emptyCache = v525;
var v509 = v510;
v508 = function signature(credentials, datetime) { var signingKey = v509.getSigningKey(credentials, datetime.substr(0, 8), this.request.region, this.serviceName, this.signatureCache); return v91.hmac(signingKey, this.stringToSign(datetime), \\"hex\\"); };
const v527 = {};
v527.constructor = v508;
v508.prototype = v527;
v497.signature = v508;
var v528;
v528 = function stringToSign(datetime) { var parts = []; parts.push(\\"AWS4-HMAC-SHA256\\"); parts.push(datetime); parts.push(this.credentialString(datetime)); parts.push(this.hexEncodedHash(this.canonicalString())); return parts.join(\\"\\\\n\\"); };
const v529 = {};
v529.constructor = v528;
v528.prototype = v529;
v497.stringToSign = v528;
var v530;
v530 = function canonicalString() { var parts = [], pathname = this.request.pathname(); if (this.serviceName !== \\"s3\\" && this.signatureVersion !== \\"s3v4\\")
    pathname = v3.uriEscapePath(pathname); parts.push(this.request.method); parts.push(pathname); parts.push(this.request.search()); parts.push(this.canonicalHeaders() + \\"\\\\n\\"); parts.push(this.signedHeaders()); parts.push(this.hexEncodedBodyHash()); return parts.join(\\"\\\\n\\"); };
const v531 = {};
v531.constructor = v530;
v530.prototype = v531;
v497.canonicalString = v530;
var v532;
var v533 = v40;
v532 = function canonicalHeaders() { var headers = []; v3.each.call(this, this.request.headers, function (key, item) { headers.push([key, item]); }); headers.sort(function (a, b) { return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1; }); var parts = []; v3.arrayEach.call(this, headers, function (item) { var key = item[0].toLowerCase(); if (this.isSignableHeader(key)) {
    var value = item[1];
    if (typeof value === \\"undefined\\" || value === null || typeof value.toString !== \\"function\\") {
        throw v3.error(new v533(\\"Header \\" + key + \\" contains invalid value\\"), { code: \\"InvalidHeader\\" });
    }
    parts.push(key + \\":\\" + this.canonicalHeaderValues(value.toString()));
} }); return parts.join(\\"\\\\n\\"); };
const v534 = {};
v534.constructor = v532;
v532.prototype = v534;
v497.canonicalHeaders = v532;
var v535;
v535 = function canonicalHeaderValues(values) { return values.replace(/\\\\s+/g, \\" \\").replace(/^\\\\s+|\\\\s+$/g, \\"\\"); };
const v536 = {};
v536.constructor = v535;
v535.prototype = v536;
v497.canonicalHeaderValues = v535;
var v537;
v537 = function signedHeaders() { var keys = []; v3.each.call(this, this.request.headers, function (key) { key = key.toLowerCase(); if (this.isSignableHeader(key))
    keys.push(key); }); return keys.sort().join(\\";\\"); };
const v538 = {};
v538.constructor = v537;
v537.prototype = v538;
v497.signedHeaders = v537;
var v539;
var v540 = v510;
v539 = function credentialString(datetime) { return v540.createScope(datetime.substr(0, 8), this.request.region, this.serviceName); };
const v541 = {};
v541.constructor = v539;
v539.prototype = v541;
v497.credentialString = v539;
var v542;
v542 = function hash(string) { return v91.sha256(string, \\"hex\\"); };
const v543 = {};
v543.constructor = v542;
v542.prototype = v543;
v497.hexEncodedHash = v542;
var v544;
v544 = function hexEncodedBodyHash() { var request = this.request; if (this.isPresigned() && ([\\"s3\\", \\"s3-object-lambda\\"].indexOf(this.serviceName) > -1) && !request.body) {
    return \\"UNSIGNED-PAYLOAD\\";
}
else if (request.headers[\\"X-Amz-Content-Sha256\\"]) {
    return request.headers[\\"X-Amz-Content-Sha256\\"];
}
else {
    return this.hexEncodedHash(this.request.body || \\"\\");
} };
const v545 = {};
v545.constructor = v544;
v544.prototype = v545;
v497.hexEncodedBodyHash = v544;
const v546 = [];
v546.push(\\"authorization\\", \\"content-type\\", \\"content-length\\", \\"user-agent\\", \\"presigned-expires\\", \\"expect\\", \\"x-amzn-trace-id\\");
v497.unsignableHeaders = v546;
var v547;
v547 = function isSignableHeader(key) { if (key.toLowerCase().indexOf(\\"x-amz-\\") === 0)
    return true; return this.unsignableHeaders.indexOf(key) < 0; };
const v548 = {};
v548.constructor = v547;
v547.prototype = v548;
v497.isSignableHeader = v547;
var v549;
v549 = function isPresigned() { return this.request.headers[v504] ? true : false; };
const v550 = {};
v550.constructor = v549;
v549.prototype = v550;
v497.isPresigned = v549;
v496.prototype = v497;
v496.__super__ = v451;
v450.V4 = v496;
var v551;
var v552 = v451;
var v553 = v31;
v551 = function () { if (v552 !== v553) {
    return v489.apply(this, arguments);
} };
const v554 = Object.create(v452);
const v555 = {};
v555.acl = 1;
v555.accelerate = 1;
v555.analytics = 1;
v555.cors = 1;
v555.lifecycle = 1;
v555.delete = 1;
v555.inventory = 1;
v555.location = 1;
v555.logging = 1;
v555.metrics = 1;
v555.notification = 1;
v555.partNumber = 1;
v555.policy = 1;
v555.requestPayment = 1;
v555.replication = 1;
v555.restore = 1;
v555.tagging = 1;
v555.torrent = 1;
v555.uploadId = 1;
v555.uploads = 1;
v555.versionId = 1;
v555.versioning = 1;
v555.versions = 1;
v555.website = 1;
v554.subResources = v555;
const v556 = {};
v556[\\"response-content-type\\"] = 1;
v556[\\"response-content-language\\"] = 1;
v556[\\"response-expires\\"] = 1;
v556[\\"response-cache-control\\"] = 1;
v556[\\"response-content-disposition\\"] = 1;
v556[\\"response-content-encoding\\"] = 1;
v554.responseHeaders = v556;
var v557;
v557 = function addAuthorization(credentials, date) { if (!this.request.headers[\\"presigned-expires\\"]) {
    this.request.headers[\\"X-Amz-Date\\"] = v73.rfc822(date);
} if (credentials.sessionToken) {
    this.request.headers[\\"x-amz-security-token\\"] = credentials.sessionToken;
} var signature = this.sign(credentials.secretAccessKey, this.stringToSign()); var auth = \\"AWS \\" + credentials.accessKeyId + \\":\\" + signature; this.request.headers[\\"Authorization\\"] = auth; };
const v558 = {};
v558.constructor = v557;
v557.prototype = v558;
v554.addAuthorization = v557;
var v559;
v559 = function stringToSign() { var r = this.request; var parts = []; parts.push(r.method); parts.push(r.headers[\\"Content-MD5\\"] || \\"\\"); parts.push(r.headers[\\"Content-Type\\"] || \\"\\"); parts.push(r.headers[\\"presigned-expires\\"] || \\"\\"); var headers = this.canonicalizedAmzHeaders(); if (headers)
    parts.push(headers); parts.push(this.canonicalizedResource()); return parts.join(\\"\\\\n\\"); };
const v560 = {};
v560.constructor = v559;
v559.prototype = v560;
v554.stringToSign = v559;
var v561;
var v562 = v136;
v561 = function canonicalizedAmzHeaders() { var amzHeaders = []; v3.each(this.request.headers, function (name) { if (name.match(/^x-amz-/i))
    amzHeaders.push(name); }); amzHeaders.sort(function (a, b) { return a.toLowerCase() < b.toLowerCase() ? -1 : 1; }); var parts = []; v3.arrayEach.call(this, amzHeaders, function (name) { parts.push(name.toLowerCase() + \\":\\" + v562(this.request.headers[name])); }); return parts.join(\\"\\\\n\\"); };
const v563 = {};
v563.constructor = v561;
v561.prototype = v563;
v554.canonicalizedAmzHeaders = v561;
var v564;
const v566 = decodeURIComponent;
var v565 = v566;
v564 = function canonicalizedResource() { var r = this.request; var parts = r.path.split(\\"?\\"); var path = parts[0]; var querystring = parts[1]; var resource = \\"\\"; if (r.virtualHostedBucket)
    resource += \\"/\\" + r.virtualHostedBucket; resource += path; if (querystring) {
    var resources = [];
    v3.arrayEach.call(this, querystring.split(\\"&\\"), function (param) { var name = param.split(\\"=\\")[0]; var value = param.split(\\"=\\")[1]; if (this.subResources[name] || this.responseHeaders[name]) {
        var subresource = { name: name };
        if (value !== undefined) {
            if (this.subResources[name]) {
                subresource.value = value;
            }
            else {
                subresource.value = v565(value);
            }
        }
        resources.push(subresource);
    } });
    resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });
    if (resources.length) {
        querystring = [];
        v3.arrayEach(resources, function (res) { if (res.value === undefined) {
            querystring.push(res.name);
        }
        else {
            querystring.push(res.name + \\"=\\" + res.value);
        } });
        resource += \\"?\\" + querystring.join(\\"&\\");
    }
} return resource; };
const v567 = {};
v567.constructor = v564;
v564.prototype = v567;
v554.canonicalizedResource = v564;
var v568;
v568 = function sign(secret, string) { return v91.hmac(secret, string, \\"base64\\", \\"sha1\\"); };
const v569 = {};
v569.constructor = v568;
v568.prototype = v569;
v554.sign = v568;
v554.constructor = v551;
v551.prototype = v554;
v551.__super__ = v451;
v450.S3 = v551;
var v570;
var v571 = v31;
var v572 = v31;
v570 = function () { if (v571 !== v572) {
    return v552.apply(this, arguments);
} };
const v573 = {};
var v574;
var v575 = \\"presigned-expires\\";
var v577;
var v578 = \\"presigned-expires\\";
var v579 = v40;
var v580 = \\"presigned-expires\\";
var v581 = v117;
var v582 = v40;
v577 = function signedUrlBuilder(request) { var expires = request.httpRequest.headers[v578]; var signerClass = request.service.getSignerClass(request); delete request.httpRequest.headers[\\"User-Agent\\"]; delete request.httpRequest.headers[\\"X-Amz-User-Agent\\"]; if (signerClass === v450.V4) {
    if (expires > 604800) {
        var message = \\"Presigning does not support expiry time greater \\" + \\"than a week with SigV4 signing.\\";
        throw v3.error(new v579(), { code: \\"InvalidExpiryTime\\", message: message, retryable: false });
    }
    request.httpRequest.headers[v578] = expires;
}
else if (signerClass === v450.S3) {
    var now = request.service ? request.service.getSkewCorrectedDate() : v73.getDate();
    request.httpRequest.headers[v580] = v581(v73.unixTimestamp(now) + expires, 10).toString();
}
else {
    throw v3.error(new v582(), { message: \\"Presigning only supports S3 or SigV4 signing.\\", code: \\"UnsupportedSigner\\", retryable: false });
} };
const v583 = {};
v583.constructor = v577;
v577.prototype = v583;
var v576 = v577;
var v585;
var v586 = \\"presigned-expires\\";
v585 = function signedUrlSigner(request) { var endpoint = request.httpRequest.endpoint; var parsedUrl = v3.urlParse(request.httpRequest.path); var queryParams = {}; if (parsedUrl.search) {
    queryParams = v3.queryStringParse(parsedUrl.search.substr(1));
} var auth = request.httpRequest.headers[\\"Authorization\\"].split(\\" \\"); if (auth[0] === \\"AWS\\") {
    auth = auth[1].split(\\":\\");
    queryParams[\\"Signature\\"] = auth.pop();
    queryParams[\\"AWSAccessKeyId\\"] = auth.join(\\":\\");
    v3.each(request.httpRequest.headers, function (key, value) { if (key === v575)
        key = \\"Expires\\"; if (key.indexOf(\\"x-amz-meta-\\") === 0) {
        delete queryParams[key];
        key = key.toLowerCase();
    } queryParams[key] = value; });
    delete request.httpRequest.headers[v586];
    delete queryParams[\\"Authorization\\"];
    delete queryParams[\\"Host\\"];
}
else if (auth[0] === \\"AWS4-HMAC-SHA256\\") {
    auth.shift();
    var rest = auth.join(\\" \\");
    var signature = rest.match(/Signature=(.*?)(?:,|\\\\s|\\\\r?\\\\n|$)/)[1];
    queryParams[\\"X-Amz-Signature\\"] = signature;
    delete queryParams[\\"Expires\\"];
} endpoint.pathname = parsedUrl.pathname; endpoint.search = v3.queryParamsToString(queryParams); };
const v587 = {};
v587.constructor = v585;
v585.prototype = v587;
var v584 = v585;
v574 = function sign(request, expireTime, callback) { request.httpRequest.headers[v575] = expireTime || 3600; request.on(\\"build\\", v576); request.on(\\"sign\\", v584); request.removeListener(\\"afterBuild\\", v428.SET_CONTENT_LENGTH); request.removeListener(\\"afterBuild\\", v428.COMPUTE_SHA256); request.emit(\\"beforePresign\\", [request]); if (callback) {
    request.build(function () { if (this.response.error)
        callback(this.response.error);
    else {
        callback(null, v3.urlFormat(request.httpRequest.endpoint));
    } });
}
else {
    request.build();
    if (request.response.error)
        throw request.response.error;
    return v3.urlFormat(request.httpRequest.endpoint);
} };
const v588 = {};
v588.constructor = v574;
v574.prototype = v588;
v573.sign = v574;
v573.constructor = v570;
v570.prototype = v573;
v570.__super__ = v31;
v450.Presign = v570;
v449 = function COMPUTE_SHA256(req, done) { req.haltHandlersOnError(); if (!req.service.api.operations) {
    return;
} var operation = req.service.api.operations[req.operation]; var authtype = operation ? operation.authtype : \\"\\"; if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion)
    return done(); if (req.service.getSignerClass(req) === v450.V4) {
    var body = req.httpRequest.body || \\"\\";
    if (authtype.indexOf(\\"unsigned-body\\") >= 0) {
        req.httpRequest.headers[\\"X-Amz-Content-Sha256\\"] = \\"UNSIGNED-PAYLOAD\\";
        return done();
    }
    v3.computeSha256(body, function (err, sha) { if (err) {
        done(err);
    }
    else {
        req.httpRequest.headers[\\"X-Amz-Content-Sha256\\"] = sha;
        done();
    } });
}
else {
    done();
} };
const v589 = {};
v589.constructor = v449;
v449.prototype = v589;
v449._isAsync = true;
var v590;
var v592;
v592 = function getOperationAuthtype(req) { if (!req.service.api.operations) {
    return \\"\\";
} var operation = req.service.api.operations[req.operation]; return operation ? operation.authtype : \\"\\"; };
const v593 = {};
v593.constructor = v592;
v592.prototype = v593;
var v591 = v592;
v590 = function SET_CONTENT_LENGTH(req) { var authtype = v591(req); var payloadMember = v3.getRequestPayloadShape(req); if (req.httpRequest.headers[\\"Content-Length\\"] === undefined) {
    try {
        var length = v55.byteLength(req.httpRequest.body);
        req.httpRequest.headers[\\"Content-Length\\"] = length;
    }
    catch (err) {
        if (payloadMember && payloadMember.isStreaming) {
            if (payloadMember.requiresLength) {
                throw err;
            }
            else if (authtype.indexOf(\\"unsigned-body\\") >= 0) {
                req.httpRequest.headers[\\"Transfer-Encoding\\"] = \\"chunked\\";
                return;
            }
            else {
                throw err;
            }
        }
        throw err;
    }
} };
const v594 = {};
v594.constructor = v590;
v590.prototype = v594;
var v595;
v595 = function SET_HTTP_HOST(req) { req.httpRequest.headers[\\"Host\\"] = req.httpRequest.endpoint.host; };
const v596 = {};
v596.constructor = v595;
v595.prototype = v596;
var v597;
var v598 = v31;
var v599 = v8;
v597 = function SET_TRACE_ID(req) { var traceIdHeaderName = \\"X-Amzn-Trace-Id\\"; if (v3.isNode() && !v598.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {
    var ENV_LAMBDA_FUNCTION_NAME = \\"AWS_LAMBDA_FUNCTION_NAME\\";
    var ENV_TRACE_ID = \\"_X_AMZN_TRACE_ID\\";
    var functionName = v599.env[ENV_LAMBDA_FUNCTION_NAME];
    var traceId = v599.env[ENV_TRACE_ID];
    if (typeof functionName === \\"string\\" && functionName.length > 0 && typeof traceId === \\"string\\" && traceId.length > 0) {
        req.httpRequest.headers[traceIdHeaderName] = traceId;
    }
} };
const v600 = {};
v600.constructor = v597;
v597.prototype = v600;
v446.push(v447, v449, v590, v595, v597);
v429.afterBuild = v446;
const v601 = [];
var v602;
var v603 = v2;
v602 = function RESTART() { var err = this.response.error; if (!err || !err.retryable)
    return; this.httpRequest = new v603.HttpRequest(this.service.endpoint, this.service.region); if (this.response.retryCount < this.service.config.maxRetries) {
    this.response.retryCount++;
}
else {
    this.response.error = null;
} };
const v604 = {};
v604.constructor = v602;
v602.prototype = v604;
v601.push(v602);
v429.restart = v601;
const v605 = [];
var v606;
var v608;
var v609 = v3;
var v610 = v40;
var v611 = v282;
v608 = function hasCustomEndpoint(client) { if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {
    throw v609.error(new v610(), { code: \\"ConfigurationException\\", message: \\"Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.\\" });
} var svcConfig = v251[client.serviceIdentifier] || {}; return v611(undefined || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint)); };
const v612 = {};
v612.constructor = v608;
v608.prototype = v612;
var v607 = v608;
var v614;
var v615 = v3;
const v617 = [];
v617.push(\\"AWS_ENABLE_ENDPOINT_DISCOVERY\\", \\"AWS_ENDPOINT_DISCOVERY_ENABLED\\");
var v616 = v617;
var v618 = v8;
var v619 = v8;
var v620 = v3;
var v621 = v40;
var v623;
v623 = function isFalsy(value) { return [\\"false\\", \\"0\\"].indexOf(value) >= 0; };
const v624 = {};
v624.constructor = v623;
v623.prototype = v624;
var v622 = v623;
var v625 = v40;
var v626 = v623;
v614 = function resolveEndpointDiscoveryConfig(request) { var service = request.service || {}; if (service.config.endpointDiscoveryEnabled !== undefined) {
    return service.config.endpointDiscoveryEnabled;
} if (v615.isBrowser())
    return undefined; for (var i = 0; i < 2; i++) {
    var env = v616[i];
    if (v113.hasOwnProperty.call(v618.env, env)) {
        if (v619.env[env] === \\"\\" || v618.env[env] === undefined) {
            throw v620.error(new v621(), { code: \\"ConfigurationException\\", message: \\"environmental variable \\" + env + \\" cannot be set to nothing\\" });
        }
        return !v622(v618.env[env]);
    }
} var configFile = {}; try {
    configFile = v200 ? v200.loadFrom({ isConfig: true, filename: v619.env[\\"AWS_CONFIG_FILE\\"] }) : {};
}
catch (e) { } var sharedFileConfig = configFile[v618.env.AWS_PROFILE || \\"default\\"] || {}; if (v113.hasOwnProperty.call(sharedFileConfig, \\"endpoint_discovery_enabled\\")) {
    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {
        throw v620.error(new v625(), { code: \\"ConfigurationException\\", message: \\"config file entry 'endpoint_discovery_enabled' cannot be set to nothing\\" });
    }
    return !v626(sharedFileConfig.endpoint_discovery_enabled);
} return undefined; };
const v627 = {};
v627.constructor = v614;
v614.prototype = v627;
var v613 = v614;
var v629;
var v631;
var v633;
var v634 = v3;
var v635 = v136;
v633 = function marshallCustomIdentifiersHelper(result, params, shape) { if (!shape || params === undefined || params === null)
    return; if (shape.type === \\"structure\\" && shape.required && shape.required.length > 0) {
    v634.arrayEach(shape.required, function (name) { var memberShape = shape.members[name]; if (memberShape.endpointDiscoveryId === true) {
        var locationName = memberShape.isLocationName ? memberShape.name : name;
        result[locationName] = v635(params[name]);
    }
    else {
        marshallCustomIdentifiersHelper(result, params[name], memberShape);
    } });
} };
const v636 = {};
v636.constructor = v633;
v633.prototype = v636;
var v632 = v633;
v631 = function marshallCustomIdentifiers(request, shape) { var identifiers = {}; v632(identifiers, request.params, shape); return identifiers; };
const v637 = {};
v637.constructor = v631;
v631.prototype = v637;
var v630 = v631;
var v639;
v639 = function getCacheKey(request) { var service = request.service; var api = service.api || {}; var operations = api.operations; var identifiers = {}; if (service.config.region) {
    identifiers.region = service.config.region;
} if (api.serviceId) {
    identifiers.serviceId = api.serviceId;
} if (service.config.credentials.accessKeyId) {
    identifiers.accessKeyId = service.config.credentials.accessKeyId;
} return identifiers; };
const v640 = {};
v640.constructor = v639;
v639.prototype = v640;
var v638 = v639;
var v641 = v31;
const v642 = {};
var v643;
var v644 = 1000;
const v646 = console._stdout._writableState.afterWriteTickInfo.constructor.prototype;
const v647 = Object.create(v646);
var v648;
var v649 = v40;
v648 = function LRUCache(size) { this.nodeMap = {}; this.size = 0; if (typeof size !== \\"number\\" || size < 1) {
    throw new v649(\\"Cache size can only be positive number\\");
} this.sizeLimit = size; };
const v650 = {};
v650.constructor = v648;
var v651;
v651 = function (node) { if (!this.headerNode) {
    this.tailNode = node;
}
else {
    this.headerNode.prev = node;
    node.next = this.headerNode;
} this.headerNode = node; this.size++; };
const v652 = {};
v652.constructor = v651;
v651.prototype = v652;
v650.prependToList = v651;
var v653;
v653 = function () { if (!this.tailNode) {
    return undefined;
} var node = this.tailNode; var prevNode = node.prev; if (prevNode) {
    prevNode.next = undefined;
} node.prev = undefined; this.tailNode = prevNode; this.size--; return node; };
const v654 = {};
v654.constructor = v653;
v653.prototype = v654;
v650.removeFromTail = v653;
var v655;
v655 = function (node) { if (this.headerNode === node) {
    this.headerNode = node.next;
} if (this.tailNode === node) {
    this.tailNode = node.prev;
} if (node.prev) {
    node.prev.next = node.next;
} if (node.next) {
    node.next.prev = node.prev;
} node.next = undefined; node.prev = undefined; this.size--; };
const v656 = {};
v656.constructor = v655;
v655.prototype = v656;
v650.detachFromList = v655;
var v657;
v657 = function (key) { if (this.nodeMap[key]) {
    var node = this.nodeMap[key];
    this.detachFromList(node);
    this.prependToList(node);
    return node.value;
} };
const v658 = {};
v658.constructor = v657;
v657.prototype = v658;
v650.get = v657;
var v659;
v659 = function (key) { if (this.nodeMap[key]) {
    var node = this.nodeMap[key];
    this.detachFromList(node);
    delete this.nodeMap[key];
} };
const v660 = {};
v660.constructor = v659;
v659.prototype = v660;
v650.remove = v659;
var v661;
var v663;
v663 = function LinkedListNode(key, value) { this.key = key; this.value = value; };
const v664 = {};
v664.constructor = v663;
v663.prototype = v664;
var v662 = v663;
v661 = function (key, value) { if (this.nodeMap[key]) {
    this.remove(key);
}
else if (this.size === this.sizeLimit) {
    var tailNode = this.removeFromTail();
    var key_1 = tailNode.key;
    delete this.nodeMap[key_1];
} var newNode = new v662(key, value); this.nodeMap[key] = newNode; this.prependToList(newNode); };
const v665 = {};
v665.constructor = v661;
v661.prototype = v665;
v650.put = v661;
var v666;
var v667 = v31;
v666 = function () { var keys = v667.keys(this.nodeMap); for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var node = this.nodeMap[key];
    this.detachFromList(node);
    delete this.nodeMap[key];
} };
const v668 = {};
v668.constructor = v666;
v666.prototype = v668;
v650.empty = v666;
v648.prototype = v650;
v647.LRUCache = v648;
var v645 = v647;
v643 = function EndpointCache(maxSize) { if (maxSize === void 0) {
    maxSize = v644;
} this.maxSize = maxSize; this.cache = new v645.LRUCache(maxSize); };
v643.prototype = v642;
var v669;
var v670 = v31;
v669 = function (key) { var identifiers = []; var identifierNames = v670.keys(key).sort(); for (var i = 0; i < identifierNames.length; i++) {
    var identifierName = identifierNames[i];
    if (key[identifierName] === undefined)
        continue;
    identifiers.push(key[identifierName]);
} return identifiers.join(\\" \\"); };
const v671 = {};
v671.constructor = v669;
v669.prototype = v671;
v643.getKeyString = v669;
v642.constructor = v643;
var v672;
var v673 = v643;
v672 = function (key, value) { var keyString = typeof key !== \\"string\\" ? v673.getKeyString(key) : key; var endpointRecord = this.populateValue(value); this.cache.put(keyString, endpointRecord); };
const v674 = {};
v674.constructor = v672;
v672.prototype = v674;
v642.put = v672;
var v675;
var v676 = v643;
var v677 = v77;
v675 = function (key) { var keyString = typeof key !== \\"string\\" ? v676.getKeyString(key) : key; var now = v677.now(); var records = this.cache.get(keyString); if (records) {
    for (var i = records.length - 1; i >= 0; i--) {
        var record = records[i];
        if (record.Expire < now) {
            records.splice(i, 1);
        }
    }
    if (records.length === 0) {
        this.cache.remove(keyString);
        return undefined;
    }
} return records; };
const v678 = {};
v678.constructor = v675;
v675.prototype = v678;
v642.get = v675;
var v679;
var v680 = v77;
v679 = function (endpoints) { var now = v680.now(); return endpoints.map(function (endpoint) { return ({ Address: endpoint.Address || \\"\\", Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000 }); }); };
const v681 = {};
v681.constructor = v679;
v679.prototype = v681;
v642.populateValue = v679;
var v682;
v682 = function () { this.cache.empty(); };
const v683 = {};
v683.constructor = v682;
v682.prototype = v683;
v642.empty = v682;
var v684;
var v685 = v643;
v684 = function (key) { var keyString = typeof key !== \\"string\\" ? v685.getKeyString(key) : key; this.cache.remove(keyString); };
const v686 = {};
v686.constructor = v684;
v684.prototype = v686;
v642.remove = v684;
const v687 = Object.create(v642);
v687.maxSize = 1000;
const v688 = Object.create(v650);
const v689 = {};
v688.nodeMap = v689;
v688.size = 0;
v688.sizeLimit = 1000;
v687.cache = v688;
var v691;
v691 = function addApiVersionHeader(endpointRequest) { var api = endpointRequest.service.api; var apiVersion = api.apiVersion; if (apiVersion && !endpointRequest.httpRequest.headers[\\"x-amz-api-version\\"]) {
    endpointRequest.httpRequest.headers[\\"x-amz-api-version\\"] = apiVersion;
} };
const v692 = {};
v692.constructor = v691;
v691.prototype = v692;
var v690 = v691;
v629 = function optionalDiscoverEndpoint(request) { var service = request.service; var api = service.api; var operationModel = api.operations ? api.operations[request.operation] : undefined; var inputShape = operationModel ? operationModel.input : undefined; var identifiers = v630(request, inputShape); var cacheKey = v638(request); if (v641.keys(identifiers).length > 0) {
    cacheKey = v615.update(cacheKey, identifiers);
    if (operationModel)
        cacheKey.operation = operationModel.name;
} var endpoints = v687.get(cacheKey); if (endpoints && endpoints.length === 1 && endpoints[0].Address === \\"\\") {
    return;
}
else if (endpoints && endpoints.length > 0) {
    request.httpRequest.updateEndpoint(endpoints[0].Address);
}
else {
    var endpointRequest = service.makeRequest(api.endpointOperation, { Operation: operationModel.name, Identifiers: identifiers });
    v690(endpointRequest);
    endpointRequest.removeListener(\\"validate\\", v428.VALIDATE_PARAMETERS);
    endpointRequest.removeListener(\\"retry\\", v428.RETRY_CHECK);
    v687.put(cacheKey, [{ Address: \\"\\", CachePeriodInMinutes: 1 }]);
    endpointRequest.send(function (err, data) { if (data && data.Endpoints) {
        v687.put(cacheKey, data.Endpoints);
    }
    else if (err) {
        v687.put(cacheKey, [{ Address: \\"\\", CachePeriodInMinutes: 1 }]);
    } });
} };
const v693 = {};
v693.constructor = v629;
v629.prototype = v693;
var v628 = v629;
var v695;
var v696 = v631;
var v697 = v3;
v695 = function invalidateCachedEndpoints(response) { var error = response.error; var httpResponse = response.httpResponse; if (error && (error.code === \\"InvalidEndpointException\\" || httpResponse.statusCode === 421)) {
    var request = response.request;
    var operations = request.service.api.operations || {};
    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;
    var identifiers = v696(request, inputShape);
    var cacheKey = v638(request);
    if (v641.keys(identifiers).length > 0) {
        cacheKey = v697.update(cacheKey, identifiers);
        if (operations[request.operation])
            cacheKey.operation = operations[request.operation].name;
    }
    v687.remove(cacheKey);
} };
const v698 = {};
v698.constructor = v695;
v695.prototype = v698;
var v694 = v695;
var v699 = v3;
var v701;
var v702 = v639;
var v703 = v31;
var v704 = v2;
const v706 = {};
var v705 = v706;
var v707 = v706;
var v708 = v691;
var v709 = v706;
var v710 = v706;
v701 = function requiredDiscoverEndpoint(request, done) { var service = request.service; var api = service.api; var operationModel = api.operations ? api.operations[request.operation] : undefined; var inputShape = operationModel ? operationModel.input : undefined; var identifiers = v696(request, inputShape); var cacheKey = v702(request); if (v703.keys(identifiers).length > 0) {
    cacheKey = v620.update(cacheKey, identifiers);
    if (operationModel)
        cacheKey.operation = operationModel.name;
} var cacheKeyStr = v704.EndpointCache.getKeyString(cacheKey); var endpoints = v687.get(cacheKeyStr); if (endpoints && endpoints.length === 1 && endpoints[0].Address === \\"\\") {
    if (!v705[cacheKeyStr])
        v707[cacheKeyStr] = [];
    v707[cacheKeyStr].push({ request: request, callback: done });
    return;
}
else if (endpoints && endpoints.length > 0) {
    request.httpRequest.updateEndpoint(endpoints[0].Address);
    done();
}
else {
    var endpointRequest = service.makeRequest(api.endpointOperation, { Operation: operationModel.name, Identifiers: identifiers });
    endpointRequest.removeListener(\\"validate\\", v428.VALIDATE_PARAMETERS);
    v708(endpointRequest);
    v687.put(cacheKeyStr, [{ Address: \\"\\", CachePeriodInMinutes: 60 }]);
    endpointRequest.send(function (err, data) { if (err) {
        request.response.error = v620.error(err, { retryable: false });
        v687.remove(cacheKey);
        if (v709[cacheKeyStr]) {
            var pendingRequests = v710[cacheKeyStr];
            v615.arrayEach(pendingRequests, function (requestContext) { requestContext.request.response.error = v615.error(err, { retryable: false }); requestContext.callback(); });
            delete v709[cacheKeyStr];
        }
    }
    else if (data) {
        v687.put(cacheKeyStr, data.Endpoints);
        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);
        if (v709[cacheKeyStr]) {
            var pendingRequests = v710[cacheKeyStr];
            v697.arrayEach(pendingRequests, function (requestContext) { requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address); requestContext.callback(); });
            delete v709[cacheKeyStr];
        }
    } done(); });
} };
const v711 = {};
v711.constructor = v701;
v701.prototype = v711;
var v700 = v701;
v606 = function discoverEndpoint(request, done) { var service = request.service || {}; if (v607(service) || request.isPresigned())
    return done(); var operations = service.api.operations || {}; var operationModel = operations[request.operation]; var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : \\"NULL\\"; var isEnabled = v613(request); var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery; if (isEnabled || hasRequiredEndpointDiscovery) {
    request.httpRequest.appendToUserAgent(\\"endpoint-discovery\\");
} switch (isEndpointDiscoveryRequired) {
    case \\"OPTIONAL\\":
        if (isEnabled || hasRequiredEndpointDiscovery) {
            v628(request);
            request.addNamedListener(\\"INVALIDATE_CACHED_ENDPOINTS\\", \\"extractError\\", v694);
        }
        done();
        break;
    case \\"REQUIRED\\":
        if (isEnabled === false) {
            request.response.error = v699.error(new v621(), { code: \\"ConfigurationException\\", message: \\"Endpoint Discovery is disabled but \\" + service.api.className + \\".\\" + request.operation + \\"() requires it. Please check your configurations.\\" });
            done();
            break;
        }
        request.addNamedListener(\\"INVALIDATE_CACHED_ENDPOINTS\\", \\"extractError\\", v694);
        v700(request, done);
        break;
    case \\"NULL\\":
    default:
        done();
        break;
} };
const v712 = {};
v712.constructor = v606;
v606.prototype = v712;
v606._isAsync = true;
var v713;
v713 = function SIGN(req, done) { var service = req.service; var operations = req.service.api.operations || {}; var operation = operations[req.operation]; var authtype = operation ? operation.authtype : \\"\\"; if (!service.api.signatureVersion && !authtype && !service.config.signatureVersion)
    return done(); service.config.getCredentials(function (err, credentials) { if (err) {
    req.response.error = err;
    return done();
} try {
    var date = service.getSkewCorrectedDate();
    var SignerClass = service.getSignerClass(req);
    var signer = new SignerClass(req.httpRequest, service.getSigningName(req), { signatureCache: service.config.signatureCache, operation: operation, signatureVersion: service.api.signatureVersion });
    signer.setServiceClientId(service._clientId);
    delete req.httpRequest.headers[\\"Authorization\\"];
    delete req.httpRequest.headers[\\"Date\\"];
    delete req.httpRequest.headers[\\"X-Amz-Date\\"];
    signer.addAuthorization(credentials, date);
    req.signedAt = date;
}
catch (e) {
    req.response.error = e;
} done(); }); };
const v714 = {};
v714.constructor = v713;
v713.prototype = v714;
v713._isAsync = true;
v605.push(v606, v713);
v429.sign = v605;
const v715 = [];
var v716;
var v717 = v40;
v716 = function VALIDATE_RESPONSE(resp) { if (this.service.successfulResponse(resp, this)) {
    resp.data = {};
    resp.error = null;
}
else {
    resp.data = null;
    resp.error = v3.error(new v717(), { code: \\"UnknownError\\", message: \\"An unknown error occurred.\\" });
} };
const v718 = {};
v718.constructor = v716;
v716.prototype = v718;
v715.push(v716);
v429.validateResponse = v715;
const v719 = [];
var v720;
v720 = function ERROR(err, resp) { var errorCodeMapping = resp.request.service.api.errorCodeMapping; if (errorCodeMapping && err && err.code) {
    var mapping = errorCodeMapping[err.code];
    if (mapping) {
        resp.error.code = mapping.code;
    }
} };
const v721 = {};
v721.constructor = v720;
v720.prototype = v721;
v719.push(v720);
v429.error = v719;
const v722 = [];
var v723;
v723 = function SEND(resp, done) { resp.httpResponse._abortCallback = done; resp.error = null; resp.data = null; function callback(httpResp) { resp.httpResponse.stream = httpResp; var stream = resp.request.httpRequest.stream; var service = resp.request.service; var api = service.api; var operationName = resp.request.operation; var operation = api.operations[operationName] || {}; httpResp.on(\\"headers\\", function onHeaders(statusCode, headers, statusMessage) { resp.request.emit(\\"httpHeaders\\", [statusCode, headers, resp, statusMessage]); if (!resp.httpResponse.streaming) {
    if (2 === 2) {
        if (operation.hasEventOutput && service.successfulResponse(resp)) {
            resp.request.emit(\\"httpDone\\");
            done();
            return;
        }
        httpResp.on(\\"readable\\", function onReadable() { var data = httpResp.read(); if (data !== null) {
            resp.request.emit(\\"httpData\\", [data, resp]);
        } });
    }
    else {
        httpResp.on(\\"data\\", function onData(data) { resp.request.emit(\\"httpData\\", [data, resp]); });
    }
} }); httpResp.on(\\"end\\", function onEnd() { if (!stream || !stream.didCallback) {
    if (2 === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {
        return;
    }
    resp.request.emit(\\"httpDone\\");
    done();
} }); } function progress(httpResp) { httpResp.on(\\"sendProgress\\", function onSendProgress(value) { resp.request.emit(\\"httpUploadProgress\\", [value, resp]); }); httpResp.on(\\"receiveProgress\\", function onReceiveProgress(value) { resp.request.emit(\\"httpDownloadProgress\\", [value, resp]); }); } function error(err) { if (err.code !== \\"RequestAbortedError\\") {
    var errCode = err.code === \\"TimeoutError\\" ? err.code : \\"NetworkingError\\";
    err = v3.error(err, { code: errCode, region: resp.request.httpRequest.region, hostname: resp.request.httpRequest.endpoint.hostname, retryable: true });
} resp.error = err; resp.request.emit(\\"httpError\\", [resp.error, resp], function () { done(); }); } function executeSend() { var http = v444.HttpClient.getInstance(); var httpOptions = resp.request.service.config.httpOptions || {}; try {
    var stream = http.handleRequest(resp.request.httpRequest, httpOptions, callback, error);
    progress(stream);
}
catch (err) {
    error(err);
} } var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000; if (timeDiff >= 60 * 10) {
    this.emit(\\"sign\\", [this], function (err) { if (err)
        done(err);
    else
        executeSend(); });
}
else {
    executeSend();
} };
const v724 = {};
v724.constructor = v723;
v723.prototype = v724;
v723._isAsync = true;
v722.push(v723);
v429.send = v722;
const v725 = [];
var v726;
var v727 = v77;
v726 = function HTTP_HEADERS(statusCode, headers, resp, statusMessage) { resp.httpResponse.statusCode = statusCode; resp.httpResponse.statusMessage = statusMessage; resp.httpResponse.headers = headers; resp.httpResponse.body = v41.toBuffer(\\"\\"); resp.httpResponse.buffers = []; resp.httpResponse.numBytes = 0; var dateHeader = headers.date || headers.Date; var service = resp.request.service; if (dateHeader) {
    var serverTime = v727.parse(dateHeader);
    if (service.config.correctClockSkew && service.isClockSkewed(serverTime)) {
        service.applyClockOffset(serverTime);
    }
} };
const v728 = {};
v728.constructor = v726;
v726.prototype = v728;
v725.push(v726);
v429.httpHeaders = v725;
const v729 = [];
var v730;
v730 = function HTTP_DATA(chunk, resp) { if (chunk) {
    if (v3.isNode()) {
        resp.httpResponse.numBytes += chunk.length;
        var total = resp.httpResponse.headers[\\"content-length\\"];
        var progress = { loaded: resp.httpResponse.numBytes, total: total };
        resp.request.emit(\\"httpDownloadProgress\\", [progress, resp]);
    }
    resp.httpResponse.buffers.push(v41.toBuffer(chunk));
} };
const v731 = {};
v731.constructor = v730;
v730.prototype = v731;
v729.push(v730);
v429.httpData = v729;
const v732 = [];
var v733;
v733 = function HTTP_DONE(resp) { if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {
    var body = v41.concat(resp.httpResponse.buffers);
    resp.httpResponse.body = body;
} delete resp.httpResponse.numBytes; delete resp.httpResponse.buffers; };
const v734 = {};
v734.constructor = v733;
v733.prototype = v734;
v732.push(v733);
v429.httpDone = v732;
const v735 = [];
var v736;
v736 = function FINALIZE_ERROR(resp) { if (resp.httpResponse.statusCode) {
    resp.error.statusCode = resp.httpResponse.statusCode;
    if (resp.error.retryable === undefined) {
        resp.error.retryable = this.service.retryableError(resp.error, this);
    }
} };
const v737 = {};
v737.constructor = v736;
v736.prototype = v737;
var v738;
v738 = function INVALIDATE_CREDENTIALS(resp) { if (!resp.error)
    return; switch (resp.error.code) {
    case \\"RequestExpired\\":
    case \\"ExpiredTokenException\\":
    case \\"ExpiredToken\\":
        resp.error.retryable = true;
        resp.request.service.config.credentials.expired = true;
} };
const v739 = {};
v739.constructor = v738;
v738.prototype = v739;
var v740;
v740 = function EXPIRED_SIGNATURE(resp) { var err = resp.error; if (!err)
    return; if (typeof err.code === \\"string\\" && typeof err.message === \\"string\\") {
    if (err.code.match(/Signature/) && err.message.match(/expired/)) {
        resp.error.retryable = true;
    }
} };
const v741 = {};
v741.constructor = v740;
v740.prototype = v741;
var v742;
v742 = function CLOCK_SKEWED(resp) { if (!resp.error)
    return; if (this.service.clockSkewError(resp.error) && this.service.config.correctClockSkew) {
    resp.error.retryable = true;
} };
const v743 = {};
v743.constructor = v742;
v742.prototype = v743;
var v744;
v744 = function REDIRECT(resp) { if (resp.error && resp.error.statusCode >= 300 && resp.error.statusCode < 400 && resp.httpResponse.headers[\\"location\\"]) {
    this.httpRequest.endpoint = new v603.Endpoint(resp.httpResponse.headers[\\"location\\"]);
    this.httpRequest.headers[\\"Host\\"] = this.httpRequest.endpoint.host;
    resp.error.redirect = true;
    resp.error.retryable = true;
} };
const v745 = {};
v745.constructor = v744;
v744.prototype = v745;
var v746;
v746 = function RETRY_CHECK(resp) { if (resp.error) {
    if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {
        resp.error.retryDelay = 0;
    }
    else if (resp.retryCount < resp.maxRetries) {
        resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;
    }
} };
const v747 = {};
v747.constructor = v746;
v746.prototype = v747;
v735.push(v736, v738, v740, v742, v744, v746);
v429.retry = v735;
const v748 = [];
var v749;
const v751 = require(\\"timers\\").setTimeout;
var v750 = v751;
v749 = function RESET_RETRY_STATE(resp, done) { var delay, willRetry = false; if (resp.error) {
    delay = resp.error.retryDelay || 0;
    if (resp.error.retryable && resp.retryCount < resp.maxRetries) {
        resp.retryCount++;
        willRetry = true;
    }
    else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {
        resp.redirectCount++;
        willRetry = true;
    }
} if (willRetry && delay >= 0) {
    resp.error = null;
    v750(done, delay);
}
else {
    done();
} };
const v752 = {};
v752.constructor = v749;
v749.prototype = v752;
v749._isAsync = true;
v748.push(v749);
v429.afterRetry = v748;
v428._events = v429;
v428.VALIDATE_CREDENTIALS = v431;
v428.VALIDATE_REGION = v433;
v428.BUILD_IDEMPOTENCY_TOKENS = v438;
v428.VALIDATE_PARAMETERS = v443;
v428.COMPUTE_CHECKSUM = v447;
v428.COMPUTE_SHA256 = v449;
v428.SET_CONTENT_LENGTH = v590;
v428.SET_HTTP_HOST = v595;
v428.SET_TRACE_ID = v597;
v428.RESTART = v602;
v428.DISCOVER_ENDPOINT = v606;
v428.SIGN = v713;
v428.VALIDATE_RESPONSE = v716;
v428.ERROR = v720;
v428.SEND = v723;
v428.HTTP_HEADERS = v726;
v428.HTTP_DATA = v730;
v428.HTTP_DONE = v733;
v428.FINALIZE_ERROR = v736;
v428.INVALIDATE_CREDENTIALS = v738;
v428.EXPIRED_SIGNATURE = v740;
v428.CLOCK_SKEWED = v742;
v428.REDIRECT = v744;
v428.RETRY_CHECK = v746;
v428.RESET_RETRY_STATE = v749;
const v753 = Object.create(v401);
const v754 = {};
const v755 = [];
var v756;
v756 = function extractRequestId(resp) { var requestId = resp.httpResponse.headers[\\"x-amz-request-id\\"] || resp.httpResponse.headers[\\"x-amzn-requestid\\"]; if (!requestId && resp.data && resp.data.ResponseMetadata) {
    requestId = resp.data.ResponseMetadata.RequestId;
} if (requestId) {
    resp.requestId = requestId;
} if (resp.error) {
    resp.error.requestId = requestId;
} };
const v757 = {};
v757.constructor = v756;
v756.prototype = v757;
v755.push(v756);
v754.extractData = v755;
const v758 = [];
v758.push(v756);
v754.extractError = v758;
const v759 = [];
var v760;
var v761 = v40;
v760 = function ENOTFOUND_ERROR(err) { function isDNSError(err) { return err.errno === \\"ENOTFOUND\\" || typeof err.errno === \\"number\\" && typeof v3.getSystemErrorName === \\"function\\" && [\\"EAI_NONAME\\", \\"EAI_NODATA\\"].indexOf(v3.getSystemErrorName(err.errno) >= 0); } if (err.code === \\"NetworkingError\\" && isDNSError(err)) {
    var message = \\"Inaccessible host: \`\\" + err.hostname + \\"' at port \`\\" + err.port + \\"'. This service may not be available in the \`\\" + err.region + \\"' region.\\";
    this.response.error = v3.error(new v761(message), { code: \\"UnknownEndpoint\\", region: err.region, hostname: err.hostname, retryable: true, originalError: err });
} };
const v762 = {};
v762.constructor = v760;
v760.prototype = v762;
v759.push(v760);
v754.httpError = v759;
v753._events = v754;
v753.EXTRACT_REQUEST_ID = v756;
v753.ENOTFOUND_ERROR = v760;
const v763 = Object.create(v401);
const v764 = {};
const v765 = [];
var v766;
var v767 = undefined;
var v768 = undefined;
var v769 = undefined;
var v770 = undefined;
var v771 = require;
v766 = function LOG_REQUEST(resp) { var req = resp.request; var logger = req.service.config.logger; if (!logger)
    return; function filterSensitiveLog(inputShape, shape) { if (!shape) {
    return shape;
} if (inputShape.isSensitive) {
    return \\"***SensitiveInformation***\\";
} switch (inputShape.type) {
    case \\"structure\\":
        var struct = {};
        v3.each(shape, function (subShapeName, subShape) { if (v113.hasOwnProperty.call(inputShape.members, subShapeName)) {
            v767[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);
        }
        else {
            v767[subShapeName] = subShape;
        } });
        return v767;
    case \\"list\\":
        var list = [];
        v3.arrayEach(shape, function (subShape, index) { undefined(filterSensitiveLog(inputShape.member, subShape)); });
        return v768;
    case \\"map\\":
        var map = {};
        v3.each(shape, function (key, value) { v769[key] = filterSensitiveLog(inputShape.value, value); });
        return v770;
    default: return shape;
} } function buildMessage() { var time = resp.request.service.getSkewCorrectedDate().getTime(); var delta = (time - req.startTime.getTime()) / 1000; var ansi = logger.isTTY ? true : false; var status = resp.httpResponse.statusCode; var censoredParams = req.params; if (req.service.api.operations && req.service.api.operations[req.operation] && req.service.api.operations[req.operation].input) {
    var inputShape = req.service.api.operations[req.operation].input;
    censoredParams = filterSensitiveLog(inputShape, req.params);
} var params = v771(\\"util\\").inspect(censoredParams, true, null); var message = \\"\\"; if (ansi)
    message += \\"\\\\u001B[33m\\"; message += \\"[AWS \\" + req.service.serviceIdentifier + \\" \\" + status; message += \\" \\" + delta.toString() + \\"s \\" + resp.retryCount + \\" retries]\\"; if (ansi)
    message += \\"\\\\u001B[0;1m\\"; message += \\" \\" + v55.lowerFirst(req.operation); message += \\"(\\" + params + \\")\\"; if (ansi)
    message += \\"\\\\u001B[0m\\"; return message; } var line = buildMessage(); if (typeof logger.log === \\"function\\") {
    logger.log(line);
}
else if (typeof logger.write === \\"function\\") {
    logger.write(line + \\"\\\\n\\");
} };
const v772 = {};
v772.constructor = v766;
v766.prototype = v772;
v765.push(v766);
v764.complete = v765;
v763._events = v764;
v763.LOG_REQUEST = v766;
v400 = function addAllRequestListeners(request) { var list = [v426, v428, this.serviceInterface(), v753]; for (var i = 0; i < list.length; i++) {
    if (list[i])
        request.addListeners(list[i]);
} if (!this.config.paramValidation) {
    request.removeListener(\\"validate\\", v428.VALIDATE_PARAMETERS);
} if (this.config.logger) {
    request.addListeners(v763);
} this.setupRequestListeners(request); if (typeof this.constructor.prototype.customRequestHandler === \\"function\\") {
    this.constructor.prototype.customRequestHandler(request);
} if (v113.hasOwnProperty.call(this, \\"customRequestHandler\\") && typeof this.customRequestHandler === \\"function\\") {
    this.customRequestHandler(request);
} };
const v773 = {};
v773.constructor = v400;
v400.prototype = v773;
v309.addAllRequestListeners = v400;
var v774;
v774 = function apiCallEvent(request) { var api = request.service.api.operations[request.operation]; var monitoringEvent = { Type: \\"ApiCall\\", Api: api ? api.name : request.operation, Version: 1, Service: request.service.api.serviceId || request.service.api.endpointPrefix, Region: request.httpRequest.region, MaxRetriesExceeded: 0, UserAgent: request.httpRequest.getUserAgent() }; var response = request.response; if (response.httpResponse.statusCode) {
    monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;
} if (response.error) {
    var error = response.error;
    var statusCode = response.httpResponse.statusCode;
    if (statusCode > 299) {
        if (error.code)
            monitoringEvent.FinalAwsException = error.code;
        if (error.message)
            monitoringEvent.FinalAwsExceptionMessage = error.message;
    }
    else {
        if (error.code || error.name)
            monitoringEvent.FinalSdkException = error.code || error.name;
        if (error.message)
            monitoringEvent.FinalSdkExceptionMessage = error.message;
    }
} return monitoringEvent; };
const v775 = {};
v775.constructor = v774;
v774.prototype = v775;
v309.apiCallEvent = v774;
var v776;
v776 = function apiAttemptEvent(request) { var api = request.service.api.operations[request.operation]; var monitoringEvent = { Type: \\"ApiCallAttempt\\", Api: api ? api.name : request.operation, Version: 1, Service: request.service.api.serviceId || request.service.api.endpointPrefix, Fqdn: request.httpRequest.endpoint.hostname, UserAgent: request.httpRequest.getUserAgent() }; var response = request.response; if (response.httpResponse.statusCode) {
    monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;
} if (!request._unAuthenticated && request.service.config.credentials && request.service.config.credentials.accessKeyId) {
    monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;
} if (!response.httpResponse.headers)
    return monitoringEvent; if (request.httpRequest.headers[\\"x-amz-security-token\\"]) {
    monitoringEvent.SessionToken = request.httpRequest.headers[\\"x-amz-security-token\\"];
} if (response.httpResponse.headers[\\"x-amzn-requestid\\"]) {
    monitoringEvent.XAmznRequestId = response.httpResponse.headers[\\"x-amzn-requestid\\"];
} if (response.httpResponse.headers[\\"x-amz-request-id\\"]) {
    monitoringEvent.XAmzRequestId = response.httpResponse.headers[\\"x-amz-request-id\\"];
} if (response.httpResponse.headers[\\"x-amz-id-2\\"]) {
    monitoringEvent.XAmzId2 = response.httpResponse.headers[\\"x-amz-id-2\\"];
} return monitoringEvent; };
const v777 = {};
v777.constructor = v776;
v776.prototype = v777;
v309.apiAttemptEvent = v776;
var v778;
v778 = function attemptFailEvent(request) { var monitoringEvent = this.apiAttemptEvent(request); var response = request.response; var error = response.error; if (response.httpResponse.statusCode > 299) {
    if (error.code)
        monitoringEvent.AwsException = error.code;
    if (error.message)
        monitoringEvent.AwsExceptionMessage = error.message;
}
else {
    if (error.code || error.name)
        monitoringEvent.SdkException = error.code || error.name;
    if (error.message)
        monitoringEvent.SdkExceptionMessage = error.message;
} return monitoringEvent; };
const v779 = {};
v779.constructor = v778;
v778.prototype = v779;
v309.attemptFailEvent = v778;
var v780;
const v781 = {};
var v782;
var v783 = v8;
v782 = function now() { var second = v783.hrtime(); return second[0] * 1000 + (second[1] / 1000000); };
const v784 = {};
v784.constructor = v782;
v782.prototype = v784;
v781.now = v782;
var v785 = v77;
const v787 = Math;
var v786 = v787;
var v788 = v787;
v780 = function attachMonitoringEmitter(request) { var attemptTimestamp; var attemptStartRealTime; var attemptLatency; var callStartRealTime; var attemptCount = 0; var region; var callTimestamp; var self = this; var addToHead = true; request.on(\\"validate\\", function () { callStartRealTime = v781.now(); callTimestamp = v785.now(); }, addToHead); request.on(\\"sign\\", function () { attemptStartRealTime = v781.now(); attemptTimestamp = v785.now(); region = request.httpRequest.region; attemptCount++; }, addToHead); request.on(\\"validateResponse\\", function () { attemptLatency = v786.round(v781.now() - attemptStartRealTime); }); request.addNamedListener(\\"API_CALL_ATTEMPT\\", \\"success\\", function API_CALL_ATTEMPT() { var apiAttemptEvent = self.apiAttemptEvent(request); apiAttemptEvent.Timestamp = attemptTimestamp; apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0; apiAttemptEvent.Region = region; self.emit(\\"apiCallAttempt\\", [apiAttemptEvent]); }); request.addNamedListener(\\"API_CALL_ATTEMPT_RETRY\\", \\"retry\\", function API_CALL_ATTEMPT_RETRY() { var apiAttemptEvent = self.attemptFailEvent(request); apiAttemptEvent.Timestamp = attemptTimestamp; attemptLatency = attemptLatency || v786.round(v781.now() - attemptStartRealTime); apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0; apiAttemptEvent.Region = region; self.emit(\\"apiCallAttempt\\", [apiAttemptEvent]); }); request.addNamedListener(\\"API_CALL\\", \\"complete\\", function API_CALL() { var apiCallEvent = self.apiCallEvent(request); apiCallEvent.AttemptCount = attemptCount; if (apiCallEvent.AttemptCount <= 0)
    return; apiCallEvent.Timestamp = callTimestamp; var latency = v788.round(v781.now() - callStartRealTime); apiCallEvent.Latency = latency >= 0 ? latency : 0; var response = request.response; if (response.error && response.error.retryable && typeof response.retryCount === \\"number\\" && typeof response.maxRetries === \\"number\\" && (response.retryCount >= response.maxRetries)) {
    apiCallEvent.MaxRetriesExceeded = 1;
} self.emit(\\"apiCall\\", [apiCallEvent]); }); };
const v789 = {};
v789.constructor = v780;
v780.prototype = v789;
v309.attachMonitoringEmitter = v780;
var v790;
v790 = function setupRequestListeners(request) { };
const v791 = {};
v791.constructor = v790;
v790.prototype = v791;
v309.setupRequestListeners = v790;
var v792;
v792 = function getSigningName() { return this.api.signingName || this.api.endpointPrefix; };
const v793 = {};
v793.constructor = v792;
v792.prototype = v793;
v309.getSigningName = v792;
var v794;
v794 = function getSignerClass(request) { var version; var operation = null; var authtype = \\"\\"; if (request) {
    var operations = request.service.api.operations || {};
    operation = operations[request.operation] || null;
    authtype = operation ? operation.authtype : \\"\\";
} if (this.config.signatureVersion) {
    version = this.config.signatureVersion;
}
else if (authtype === \\"v4\\" || authtype === \\"v4-unsigned-body\\") {
    version = \\"v4\\";
}
else {
    version = this.api.signatureVersion;
} return v450.RequestSigner.getVersion(version); };
const v795 = {};
v795.constructor = v794;
v794.prototype = v795;
v309.getSignerClass = v794;
var v796;
const v797 = Object.create(v401);
const v798 = {};
const v799 = [];
var v800;
var v802;
v802 = function QueryParamSerializer() { };
const v803 = {};
v803.constructor = v802;
var v804;
var v806;
var v807 = v3;
var v809;
v809 = function ucfirst(shape) { if (shape.isQueryName || shape.api.protocol !== \\"ec2\\") {
    return shape.name;
}
else {
    return shape.name[0].toUpperCase() + shape.name.substr(1);
} };
const v810 = {};
v810.constructor = v809;
v809.prototype = v810;
var v808 = v809;
var v812;
var v813 = v806;
var v815;
var v816 = v3;
var v817 = v809;
var v818 = v812;
v815 = function serializeList(name, list, rules, fn) { var memberRules = rules.member || {}; if (list.length === 0) {
    fn.call(this, name, null);
    return;
} v816.arrayEach(list, function (v, n) { var suffix = \\".\\" + (n + 1); if (rules.api.protocol === \\"ec2\\") {
    suffix = suffix + \\"\\";
}
else if (rules.flattened) {
    if (memberRules.name) {
        var parts = name.split(\\".\\");
        parts.pop();
        parts.push(v817(memberRules));
        name = parts.join(\\".\\");
    }
}
else {
    suffix = \\".\\" + (memberRules.name ? memberRules.name : \\"member\\") + suffix;
} v818(name + suffix, v, memberRules, fn); }); };
const v819 = {};
v819.constructor = v815;
v815.prototype = v819;
var v814 = v815;
var v821;
var v822 = v3;
var v823 = v812;
v821 = function serializeMap(name, map, rules, fn) { var i = 1; v822.each(map, function (key, value) { var prefix = rules.flattened ? \\".\\" : \\".entry.\\"; var position = prefix + (i++) + \\".\\"; var keyName = position + (rules.key.name || \\"key\\"); var valueName = position + (rules.value.name || \\"value\\"); v811(name + keyName, key, rules.key, fn); v823(name + valueName, value, rules.value, fn); }); };
const v824 = {};
v824.constructor = v821;
v821.prototype = v824;
var v820 = v821;
v812 = function serializeMember(name, value, rules, fn) { if (value === null || value === undefined)
    return; if (rules.type === \\"structure\\") {
    v813(name, value, rules, fn);
}
else if (rules.type === \\"list\\") {
    v814(name, value, rules, fn);
}
else if (rules.type === \\"map\\") {
    v820(name, value, rules, fn);
}
else {
    fn(name, rules.toWireFormat(value).toString());
} };
const v825 = {};
v825.constructor = v812;
v812.prototype = v825;
var v811 = v812;
v806 = function serializeStructure(prefix, struct, rules, fn) { v807.each(rules.members, function (name, member) { var value = struct[name]; if (value === null || value === undefined)
    return; var memberName = v808(member); memberName = prefix ? prefix + \\".\\" + memberName : memberName; v811(memberName, value, member, fn); }); };
const v826 = {};
v826.constructor = v806;
v806.prototype = v826;
var v805 = v806;
v804 = function (params, shape, fn) { v805(\\"\\", params, shape, fn); };
const v827 = {};
v827.constructor = v804;
v804.prototype = v827;
v803.serialize = v804;
v802.prototype = v803;
var v801 = v802;
var v828 = v3;
var v830;
var v832;
v832 = function hasEndpointDiscover(request) { var api = request.service.api; var operationModel = api.operations[request.operation]; var isEndpointOperation = api.endpointOperation && (api.endpointOperation === v55.lowerFirst(operationModel.name)); return (operationModel.endpointDiscoveryRequired !== \\"NULL\\" || isEndpointOperation === true); };
const v833 = {};
v833.constructor = v832;
v832.prototype = v833;
var v831 = v832;
var v835;
var v836 = v3;
var v837 = v3;
var v838 = v40;
var v839 = v373;
v835 = function expandHostPrefix(hostPrefixNotation, params, shape) { v836.each(shape.members, function (name, member) { if (member.hostLabel === true) {
    if (typeof params[name] !== \\"string\\" || params[name] === \\"\\") {
        throw v837.error(new v838(), { message: \\"Parameter \\" + name + \\" should be a non-empty string.\\", code: \\"InvalidParameter\\" });
    }
    var regex = new v839(\\"\\\\\\\\{\\" + name + \\"\\\\\\\\}\\", \\"g\\");
    hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);
} }); return hostPrefixNotation; };
const v840 = {};
v840.constructor = v835;
v835.prototype = v840;
var v834 = v835;
var v842;
v842 = function prependEndpointPrefix(endpoint, prefix) { if (endpoint.host) {
    endpoint.host = prefix + endpoint.host;
} if (endpoint.hostname) {
    endpoint.hostname = prefix + endpoint.hostname;
} };
const v843 = {};
v843.constructor = v842;
v842.prototype = v843;
var v841 = v842;
var v845;
var v846 = v3;
var v847 = v40;
var v848 = v40;
v845 = function validateHostname(hostname) { var labels = hostname.split(\\".\\"); var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9]$/; v846.arrayEach(labels, function (label) { if (!label.length || label.length < 1 || label.length > 63) {
    throw v846.error(new v847(), { code: \\"ValidationError\\", message: \\"Hostname label length should be between 1 to 63 characters, inclusive.\\" });
} if (!hostPattern.test(label)) {
    throw v3.error(new v848(), { code: \\"ValidationError\\", message: label + \\" is not hostname compatible.\\" });
} }); };
const v849 = {};
v849.constructor = v845;
v845.prototype = v849;
var v844 = v845;
v830 = function populateHostPrefix(request) { var enabled = request.service.config.hostPrefixEnabled; if (!enabled)
    return request; var operationModel = request.service.api.operations[request.operation]; if (v831(request))
    return request; if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {
    var hostPrefixNotation = operationModel.endpoint.hostPrefix;
    var hostPrefix = v834(hostPrefixNotation, request.params, operationModel.input);
    v841(request.httpRequest.endpoint, hostPrefix);
    v844(request.httpRequest.endpoint.hostname);
} return request; };
const v850 = {};
v850.constructor = v830;
v830.prototype = v850;
var v829 = v830;
v800 = function buildRequest(req) { var operation = req.service.api.operations[req.operation]; var httpRequest = req.httpRequest; httpRequest.headers[\\"Content-Type\\"] = \\"application/x-www-form-urlencoded; charset=utf-8\\"; httpRequest.params = { Version: req.service.api.apiVersion, Action: operation.name }; var builder = new v801(); builder.serialize(req.params, operation.input, function (name, value) { httpRequest.params[name] = value; }); httpRequest.body = v828.queryParamsToString(httpRequest.params); v829(req); };
const v851 = {};
v851.constructor = v800;
v800.prototype = v851;
v799.push(v800);
v798.build = v799;
const v852 = [];
var v853;
var v855;
var v857;
var v858 = v3;
v857 = function property(obj, name, value) { if (value !== null && value !== undefined) {
    v858.property.apply(this, arguments);
} };
const v859 = {};
v859.constructor = v857;
v857.prototype = v859;
var v856 = v857;
var v860 = v857;
var v861 = v857;
var v862 = v857;
var v863 = v857;
var v864 = v857;
var v865 = v857;
var v866 = v857;
var v867 = v282;
var v868 = v857;
var v869 = v857;
var v870 = v282;
var v871 = v857;
var v872 = v857;
v855 = function Shape(shape, options, memberName) { options = options || {}; v856(this, \\"shape\\", shape.shape); v860(this, \\"api\\", options.api, false); v861(this, \\"type\\", shape.type); v862(this, \\"enum\\", shape.enum); v863(this, \\"min\\", shape.min); v862(this, \\"max\\", shape.max); v864(this, \\"pattern\\", shape.pattern); v861(this, \\"location\\", shape.location || this.location || \\"body\\"); v861(this, \\"name\\", this.name || shape.xmlName || shape.queryName || shape.locationName || memberName); v865(this, \\"isStreaming\\", shape.streaming || this.isStreaming || false); v866(this, \\"requiresLength\\", shape.requiresLength, false); v866(this, \\"isComposite\\", shape.isComposite || false); v866(this, \\"isShape\\", true, false); v866(this, \\"isQueryName\\", v867(shape.queryName), false); v868(this, \\"isLocationName\\", v867(shape.locationName), false); v869(this, \\"isIdempotent\\", shape.idempotencyToken === true); v868(this, \\"isJsonValue\\", shape.jsonvalue === true); v866(this, \\"isSensitive\\", shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true); v866(this, \\"isEventStream\\", v870(shape.eventstream), false); v866(this, \\"isEvent\\", v867(shape.event), false); v868(this, \\"isEventPayload\\", v867(shape.eventpayload), false); v871(this, \\"isEventHeader\\", v870(shape.eventheader), false); v872(this, \\"isTimestampFormatSet\\", v870(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false); v871(this, \\"endpointDiscoveryId\\", v867(shape.endpointdiscoveryid), false); v871(this, \\"hostLabel\\", v870(shape.hostLabel), false); if (options.documentation) {
    v866(this, \\"documentation\\", shape.documentation);
    v871(this, \\"documentationUrl\\", shape.documentationUrl);
} if (shape.xmlAttribute) {
    v866(this, \\"isXmlAttribute\\", shape.xmlAttribute || false);
} v862(this, \\"defaultValue\\", null); this.toWireFormat = function (value) { if (value === null || value === undefined)
    return \\"\\"; return value; }; this.toType = function (value) { return value; }; };
const v873 = {};
v873.constructor = v855;
v855.prototype = v873;
const v874 = {};
v874.character = \\"string\\";
v874.double = \\"float\\";
v874.long = \\"integer\\";
v874.short = \\"integer\\";
v874.biginteger = \\"integer\\";
v874.bigdecimal = \\"float\\";
v874.blob = \\"binary\\";
v855.normalizedTypes = v874;
const v875 = {};
var v876;
var v878;
var v879 = v855;
v878 = function CompositeShape(shape) { v879.apply(this, arguments); v866(this, \\"isComposite\\", true); if (shape.flattened) {
    v871(this, \\"flattened\\", shape.flattened || false);
} };
const v880 = {};
v880.constructor = v878;
v878.prototype = v880;
var v877 = v878;
var v881 = v282;
var v883;
var v884 = v136;
var v886;
var v887 = v146;
v886 = function memoize(name, value, factory, nameTr) { v887(this, nameTr(name), function () { return factory(name, value); }); };
const v888 = {};
v888.constructor = v886;
v886.prototype = v888;
var v885 = v886;
v883 = function Collection(iterable, options, factory, nameTr, callback) { nameTr = nameTr || v884; var self = this; for (var id in iterable) {
    if (v113.hasOwnProperty.call(iterable, id)) {
        v885.call(self, id, iterable[id], factory, nameTr);
        if (callback)
            callback(id, iterable[id]);
    }
} };
const v889 = {};
v889.constructor = v883;
v883.prototype = v889;
var v882 = v883;
var v890 = v855;
var v892;
v892 = function memoizedProperty(obj, name) { if (!obj.constructor.prototype[name]) {
    v858.memoizedProperty.apply(this, arguments);
} };
const v893 = {};
v893.constructor = v892;
v892.prototype = v893;
var v891 = v892;
var v894 = v31;
var v895 = v892;
v876 = function StructureShape(shape, options) { var self = this; var requiredMap = null, firstInit = !this.isShape; v877.apply(this, arguments); if (firstInit) {
    v872(this, \\"defaultValue\\", function () { return {}; });
    v868(this, \\"members\\", {});
    v872(this, \\"memberNames\\", []);
    v872(this, \\"required\\", []);
    v872(this, \\"isRequired\\", function () { return false; });
    v868(this, \\"isDocument\\", v881(shape.document));
} if (shape.members) {
    v869(this, \\"members\\", new v882(shape.members, options, function (name, member) { return v890.create(member, options, name); }));
    v891(this, \\"memberNames\\", function () { return shape.xmlOrder || v894.keys(shape.members); });
    if (shape.event) {
        v895(this, \\"eventPayloadMemberName\\", function () { var members = self.members; var memberNames = self.memberNames; for (var i = 0, iLen = memberNames.length; i < iLen; i++) {
            if (members[memberNames[i]].isEventPayload) {
                return memberNames[i];
            }
        } });
        v891(this, \\"eventHeaderMemberNames\\", function () { var members = self.members; var memberNames = self.memberNames; var eventHeaderMemberNames = []; for (var i = 0, iLen = memberNames.length; i < iLen; i++) {
            if (members[memberNames[i]].isEventHeader) {
                eventHeaderMemberNames.push(memberNames[i]);
            }
        } return eventHeaderMemberNames; });
    }
} if (shape.required) {
    v868(this, \\"required\\", shape.required);
    v869(this, \\"isRequired\\", function (name) { if (!requiredMap) {
        requiredMap = {};
        for (var i = 0; i < shape.required.length; i++) {
            requiredMap[shape.required[i]] = true;
        }
    } return requiredMap[name]; }, false, true);
} v868(this, \\"resultWrapper\\", shape.resultWrapper || null); if (shape.payload) {
    v868(this, \\"payload\\", shape.payload);
} if (typeof shape.xmlNamespace === \\"string\\") {
    v869(this, \\"xmlNamespaceUri\\", shape.xmlNamespace);
}
else if (typeof shape.xmlNamespace === \\"object\\") {
    v869(this, \\"xmlNamespacePrefix\\", shape.xmlNamespace.prefix);
    v869(this, \\"xmlNamespaceUri\\", shape.xmlNamespace.uri);
} };
const v896 = {};
v896.constructor = v876;
v876.prototype = v896;
v875.structure = v876;
var v897;
var v898 = v878;
var v899 = v855;
v897 = function ListShape(shape, options) { var self = this, firstInit = !this.isShape; v898.apply(this, arguments); if (firstInit) {
    v868(this, \\"defaultValue\\", function () { return []; });
} if (shape.member) {
    v891(this, \\"member\\", function () { return v899.create(shape.member, options); });
} if (this.flattened) {
    var oldName = this.name;
    v891(this, \\"name\\", function () { return self.member.name || oldName; });
} };
const v900 = {};
v900.constructor = v897;
v897.prototype = v900;
v875.list = v897;
var v901;
var v902 = v855;
var v903 = v892;
v901 = function MapShape(shape, options) { var firstInit = !this.isShape; v898.apply(this, arguments); if (firstInit) {
    v869(this, \\"defaultValue\\", function () { return {}; });
    v869(this, \\"key\\", v890.create({ type: \\"string\\" }, options));
    v869(this, \\"value\\", v890.create({ type: \\"string\\" }, options));
} if (shape.key) {
    v895(this, \\"key\\", function () { return v902.create(shape.key, options); });
} if (shape.value) {
    v903(this, \\"value\\", function () { return v902.create(shape.value, options); });
} };
const v904 = {};
v904.constructor = v901;
v901.prototype = v904;
v875.map = v901;
var v905;
v905 = function BooleanShape() { v890.apply(this, arguments); this.toType = function (value) { if (typeof value === \\"boolean\\")
    return value; if (value === null || value === undefined)
    return null; return value === \\"true\\"; }; };
const v906 = {};
v906.constructor = v905;
v905.prototype = v906;
v875.boolean = v905;
var v907;
var v908 = v857;
v907 = function TimestampShape(shape) { var self = this; v902.apply(this, arguments); if (shape.timestampFormat) {
    v869(this, \\"timestampFormat\\", shape.timestampFormat);
}
else if (self.isTimestampFormatSet && this.timestampFormat) {
    v908(this, \\"timestampFormat\\", this.timestampFormat);
}
else if (this.location === \\"header\\") {
    v908(this, \\"timestampFormat\\", \\"rfc822\\");
}
else if (this.location === \\"querystring\\") {
    v908(this, \\"timestampFormat\\", \\"iso8601\\");
}
else if (this.api) {
    switch (this.api.protocol) {
        case \\"json\\":
        case \\"rest-json\\":
            v868(this, \\"timestampFormat\\", \\"unixTimestamp\\");
            break;
        case \\"rest-xml\\":
        case \\"query\\":
        case \\"ec2\\":
            v869(this, \\"timestampFormat\\", \\"iso8601\\");
            break;
    }
} this.toType = function (value) { if (value === null || value === undefined)
    return null; if (typeof value.toUTCString === \\"function\\")
    return value; return typeof value === \\"string\\" || typeof value === \\"number\\" ? v73.parseTimestamp(value) : null; }; this.toWireFormat = function (value) { return v73.format(value, self.timestampFormat); }; };
const v909 = {};
v909.constructor = v907;
v907.prototype = v909;
v875.timestamp = v907;
var v910;
const v912 = Number.parseFloat;
var v911 = v912;
v910 = function FloatShape() { v902.apply(this, arguments); this.toType = function (value) { if (value === null || value === undefined)
    return null; return v911(value); }; this.toWireFormat = this.toType; };
const v913 = {};
v913.constructor = v910;
v910.prototype = v913;
v875.float = v910;
var v914;
var v915 = v117;
v914 = function IntegerShape() { v902.apply(this, arguments); this.toType = function (value) { if (value === null || value === undefined)
    return null; return v915(value, 10); }; this.toWireFormat = this.toType; };
const v916 = {};
v916.constructor = v914;
v914.prototype = v916;
v875.integer = v914;
var v917;
var v918 = v163;
var v919 = v163;
v917 = function StringShape() { v890.apply(this, arguments); var nullLessProtocols = [\\"rest-xml\\", \\"query\\", \\"ec2\\"]; this.toType = function (value) { value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ? value || \\"\\" : value; if (this.isJsonValue) {
    return v918.parse(value);
} return value && typeof value.toString === \\"function\\" ? value.toString() : value; }; this.toWireFormat = function (value) { return this.isJsonValue ? v919.stringify(value) : value; }; };
const v920 = {};
v920.constructor = v917;
v917.prototype = v920;
v875.string = v917;
var v921;
var v923;
var v924 = v3;
var v925 = v3;
v923 = function BinaryShape() { v890.apply(this, arguments); this.toType = function (value) { var buf = v37.decode(value); if (this.isSensitive && v924.isNode() && typeof v925.Buffer.alloc === \\"function\\") {
    var secureBuf = v925.Buffer.alloc(buf.length, buf);
    buf.fill(0);
    buf = secureBuf;
} return buf; }; this.toWireFormat = v37.encode; };
const v926 = {};
v926.constructor = v923;
v923.prototype = v926;
var v922 = v923;
v921 = function Base64Shape() { v922.apply(this, arguments); };
const v927 = {};
v927.constructor = v921;
v921.prototype = v927;
v875.base64 = v921;
v875.binary = v923;
v855.types = v875;
var v928;
var v929 = v40;
v928 = function resolve(shape, options) { if (shape.shape) {
    var refShape = options.api.shapes[shape.shape];
    if (!refShape) {
        throw new v929(\\"Cannot find shape reference: \\" + shape.shape);
    }
    return refShape;
}
else {
    return null;
} };
const v930 = {};
v930.constructor = v928;
v928.prototype = v930;
v855.resolve = v928;
var v931;
var v932 = v31;
var v933 = v40;
v931 = function create(shape, options, memberName) { if (shape.isShape)
    return shape; var refShape = v902.resolve(shape, options); if (refShape) {
    var filteredKeys = v932.keys(shape);
    if (!options.documentation) {
        filteredKeys = filteredKeys.filter(function (name) { return !name.match(/documentation/); });
    }
    var InlineShape = function () { refShape.constructor.call(this, shape, options, memberName); };
    InlineShape.prototype = refShape;
    return new InlineShape();
}
else {
    if (!shape.type) {
        if (shape.members)
            shape.type = \\"structure\\";
        else if (shape.member)
            shape.type = \\"list\\";
        else if (shape.key)
            shape.type = \\"map\\";
        else
            shape.type = \\"string\\";
    }
    var origType = shape.type;
    if (v874[shape.type]) {
        shape.type = v874[shape.type];
    }
    if (v875[shape.type]) {
        return new v875[shape.type](shape, options, memberName);
    }
    else {
        throw new v933(\\"Unrecognized shape type: \\" + origType);
    }
} };
const v934 = {};
v934.constructor = v931;
v931.prototype = v934;
v855.create = v931;
const v935 = {};
v935.StructureShape = v876;
v935.ListShape = v897;
v935.MapShape = v901;
v935.StringShape = v917;
v935.BooleanShape = v905;
v935.Base64Shape = v921;
v855.shapes = v935;
var v854 = v855;
var v936 = v3;
const v937 = {};
var v938;
v938 = function XmlBuilder() { };
const v939 = {};
v939.constructor = v938;
var v940;
var v942;
v942 = function XmlNode(name, children) { if (children === void 0) {
    children = [];
} this.name = name; this.children = children; this.attributes = {}; };
const v943 = {};
v943.constructor = v942;
var v944;
v944 = function (name, value) { this.attributes[name] = value; return this; };
const v945 = {};
v945.constructor = v944;
v944.prototype = v945;
v943.addAttribute = v944;
var v946;
v946 = function (child) { this.children.push(child); return this; };
const v947 = {};
v947.constructor = v946;
v946.prototype = v947;
v943.addChildNode = v946;
var v948;
v948 = function (name) { delete this.attributes[name]; return this; };
const v949 = {};
v949.constructor = v948;
v948.prototype = v949;
v943.removeAttribute = v948;
var v950;
var v951 = v282;
var v952 = v31;
var v954;
v954 = function escapeAttribute(value) { return value.replace(/&/g, \\"&amp;\\").replace(/'/g, \\"&apos;\\").replace(/</g, \\"&lt;\\").replace(/>/g, \\"&gt;\\").replace(/\\"/g, \\"&quot;\\"); };
const v955 = {};
v955.constructor = v954;
v954.prototype = v955;
var v953 = v954;
v950 = function () { var hasChildren = v951(this.children.length); var xmlText = \\"<\\" + this.name; var attributes = this.attributes; for (var i = 0, attributeNames = v952.keys(attributes); i < attributeNames.length; i++) {
    var attributeName = attributeNames[i];
    var attribute = attributes[attributeName];
    if (typeof attribute !== \\"undefined\\" && attribute !== null) {
        xmlText += \\" \\" + attributeName + \\"=\\\\\\"\\" + v953(\\"\\" + attribute) + \\"\\\\\\"\\";
    }
} return xmlText += !hasChildren ? \\"/>\\" : \\">\\" + this.children.map(function (c) { return c.toString(); }).join(\\"\\") + \\"</\\" + this.name + \\">\\"; };
const v956 = {};
v956.constructor = v950;
v950.prototype = v956;
v943.toString = v950;
v942.prototype = v943;
var v941 = v942;
var v958;
v958 = function applyNamespaces(xml, shape, isRoot) { var uri, prefix = \\"xmlns\\"; if (shape.xmlNamespaceUri) {
    uri = shape.xmlNamespaceUri;
    if (shape.xmlNamespacePrefix)
        prefix += \\":\\" + shape.xmlNamespacePrefix;
}
else if (isRoot && shape.api.xmlNamespaceUri) {
    uri = shape.api.xmlNamespaceUri;
} if (uri)
    xml.addAttribute(prefix, uri); };
const v959 = {};
v959.constructor = v958;
v958.prototype = v959;
var v957 = v958;
var v961;
var v963;
var v964 = v3;
var v965 = v961;
var v966 = v942;
var v967 = v958;
var v968 = v961;
v963 = function serializeStructure(xml, params, shape) { v964.arrayEach(shape.memberNames, function (memberName) { var memberShape = shape.members[memberName]; if (memberShape.location !== \\"body\\")
    return; var value = params[memberName]; var name = memberShape.name; if (value !== undefined && value !== null) {
    if (memberShape.isXmlAttribute) {
        xml.addAttribute(name, value);
    }
    else if (memberShape.flattened) {
        v965(xml, value, memberShape);
    }
    else {
        var element = new v966(name);
        xml.addChildNode(element);
        v967(element, memberShape);
        v968(element, value, memberShape);
    }
} }); };
const v969 = {};
v969.constructor = v963;
v963.prototype = v969;
var v962 = v963;
var v971;
var v972 = v3;
var v973 = v942;
var v974 = v942;
v971 = function serializeMap(xml, map, shape) { var xmlKey = shape.key.name || \\"key\\"; var xmlValue = shape.value.name || \\"value\\"; v972.each(map, function (key, value) { var entry = new v973(shape.flattened ? shape.name : \\"entry\\"); xml.addChildNode(entry); var entryKey = new v974(xmlKey); var entryValue = new v941(xmlValue); entry.addChildNode(entryKey); entry.addChildNode(entryValue); v960(entryKey, key, shape.key); v960(entryValue, value, shape.value); }); };
const v975 = {};
v975.constructor = v971;
v971.prototype = v975;
var v970 = v971;
var v977;
var v978 = v3;
var v979 = v942;
var v980 = v961;
var v981 = v3;
var v982 = v942;
v977 = function serializeList(xml, list, shape) { if (shape.flattened) {
    v978.arrayEach(list, function (value) { var name = shape.member.name || shape.name; var element = new v979(name); xml.addChildNode(element); v980(element, value, shape.member); });
}
else {
    v981.arrayEach(list, function (value) { var name = shape.member.name || \\"member\\"; var element = new v982(name); xml.addChildNode(element); v980(element, value, shape.member); });
} };
const v983 = {};
v983.constructor = v977;
v977.prototype = v983;
var v976 = v977;
var v985;
var v987;
v987 = function XmlText(value) { this.value = value; };
const v988 = {};
v988.constructor = v987;
var v989;
var v991;
v991 = function escapeElement(value) { return value.replace(/&/g, \\"&amp;\\").replace(/</g, \\"&lt;\\").replace(/>/g, \\"&gt;\\").replace(/\\\\r/g, \\"&#x0D;\\").replace(/\\\\n/g, \\"&#x0A;\\").replace(/\\\\u0085/g, \\"&#x85;\\").replace(/\\\\u2028/, \\"&#x2028;\\"); };
const v992 = {};
v992.constructor = v991;
v991.prototype = v992;
var v990 = v991;
v989 = function () { return v990(\\"\\" + this.value); };
const v993 = {};
v993.constructor = v989;
v989.prototype = v993;
v988.toString = v989;
v987.prototype = v988;
var v986 = v987;
v985 = function serializeScalar(xml, value, shape) { xml.addChildNode(new v986(shape.toWireFormat(value))); };
const v994 = {};
v994.constructor = v985;
v985.prototype = v994;
var v984 = v985;
v961 = function serialize(xml, value, shape) { switch (shape.type) {
    case \\"structure\\": return v962(xml, value, shape);
    case \\"map\\": return v970(xml, value, shape);
    case \\"list\\": return v976(xml, value, shape);
    default: return v984(xml, value, shape);
} };
const v995 = {};
v995.constructor = v961;
v961.prototype = v995;
var v960 = v961;
v940 = function (params, shape, rootElement, noEmpty) { var xml = new v941(rootElement); v957(xml, shape, true); v960(xml, params, shape); return xml.children.length > 0 || noEmpty ? xml.toString() : \\"\\"; };
const v996 = {};
v996.constructor = v940;
v940.prototype = v996;
v939.toXML = v940;
v938.prototype = v939;
v937.Builder = v938;
var v997;
v997 = function NodeXmlParser() { };
const v998 = {};
v998.constructor = v997;
var v999;
const v1001 = Object.create(v646);
const v1002 = {};
const v1003 = {};
v1003.explicitCharkey = false;
v1003.trim = true;
v1003.normalize = true;
v1003.normalizeTags = false;
v1003.attrkey = \\"@\\";
v1003.charkey = \\"#\\";
v1003.explicitArray = false;
v1003.ignoreAttrs = false;
v1003.mergeAttrs = false;
v1003.explicitRoot = false;
v1003.validator = null;
v1003.xmlns = false;
v1003.explicitChildren = false;
v1003.childkey = \\"@@\\";
v1003.charsAsChildren = false;
v1003.includeWhiteChars = false;
v1003.async = false;
v1003.strict = true;
v1003.attrNameProcessors = null;
v1003.attrValueProcessors = null;
v1003.tagNameProcessors = null;
v1003.valueProcessors = null;
v1003.emptyTag = \\"\\";
v1002[\\"0.1\\"] = v1003;
const v1004 = {};
v1004.explicitCharkey = false;
v1004.trim = false;
v1004.normalize = false;
v1004.normalizeTags = false;
v1004.attrkey = \\"$\\";
v1004.charkey = \\"_\\";
v1004.explicitArray = true;
v1004.ignoreAttrs = false;
v1004.mergeAttrs = false;
v1004.explicitRoot = true;
v1004.validator = null;
v1004.xmlns = false;
v1004.explicitChildren = false;
v1004.preserveChildrenOrder = false;
v1004.childkey = \\"$$\\";
v1004.charsAsChildren = false;
v1004.includeWhiteChars = false;
v1004.async = false;
v1004.strict = true;
v1004.attrNameProcessors = null;
v1004.attrValueProcessors = null;
v1004.tagNameProcessors = null;
v1004.valueProcessors = null;
v1004.rootName = \\"root\\";
const v1005 = {};
v1005.version = \\"1.0\\";
v1005.encoding = \\"UTF-8\\";
v1005.standalone = true;
v1004.xmldec = v1005;
v1004.doctype = null;
const v1006 = {};
v1006.pretty = true;
v1006.indent = \\"  \\";
v1006.newline = \\"\\\\n\\";
v1004.renderOpts = v1006;
v1004.headless = false;
v1004.chunkSize = 10000;
v1004.emptyTag = \\"\\";
v1004.cdata = false;
v1002[\\"0.2\\"] = v1004;
v1001.defaults = v1002;
const v1007 = Object.create(v646);
var v1008;
v1008 = function (str) { return str.toLowerCase(); };
const v1009 = {};
v1009.constructor = v1008;
v1008.prototype = v1009;
v1007.normalize = v1008;
var v1010;
v1010 = function (str) { return str.charAt(0).toLowerCase() + str.slice(1); };
const v1011 = {};
v1011.constructor = v1010;
v1010.prototype = v1011;
v1007.firstCharLowerCase = v1010;
var v1012;
var v1013 = /(?!xmlns)^.*:/;
v1012 = function (str) { return str.replace(v1013, \\"\\"); };
const v1014 = {};
v1014.constructor = v1012;
v1012.prototype = v1014;
v1007.stripPrefix = v1012;
var v1015;
const v1017 = isNaN;
var v1016 = v1017;
var v1018 = v117;
var v1019 = v912;
v1015 = function (str) { if (!v1016(str)) {
    str = str % 1 === 0 ? v1018(str, 10) : v1019(str);
} return str; };
const v1020 = {};
v1020.constructor = v1015;
v1015.prototype = v1020;
v1007.parseNumbers = v1015;
var v1021;
v1021 = function (str) { if (/^(?:true|false)$/i.test(str)) {
    str = str.toLowerCase() === \\"true\\";
} return str; };
const v1022 = {};
v1022.constructor = v1021;
v1021.prototype = v1022;
v1007.parseBooleans = v1021;
v1001.processors = v1007;
var v1023;
v1023 = function ValidationError(message) { this.message = message; };
const v1024 = Error.prototype;
const v1025 = Object.create(v1024);
v1025.constructor = v1023;
v1023.prototype = v1025;
v1023.stackTraceLimit = 10;
const v1026 = Error.prepareStackTrace;
v1023.prepareStackTrace = v1026;
v1023.__super__ = v1024;
v1001.ValidationError = v1023;
var v1027;
var v1028 = v1002;
const v1030 = Atomics.constructor.prototype.hasOwnProperty;
var v1029 = v1030;
v1027 = function Builder(opts) { var key, ref, value; this.options = {}; ref = v1028[\\"0.2\\"]; for (key in ref) {
    if (!v1029.call(ref, key))
        continue;
    value = ref[key];
    this.options[key] = value;
} for (key in opts) {
    if (!v1029.call(opts, key))
        continue;
    value = opts[key];
    this.options[key] = value;
} };
const v1031 = {};
v1031.constructor = v1027;
var v1032;
var v1033 = v31;
var v1034 = v31;
var v1036;
v1036 = function (entry) { return typeof entry === \\"string\\" && (entry.indexOf(\\"&\\") >= 0 || entry.indexOf(\\">\\") >= 0 || entry.indexOf(\\"<\\") >= 0); };
const v1037 = {};
v1037.constructor = v1036;
v1036.prototype = v1037;
var v1035 = v1036;
var v1039;
var v1041;
v1041 = function (entry) { return entry.replace(\\"]]>\\", \\"]]]]><![CDATA[>\\"); };
const v1042 = {};
v1042.constructor = v1041;
v1041.prototype = v1042;
var v1040 = v1041;
v1039 = function (entry) { return \\"<![CDATA[\\" + (v1040(entry)) + \\"]]>\\"; };
const v1043 = {};
v1043.constructor = v1039;
v1039.prototype = v1043;
var v1038 = v1039;
var v1044 = v33;
var v1045 = v1030;
var v1046 = v1030;
var v1047 = v1036;
var v1048 = v1036;
const v1050 = Object.create(v646);
var v1051;
var v1052 = v40;
var v1054;
const v1056 = Array.prototype.slice;
var v1055 = v1056;
var v1058;
v1058 = function (val) { return !!val && v113.toString.call(val) === \\"[object Function]\\"; };
const v1059 = {};
v1059.constructor = v1058;
v1058.prototype = v1059;
var v1057 = v1058;
var v1060 = v31;
var v1061 = v31;
var v1062 = v1030;
v1054 = function () { var i, key, len, source, sources, target; target = arguments[0], sources = 2 <= arguments.length ? v1055.call(arguments, 1) : []; if (v1057(v1060.assign)) {
    v1061.assign.apply(null, arguments);
}
else {
    for (i = 0, len = sources.length; i < len; i++) {
        source = sources[i];
        if (source != null) {
            for (key in source) {
                if (!v1062.call(source, key))
                    continue;
                target[key] = source[key];
            }
        }
    }
} return target; };
const v1063 = {};
v1063.constructor = v1054;
v1054.prototype = v1063;
var v1053 = v1054;
var v1065;
var v1067;
v1067 = function XMLStringWriter(options) { XMLStringWriter.__super__.constructor.call(this, options); };
const v1068 = {};
var v1069;
var v1070 = v1030;
v1069 = function XMLWriterBase(options) { var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value; options || (options = {}); this.pretty = options.pretty || false; this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false; if (this.pretty) {
    this.indent = (ref1 = options.indent) != null ? ref1 : \\"  \\";
    this.newline = (ref2 = options.newline) != null ? ref2 : \\"\\\\n\\";
    this.offset = (ref3 = options.offset) != null ? ref3 : 0;
    this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;
}
else {
    this.indent = \\"\\";
    this.newline = \\"\\";
    this.offset = 0;
    this.dontprettytextnodes = 0;
} this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : \\"\\"; if (this.spacebeforeslash === true) {
    this.spacebeforeslash = \\" \\";
} this.newlinedefault = this.newline; this.prettydefault = this.pretty; ref6 = options.writer || {}; for (key in ref6) {
    if (!v1070.call(ref6, key))
        continue;
    value = ref6[key];
    this[key] = value;
} };
v1069.prototype = v1068;
v1068.constructor = v1069;
var v1071;
var v1072 = v1030;
v1071 = function (options) { var key, ref, value; options || (options = {}); if (\\"pretty\\" in options) {
    this.pretty = options.pretty;
} if (\\"allowEmpty\\" in options) {
    this.allowEmpty = options.allowEmpty;
} if (this.pretty) {
    this.indent = \\"indent\\" in options ? options.indent : \\"  \\";
    this.newline = \\"newline\\" in options ? options.newline : \\"\\\\n\\";
    this.offset = \\"offset\\" in options ? options.offset : 0;
    this.dontprettytextnodes = \\"dontprettytextnodes\\" in options ? options.dontprettytextnodes : 0;
}
else {
    this.indent = \\"\\";
    this.newline = \\"\\";
    this.offset = 0;
    this.dontprettytextnodes = 0;
} this.spacebeforeslash = \\"spacebeforeslash\\" in options ? options.spacebeforeslash : \\"\\"; if (this.spacebeforeslash === true) {
    this.spacebeforeslash = \\" \\";
} this.newlinedefault = this.newline; this.prettydefault = this.pretty; ref = options.writer || {}; for (key in ref) {
    if (!v1072.call(ref, key))
        continue;
    value = ref[key];
    this[key] = value;
} return this; };
const v1073 = {};
v1073.constructor = v1071;
v1071.prototype = v1073;
v1068.set = v1071;
var v1074;
var v1075 = v33;
v1074 = function (level) { var indent; if (this.pretty) {
    indent = (level || 0) + this.offset + 1;
    if (indent > 0) {
        return new v1075(indent).join(this.indent);
    }
    else {
        return \\"\\";
    }
}
else {
    return \\"\\";
} };
const v1076 = {};
v1076.constructor = v1074;
v1074.prototype = v1076;
v1068.space = v1074;
const v1077 = Object.create(v1068);
v1077.constructor = v1067;
var v1078;
var v1080;
var v1082;
v1082 = function (val) { var ref; return !!val && ((ref = typeof val) === \\"function\\" || ref === \\"object\\"); };
const v1083 = {};
v1083.constructor = v1082;
v1082.prototype = v1083;
var v1081 = v1082;
v1080 = function XMLDeclaration(parent, version, encoding, standalone) { var ref; XMLDeclaration.__super__.constructor.call(this, parent); if (v1081(version)) {
    ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;
} if (!version) {
    version = \\"1.0\\";
} this.version = this.stringify.xmlVersion(version); if (encoding != null) {
    this.encoding = this.stringify.xmlEncoding(encoding);
} if (standalone != null) {
    this.standalone = this.stringify.xmlStandalone(standalone);
} };
const v1084 = {};
var v1085;
var v1086 = null;
var v1087 = require;
var v1088 = require;
v1085 = function XMLNode(parent) { this.parent = parent; if (this.parent) {
    this.options = this.parent.options;
    this.stringify = this.parent.stringify;
} this.children = []; if (!v1086) {
    XMLElement = v1087(\\"./XMLElement\\");
    XMLCData = v1087(\\"./XMLCData\\");
    XMLComment = v1087(\\"./XMLComment\\");
    XMLDeclaration = v1088(\\"./XMLDeclaration\\");
    XMLDocType = v1088(\\"./XMLDocType\\");
    XMLRaw = v1088(\\"./XMLRaw\\");
    XMLText = v1088(\\"./XMLText\\");
    XMLProcessingInstruction = v1087(\\"./XMLProcessingInstruction\\");
} };
v1085.prototype = v1084;
v1084.constructor = v1085;
var v1089;
var v1090 = v1082;
var v1091 = v33;
var v1092 = v1058;
var v1093 = v1082;
var v1094 = v1030;
var v1095 = v1058;
var v1097;
var v1099;
var v1100 = v1058;
var v1101 = v33;
var v1102 = v33;
v1099 = function (val) { if (v1100(v1101.isArray)) {
    return v1102.isArray(val);
}
else {
    return v113.toString.call(val) === \\"[object Array]\\";
} };
const v1103 = {};
v1103.constructor = v1099;
v1099.prototype = v1103;
var v1098 = v1099;
var v1104 = v1030;
v1097 = function (val) { var key; if (v1098(val)) {
    return !val.length;
}
else {
    for (key in val) {
        if (!v1104.call(val, key))
            continue;
        return false;
    }
    return true;
} };
const v1105 = {};
v1105.constructor = v1097;
v1097.prototype = v1105;
var v1096 = v1097;
var v1106 = v1082;
var v1107 = v40;
v1089 = function (name, attributes, text) { var childNode, item, j, k, key, lastChild, len, len1, ref1, val; lastChild = null; if (attributes == null) {
    attributes = {};
} attributes = attributes.valueOf(); if (!v1090(attributes)) {
    ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
} if (name != null) {
    name = name.valueOf();
} if (v1091.isArray(name)) {
    for (j = 0, len = name.length; j < len; j++) {
        item = name[j];
        lastChild = this.element(item);
    }
}
else if (v1092(name)) {
    lastChild = this.element(name.apply());
}
else if (v1093(name)) {
    for (key in name) {
        if (!v1094.call(name, key))
            continue;
        val = name[key];
        if (v1095(val)) {
            val = val.apply();
        }
        if ((v1090(val)) && (v1096(val))) {
            val = null;
        }
        if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {
            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);
        }
        else if (!this.options.separateArrayItems && v1091.isArray(val)) {
            for (k = 0, len1 = val.length; k < len1; k++) {
                item = val[k];
                childNode = {};
                childNode[key] = item;
                lastChild = this.element(childNode);
            }
        }
        else if (v1106(val)) {
            lastChild = this.element(key);
            lastChild.element(val);
        }
        else {
            lastChild = this.element(key, val);
        }
    }
}
else {
    if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {
        lastChild = this.text(text);
    }
    else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {
        lastChild = this.cdata(text);
    }
    else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {
        lastChild = this.comment(text);
    }
    else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {
        lastChild = this.raw(text);
    }
    else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {
        lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);
    }
    else {
        lastChild = this.node(name, attributes, text);
    }
} if (lastChild == null) {
    throw new v1107(\\"Could not create any elements with: \\" + name);
} return lastChild; };
const v1108 = {};
v1108.constructor = v1089;
v1089.prototype = v1108;
v1084.element = v1089;
var v1109;
v1109 = function (name, attributes, text) { var child, i, removed; if (this.isRoot) {
    throw new v1107(\\"Cannot insert elements at root level\\");
} i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i); child = this.parent.element(name, attributes, text); v71.push.apply(this.parent.children, removed); return child; };
const v1110 = {};
v1110.constructor = v1109;
v1109.prototype = v1110;
v1084.insertBefore = v1109;
var v1111;
var v1112 = v40;
v1111 = function (name, attributes, text) { var child, i, removed; if (this.isRoot) {
    throw new v1112(\\"Cannot insert elements at root level\\");
} i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i + 1); child = this.parent.element(name, attributes, text); v71.push.apply(this.parent.children, removed); return child; };
const v1113 = {};
v1113.constructor = v1111;
v1111.prototype = v1113;
v1084.insertAfter = v1111;
var v1114;
var v1115 = v40;
v1114 = function () { var i, ref1; if (this.isRoot) {
    throw new v1115(\\"Cannot remove the root element\\");
} i = this.parent.children.indexOf(this); [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1; return this.parent; };
const v1116 = {};
v1116.constructor = v1114;
v1114.prototype = v1116;
v1084.remove = v1114;
var v1117;
v1117 = function (name, attributes, text) { var child, ref1; if (name != null) {
    name = name.valueOf();
} attributes || (attributes = {}); attributes = attributes.valueOf(); if (!v1090(attributes)) {
    ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
} child = new v1086(this, name, attributes); if (text != null) {
    child.text(text);
} this.children.push(child); return child; };
const v1118 = {};
v1118.constructor = v1117;
v1117.prototype = v1118;
v1084.node = v1117;
var v1119;
var v1120 = null;
v1119 = function (value) { var child; child = new v1120(this, value); this.children.push(child); return this; };
const v1121 = {};
v1121.constructor = v1119;
v1119.prototype = v1121;
v1084.text = v1119;
var v1122;
var v1123 = null;
v1122 = function (value) { var child; child = new v1123(this, value); this.children.push(child); return this; };
const v1124 = {};
v1124.constructor = v1122;
v1122.prototype = v1124;
v1084.cdata = v1122;
var v1125;
var v1126 = null;
v1125 = function (value) { var child; child = new v1126(this, value); this.children.push(child); return this; };
const v1127 = {};
v1127.constructor = v1125;
v1125.prototype = v1127;
v1084.comment = v1125;
var v1128;
v1128 = function (value) { var child, i, removed; i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i); child = this.parent.comment(value); v71.push.apply(this.parent.children, removed); return this; };
const v1129 = {};
v1129.constructor = v1128;
v1128.prototype = v1129;
v1084.commentBefore = v1128;
var v1130;
v1130 = function (value) { var child, i, removed; i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i + 1); child = this.parent.comment(value); v71.push.apply(this.parent.children, removed); return this; };
const v1131 = {};
v1131.constructor = v1130;
v1130.prototype = v1131;
v1084.commentAfter = v1130;
var v1132;
var v1133 = null;
v1132 = function (value) { var child; child = new v1133(this, value); this.children.push(child); return this; };
const v1134 = {};
v1134.constructor = v1132;
v1132.prototype = v1134;
v1084.raw = v1132;
var v1135;
var v1136 = v1082;
var v1137 = v1030;
var v1138 = null;
v1135 = function (target, value) { var insTarget, insValue, instruction, j, len; if (target != null) {
    target = target.valueOf();
} if (value != null) {
    value = value.valueOf();
} if (v1091.isArray(target)) {
    for (j = 0, len = target.length; j < len; j++) {
        insTarget = target[j];
        this.instruction(insTarget);
    }
}
else if (v1136(target)) {
    for (insTarget in target) {
        if (!v1137.call(target, insTarget))
            continue;
        insValue = target[insTarget];
        this.instruction(insTarget, insValue);
    }
}
else {
    if (v1095(value)) {
        value = value.apply();
    }
    instruction = new v1138(this, target, value);
    this.children.push(instruction);
} return this; };
const v1139 = {};
v1139.constructor = v1135;
v1135.prototype = v1139;
v1084.instruction = v1135;
var v1140;
v1140 = function (target, value) { var child, i, removed; i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i); child = this.parent.instruction(target, value); v71.push.apply(this.parent.children, removed); return this; };
const v1141 = {};
v1141.constructor = v1140;
v1140.prototype = v1141;
v1084.instructionBefore = v1140;
var v1142;
v1142 = function (target, value) { var child, i, removed; i = this.parent.children.indexOf(this); removed = this.parent.children.splice(i + 1); child = this.parent.instruction(target, value); v71.push.apply(this.parent.children, removed); return this; };
const v1143 = {};
v1143.constructor = v1142;
v1142.prototype = v1143;
v1084.instructionAfter = v1142;
var v1144;
var v1145 = null;
v1144 = function (version, encoding, standalone) { var doc, xmldec; doc = this.document(); xmldec = new v1145(doc, version, encoding, standalone); if (doc.children[0] instanceof v1145) {
    doc.children[0] = xmldec;
}
else {
    doc.children.unshift(xmldec);
} return doc.root() || doc; };
const v1146 = {};
v1146.constructor = v1144;
v1144.prototype = v1146;
v1084.declaration = v1144;
var v1147;
var v1148 = null;
v1147 = function (pubID, sysID) { var child, doc, doctype, i, j, k, len, len1, ref1, ref2; doc = this.document(); doctype = new v1148(doc, pubID, sysID); ref1 = doc.children; for (i = j = 0, len = ref1.length; j < len; i = ++j) {
    child = ref1[i];
    if (child instanceof v1148) {
        doc.children[i] = doctype;
        return doctype;
    }
} ref2 = doc.children; for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {
    child = ref2[i];
    if (child.isRoot) {
        doc.children.splice(i, 0, doctype);
        return doctype;
    }
} doc.children.push(doctype); return doctype; };
const v1149 = {};
v1149.constructor = v1147;
v1147.prototype = v1149;
v1084.doctype = v1147;
var v1150;
v1150 = function () { if (this.isRoot) {
    throw new v1107(\\"The root node has no parent. Use doc() if you need to get the document object.\\");
} return this.parent; };
const v1151 = {};
v1151.constructor = v1150;
v1150.prototype = v1151;
v1084.up = v1150;
var v1152;
v1152 = function () { var node; node = this; while (node) {
    if (node.isDocument) {
        return node.rootObject;
    }
    else if (node.isRoot) {
        return node;
    }
    else {
        node = node.parent;
    }
} };
const v1153 = {};
v1153.constructor = v1152;
v1152.prototype = v1153;
v1084.root = v1152;
var v1154;
v1154 = function () { var node; node = this; while (node) {
    if (node.isDocument) {
        return node;
    }
    else {
        node = node.parent;
    }
} };
const v1155 = {};
v1155.constructor = v1154;
v1154.prototype = v1155;
v1084.document = v1154;
var v1156;
v1156 = function (options) { return this.document().end(options); };
const v1157 = {};
v1157.constructor = v1156;
v1156.prototype = v1157;
v1084.end = v1156;
var v1158;
v1158 = function () { var i; i = this.parent.children.indexOf(this); if (i < 1) {
    throw new v1107(\\"Already at the first node\\");
} return this.parent.children[i - 1]; };
const v1159 = {};
v1159.constructor = v1158;
v1158.prototype = v1159;
v1084.prev = v1158;
var v1160;
v1160 = function () { var i; i = this.parent.children.indexOf(this); if (i === -1 || i === this.parent.children.length - 1) {
    throw new v1107(\\"Already at the last node\\");
} return this.parent.children[i + 1]; };
const v1161 = {};
v1161.constructor = v1160;
v1160.prototype = v1161;
v1084.next = v1160;
var v1162;
v1162 = function (doc) { var clonedRoot; clonedRoot = doc.root().clone(); clonedRoot.parent = this; clonedRoot.isRoot = false; this.children.push(clonedRoot); return this; };
const v1163 = {};
v1163.constructor = v1162;
v1162.prototype = v1163;
v1084.importDocument = v1162;
var v1164;
v1164 = function (name, attributes, text) { return this.element(name, attributes, text); };
const v1165 = {};
v1165.constructor = v1164;
v1164.prototype = v1165;
v1084.ele = v1164;
var v1166;
v1166 = function (name, attributes, text) { return this.node(name, attributes, text); };
const v1167 = {};
v1167.constructor = v1166;
v1166.prototype = v1167;
v1084.nod = v1166;
var v1168;
v1168 = function (value) { return this.text(value); };
const v1169 = {};
v1169.constructor = v1168;
v1168.prototype = v1169;
v1084.txt = v1168;
var v1170;
v1170 = function (value) { return this.cdata(value); };
const v1171 = {};
v1171.constructor = v1170;
v1170.prototype = v1171;
v1084.dat = v1170;
var v1172;
v1172 = function (value) { return this.comment(value); };
const v1173 = {};
v1173.constructor = v1172;
v1172.prototype = v1173;
v1084.com = v1172;
var v1174;
v1174 = function (target, value) { return this.instruction(target, value); };
const v1175 = {};
v1175.constructor = v1174;
v1174.prototype = v1175;
v1084.ins = v1174;
var v1176;
v1176 = function () { return this.document(); };
const v1177 = {};
v1177.constructor = v1176;
v1176.prototype = v1177;
v1084.doc = v1176;
var v1178;
v1178 = function (version, encoding, standalone) { return this.declaration(version, encoding, standalone); };
const v1179 = {};
v1179.constructor = v1178;
v1178.prototype = v1179;
v1084.dec = v1178;
var v1180;
v1180 = function (pubID, sysID) { return this.doctype(pubID, sysID); };
const v1181 = {};
v1181.constructor = v1180;
v1180.prototype = v1181;
v1084.dtd = v1180;
var v1182;
v1182 = function (name, attributes, text) { return this.element(name, attributes, text); };
const v1183 = {};
v1183.constructor = v1182;
v1182.prototype = v1183;
v1084.e = v1182;
var v1184;
v1184 = function (name, attributes, text) { return this.node(name, attributes, text); };
const v1185 = {};
v1185.constructor = v1184;
v1184.prototype = v1185;
v1084.n = v1184;
var v1186;
v1186 = function (value) { return this.text(value); };
const v1187 = {};
v1187.constructor = v1186;
v1186.prototype = v1187;
v1084.t = v1186;
var v1188;
v1188 = function (value) { return this.cdata(value); };
const v1189 = {};
v1189.constructor = v1188;
v1188.prototype = v1189;
v1084.d = v1188;
var v1190;
v1190 = function (value) { return this.comment(value); };
const v1191 = {};
v1191.constructor = v1190;
v1190.prototype = v1191;
v1084.c = v1190;
var v1192;
v1192 = function (value) { return this.raw(value); };
const v1193 = {};
v1193.constructor = v1192;
v1192.prototype = v1193;
v1084.r = v1192;
var v1194;
v1194 = function (target, value) { return this.instruction(target, value); };
const v1195 = {};
v1195.constructor = v1194;
v1194.prototype = v1195;
v1084.i = v1194;
var v1196;
v1196 = function () { return this.up(); };
const v1197 = {};
v1197.constructor = v1196;
v1196.prototype = v1197;
v1084.u = v1196;
var v1198;
v1198 = function (doc) { return this.importDocument(doc); };
const v1199 = {};
v1199.constructor = v1198;
v1198.prototype = v1199;
v1084.importXMLBuilder = v1198;
const v1200 = Object.create(v1084);
v1200.constructor = v1080;
var v1201;
v1201 = function (options) { return this.options.writer.set(options).declaration(this); };
const v1202 = {};
v1202.constructor = v1201;
v1201.prototype = v1202;
v1200.toString = v1201;
v1080.prototype = v1200;
v1080.__super__ = v1084;
var v1079 = v1080;
var v1204;
var v1205 = v1082;
v1204 = function XMLDocType(parent, pubID, sysID) { var ref, ref1; XMLDocType.__super__.constructor.call(this, parent); this.documentObject = parent; if (v1205(pubID)) {
    ref = pubID, pubID = ref.pubID, sysID = ref.sysID;
} if (sysID == null) {
    ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];
} if (pubID != null) {
    this.pubID = this.stringify.dtdPubID(pubID);
} if (sysID != null) {
    this.sysID = this.stringify.dtdSysID(sysID);
} };
const v1206 = Object.create(v1084);
v1206.constructor = v1204;
var v1207;
var v1209;
var v1210 = v40;
var v1211 = v33;
v1209 = function XMLDTDElement(parent, name, value) { XMLDTDElement.__super__.constructor.call(this, parent); if (name == null) {
    throw new v1210(\\"Missing DTD element name\\");
} if (!value) {
    value = \\"(#PCDATA)\\";
} if (v1211.isArray(value)) {
    value = \\"(\\" + value.join(\\",\\") + \\")\\";
} this.name = this.stringify.eleName(name); this.value = this.stringify.dtdElementValue(value); };
const v1212 = Object.create(v1084);
v1212.constructor = v1209;
var v1213;
v1213 = function (options) { return this.options.writer.set(options).dtdElement(this); };
const v1214 = {};
v1214.constructor = v1213;
v1213.prototype = v1214;
v1212.toString = v1213;
v1209.prototype = v1212;
v1209.__super__ = v1084;
var v1208 = v1209;
v1207 = function (name, value) { var child; child = new v1208(this, name, value); this.children.push(child); return this; };
const v1215 = {};
v1215.constructor = v1207;
v1207.prototype = v1215;
v1206.element = v1207;
var v1216;
var v1218;
var v1219 = v40;
var v1220 = v40;
var v1221 = v40;
var v1222 = v40;
var v1223 = v40;
v1218 = function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) { XMLDTDAttList.__super__.constructor.call(this, parent); if (elementName == null) {
    throw new v1219(\\"Missing DTD element name\\");
} if (attributeName == null) {
    throw new v1219(\\"Missing DTD attribute name\\");
} if (!attributeType) {
    throw new v1220(\\"Missing DTD attribute type\\");
} if (!defaultValueType) {
    throw new v1221(\\"Missing DTD attribute default\\");
} if (defaultValueType.indexOf(\\"#\\") !== 0) {
    defaultValueType = \\"#\\" + defaultValueType;
} if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {
    throw new v1222(\\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\\");
} if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {
    throw new v1223(\\"Default value only applies to #FIXED or #DEFAULT\\");
} this.elementName = this.stringify.eleName(elementName); this.attributeName = this.stringify.attName(attributeName); this.attributeType = this.stringify.dtdAttType(attributeType); this.defaultValue = this.stringify.dtdAttDefault(defaultValue); this.defaultValueType = defaultValueType; };
const v1224 = Object.create(v1084);
v1224.constructor = v1218;
var v1225;
v1225 = function (options) { return this.options.writer.set(options).dtdAttList(this); };
const v1226 = {};
v1226.constructor = v1225;
v1225.prototype = v1226;
v1224.toString = v1225;
v1218.prototype = v1224;
v1218.__super__ = v1084;
var v1217 = v1218;
v1216 = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { var child; child = new v1217(this, elementName, attributeName, attributeType, defaultValueType, defaultValue); this.children.push(child); return this; };
const v1227 = {};
v1227.constructor = v1216;
v1216.prototype = v1227;
v1206.attList = v1216;
var v1228;
var v1230;
var v1231 = v40;
var v1232 = v1082;
var v1233 = v40;
var v1234 = v40;
var v1235 = v40;
v1230 = function XMLDTDEntity(parent, pe, name, value) { XMLDTDEntity.__super__.constructor.call(this, parent); if (name == null) {
    throw new v1231(\\"Missing entity name\\");
} if (value == null) {
    throw new v1231(\\"Missing entity value\\");
} this.pe = !!pe; this.name = this.stringify.eleName(name); if (!v1232(value)) {
    this.value = this.stringify.dtdEntityValue(value);
}
else {
    if (!value.pubID && !value.sysID) {
        throw new v1233(\\"Public and/or system identifiers are required for an external entity\\");
    }
    if (value.pubID && !value.sysID) {
        throw new v1234(\\"System identifier is required for a public external entity\\");
    }
    if (value.pubID != null) {
        this.pubID = this.stringify.dtdPubID(value.pubID);
    }
    if (value.sysID != null) {
        this.sysID = this.stringify.dtdSysID(value.sysID);
    }
    if (value.nData != null) {
        this.nData = this.stringify.dtdNData(value.nData);
    }
    if (this.pe && this.nData) {
        throw new v1235(\\"Notation declaration is not allowed in a parameter entity\\");
    }
} };
const v1236 = Object.create(v1084);
v1236.constructor = v1230;
var v1237;
v1237 = function (options) { return this.options.writer.set(options).dtdEntity(this); };
const v1238 = {};
v1238.constructor = v1237;
v1237.prototype = v1238;
v1236.toString = v1237;
v1230.prototype = v1236;
v1230.__super__ = v1084;
var v1229 = v1230;
v1228 = function (name, value) { var child; child = new v1229(this, false, name, value); this.children.push(child); return this; };
const v1239 = {};
v1239.constructor = v1228;
v1228.prototype = v1239;
v1206.entity = v1228;
var v1240;
var v1241 = v1230;
v1240 = function (name, value) { var child; child = new v1241(this, true, name, value); this.children.push(child); return this; };
const v1242 = {};
v1242.constructor = v1240;
v1240.prototype = v1242;
v1206.pEntity = v1240;
var v1243;
var v1245;
var v1246 = v40;
v1245 = function XMLDTDNotation(parent, name, value) { XMLDTDNotation.__super__.constructor.call(this, parent); if (name == null) {
    throw new v1246(\\"Missing notation name\\");
} if (!value.pubID && !value.sysID) {
    throw new v1246(\\"Public or system identifiers are required for an external entity\\");
} this.name = this.stringify.eleName(name); if (value.pubID != null) {
    this.pubID = this.stringify.dtdPubID(value.pubID);
} if (value.sysID != null) {
    this.sysID = this.stringify.dtdSysID(value.sysID);
} };
const v1247 = Object.create(v1084);
v1247.constructor = v1245;
var v1248;
v1248 = function (options) { return this.options.writer.set(options).dtdNotation(this); };
const v1249 = {};
v1249.constructor = v1248;
v1248.prototype = v1249;
v1247.toString = v1248;
v1245.prototype = v1247;
v1245.__super__ = v1084;
var v1244 = v1245;
v1243 = function (name, value) { var child; child = new v1244(this, name, value); this.children.push(child); return this; };
const v1250 = {};
v1250.constructor = v1243;
v1243.prototype = v1250;
v1206.notation = v1243;
var v1251;
v1251 = function (options) { return this.options.writer.set(options).docType(this); };
const v1252 = {};
v1252.constructor = v1251;
v1251.prototype = v1252;
v1206.toString = v1251;
var v1253;
v1253 = function (name, value) { return this.element(name, value); };
const v1254 = {};
v1254.constructor = v1253;
v1253.prototype = v1254;
v1206.ele = v1253;
var v1255;
v1255 = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue); };
const v1256 = {};
v1256.constructor = v1255;
v1255.prototype = v1256;
v1206.att = v1255;
var v1257;
v1257 = function (name, value) { return this.entity(name, value); };
const v1258 = {};
v1258.constructor = v1257;
v1257.prototype = v1258;
v1206.ent = v1257;
var v1259;
v1259 = function (name, value) { return this.pEntity(name, value); };
const v1260 = {};
v1260.constructor = v1259;
v1259.prototype = v1260;
v1206.pent = v1259;
var v1261;
v1261 = function (name, value) { return this.notation(name, value); };
const v1262 = {};
v1262.constructor = v1261;
v1261.prototype = v1262;
v1206.not = v1261;
var v1263;
v1263 = function () { return this.root() || this.documentObject; };
const v1264 = {};
v1264.constructor = v1263;
v1263.prototype = v1264;
v1206.up = v1263;
v1204.prototype = v1206;
v1204.__super__ = v1084;
var v1203 = v1204;
var v1266;
var v1267 = v40;
v1266 = function XMLComment(parent, text) { XMLComment.__super__.constructor.call(this, parent); if (text == null) {
    throw new v1267(\\"Missing comment text\\");
} this.text = this.stringify.comment(text); };
const v1268 = Object.create(v1084);
v1268.constructor = v1266;
var v1269;
var v1270 = v31;
v1269 = function () { return v1270.create(this); };
const v1271 = {};
v1271.constructor = v1269;
v1269.prototype = v1271;
v1268.clone = v1269;
var v1272;
v1272 = function (options) { return this.options.writer.set(options).comment(this); };
const v1273 = {};
v1273.constructor = v1272;
v1272.prototype = v1273;
v1268.toString = v1272;
v1266.prototype = v1268;
v1266.__super__ = v1084;
var v1265 = v1266;
var v1275;
var v1276 = v40;
v1275 = function XMLProcessingInstruction(parent, target, value) { XMLProcessingInstruction.__super__.constructor.call(this, parent); if (target == null) {
    throw new v1276(\\"Missing instruction target\\");
} this.target = this.stringify.insTarget(target); if (value) {
    this.value = this.stringify.insValue(value);
} };
const v1277 = Object.create(v1084);
v1277.constructor = v1275;
var v1278;
var v1279 = v31;
v1278 = function () { return v1279.create(this); };
const v1280 = {};
v1280.constructor = v1278;
v1278.prototype = v1280;
v1277.clone = v1278;
var v1281;
v1281 = function (options) { return this.options.writer.set(options).processingInstruction(this); };
const v1282 = {};
v1282.constructor = v1281;
v1281.prototype = v1282;
v1277.toString = v1281;
v1275.prototype = v1277;
v1275.__super__ = v1084;
var v1274 = v1275;
v1078 = function (doc) { var child, i, len, r, ref; this.textispresent = false; r = \\"\\"; ref = doc.children; for (i = 0, len = ref.length; i < len; i++) {
    child = ref[i];
    r += (function () { switch (false) {
        case !(child instanceof v1079): return this.declaration(child);
        case !(child instanceof v1203): return this.docType(child);
        case !(child instanceof v1265): return this.comment(child);
        case !(child instanceof v1274): return this.processingInstruction(child);
        default: return this.element(child, 0);
    } }).call(this);
} if (this.pretty && r.slice(-this.newline.length) === this.newline) {
    r = r.slice(0, -this.newline.length);
} return r; };
const v1283 = {};
v1283.constructor = v1078;
v1078.prototype = v1283;
v1077.document = v1078;
var v1284;
v1284 = function (att) { return \\" \\" + att.name + \\"=\\\\\\"\\" + att.value + \\"\\\\\\"\\"; };
const v1285 = {};
v1285.constructor = v1284;
v1284.prototype = v1285;
v1077.attribute = v1284;
var v1286;
v1286 = function (node, level) { return this.space(level) + \\"<![CDATA[\\" + node.text + \\"]]>\\" + this.newline; };
const v1287 = {};
v1287.constructor = v1286;
v1286.prototype = v1287;
v1077.cdata = v1286;
var v1288;
v1288 = function (node, level) { return this.space(level) + \\"<!-- \\" + node.text + \\" -->\\" + this.newline; };
const v1289 = {};
v1289.constructor = v1288;
v1288.prototype = v1289;
v1077.comment = v1288;
var v1290;
v1290 = function (node, level) { var r; r = this.space(level); r += \\"<?xml version=\\\\\\"\\" + node.version + \\"\\\\\\"\\"; if (node.encoding != null) {
    r += \\" encoding=\\\\\\"\\" + node.encoding + \\"\\\\\\"\\";
} if (node.standalone != null) {
    r += \\" standalone=\\\\\\"\\" + node.standalone + \\"\\\\\\"\\";
} r += this.spacebeforeslash + \\"?>\\"; r += this.newline; return r; };
const v1291 = {};
v1291.constructor = v1290;
v1290.prototype = v1291;
v1077.declaration = v1290;
var v1292;
var v1293 = v1218;
var v1294 = v1209;
var v1295 = v1230;
var v1296 = v1245;
var v1298;
var v1299 = v40;
v1298 = function XMLCData(parent, text) { XMLCData.__super__.constructor.call(this, parent); if (text == null) {
    throw new v1299(\\"Missing CDATA text\\");
} this.text = this.stringify.cdata(text); };
const v1300 = Object.create(v1084);
v1300.constructor = v1298;
var v1301;
var v1302 = v31;
v1301 = function () { return v1302.create(this); };
const v1303 = {};
v1303.constructor = v1301;
v1301.prototype = v1303;
v1300.clone = v1301;
var v1304;
v1304 = function (options) { return this.options.writer.set(options).cdata(this); };
const v1305 = {};
v1305.constructor = v1304;
v1304.prototype = v1305;
v1300.toString = v1304;
v1298.prototype = v1300;
v1298.__super__ = v1084;
var v1297 = v1298;
var v1306 = v1266;
var v1307 = v1275;
var v1308 = v40;
v1292 = function (node, level) { var child, i, len, r, ref; level || (level = 0); r = this.space(level); r += \\"<!DOCTYPE \\" + node.root().name; if (node.pubID && node.sysID) {
    r += \\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
}
else if (node.sysID) {
    r += \\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
} if (node.children.length > 0) {
    r += \\" [\\";
    r += this.newline;
    ref = node.children;
    for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        r += (function () { switch (false) {
            case !(child instanceof v1293): return this.dtdAttList(child, level + 1);
            case !(child instanceof v1294): return this.dtdElement(child, level + 1);
            case !(child instanceof v1295): return this.dtdEntity(child, level + 1);
            case !(child instanceof v1296): return this.dtdNotation(child, level + 1);
            case !(child instanceof v1297): return this.cdata(child, level + 1);
            case !(child instanceof v1306): return this.comment(child, level + 1);
            case !(child instanceof v1307): return this.processingInstruction(child, level + 1);
            default: throw new v1308(\\"Unknown DTD node type: \\" + child.constructor.name);
        } }).call(this);
    }
    r += \\"]\\";
} r += this.spacebeforeslash + \\">\\"; r += this.newline; return r; };
const v1309 = {};
v1309.constructor = v1292;
v1292.prototype = v1309;
v1077.docType = v1292;
var v1310;
var v1311 = v1030;
var v1312 = v1298;
var v1313 = v1266;
var v1315;
var v1316 = v40;
v1315 = function XMLElement(parent, name, attributes) { XMLElement.__super__.constructor.call(this, parent); if (name == null) {
    throw new v1316(\\"Missing element name\\");
} this.name = this.stringify.eleName(name); this.attributes = {}; if (attributes != null) {
    this.attribute(attributes);
} if (parent.isDocument) {
    this.isRoot = true;
    this.documentObject = parent;
    parent.rootObject = this;
} };
const v1317 = Object.create(v1084);
v1317.constructor = v1315;
var v1318;
var v1319 = v31;
var v1320 = v1030;
v1318 = function () { var att, attName, clonedSelf, ref1; clonedSelf = v1319.create(this); if (clonedSelf.isRoot) {
    clonedSelf.documentObject = null;
} clonedSelf.attributes = {}; ref1 = this.attributes; for (attName in ref1) {
    if (!v1320.call(ref1, attName))
        continue;
    att = ref1[attName];
    clonedSelf.attributes[attName] = att.clone();
} clonedSelf.children = []; this.children.forEach(function (child) { var clonedChild; clonedChild = child.clone(); clonedChild.parent = clonedSelf; return clonedSelf.children.push(clonedChild); }); return clonedSelf; };
const v1321 = {};
v1321.constructor = v1318;
v1318.prototype = v1321;
v1317.clone = v1318;
var v1322;
var v1323 = v1082;
var v1324 = v1030;
var v1325 = v1058;
var v1327;
var v1328 = v40;
var v1329 = v40;
v1327 = function XMLAttribute(parent, name, value) { this.options = parent.options; this.stringify = parent.stringify; if (name == null) {
    throw new v1328(\\"Missing attribute name of element \\" + parent.name);
} if (value == null) {
    throw new v1329(\\"Missing attribute value for attribute \\" + name + \\" of element \\" + parent.name);
} this.name = this.stringify.attName(name); this.value = this.stringify.attValue(value); };
const v1330 = {};
v1330.constructor = v1327;
var v1331;
var v1332 = v31;
v1331 = function () { return v1332.create(this); };
const v1333 = {};
v1333.constructor = v1331;
v1331.prototype = v1333;
v1330.clone = v1331;
var v1334;
v1334 = function (options) { return this.options.writer.set(options).attribute(this); };
const v1335 = {};
v1335.constructor = v1334;
v1334.prototype = v1335;
v1330.toString = v1334;
v1327.prototype = v1330;
var v1326 = v1327;
v1322 = function (name, value) { var attName, attValue; if (name != null) {
    name = name.valueOf();
} if (v1323(name)) {
    for (attName in name) {
        if (!v1324.call(name, attName))
            continue;
        attValue = name[attName];
        this.attribute(attName, attValue);
    }
}
else {
    if (v1325(value)) {
        value = value.apply();
    }
    if (!this.options.skipNullAttributes || (value != null)) {
        this.attributes[name] = new v1326(this, name, value);
    }
} return this; };
const v1336 = {};
v1336.constructor = v1322;
v1322.prototype = v1336;
v1317.attribute = v1322;
var v1337;
var v1338 = v40;
var v1339 = v33;
v1337 = function (name) { var attName, i, len; if (name == null) {
    throw new v1338(\\"Missing attribute name\\");
} name = name.valueOf(); if (v1339.isArray(name)) {
    for (i = 0, len = name.length; i < len; i++) {
        attName = name[i];
        delete this.attributes[attName];
    }
}
else {
    delete this.attributes[name];
} return this; };
const v1340 = {};
v1340.constructor = v1337;
v1337.prototype = v1340;
v1317.removeAttribute = v1337;
var v1341;
v1341 = function (options) { return this.options.writer.set(options).element(this); };
const v1342 = {};
v1342.constructor = v1341;
v1341.prototype = v1342;
v1317.toString = v1341;
var v1343;
v1343 = function (name, value) { return this.attribute(name, value); };
const v1344 = {};
v1344.constructor = v1343;
v1343.prototype = v1344;
v1317.att = v1343;
var v1345;
v1345 = function (name, value) { return this.attribute(name, value); };
const v1346 = {};
v1346.constructor = v1345;
v1345.prototype = v1346;
v1317.a = v1345;
v1315.prototype = v1317;
v1315.__super__ = v1084;
var v1314 = v1315;
var v1348;
var v1349 = v40;
v1348 = function XMLRaw(parent, text) { XMLRaw.__super__.constructor.call(this, parent); if (text == null) {
    throw new v1349(\\"Missing raw text\\");
} this.value = this.stringify.raw(text); };
const v1350 = Object.create(v1084);
v1350.constructor = v1348;
var v1351;
var v1352 = v31;
v1351 = function () { return v1352.create(this); };
const v1353 = {};
v1353.constructor = v1351;
v1351.prototype = v1353;
v1350.clone = v1351;
var v1354;
v1354 = function (options) { return this.options.writer.set(options).raw(this); };
const v1355 = {};
v1355.constructor = v1354;
v1354.prototype = v1355;
v1350.toString = v1354;
v1348.prototype = v1350;
v1348.__super__ = v1084;
var v1347 = v1348;
var v1357;
var v1358 = v40;
v1357 = function XMLText(parent, text) { XMLText.__super__.constructor.call(this, parent); if (text == null) {
    throw new v1358(\\"Missing element text\\");
} this.value = this.stringify.eleText(text); };
const v1359 = Object.create(v1084);
v1359.constructor = v1357;
var v1360;
var v1361 = v31;
v1360 = function () { return v1361.create(this); };
const v1362 = {};
v1362.constructor = v1360;
v1360.prototype = v1362;
v1359.clone = v1360;
var v1363;
v1363 = function (options) { return this.options.writer.set(options).text(this); };
const v1364 = {};
v1364.constructor = v1363;
v1363.prototype = v1364;
v1359.toString = v1363;
v1357.prototype = v1359;
v1357.__super__ = v1084;
var v1356 = v1357;
var v1365 = v1275;
var v1366 = v40;
v1310 = function (node, level) { var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset; level || (level = 0); textispresentwasset = false; if (this.textispresent) {
    this.newline = \\"\\";
    this.pretty = false;
}
else {
    this.newline = this.newlinedefault;
    this.pretty = this.prettydefault;
} space = this.space(level); r = \\"\\"; r += space + \\"<\\" + node.name; ref = node.attributes; for (name in ref) {
    if (!v1311.call(ref, name))
        continue;
    att = ref[name];
    r += this.attribute(att);
} if (node.children.length === 0 || node.children.every(function (e) { return e.value === \\"\\"; })) {
    if (this.allowEmpty) {
        r += \\"></\\" + node.name + \\">\\" + this.newline;
    }
    else {
        r += this.spacebeforeslash + \\"/>\\" + this.newline;
    }
}
else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {
    r += \\">\\";
    r += node.children[0].value;
    r += \\"</\\" + node.name + \\">\\" + this.newline;
}
else {
    if (this.dontprettytextnodes) {
        ref1 = node.children;
        for (i = 0, len = ref1.length; i < len; i++) {
            child = ref1[i];
            if (child.value != null) {
                this.textispresent++;
                textispresentwasset = true;
                break;
            }
        }
    }
    if (this.textispresent) {
        this.newline = \\"\\";
        this.pretty = false;
        space = this.space(level);
    }
    r += \\">\\" + this.newline;
    ref2 = node.children;
    for (j = 0, len1 = ref2.length; j < len1; j++) {
        child = ref2[j];
        r += (function () { switch (false) {
            case !(child instanceof v1312): return this.cdata(child, level + 1);
            case !(child instanceof v1313): return this.comment(child, level + 1);
            case !(child instanceof v1314): return this.element(child, level + 1);
            case !(child instanceof v1347): return this.raw(child, level + 1);
            case !(child instanceof v1356): return this.text(child, level + 1);
            case !(child instanceof v1365): return this.processingInstruction(child, level + 1);
            default: throw new v1366(\\"Unknown XML node type: \\" + child.constructor.name);
        } }).call(this);
    }
    if (textispresentwasset) {
        this.textispresent--;
    }
    if (!this.textispresent) {
        this.newline = this.newlinedefault;
        this.pretty = this.prettydefault;
    }
    r += space + \\"</\\" + node.name + \\">\\" + this.newline;
} return r; };
const v1367 = {};
v1367.constructor = v1310;
v1310.prototype = v1367;
v1077.element = v1310;
var v1368;
v1368 = function (node, level) { var r; r = this.space(level) + \\"<?\\" + node.target; if (node.value) {
    r += \\" \\" + node.value;
} r += this.spacebeforeslash + \\"?>\\" + this.newline; return r; };
const v1369 = {};
v1369.constructor = v1368;
v1368.prototype = v1369;
v1077.processingInstruction = v1368;
var v1370;
v1370 = function (node, level) { return this.space(level) + node.value + this.newline; };
const v1371 = {};
v1371.constructor = v1370;
v1370.prototype = v1371;
v1077.raw = v1370;
var v1372;
v1372 = function (node, level) { return this.space(level) + node.value + this.newline; };
const v1373 = {};
v1373.constructor = v1372;
v1372.prototype = v1373;
v1077.text = v1372;
var v1374;
v1374 = function (node, level) { var r; r = this.space(level) + \\"<!ATTLIST \\" + node.elementName + \\" \\" + node.attributeName + \\" \\" + node.attributeType; if (node.defaultValueType !== \\"#DEFAULT\\") {
    r += \\" \\" + node.defaultValueType;
} if (node.defaultValue) {
    r += \\" \\\\\\"\\" + node.defaultValue + \\"\\\\\\"\\";
} r += this.spacebeforeslash + \\">\\" + this.newline; return r; };
const v1375 = {};
v1375.constructor = v1374;
v1374.prototype = v1375;
v1077.dtdAttList = v1374;
var v1376;
v1376 = function (node, level) { return this.space(level) + \\"<!ELEMENT \\" + node.name + \\" \\" + node.value + this.spacebeforeslash + \\">\\" + this.newline; };
const v1377 = {};
v1377.constructor = v1376;
v1376.prototype = v1377;
v1077.dtdElement = v1376;
var v1378;
v1378 = function (node, level) { var r; r = this.space(level) + \\"<!ENTITY\\"; if (node.pe) {
    r += \\" %\\";
} r += \\" \\" + node.name; if (node.value) {
    r += \\" \\\\\\"\\" + node.value + \\"\\\\\\"\\";
}
else {
    if (node.pubID && node.sysID) {
        r += \\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
    }
    else if (node.sysID) {
        r += \\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
    }
    if (node.nData) {
        r += \\" NDATA \\" + node.nData;
    }
} r += this.spacebeforeslash + \\">\\" + this.newline; return r; };
const v1379 = {};
v1379.constructor = v1378;
v1378.prototype = v1379;
v1077.dtdEntity = v1378;
var v1380;
v1380 = function (node, level) { var r; r = this.space(level) + \\"<!NOTATION \\" + node.name; if (node.pubID && node.sysID) {
    r += \\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
}
else if (node.pubID) {
    r += \\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\"\\";
}
else if (node.sysID) {
    r += \\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
} r += this.spacebeforeslash + \\">\\" + this.newline; return r; };
const v1381 = {};
v1381.constructor = v1380;
v1380.prototype = v1381;
v1077.dtdNotation = v1380;
var v1382;
var v1383 = v1315;
var v1384 = v1030;
v1382 = function (node, level) { var att, name, r, ref; level || (level = 0); if (node instanceof v1383) {
    r = this.space(level) + \\"<\\" + node.name;
    ref = node.attributes;
    for (name in ref) {
        if (!v1384.call(ref, name))
            continue;
        att = ref[name];
        r += this.attribute(att);
    }
    r += (node.children ? \\">\\" : \\"/>\\") + this.newline;
    return r;
}
else {
    r = this.space(level) + \\"<!DOCTYPE \\" + node.rootNodeName;
    if (node.pubID && node.sysID) {
        r += \\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
    }
    else if (node.sysID) {
        r += \\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\";
    }
    r += (node.children ? \\" [\\" : \\">\\") + this.newline;
    return r;
} };
const v1385 = {};
v1385.constructor = v1382;
v1382.prototype = v1385;
v1077.openNode = v1382;
var v1386;
var v1387 = v1204;
v1386 = function (node, level) { level || (level = 0); switch (false) {
    case !(node instanceof v1383): return this.space(level) + \\"</\\" + node.name + \\">\\" + this.newline;
    case !(node instanceof v1387): return this.space(level) + \\"]>\\" + this.newline;
} };
const v1388 = {};
v1388.constructor = v1386;
v1386.prototype = v1388;
v1077.closeNode = v1386;
v1067.prototype = v1077;
v1067.__super__ = v1068;
var v1066 = v1067;
var v1390;
var v1392;
v1392 = function (fn, me) { return function () { return fn.apply(me, arguments); }; };
const v1393 = {};
v1393.constructor = v1392;
v1392.prototype = v1393;
var v1391 = v1392;
var v1394 = v1030;
v1390 = function XMLStringifier(options) { this.assertLegalChar = v1391(this.assertLegalChar, this); var key, ref, value; options || (options = {}); this.noDoubleEncoding = options.noDoubleEncoding; ref = options.stringify || {}; for (key in ref) {
    if (!v1394.call(ref, key))
        continue;
    value = ref[key];
    this[key] = value;
} };
const v1395 = {};
v1395.constructor = v1390;
var v1396;
v1396 = function (val) { val = \\"\\" + val || \\"\\"; return this.assertLegalChar(val); };
const v1397 = {};
v1397.constructor = v1396;
v1396.prototype = v1397;
v1395.eleName = v1396;
var v1398;
v1398 = function (val) { val = \\"\\" + val || \\"\\"; return this.assertLegalChar(this.elEscape(val)); };
const v1399 = {};
v1399.constructor = v1398;
v1398.prototype = v1399;
v1395.eleText = v1398;
var v1400;
v1400 = function (val) { val = \\"\\" + val || \\"\\"; val = val.replace(\\"]]>\\", \\"]]]]><![CDATA[>\\"); return this.assertLegalChar(val); };
const v1401 = {};
v1401.constructor = v1400;
v1400.prototype = v1401;
v1395.cdata = v1400;
var v1402;
var v1403 = v40;
v1402 = function (val) { val = \\"\\" + val || \\"\\"; if (val.match(/--/)) {
    throw new v1403(\\"Comment text cannot contain double-hypen: \\" + val);
} return this.assertLegalChar(val); };
const v1404 = {};
v1404.constructor = v1402;
v1402.prototype = v1404;
v1395.comment = v1402;
var v1405;
v1405 = function (val) { return \\"\\" + val || \\"\\"; };
const v1406 = {};
v1406.constructor = v1405;
v1405.prototype = v1406;
v1395.raw = v1405;
var v1407;
v1407 = function (val) { return val = \\"\\" + val || \\"\\"; };
const v1408 = {};
v1408.constructor = v1407;
v1407.prototype = v1408;
v1395.attName = v1407;
var v1409;
v1409 = function (val) { val = \\"\\" + val || \\"\\"; return this.attEscape(val); };
const v1410 = {};
v1410.constructor = v1409;
v1409.prototype = v1410;
v1395.attValue = v1409;
var v1411;
v1411 = function (val) { return \\"\\" + val || \\"\\"; };
const v1412 = {};
v1412.constructor = v1411;
v1411.prototype = v1412;
v1395.insTarget = v1411;
var v1413;
v1413 = function (val) { val = \\"\\" + val || \\"\\"; if (val.match(/\\\\?>/)) {
    throw new v1403(\\"Invalid processing instruction value: \\" + val);
} return val; };
const v1414 = {};
v1414.constructor = v1413;
v1413.prototype = v1414;
v1395.insValue = v1413;
var v1415;
var v1416 = v40;
v1415 = function (val) { val = \\"\\" + val || \\"\\"; if (!val.match(/1\\\\.[0-9]+/)) {
    throw new v1416(\\"Invalid version number: \\" + val);
} return val; };
const v1417 = {};
v1417.constructor = v1415;
v1415.prototype = v1417;
v1395.xmlVersion = v1415;
var v1418;
var v1419 = v40;
v1418 = function (val) { val = \\"\\" + val || \\"\\"; if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {
    throw new v1419(\\"Invalid encoding: \\" + val);
} return val; };
const v1420 = {};
v1420.constructor = v1418;
v1418.prototype = v1420;
v1395.xmlEncoding = v1418;
var v1421;
v1421 = function (val) { if (val) {
    return \\"yes\\";
}
else {
    return \\"no\\";
} };
const v1422 = {};
v1422.constructor = v1421;
v1421.prototype = v1422;
v1395.xmlStandalone = v1421;
var v1423;
v1423 = function (val) { return \\"\\" + val || \\"\\"; };
const v1424 = {};
v1424.constructor = v1423;
v1423.prototype = v1424;
v1395.dtdPubID = v1423;
var v1425;
v1425 = function (val) { return \\"\\" + val || \\"\\"; };
const v1426 = {};
v1426.constructor = v1425;
v1425.prototype = v1426;
v1395.dtdSysID = v1425;
var v1427;
v1427 = function (val) { return \\"\\" + val || \\"\\"; };
const v1428 = {};
v1428.constructor = v1427;
v1427.prototype = v1428;
v1395.dtdElementValue = v1427;
var v1429;
v1429 = function (val) { return \\"\\" + val || \\"\\"; };
const v1430 = {};
v1430.constructor = v1429;
v1429.prototype = v1430;
v1395.dtdAttType = v1429;
var v1431;
v1431 = function (val) { if (val != null) {
    return \\"\\" + val || \\"\\";
}
else {
    return val;
} };
const v1432 = {};
v1432.constructor = v1431;
v1431.prototype = v1432;
v1395.dtdAttDefault = v1431;
var v1433;
v1433 = function (val) { return \\"\\" + val || \\"\\"; };
const v1434 = {};
v1434.constructor = v1433;
v1433.prototype = v1434;
v1395.dtdEntityValue = v1433;
var v1435;
v1435 = function (val) { return \\"\\" + val || \\"\\"; };
const v1436 = {};
v1436.constructor = v1435;
v1435.prototype = v1436;
v1395.dtdNData = v1435;
v1395.convertAttKey = \\"@\\";
v1395.convertPIKey = \\"?\\";
v1395.convertTextKey = \\"#text\\";
v1395.convertCDataKey = \\"#cdata\\";
v1395.convertCommentKey = \\"#comment\\";
v1395.convertRawKey = \\"#raw\\";
var v1437;
var v1438 = v40;
v1437 = function (str) { var res; res = str.match(/[\\\\0\\\\uFFFE\\\\uFFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]/); if (res) {
    throw new v1438(\\"Invalid character in string: \\" + str + \\" at index \\" + res.index);
} return str; };
const v1439 = {};
v1439.constructor = v1437;
v1437.prototype = v1439;
v1395.assertLegalChar = v1437;
var v1440;
v1440 = function (str) { var ampregex; ampregex = this.noDoubleEncoding ? /(?!&\\\\S+;)&/g : /&/g; return str.replace(ampregex, \\"&amp;\\").replace(/</g, \\"&lt;\\").replace(/>/g, \\"&gt;\\").replace(/\\\\r/g, \\"&#xD;\\"); };
const v1441 = {};
v1441.constructor = v1440;
v1440.prototype = v1441;
v1395.elEscape = v1440;
var v1442;
v1442 = function (str) { var ampregex; ampregex = this.noDoubleEncoding ? /(?!&\\\\S+;)&/g : /&/g; return str.replace(ampregex, \\"&amp;\\").replace(/</g, \\"&lt;\\").replace(/\\"/g, \\"&quot;\\").replace(/\\\\t/g, \\"&#x9;\\").replace(/\\\\n/g, \\"&#xA;\\").replace(/\\\\r/g, \\"&#xD;\\"); };
const v1443 = {};
v1443.constructor = v1442;
v1442.prototype = v1443;
v1395.attEscape = v1442;
v1390.prototype = v1395;
var v1389 = v1390;
v1065 = function XMLDocument(options) { XMLDocument.__super__.constructor.call(this, null); options || (options = {}); if (!options.writer) {
    options.writer = new v1066();
} this.options = options; this.stringify = new v1389(options); this.isDocument = true; };
const v1444 = Object.create(v1084);
v1444.constructor = v1065;
var v1445;
var v1447;
var v1448 = v1082;
var v1449 = v31;
const v1451 = Function;
var v1450 = v1451;
var v1452 = v1451;
v1447 = function (val) { var ctor, proto; return v1448(val) && (proto = v1449.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === \\"function\\") && (ctor instanceof ctor) && (v1450.prototype.toString.call(ctor) === v1452.prototype.toString.call(v1449)); };
const v1453 = {};
v1453.constructor = v1447;
v1447.prototype = v1453;
var v1446 = v1447;
v1445 = function (writer) { var writerOptions; if (!writer) {
    writer = this.options.writer;
}
else if (v1446(writer)) {
    writerOptions = writer;
    writer = this.options.writer.set(writerOptions);
} return writer.document(this); };
const v1454 = {};
v1454.constructor = v1445;
v1445.prototype = v1454;
v1444.end = v1445;
var v1455;
v1455 = function (options) { return this.options.writer.set(options).document(this); };
const v1456 = {};
v1456.constructor = v1455;
v1455.prototype = v1456;
v1444.toString = v1455;
v1065.prototype = v1444;
v1065.__super__ = v1084;
var v1064 = v1065;
v1051 = function (name, xmldec, doctype, options) { var doc, root; if (name == null) {
    throw new v1052(\\"Root element needs a name\\");
} options = v1053({}, xmldec, doctype, options); doc = new v1064(options); root = doc.element(name); if (!options.headless) {
    doc.declaration(options);
    if ((options.pubID != null) || (options.sysID != null)) {
        doc.doctype(options);
    }
} return root; };
const v1457 = {};
v1457.constructor = v1051;
v1051.prototype = v1457;
v1050.create = v1051;
var v1458;
var v1459 = v1058;
var v1461;
var v1462 = v1067;
var v1463 = v1447;
var v1464 = v1390;
v1461 = function XMLDocumentCB(options, onData, onEnd) { var writerOptions; options || (options = {}); if (!options.writer) {
    options.writer = new v1462(options);
}
else if (v1463(options.writer)) {
    writerOptions = options.writer;
    options.writer = new v1462(writerOptions);
} this.options = options; this.writer = options.writer; this.stringify = new v1464(options); this.onDataCallback = onData || function () { }; this.onEndCallback = onEnd || function () { }; this.currentNode = null; this.currentLevel = -1; this.openTags = {}; this.documentStarted = false; this.documentCompleted = false; this.root = null; };
const v1465 = {};
v1465.constructor = v1461;
var v1466;
var v1467 = v40;
var v1468 = v1082;
var v1469 = v1315;
v1466 = function (name, attributes, text) { var ref1; if (name == null) {
    throw new v1467(\\"Missing node name\\");
} if (this.root && this.currentLevel === -1) {
    throw new v1467(\\"Document can only have one root node\\");
} this.openCurrent(); name = name.valueOf(); if (attributes == null) {
    attributes = {};
} attributes = attributes.valueOf(); if (!v1468(attributes)) {
    ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
} this.currentNode = new v1469(this, name, attributes); this.currentNode.children = false; this.currentLevel++; this.openTags[this.currentLevel] = this.currentNode; if (text != null) {
    this.text(text);
} return this; };
const v1470 = {};
v1470.constructor = v1466;
v1466.prototype = v1470;
v1465.node = v1466;
var v1471;
var v1472 = v1204;
v1471 = function (name, attributes, text) { if (this.currentNode && this.currentNode instanceof v1472) {
    return this.dtdElement.apply(this, arguments);
}
else {
    return this.node(name, attributes, text);
} };
const v1473 = {};
v1473.constructor = v1471;
v1471.prototype = v1473;
v1465.element = v1471;
var v1474;
var v1475 = v40;
var v1476 = v1082;
var v1477 = v1030;
var v1478 = v1058;
var v1479 = v1327;
v1474 = function (name, value) { var attName, attValue; if (!this.currentNode || this.currentNode.children) {
    throw new v1475(\\"att() can only be used immediately after an ele() call in callback mode\\");
} if (name != null) {
    name = name.valueOf();
} if (v1476(name)) {
    for (attName in name) {
        if (!v1477.call(name, attName))
            continue;
        attValue = name[attName];
        this.attribute(attName, attValue);
    }
}
else {
    if (v1478(value)) {
        value = value.apply();
    }
    if (!this.options.skipNullAttributes || (value != null)) {
        this.currentNode.attributes[name] = new v1479(this, name, value);
    }
} return this; };
const v1480 = {};
v1480.constructor = v1474;
v1474.prototype = v1480;
v1465.attribute = v1474;
var v1481;
var v1482 = v1357;
v1481 = function (value) { var node; this.openCurrent(); node = new v1482(this, value); this.onData(this.writer.text(node, this.currentLevel + 1)); return this; };
const v1483 = {};
v1483.constructor = v1481;
v1481.prototype = v1483;
v1465.text = v1481;
var v1484;
var v1485 = v1298;
v1484 = function (value) { var node; this.openCurrent(); node = new v1485(this, value); this.onData(this.writer.cdata(node, this.currentLevel + 1)); return this; };
const v1486 = {};
v1486.constructor = v1484;
v1484.prototype = v1486;
v1465.cdata = v1484;
var v1487;
var v1488 = v1266;
v1487 = function (value) { var node; this.openCurrent(); node = new v1488(this, value); this.onData(this.writer.comment(node, this.currentLevel + 1)); return this; };
const v1489 = {};
v1489.constructor = v1487;
v1487.prototype = v1489;
v1465.comment = v1487;
var v1490;
var v1491 = v1348;
v1490 = function (value) { var node; this.openCurrent(); node = new v1491(this, value); this.onData(this.writer.raw(node, this.currentLevel + 1)); return this; };
const v1492 = {};
v1492.constructor = v1490;
v1490.prototype = v1492;
v1465.raw = v1490;
var v1493;
var v1494 = v33;
var v1495 = v1030;
var v1496 = v1058;
var v1497 = v1275;
v1493 = function (target, value) { var i, insTarget, insValue, len, node; this.openCurrent(); if (target != null) {
    target = target.valueOf();
} if (value != null) {
    value = value.valueOf();
} if (v1494.isArray(target)) {
    for (i = 0, len = target.length; i < len; i++) {
        insTarget = target[i];
        this.instruction(insTarget);
    }
}
else if (v1468(target)) {
    for (insTarget in target) {
        if (!v1495.call(target, insTarget))
            continue;
        insValue = target[insTarget];
        this.instruction(insTarget, insValue);
    }
}
else {
    if (v1496(value)) {
        value = value.apply();
    }
    node = new v1497(this, target, value);
    this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));
} return this; };
const v1498 = {};
v1498.constructor = v1493;
v1493.prototype = v1498;
v1465.instruction = v1493;
var v1499;
var v1500 = v1080;
v1499 = function (version, encoding, standalone) { var node; this.openCurrent(); if (this.documentStarted) {
    throw new v1467(\\"declaration() must be the first node\\");
} node = new v1500(this, version, encoding, standalone); this.onData(this.writer.declaration(node, this.currentLevel + 1)); return this; };
const v1501 = {};
v1501.constructor = v1499;
v1499.prototype = v1501;
v1465.declaration = v1499;
var v1502;
var v1503 = v40;
var v1504 = v1204;
v1502 = function (root, pubID, sysID) { this.openCurrent(); if (root == null) {
    throw new v1503(\\"Missing root node name\\");
} if (this.root) {
    throw new v1475(\\"dtd() must come before the root node\\");
} this.currentNode = new v1504(this, pubID, sysID); this.currentNode.rootNodeName = root; this.currentNode.children = false; this.currentLevel++; this.openTags[this.currentLevel] = this.currentNode; return this; };
const v1505 = {};
v1505.constructor = v1502;
v1502.prototype = v1505;
v1465.doctype = v1502;
var v1506;
var v1507 = v1209;
v1506 = function (name, value) { var node; this.openCurrent(); node = new v1507(this, name, value); this.onData(this.writer.dtdElement(node, this.currentLevel + 1)); return this; };
const v1508 = {};
v1508.constructor = v1506;
v1506.prototype = v1508;
v1465.dtdElement = v1506;
var v1509;
var v1510 = v1218;
v1509 = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { var node; this.openCurrent(); node = new v1510(this, elementName, attributeName, attributeType, defaultValueType, defaultValue); this.onData(this.writer.dtdAttList(node, this.currentLevel + 1)); return this; };
const v1511 = {};
v1511.constructor = v1509;
v1509.prototype = v1511;
v1465.attList = v1509;
var v1512;
var v1513 = v1230;
v1512 = function (name, value) { var node; this.openCurrent(); node = new v1513(this, false, name, value); this.onData(this.writer.dtdEntity(node, this.currentLevel + 1)); return this; };
const v1514 = {};
v1514.constructor = v1512;
v1512.prototype = v1514;
v1465.entity = v1512;
var v1515;
v1515 = function (name, value) { var node; this.openCurrent(); node = new v1513(this, true, name, value); this.onData(this.writer.dtdEntity(node, this.currentLevel + 1)); return this; };
const v1516 = {};
v1516.constructor = v1515;
v1515.prototype = v1516;
v1465.pEntity = v1515;
var v1517;
var v1518 = v1245;
v1517 = function (name, value) { var node; this.openCurrent(); node = new v1518(this, name, value); this.onData(this.writer.dtdNotation(node, this.currentLevel + 1)); return this; };
const v1519 = {};
v1519.constructor = v1517;
v1517.prototype = v1519;
v1465.notation = v1517;
var v1520;
var v1521 = v40;
v1520 = function () { if (this.currentLevel < 0) {
    throw new v1521(\\"The document node has no parent\\");
} if (this.currentNode) {
    if (this.currentNode.children) {
        this.closeNode(this.currentNode);
    }
    else {
        this.openNode(this.currentNode);
    }
    this.currentNode = null;
}
else {
    this.closeNode(this.openTags[this.currentLevel]);
} delete this.openTags[this.currentLevel]; this.currentLevel--; return this; };
const v1522 = {};
v1522.constructor = v1520;
v1520.prototype = v1522;
v1465.up = v1520;
var v1523;
v1523 = function () { while (this.currentLevel >= 0) {
    this.up();
} return this.onEnd(); };
const v1524 = {};
v1524.constructor = v1523;
v1523.prototype = v1524;
v1465.end = v1523;
var v1525;
v1525 = function () { if (this.currentNode) {
    this.currentNode.children = true;
    return this.openNode(this.currentNode);
} };
const v1526 = {};
v1526.constructor = v1525;
v1525.prototype = v1526;
v1465.openCurrent = v1525;
var v1527;
var v1528 = v1315;
v1527 = function (node) { if (!node.isOpen) {
    if (!this.root && this.currentLevel === 0 && node instanceof v1528) {
        this.root = node;
    }
    this.onData(this.writer.openNode(node, this.currentLevel));
    return node.isOpen = true;
} };
const v1529 = {};
v1529.constructor = v1527;
v1527.prototype = v1529;
v1465.openNode = v1527;
var v1530;
v1530 = function (node) { if (!node.isClosed) {
    this.onData(this.writer.closeNode(node, this.currentLevel));
    return node.isClosed = true;
} };
const v1531 = {};
v1531.constructor = v1530;
v1530.prototype = v1531;
v1465.closeNode = v1530;
var v1532;
v1532 = function (chunk) { this.documentStarted = true; return this.onDataCallback(chunk); };
const v1533 = {};
v1533.constructor = v1532;
v1532.prototype = v1533;
v1465.onData = v1532;
var v1534;
v1534 = function () { this.documentCompleted = true; return this.onEndCallback(); };
const v1535 = {};
v1535.constructor = v1534;
v1534.prototype = v1535;
v1465.onEnd = v1534;
var v1536;
v1536 = function () { return this.element.apply(this, arguments); };
const v1537 = {};
v1537.constructor = v1536;
v1536.prototype = v1537;
v1465.ele = v1536;
var v1538;
v1538 = function (name, attributes, text) { return this.node(name, attributes, text); };
const v1539 = {};
v1539.constructor = v1538;
v1538.prototype = v1539;
v1465.nod = v1538;
var v1540;
v1540 = function (value) { return this.text(value); };
const v1541 = {};
v1541.constructor = v1540;
v1540.prototype = v1541;
v1465.txt = v1540;
var v1542;
v1542 = function (value) { return this.cdata(value); };
const v1543 = {};
v1543.constructor = v1542;
v1542.prototype = v1543;
v1465.dat = v1542;
var v1544;
v1544 = function (value) { return this.comment(value); };
const v1545 = {};
v1545.constructor = v1544;
v1544.prototype = v1545;
v1465.com = v1544;
var v1546;
v1546 = function (target, value) { return this.instruction(target, value); };
const v1547 = {};
v1547.constructor = v1546;
v1546.prototype = v1547;
v1465.ins = v1546;
var v1548;
v1548 = function (version, encoding, standalone) { return this.declaration(version, encoding, standalone); };
const v1549 = {};
v1549.constructor = v1548;
v1548.prototype = v1549;
v1465.dec = v1548;
var v1550;
v1550 = function (root, pubID, sysID) { return this.doctype(root, pubID, sysID); };
const v1551 = {};
v1551.constructor = v1550;
v1550.prototype = v1551;
v1465.dtd = v1550;
var v1552;
v1552 = function (name, attributes, text) { return this.element(name, attributes, text); };
const v1553 = {};
v1553.constructor = v1552;
v1552.prototype = v1553;
v1465.e = v1552;
var v1554;
v1554 = function (name, attributes, text) { return this.node(name, attributes, text); };
const v1555 = {};
v1555.constructor = v1554;
v1554.prototype = v1555;
v1465.n = v1554;
var v1556;
v1556 = function (value) { return this.text(value); };
const v1557 = {};
v1557.constructor = v1556;
v1556.prototype = v1557;
v1465.t = v1556;
var v1558;
v1558 = function (value) { return this.cdata(value); };
const v1559 = {};
v1559.constructor = v1558;
v1558.prototype = v1559;
v1465.d = v1558;
var v1560;
v1560 = function (value) { return this.comment(value); };
const v1561 = {};
v1561.constructor = v1560;
v1560.prototype = v1561;
v1465.c = v1560;
var v1562;
v1562 = function (value) { return this.raw(value); };
const v1563 = {};
v1563.constructor = v1562;
v1562.prototype = v1563;
v1465.r = v1562;
var v1564;
v1564 = function (target, value) { return this.instruction(target, value); };
const v1565 = {};
v1565.constructor = v1564;
v1564.prototype = v1565;
v1465.i = v1564;
var v1566;
var v1567 = v1204;
v1566 = function () { if (this.currentNode && this.currentNode instanceof v1567) {
    return this.attList.apply(this, arguments);
}
else {
    return this.attribute.apply(this, arguments);
} };
const v1568 = {};
v1568.constructor = v1566;
v1566.prototype = v1568;
v1465.att = v1566;
var v1569;
v1569 = function () { if (this.currentNode && this.currentNode instanceof v1504) {
    return this.attList.apply(this, arguments);
}
else {
    return this.attribute.apply(this, arguments);
} };
const v1570 = {};
v1570.constructor = v1569;
v1569.prototype = v1570;
v1465.a = v1569;
var v1571;
v1571 = function (name, value) { return this.entity(name, value); };
const v1572 = {};
v1572.constructor = v1571;
v1571.prototype = v1572;
v1465.ent = v1571;
var v1573;
v1573 = function (name, value) { return this.pEntity(name, value); };
const v1574 = {};
v1574.constructor = v1573;
v1573.prototype = v1574;
v1465.pent = v1573;
var v1575;
v1575 = function (name, value) { return this.notation(name, value); };
const v1576 = {};
v1576.constructor = v1575;
v1575.prototype = v1576;
v1465.not = v1575;
v1461.prototype = v1465;
var v1460 = v1461;
v1458 = function (options, onData, onEnd) { var ref1; if (v1459(options)) {
    ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];
    options = {};
} if (onData) {
    return new v1460(options, onData, onEnd);
}
else {
    return new v1064(options);
} };
const v1577 = {};
v1577.constructor = v1458;
v1458.prototype = v1577;
v1050.begin = v1458;
var v1578;
var v1579 = v1067;
v1578 = function (options) { return new v1579(options); };
const v1580 = {};
v1580.constructor = v1578;
v1578.prototype = v1580;
v1050.stringWriter = v1578;
var v1581;
var v1583;
v1583 = function XMLStreamWriter(stream, options) { XMLStreamWriter.__super__.constructor.call(this, options); this.stream = stream; };
const v1584 = Object.create(v1068);
v1584.constructor = v1583;
var v1585;
var v1586 = v1080;
var v1587 = v1204;
var v1588 = v1266;
var v1589 = v1275;
v1585 = function (doc) { var child, i, j, len, len1, ref, ref1, results; ref = doc.children; for (i = 0, len = ref.length; i < len; i++) {
    child = ref[i];
    child.isLastRootNode = false;
} doc.children[doc.children.length - 1].isLastRootNode = true; ref1 = doc.children; results = []; for (j = 0, len1 = ref1.length; j < len1; j++) {
    child = ref1[j];
    switch (false) {
        case !(child instanceof v1586):
            results.push(this.declaration(child));
            break;
        case !(child instanceof v1587):
            results.push(this.docType(child));
            break;
        case !(child instanceof v1588):
            results.push(this.comment(child));
            break;
        case !(child instanceof v1589):
            results.push(this.processingInstruction(child));
            break;
        default: results.push(this.element(child));
    }
} return results; };
const v1590 = {};
v1590.constructor = v1585;
v1585.prototype = v1590;
v1584.document = v1585;
var v1591;
v1591 = function (att) { return this.stream.write(\\" \\" + att.name + \\"=\\\\\\"\\" + att.value + \\"\\\\\\"\\"); };
const v1592 = {};
v1592.constructor = v1591;
v1591.prototype = v1592;
v1584.attribute = v1591;
var v1593;
v1593 = function (node, level) { return this.stream.write(this.space(level) + \\"<![CDATA[\\" + node.text + \\"]]>\\" + this.endline(node)); };
const v1594 = {};
v1594.constructor = v1593;
v1593.prototype = v1594;
v1584.cdata = v1593;
var v1595;
v1595 = function (node, level) { return this.stream.write(this.space(level) + \\"<!-- \\" + node.text + \\" -->\\" + this.endline(node)); };
const v1596 = {};
v1596.constructor = v1595;
v1595.prototype = v1596;
v1584.comment = v1595;
var v1597;
v1597 = function (node, level) { this.stream.write(this.space(level)); this.stream.write(\\"<?xml version=\\\\\\"\\" + node.version + \\"\\\\\\"\\"); if (node.encoding != null) {
    this.stream.write(\\" encoding=\\\\\\"\\" + node.encoding + \\"\\\\\\"\\");
} if (node.standalone != null) {
    this.stream.write(\\" standalone=\\\\\\"\\" + node.standalone + \\"\\\\\\"\\");
} this.stream.write(this.spacebeforeslash + \\"?>\\"); return this.stream.write(this.endline(node)); };
const v1598 = {};
v1598.constructor = v1597;
v1597.prototype = v1598;
v1584.declaration = v1597;
var v1599;
var v1600 = v1218;
var v1601 = v1209;
var v1602 = v1230;
var v1603 = v1245;
var v1604 = v1298;
var v1605 = v1266;
var v1606 = v1275;
var v1607 = v40;
v1599 = function (node, level) { var child, i, len, ref; level || (level = 0); this.stream.write(this.space(level)); this.stream.write(\\"<!DOCTYPE \\" + node.root().name); if (node.pubID && node.sysID) {
    this.stream.write(\\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
}
else if (node.sysID) {
    this.stream.write(\\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
} if (node.children.length > 0) {
    this.stream.write(\\" [\\");
    this.stream.write(this.endline(node));
    ref = node.children;
    for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        switch (false) {
            case !(child instanceof v1600):
                this.dtdAttList(child, level + 1);
                break;
            case !(child instanceof v1601):
                this.dtdElement(child, level + 1);
                break;
            case !(child instanceof v1602):
                this.dtdEntity(child, level + 1);
                break;
            case !(child instanceof v1603):
                this.dtdNotation(child, level + 1);
                break;
            case !(child instanceof v1604):
                this.cdata(child, level + 1);
                break;
            case !(child instanceof v1605):
                this.comment(child, level + 1);
                break;
            case !(child instanceof v1606):
                this.processingInstruction(child, level + 1);
                break;
            default: throw new v1607(\\"Unknown DTD node type: \\" + child.constructor.name);
        }
    }
    this.stream.write(\\"]\\");
} this.stream.write(this.spacebeforeslash + \\">\\"); return this.stream.write(this.endline(node)); };
const v1608 = {};
v1608.constructor = v1599;
v1599.prototype = v1608;
v1584.docType = v1599;
var v1609;
var v1610 = v1030;
var v1611 = v1298;
var v1612 = v1266;
var v1613 = v1315;
var v1614 = v1348;
var v1615 = v1357;
var v1616 = v40;
v1609 = function (node, level) { var att, child, i, len, name, ref, ref1, space; level || (level = 0); space = this.space(level); this.stream.write(space + \\"<\\" + node.name); ref = node.attributes; for (name in ref) {
    if (!v1610.call(ref, name))
        continue;
    att = ref[name];
    this.attribute(att);
} if (node.children.length === 0 || node.children.every(function (e) { return e.value === \\"\\"; })) {
    if (this.allowEmpty) {
        this.stream.write(\\"></\\" + node.name + \\">\\");
    }
    else {
        this.stream.write(this.spacebeforeslash + \\"/>\\");
    }
}
else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {
    this.stream.write(\\">\\");
    this.stream.write(node.children[0].value);
    this.stream.write(\\"</\\" + node.name + \\">\\");
}
else {
    this.stream.write(\\">\\" + this.newline);
    ref1 = node.children;
    for (i = 0, len = ref1.length; i < len; i++) {
        child = ref1[i];
        switch (false) {
            case !(child instanceof v1611):
                this.cdata(child, level + 1);
                break;
            case !(child instanceof v1612):
                this.comment(child, level + 1);
                break;
            case !(child instanceof v1613):
                this.element(child, level + 1);
                break;
            case !(child instanceof v1614):
                this.raw(child, level + 1);
                break;
            case !(child instanceof v1615):
                this.text(child, level + 1);
                break;
            case !(child instanceof v1606):
                this.processingInstruction(child, level + 1);
                break;
            default: throw new v1616(\\"Unknown XML node type: \\" + child.constructor.name);
        }
    }
    this.stream.write(space + \\"</\\" + node.name + \\">\\");
} return this.stream.write(this.endline(node)); };
const v1617 = {};
v1617.constructor = v1609;
v1609.prototype = v1617;
v1584.element = v1609;
var v1618;
v1618 = function (node, level) { this.stream.write(this.space(level) + \\"<?\\" + node.target); if (node.value) {
    this.stream.write(\\" \\" + node.value);
} return this.stream.write(this.spacebeforeslash + \\"?>\\" + this.endline(node)); };
const v1619 = {};
v1619.constructor = v1618;
v1618.prototype = v1619;
v1584.processingInstruction = v1618;
var v1620;
v1620 = function (node, level) { return this.stream.write(this.space(level) + node.value + this.endline(node)); };
const v1621 = {};
v1621.constructor = v1620;
v1620.prototype = v1621;
v1584.raw = v1620;
var v1622;
v1622 = function (node, level) { return this.stream.write(this.space(level) + node.value + this.endline(node)); };
const v1623 = {};
v1623.constructor = v1622;
v1622.prototype = v1623;
v1584.text = v1622;
var v1624;
v1624 = function (node, level) { this.stream.write(this.space(level) + \\"<!ATTLIST \\" + node.elementName + \\" \\" + node.attributeName + \\" \\" + node.attributeType); if (node.defaultValueType !== \\"#DEFAULT\\") {
    this.stream.write(\\" \\" + node.defaultValueType);
} if (node.defaultValue) {
    this.stream.write(\\" \\\\\\"\\" + node.defaultValue + \\"\\\\\\"\\");
} return this.stream.write(this.spacebeforeslash + \\">\\" + this.endline(node)); };
const v1625 = {};
v1625.constructor = v1624;
v1624.prototype = v1625;
v1584.dtdAttList = v1624;
var v1626;
v1626 = function (node, level) { this.stream.write(this.space(level) + \\"<!ELEMENT \\" + node.name + \\" \\" + node.value); return this.stream.write(this.spacebeforeslash + \\">\\" + this.endline(node)); };
const v1627 = {};
v1627.constructor = v1626;
v1626.prototype = v1627;
v1584.dtdElement = v1626;
var v1628;
v1628 = function (node, level) { this.stream.write(this.space(level) + \\"<!ENTITY\\"); if (node.pe) {
    this.stream.write(\\" %\\");
} this.stream.write(\\" \\" + node.name); if (node.value) {
    this.stream.write(\\" \\\\\\"\\" + node.value + \\"\\\\\\"\\");
}
else {
    if (node.pubID && node.sysID) {
        this.stream.write(\\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
    }
    else if (node.sysID) {
        this.stream.write(\\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
    }
    if (node.nData) {
        this.stream.write(\\" NDATA \\" + node.nData);
    }
} return this.stream.write(this.spacebeforeslash + \\">\\" + this.endline(node)); };
const v1629 = {};
v1629.constructor = v1628;
v1628.prototype = v1629;
v1584.dtdEntity = v1628;
var v1630;
v1630 = function (node, level) { this.stream.write(this.space(level) + \\"<!NOTATION \\" + node.name); if (node.pubID && node.sysID) {
    this.stream.write(\\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\" \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
}
else if (node.pubID) {
    this.stream.write(\\" PUBLIC \\\\\\"\\" + node.pubID + \\"\\\\\\"\\");
}
else if (node.sysID) {
    this.stream.write(\\" SYSTEM \\\\\\"\\" + node.sysID + \\"\\\\\\"\\");
} return this.stream.write(this.spacebeforeslash + \\">\\" + this.endline(node)); };
const v1631 = {};
v1631.constructor = v1630;
v1630.prototype = v1631;
v1584.dtdNotation = v1630;
var v1632;
v1632 = function (node) { if (!node.isLastRootNode) {
    return this.newline;
}
else {
    return \\"\\";
} };
const v1633 = {};
v1633.constructor = v1632;
v1632.prototype = v1633;
v1584.endline = v1632;
v1583.prototype = v1584;
v1583.__super__ = v1068;
var v1582 = v1583;
v1581 = function (stream, options) { return new v1582(stream, options); };
const v1634 = {};
v1634.constructor = v1581;
v1581.prototype = v1634;
v1050.streamWriter = v1581;
var v1049 = v1050;
v1032 = function (rootObj) { var attrkey, charkey, render, rootElement, rootName; attrkey = this.options.attrkey; charkey = this.options.charkey; if ((v1033.keys(rootObj).length === 1) && (this.options.rootName === v1028[\\"0.2\\"].rootName)) {
    rootName = v1034.keys(rootObj)[0];
    rootObj = rootObj[rootName];
}
else {
    rootName = this.options.rootName;
} render = (function (_this) { return function (element, obj) { var attr, child, entry, index, key, value; if (typeof obj !== \\"object\\") {
    if (_this.options.cdata && v1035(obj)) {
        element.raw(v1038(obj));
    }
    else {
        element.txt(obj);
    }
}
else if (v1044.isArray(obj)) {
    for (index in obj) {
        if (!v1045.call(obj, index))
            continue;
        child = obj[index];
        for (key in child) {
            entry = child[key];
            element = render(element.ele(key), entry).up();
        }
    }
}
else {
    for (key in obj) {
        if (!v1046.call(obj, key))
            continue;
        child = obj[key];
        if (key === attrkey) {
            if (typeof child === \\"object\\") {
                for (attr in child) {
                    value = child[attr];
                    element = element.att(attr, value);
                }
            }
        }
        else if (key === charkey) {
            if (_this.options.cdata && v1047(child)) {
                element = element.raw(v1038(child));
            }
            else {
                element = element.txt(child);
            }
        }
        else if (v1044.isArray(child)) {
            for (index in child) {
                if (!v1045.call(child, index))
                    continue;
                entry = child[index];
                if (typeof entry === \\"string\\") {
                    if (_this.options.cdata && v1035(entry)) {
                        element = element.ele(key).raw(v1038(entry)).up();
                    }
                    else {
                        element = element.ele(key, entry).up();
                    }
                }
                else {
                    element = render(element.ele(key), entry).up();
                }
            }
        }
        else if (typeof child === \\"object\\") {
            element = render(element.ele(key), child).up();
        }
        else {
            if (typeof child === \\"string\\" && _this.options.cdata && v1048(child)) {
                element = element.ele(key).raw(v1038(child)).up();
            }
            else {
                if (child == null) {
                    child = \\"\\";
                }
                element = element.ele(key, child.toString()).up();
            }
        }
    }
} return element; }; })(this); rootElement = v1049.create(rootName, this.options.xmldec, this.options.doctype, { headless: this.options.headless, allowSurrogateChars: this.options.allowSurrogateChars }); return render(rootElement, rootObj).end(this.options.renderOpts); };
const v1635 = {};
v1635.constructor = v1032;
v1032.prototype = v1635;
v1031.buildObject = v1032;
v1027.prototype = v1031;
v1001.Builder = v1027;
var v1636;
var v1638;
v1638 = function (fn, me) { return function () { return fn.apply(me, arguments); }; };
const v1639 = {};
v1639.constructor = v1638;
v1638.prototype = v1639;
var v1637 = v1638;
var v1640 = v1638;
var v1641 = v1638;
var v1642 = v1638;
const v1644 = Object.create(v646);
v1644.Parser = v1636;
var v1645;
var v1646 = v1644;
v1645 = function (str, a, b) { var cb, options, parser; if (b != null) {
    if (typeof b === \\"function\\") {
        cb = b;
    }
    if (typeof a === \\"object\\") {
        options = a;
    }
}
else {
    if (typeof a === \\"function\\") {
        cb = a;
    }
    options = {};
} parser = new v1646.Parser(options); return parser.parseString(str, cb); };
const v1647 = {};
v1647.constructor = v1645;
v1645.prototype = v1647;
v1644.parseString = v1645;
var v1643 = v1644;
var v1648 = v1644;
var v1649 = v1002;
var v1650 = v1030;
var v1651 = v1007;
v1636 = function Parser(opts) { this.parseString = v1637(this.parseString, this); this.reset = v1640(this.reset, this); this.assignOrPush = v1641(this.assignOrPush, this); this.processAsync = v1642(this.processAsync, this); var key, ref, value; if (!(this instanceof v1643.Parser)) {
    return new v1648.Parser(opts);
} this.options = {}; ref = v1649[\\"0.2\\"]; for (key in ref) {
    if (!v1650.call(ref, key))
        continue;
    value = ref[key];
    this.options[key] = value;
} for (key in opts) {
    if (!v1650.call(opts, key))
        continue;
    value = opts[key];
    this.options[key] = value;
} if (this.options.xmlns) {
    this.options.xmlnskey = this.options.attrkey + \\"ns\\";
} if (this.options.normalizeTags) {
    if (!this.options.tagNameProcessors) {
        this.options.tagNameProcessors = [];
    }
    this.options.tagNameProcessors.unshift(v1651.normalize);
} this.reset(); };
const v1652 = process.__signal_exit_emitter__.constructor.prototype;
const v1653 = Object.create(v1652);
v1653.constructor = v1636;
var v1654;
const v1656 = require(\\"timers\\").setImmediate;
var v1655 = v1656;
v1654 = function () { var chunk, err; try {
    if (this.remaining.length <= this.options.chunkSize) {
        chunk = this.remaining;
        this.remaining = \\"\\";
        this.saxParser = this.saxParser.write(chunk);
        return this.saxParser.close();
    }
    else {
        chunk = this.remaining.substr(0, this.options.chunkSize);
        this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);
        this.saxParser = this.saxParser.write(chunk);
        return v1655(this.processAsync);
    }
}
catch (error1) {
    err = error1;
    if (!this.saxParser.errThrown) {
        this.saxParser.errThrown = true;
        return this.emit(err);
    }
} };
const v1657 = {};
v1657.constructor = v1654;
v1654.prototype = v1657;
v1653.processAsync = v1654;
var v1658;
var v1659 = v33;
v1658 = function (obj, key, newValue) { if (!(key in obj)) {
    if (!this.options.explicitArray) {
        return obj[key] = newValue;
    }
    else {
        return obj[key] = [newValue];
    }
}
else {
    if (!(obj[key] instanceof v1659)) {
        obj[key] = [obj[key]];
    }
    return obj[key].push(newValue);
} };
const v1660 = {};
v1660.constructor = v1658;
v1658.prototype = v1660;
v1653.assignOrPush = v1658;
var v1661;
const v1663 = Object.create(v646);
var v1664;
var v1666;
var v1668;
const v1670 = [];
v1670.push(\\"comment\\", \\"sgmlDecl\\", \\"textNode\\", \\"tagName\\", \\"doctype\\", \\"procInstName\\", \\"procInstBody\\", \\"entity\\", \\"attribName\\", \\"attribValue\\", \\"cdata\\", \\"script\\");
var v1669 = v1670;
v1668 = function clearBuffers(parser) { for (var i = 0, l = 12; i < l; i++) {
    parser[v1669[i]] = \\"\\";
} };
const v1671 = {};
v1671.constructor = v1668;
v1668.prototype = v1671;
var v1667 = v1668;
var v1672 = v31;
const v1673 = {};
v1673.amp = \\"&\\";
v1673.gt = \\">\\";
v1673.lt = \\"<\\";
v1673.quot = \\"\\\\\\"\\";
v1673.apos = \\"'\\";
var v1674 = v31;
const v1675 = {};
v1675.amp = \\"&\\";
v1675.gt = \\">\\";
v1675.lt = \\"<\\";
v1675.quot = \\"\\\\\\"\\";
v1675.apos = \\"'\\";
v1675.AElig = \\"\\\\u00C6\\";
v1675.Aacute = \\"\\\\u00C1\\";
v1675.Acirc = \\"\\\\u00C2\\";
v1675.Agrave = \\"\\\\u00C0\\";
v1675.Aring = \\"\\\\u00C5\\";
v1675.Atilde = \\"\\\\u00C3\\";
v1675.Auml = \\"\\\\u00C4\\";
v1675.Ccedil = \\"\\\\u00C7\\";
v1675.ETH = \\"\\\\u00D0\\";
v1675.Eacute = \\"\\\\u00C9\\";
v1675.Ecirc = \\"\\\\u00CA\\";
v1675.Egrave = \\"\\\\u00C8\\";
v1675.Euml = \\"\\\\u00CB\\";
v1675.Iacute = \\"\\\\u00CD\\";
v1675.Icirc = \\"\\\\u00CE\\";
v1675.Igrave = \\"\\\\u00CC\\";
v1675.Iuml = \\"\\\\u00CF\\";
v1675.Ntilde = \\"\\\\u00D1\\";
v1675.Oacute = \\"\\\\u00D3\\";
v1675.Ocirc = \\"\\\\u00D4\\";
v1675.Ograve = \\"\\\\u00D2\\";
v1675.Oslash = \\"\\\\u00D8\\";
v1675.Otilde = \\"\\\\u00D5\\";
v1675.Ouml = \\"\\\\u00D6\\";
v1675.THORN = \\"\\\\u00DE\\";
v1675.Uacute = \\"\\\\u00DA\\";
v1675.Ucirc = \\"\\\\u00DB\\";
v1675.Ugrave = \\"\\\\u00D9\\";
v1675.Uuml = \\"\\\\u00DC\\";
v1675.Yacute = \\"\\\\u00DD\\";
v1675.aacute = \\"\\\\u00E1\\";
v1675.acirc = \\"\\\\u00E2\\";
v1675.aelig = \\"\\\\u00E6\\";
v1675.agrave = \\"\\\\u00E0\\";
v1675.aring = \\"\\\\u00E5\\";
v1675.atilde = \\"\\\\u00E3\\";
v1675.auml = \\"\\\\u00E4\\";
v1675.ccedil = \\"\\\\u00E7\\";
v1675.eacute = \\"\\\\u00E9\\";
v1675.ecirc = \\"\\\\u00EA\\";
v1675.egrave = \\"\\\\u00E8\\";
v1675.eth = \\"\\\\u00F0\\";
v1675.euml = \\"\\\\u00EB\\";
v1675.iacute = \\"\\\\u00ED\\";
v1675.icirc = \\"\\\\u00EE\\";
v1675.igrave = \\"\\\\u00EC\\";
v1675.iuml = \\"\\\\u00EF\\";
v1675.ntilde = \\"\\\\u00F1\\";
v1675.oacute = \\"\\\\u00F3\\";
v1675.ocirc = \\"\\\\u00F4\\";
v1675.ograve = \\"\\\\u00F2\\";
v1675.oslash = \\"\\\\u00F8\\";
v1675.otilde = \\"\\\\u00F5\\";
v1675.ouml = \\"\\\\u00F6\\";
v1675.szlig = \\"\\\\u00DF\\";
v1675.thorn = \\"\\\\u00FE\\";
v1675.uacute = \\"\\\\u00FA\\";
v1675.ucirc = \\"\\\\u00FB\\";
v1675.ugrave = \\"\\\\u00F9\\";
v1675.uuml = \\"\\\\u00FC\\";
v1675.yacute = \\"\\\\u00FD\\";
v1675.yuml = \\"\\\\u00FF\\";
v1675.copy = \\"\\\\u00A9\\";
v1675.reg = \\"\\\\u00AE\\";
v1675.nbsp = \\"\\\\u00A0\\";
v1675.iexcl = \\"\\\\u00A1\\";
v1675.cent = \\"\\\\u00A2\\";
v1675.pound = \\"\\\\u00A3\\";
v1675.curren = \\"\\\\u00A4\\";
v1675.yen = \\"\\\\u00A5\\";
v1675.brvbar = \\"\\\\u00A6\\";
v1675.sect = \\"\\\\u00A7\\";
v1675.uml = \\"\\\\u00A8\\";
v1675.ordf = \\"\\\\u00AA\\";
v1675.laquo = \\"\\\\u00AB\\";
v1675.not = \\"\\\\u00AC\\";
v1675.shy = \\"\\\\u00AD\\";
v1675.macr = \\"\\\\u00AF\\";
v1675.deg = \\"\\\\u00B0\\";
v1675.plusmn = \\"\\\\u00B1\\";
v1675.sup1 = \\"\\\\u00B9\\";
v1675.sup2 = \\"\\\\u00B2\\";
v1675.sup3 = \\"\\\\u00B3\\";
v1675.acute = \\"\\\\u00B4\\";
v1675.micro = \\"\\\\u00B5\\";
v1675.para = \\"\\\\u00B6\\";
v1675.middot = \\"\\\\u00B7\\";
v1675.cedil = \\"\\\\u00B8\\";
v1675.ordm = \\"\\\\u00BA\\";
v1675.raquo = \\"\\\\u00BB\\";
v1675.frac14 = \\"\\\\u00BC\\";
v1675.frac12 = \\"\\\\u00BD\\";
v1675.frac34 = \\"\\\\u00BE\\";
v1675.iquest = \\"\\\\u00BF\\";
v1675.times = \\"\\\\u00D7\\";
v1675.divide = \\"\\\\u00F7\\";
v1675.OElig = \\"\\\\u0152\\";
v1675.oelig = \\"\\\\u0153\\";
v1675.Scaron = \\"\\\\u0160\\";
v1675.scaron = \\"\\\\u0161\\";
v1675.Yuml = \\"\\\\u0178\\";
v1675.fnof = \\"\\\\u0192\\";
v1675.circ = \\"\\\\u02C6\\";
v1675.tilde = \\"\\\\u02DC\\";
v1675.Alpha = \\"\\\\u0391\\";
v1675.Beta = \\"\\\\u0392\\";
v1675.Gamma = \\"\\\\u0393\\";
v1675.Delta = \\"\\\\u0394\\";
v1675.Epsilon = \\"\\\\u0395\\";
v1675.Zeta = \\"\\\\u0396\\";
v1675.Eta = \\"\\\\u0397\\";
v1675.Theta = \\"\\\\u0398\\";
v1675.Iota = \\"\\\\u0399\\";
v1675.Kappa = \\"\\\\u039A\\";
v1675.Lambda = \\"\\\\u039B\\";
v1675.Mu = \\"\\\\u039C\\";
v1675.Nu = \\"\\\\u039D\\";
v1675.Xi = \\"\\\\u039E\\";
v1675.Omicron = \\"\\\\u039F\\";
v1675.Pi = \\"\\\\u03A0\\";
v1675.Rho = \\"\\\\u03A1\\";
v1675.Sigma = \\"\\\\u03A3\\";
v1675.Tau = \\"\\\\u03A4\\";
v1675.Upsilon = \\"\\\\u03A5\\";
v1675.Phi = \\"\\\\u03A6\\";
v1675.Chi = \\"\\\\u03A7\\";
v1675.Psi = \\"\\\\u03A8\\";
v1675.Omega = \\"\\\\u03A9\\";
v1675.alpha = \\"\\\\u03B1\\";
v1675.beta = \\"\\\\u03B2\\";
v1675.gamma = \\"\\\\u03B3\\";
v1675.delta = \\"\\\\u03B4\\";
v1675.epsilon = \\"\\\\u03B5\\";
v1675.zeta = \\"\\\\u03B6\\";
v1675.eta = \\"\\\\u03B7\\";
v1675.theta = \\"\\\\u03B8\\";
v1675.iota = \\"\\\\u03B9\\";
v1675.kappa = \\"\\\\u03BA\\";
v1675.lambda = \\"\\\\u03BB\\";
v1675.mu = \\"\\\\u03BC\\";
v1675.nu = \\"\\\\u03BD\\";
v1675.xi = \\"\\\\u03BE\\";
v1675.omicron = \\"\\\\u03BF\\";
v1675.pi = \\"\\\\u03C0\\";
v1675.rho = \\"\\\\u03C1\\";
v1675.sigmaf = \\"\\\\u03C2\\";
v1675.sigma = \\"\\\\u03C3\\";
v1675.tau = \\"\\\\u03C4\\";
v1675.upsilon = \\"\\\\u03C5\\";
v1675.phi = \\"\\\\u03C6\\";
v1675.chi = \\"\\\\u03C7\\";
v1675.psi = \\"\\\\u03C8\\";
v1675.omega = \\"\\\\u03C9\\";
v1675.thetasym = \\"\\\\u03D1\\";
v1675.upsih = \\"\\\\u03D2\\";
v1675.piv = \\"\\\\u03D6\\";
v1675.ensp = \\"\\\\u2002\\";
v1675.emsp = \\"\\\\u2003\\";
v1675.thinsp = \\"\\\\u2009\\";
v1675.zwnj = \\"\\\\u200C\\";
v1675.zwj = \\"\\\\u200D\\";
v1675.lrm = \\"\\\\u200E\\";
v1675.rlm = \\"\\\\u200F\\";
v1675.ndash = \\"\\\\u2013\\";
v1675.mdash = \\"\\\\u2014\\";
v1675.lsquo = \\"\\\\u2018\\";
v1675.rsquo = \\"\\\\u2019\\";
v1675.sbquo = \\"\\\\u201A\\";
v1675.ldquo = \\"\\\\u201C\\";
v1675.rdquo = \\"\\\\u201D\\";
v1675.bdquo = \\"\\\\u201E\\";
v1675.dagger = \\"\\\\u2020\\";
v1675.Dagger = \\"\\\\u2021\\";
v1675.bull = \\"\\\\u2022\\";
v1675.hellip = \\"\\\\u2026\\";
v1675.permil = \\"\\\\u2030\\";
v1675.prime = \\"\\\\u2032\\";
v1675.Prime = \\"\\\\u2033\\";
v1675.lsaquo = \\"\\\\u2039\\";
v1675.rsaquo = \\"\\\\u203A\\";
v1675.oline = \\"\\\\u203E\\";
v1675.frasl = \\"\\\\u2044\\";
v1675.euro = \\"\\\\u20AC\\";
v1675.image = \\"\\\\u2111\\";
v1675.weierp = \\"\\\\u2118\\";
v1675.real = \\"\\\\u211C\\";
v1675.trade = \\"\\\\u2122\\";
v1675.alefsym = \\"\\\\u2135\\";
v1675.larr = \\"\\\\u2190\\";
v1675.uarr = \\"\\\\u2191\\";
v1675.rarr = \\"\\\\u2192\\";
v1675.darr = \\"\\\\u2193\\";
v1675.harr = \\"\\\\u2194\\";
v1675.crarr = \\"\\\\u21B5\\";
v1675.lArr = \\"\\\\u21D0\\";
v1675.uArr = \\"\\\\u21D1\\";
v1675.rArr = \\"\\\\u21D2\\";
v1675.dArr = \\"\\\\u21D3\\";
v1675.hArr = \\"\\\\u21D4\\";
v1675.forall = \\"\\\\u2200\\";
v1675.part = \\"\\\\u2202\\";
v1675.exist = \\"\\\\u2203\\";
v1675.empty = \\"\\\\u2205\\";
v1675.nabla = \\"\\\\u2207\\";
v1675.isin = \\"\\\\u2208\\";
v1675.notin = \\"\\\\u2209\\";
v1675.ni = \\"\\\\u220B\\";
v1675.prod = \\"\\\\u220F\\";
v1675.sum = \\"\\\\u2211\\";
v1675.minus = \\"\\\\u2212\\";
v1675.lowast = \\"\\\\u2217\\";
v1675.radic = \\"\\\\u221A\\";
v1675.prop = \\"\\\\u221D\\";
v1675.infin = \\"\\\\u221E\\";
v1675.ang = \\"\\\\u2220\\";
v1675.and = \\"\\\\u2227\\";
v1675.or = \\"\\\\u2228\\";
v1675.cap = \\"\\\\u2229\\";
v1675.cup = \\"\\\\u222A\\";
v1675.int = \\"\\\\u222B\\";
v1675.there4 = \\"\\\\u2234\\";
v1675.sim = \\"\\\\u223C\\";
v1675.cong = \\"\\\\u2245\\";
v1675.asymp = \\"\\\\u2248\\";
v1675.ne = \\"\\\\u2260\\";
v1675.equiv = \\"\\\\u2261\\";
v1675.le = \\"\\\\u2264\\";
v1675.ge = \\"\\\\u2265\\";
v1675.sub = \\"\\\\u2282\\";
v1675.sup = \\"\\\\u2283\\";
v1675.nsub = \\"\\\\u2284\\";
v1675.sube = \\"\\\\u2286\\";
v1675.supe = \\"\\\\u2287\\";
v1675.oplus = \\"\\\\u2295\\";
v1675.otimes = \\"\\\\u2297\\";
v1675.perp = \\"\\\\u22A5\\";
v1675.sdot = \\"\\\\u22C5\\";
v1675.lceil = \\"\\\\u2308\\";
v1675.rceil = \\"\\\\u2309\\";
v1675.lfloor = \\"\\\\u230A\\";
v1675.rfloor = \\"\\\\u230B\\";
v1675.lang = \\"\\\\u2329\\";
v1675.rang = \\"\\\\u232A\\";
v1675.loz = \\"\\\\u25CA\\";
v1675.spades = \\"\\\\u2660\\";
v1675.clubs = \\"\\\\u2663\\";
v1675.hearts = \\"\\\\u2665\\";
v1675.diams = \\"\\\\u2666\\";
const v1677 = {};
v1677.xml = \\"http://www.w3.org/XML/1998/namespace\\";
v1677.xmlns = \\"http://www.w3.org/2000/xmlns/\\";
var v1676 = v1677;
var v1679;
v1679 = function emit(parser, event, data) { parser[event] && parser[event](data); };
const v1680 = {};
v1680.constructor = v1679;
v1679.prototype = v1680;
var v1678 = v1679;
v1666 = function SAXParser(strict, opt) { if (!(this instanceof SAXParser)) {
    return new SAXParser(strict, opt);
} var parser = this; v1667(parser); parser.q = parser.c = \\"\\"; parser.bufferCheckPosition = 65536; parser.opt = opt || {}; parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags; parser.looseCase = parser.opt.lowercase ? \\"toLowerCase\\" : \\"toUpperCase\\"; parser.tags = []; parser.closed = parser.closedRoot = parser.sawRoot = false; parser.tag = parser.error = null; parser.strict = !!strict; parser.noscript = !!(strict || parser.opt.noscript); parser.state = 0; parser.strictEntities = parser.opt.strictEntities; parser.ENTITIES = parser.strictEntities ? v1672.create(v1673) : v1674.create(v1675); parser.attribList = []; if (parser.opt.xmlns) {
    parser.ns = v1674.create(v1676);
} parser.trackPosition = parser.opt.position !== false; if (parser.trackPosition) {
    parser.position = parser.line = parser.column = 0;
} v1678(parser, \\"onready\\"); };
const v1681 = {};
var v1682;
var v1684;
var v1686;
var v1687 = v1666;
var v1688 = v40;
var v1690;
var v1692;
var v1694;
v1694 = function textopts(opt, text) { if (opt.trim)
    text = text.trim(); if (opt.normalize)
    text = text.replace(/\\\\s+/g, \\" \\"); return text; };
const v1695 = {};
v1695.constructor = v1694;
v1694.prototype = v1695;
var v1693 = v1694;
var v1696 = v1679;
v1692 = function closeText(parser) { parser.textNode = v1693(parser.opt, parser.textNode); if (parser.textNode)
    v1696(parser, \\"ontext\\", parser.textNode); parser.textNode = \\"\\"; };
const v1697 = {};
v1697.constructor = v1692;
v1692.prototype = v1697;
var v1691 = v1692;
var v1698 = v40;
var v1699 = v1679;
v1690 = function error(parser, er) { v1691(parser); if (parser.trackPosition) {
    er += \\"\\\\nLine: \\" + parser.line + \\"\\\\nColumn: \\" + parser.column + \\"\\\\nChar: \\" + parser.c;
} er = new v1698(er); parser.error = er; v1699(parser, \\"onerror\\", er); return parser; };
const v1700 = {};
v1700.constructor = v1690;
v1690.prototype = v1700;
var v1689 = v1690;
v1686 = function strictFail(parser, message) { if (typeof parser !== \\"object\\" || !(parser instanceof v1687)) {
    throw new v1688(\\"bad call to strictFail\\");
} if (parser.strict) {
    v1689(parser, message);
} };
const v1701 = {};
v1701.constructor = v1686;
v1686.prototype = v1701;
var v1685 = v1686;
var v1702 = v1690;
var v1703 = v1666;
v1684 = function end(parser) { if (parser.sawRoot && !parser.closedRoot)
    v1685(parser, \\"Unclosed root tag\\"); if ((parser.state !== 0) && (parser.state !== 1) && (parser.state !== 2)) {
    v1702(parser, \\"Unexpected end\\");
} v1691(parser); parser.c = \\"\\"; parser.closed = true; v1696(parser, \\"onend\\"); v1703.call(parser, parser.strict, parser.opt); return parser; };
const v1704 = {};
v1704.constructor = v1684;
v1684.prototype = v1704;
var v1683 = v1684;
v1682 = function () { v1683(this); };
const v1705 = {};
v1705.constructor = v1682;
v1682.prototype = v1705;
v1681.end = v1682;
var v1706;
var v1707 = v1690;
var v1709;
v1709 = function charAt(chunk, i) { var result = \\"\\"; if (i < chunk.length) {
    result = chunk.charAt(i);
} return result; };
const v1710 = {};
v1710.constructor = v1709;
v1709.prototype = v1710;
var v1708 = v1709;
var v1712;
var v1714;
v1714 = function isWhitespace(c) { return c === \\" \\" || c === \\"\\\\n\\" || c === \\"\\\\r\\" || c === \\"\\\\t\\"; };
const v1715 = {};
v1715.constructor = v1714;
v1714.prototype = v1715;
var v1713 = v1714;
var v1716 = v1686;
v1712 = function beginWhiteSpace(parser, c) { if (c === \\"<\\") {
    parser.state = 4;
    parser.startTagPosition = parser.position;
}
else if (!v1713(c)) {
    v1716(parser, \\"Non-whitespace before first tag.\\");
    parser.textNode = c;
    parser.state = 2;
} };
const v1717 = {};
v1717.constructor = v1712;
v1712.prototype = v1717;
var v1711 = v1712;
var v1718 = v1714;
var v1720;
v1720 = function isMatch(regex, c) { return regex.test(c); };
const v1721 = {};
v1721.constructor = v1720;
v1720.prototype = v1721;
var v1719 = v1720;
var v1722 = /[:_A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD]/;
var v1723 = v33;
var v1724 = \\"[CDATA[\\";
var v1726;
v1726 = function emitNode(parser, nodeType, data) { if (parser.textNode)
    v1691(parser); v1699(parser, nodeType, data); };
const v1727 = {};
v1727.constructor = v1726;
v1726.prototype = v1727;
var v1725 = v1726;
var v1728 = \\"DOCTYPE\\";
var v1729 = v1726;
var v1731;
v1731 = function isQuote(c) { return c === \\"\\\\\\"\\" || c === \\"'\\"; };
const v1732 = {};
v1732.constructor = v1731;
v1731.prototype = v1732;
var v1730 = v1731;
var v1733 = v1731;
var v1734 = v1694;
var v1735 = v1726;
var v1736 = v1720;
var v1737 = /[:_A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040.\\\\d-]/;
var v1739;
var v1740 = v1726;
v1739 = function newTag(parser) { if (!parser.strict)
    parser.tagName = parser.tagName[parser.looseCase](); var parent = parser.tags[parser.tags.length - 1] || parser; var tag = parser.tag = { name: parser.tagName, attributes: {} }; if (parser.opt.xmlns) {
    tag.ns = parent.ns;
} parser.attribList.length = 0; v1740(parser, \\"onopentagstart\\", tag); };
const v1741 = {};
v1741.constructor = v1739;
v1739.prototype = v1741;
var v1738 = v1739;
var v1743;
var v1745;
v1745 = function qname(name, attribute) { var i = name.indexOf(\\":\\"); var qualName = i < 0 ? [\\"\\", name] : name.split(\\":\\"); var prefix = qualName[0]; var local = qualName[1]; if (attribute && name === \\"xmlns\\") {
    prefix = \\"xmlns\\";
    local = \\"\\";
} return { prefix: prefix, local: local }; };
const v1746 = {};
v1746.constructor = v1745;
v1745.prototype = v1746;
var v1744 = v1745;
var v1747 = v1686;
var v1748 = v163;
var v1749 = v31;
var v1750 = v1745;
var v1751 = v163;
var v1752 = v1726;
v1743 = function openTag(parser, selfClosing) { if (parser.opt.xmlns) {
    var tag = parser.tag;
    var qn = v1744(parser.tagName);
    tag.prefix = qn.prefix;
    tag.local = qn.local;
    tag.uri = tag.ns[qn.prefix] || \\"\\";
    if (tag.prefix && !tag.uri) {
        v1747(parser, \\"Unbound namespace prefix: \\" + v1748.stringify(parser.tagName));
        tag.uri = qn.prefix;
    }
    var parent = parser.tags[parser.tags.length - 1] || parser;
    if (tag.ns && parent.ns !== tag.ns) {
        v1749.keys(tag.ns).forEach(function (p) { v1735(parser, \\"onopennamespace\\", { prefix: p, uri: tag.ns[p] }); });
    }
    for (var i = 0, l = parser.attribList.length; i < l; i++) {
        var nv = parser.attribList[i];
        var name = nv[0];
        var value = nv[1];
        var qualName = v1750(name, true);
        var prefix = qualName.prefix;
        var local = qualName.local;
        var uri = prefix === \\"\\" ? \\"\\" : (tag.ns[prefix] || \\"\\");
        var a = { name: name, value: value, prefix: prefix, local: local, uri: uri };
        if (prefix && prefix !== \\"xmlns\\" && !uri) {
            v1685(parser, \\"Unbound namespace prefix: \\" + v1751.stringify(prefix));
            a.uri = prefix;
        }
        parser.tag.attributes[name] = a;
        v1752(parser, \\"onattribute\\", a);
    }
    parser.attribList.length = 0;
} parser.tag.isSelfClosing = !!selfClosing; parser.sawRoot = true; parser.tags.push(parser.tag); v1752(parser, \\"onopentag\\", parser.tag); if (!selfClosing) {
    if (!parser.noscript && parser.tagName.toLowerCase() === \\"script\\") {
        parser.state = 34;
    }
    else {
        parser.state = 2;
    }
    parser.tag = null;
    parser.tagName = \\"\\";
} parser.attribName = parser.attribValue = \\"\\"; parser.attribList.length = 0; };
const v1753 = {};
v1753.constructor = v1743;
v1743.prototype = v1753;
var v1742 = v1743;
var v1755;
var v1756 = v31;
v1755 = function closeTag(parser) { if (!parser.tagName) {
    v1747(parser, \\"Weird empty close tag.\\");
    parser.textNode += \\"</>\\";
    parser.state = 2;
    return;
} if (parser.script) {
    if (parser.tagName !== \\"script\\") {
        parser.script += \\"</\\" + parser.tagName + \\">\\";
        parser.tagName = \\"\\";
        parser.state = 34;
        return;
    }
    v1725(parser, \\"onscript\\", parser.script);
    parser.script = \\"\\";
} var t = parser.tags.length; var tagName = parser.tagName; if (!parser.strict) {
    tagName = tagName[parser.looseCase]();
} var closeTo = tagName; while (t--) {
    var close = parser.tags[t];
    if (close.name !== closeTo) {
        v1747(parser, \\"Unexpected close tag\\");
    }
    else {
        break;
    }
} if (t < 0) {
    v1747(parser, \\"Unmatched closing tag: \\" + parser.tagName);
    parser.textNode += \\"</\\" + parser.tagName + \\">\\";
    parser.state = 2;
    return;
} parser.tagName = tagName; var s = parser.tags.length; while (s-- > t) {
    var tag = parser.tag = parser.tags.pop();
    parser.tagName = parser.tag.name;
    v1735(parser, \\"onclosetag\\", parser.tagName);
    var x = {};
    for (var i in tag.ns) {
        x[i] = tag.ns[i];
    }
    var parent = parser.tags[parser.tags.length - 1] || parser;
    if (parser.opt.xmlns && tag.ns !== parent.ns) {
        v1756.keys(tag.ns).forEach(function (p) { var n = tag.ns[p]; v1735(parser, \\"onclosenamespace\\", { prefix: p, uri: n }); });
    }
} if (t === 0)
    parser.closedRoot = true; parser.tagName = parser.attribValue = parser.attribName = \\"\\"; parser.attribList.length = 0; parser.state = 2; };
const v1757 = {};
v1757.constructor = v1755;
v1755.prototype = v1757;
var v1754 = v1755;
var v1759;
var v1760 = v1745;
var v1761 = \\"http://www.w3.org/XML/1998/namespace\\";
var v1762 = v1686;
var v1763 = \\"http://www.w3.org/2000/xmlns/\\";
var v1764 = v31;
v1759 = function attrib(parser) { if (!parser.strict) {
    parser.attribName = parser.attribName[parser.looseCase]();
} if (parser.attribList.indexOf(parser.attribName) !== -1 || parser.tag.attributes.hasOwnProperty(parser.attribName)) {
    parser.attribName = parser.attribValue = \\"\\";
    return;
} if (parser.opt.xmlns) {
    var qn = v1760(parser.attribName, true);
    var prefix = qn.prefix;
    var local = qn.local;
    if (prefix === \\"xmlns\\") {
        if (local === \\"xml\\" && parser.attribValue !== v1761) {
            v1762(parser, \\"xml: prefix must be bound to \\" + v1761 + \\"\\\\n\\" + \\"Actual: \\" + parser.attribValue);
        }
        else if (local === \\"xmlns\\" && parser.attribValue !== v1763) {
            v1762(parser, \\"xmlns: prefix must be bound to \\" + v1763 + \\"\\\\n\\" + \\"Actual: \\" + parser.attribValue);
        }
        else {
            var tag = parser.tag;
            var parent = parser.tags[parser.tags.length - 1] || parser;
            if (tag.ns === parent.ns) {
                tag.ns = v1764.create(parent.ns);
            }
            tag.ns[local] = parser.attribValue;
        }
    }
    parser.attribList.push([parser.attribName, parser.attribValue]);
}
else {
    parser.tag.attributes[parser.attribName] = parser.attribValue;
    v1725(parser, \\"onattribute\\", { name: parser.attribName, value: parser.attribValue });
} parser.attribName = parser.attribValue = \\"\\"; };
const v1765 = {};
v1765.constructor = v1759;
v1759.prototype = v1765;
var v1758 = v1759;
var v1766 = /[:_A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040.\\\\d-]/;
var v1768;
var v1769 = v1714;
v1768 = function isAttribEnd(c) { return c === \\">\\" || v1769(c); };
const v1770 = {};
v1770.constructor = v1768;
v1768.prototype = v1770;
var v1767 = v1768;
var v1772;
var v1773 = v1720;
v1772 = function notMatch(regex, c) { return !v1773(regex, c); };
const v1774 = {};
v1774.constructor = v1772;
v1772.prototype = v1774;
var v1771 = v1772;
var v1775 = undefined;
var v1777;
var v1778 = v117;
var v1779 = v117;
var v1780 = v1017;
var v1781 = v136;
v1777 = function parseEntity(parser) { var entity = parser.entity; var entityLC = entity.toLowerCase(); var num; var numStr = \\"\\"; if (parser.ENTITIES[entity]) {
    return parser.ENTITIES[entity];
} if (parser.ENTITIES[entityLC]) {
    return parser.ENTITIES[entityLC];
} entity = entityLC; if (entity.charAt(0) === \\"#\\") {
    if (entity.charAt(1) === \\"x\\") {
        entity = entity.slice(2);
        num = v1778(entity, 16);
        numStr = num.toString(16);
    }
    else {
        entity = entity.slice(1);
        num = v1779(entity, 10);
        numStr = num.toString(10);
    }
} entity = entity.replace(/^0+/, \\"\\"); if (v1780(num) || numStr.toLowerCase() !== entity) {
    v1747(parser, \\"Invalid character entity\\");
    return \\"&\\" + parser.entity + \\";\\";
} return v1781.fromCodePoint(num); };
const v1782 = {};
v1782.constructor = v1777;
v1777.prototype = v1782;
var v1776 = v1777;
var v1783 = undefined;
var v1784 = /[#:_A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040.\\\\d-]/;
var v1785 = /[#:_A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD]/;
var v1786 = v40;
var v1788;
var v1789 = v787;
var v1790 = v1670;
var v1791 = v1692;
var v1792 = v787;
v1788 = function checkBufferLength(parser) { var maxAllowed = v1789.max(65536, 10); var maxActual = 0; for (var i = 0, l = 12; i < l; i++) {
    var len = parser[v1790[i]].length;
    if (len > maxAllowed) {
        switch (v1669[i]) {
            case \\"textNode\\":
                v1791(parser);
                break;
            case \\"cdata\\":
                v1740(parser, \\"oncdata\\", parser.cdata);
                parser.cdata = \\"\\";
                break;
            case \\"script\\":
                v1740(parser, \\"onscript\\", parser.script);
                parser.script = \\"\\";
                break;
            default: v1702(parser, \\"Max buffer length exceeded: \\" + v1669[i]);
        }
    }
    maxActual = v1792.max(maxActual, len);
} var m = 65536 - maxActual; parser.bufferCheckPosition = m + parser.position; };
const v1793 = {};
v1793.constructor = v1788;
v1788.prototype = v1793;
var v1787 = v1788;
v1706 = function write(chunk) { var parser = this; if (this.error) {
    throw this.error;
} if (parser.closed) {
    return v1707(parser, \\"Cannot write after close. Assign an onready handler.\\");
} if (chunk === null) {
    return v1683(parser);
} if (typeof chunk === \\"object\\") {
    chunk = chunk.toString();
} var i = 0; var c = \\"\\"; while (true) {
    c = v1708(chunk, i++);
    parser.c = c;
    if (!c) {
        break;
    }
    if (parser.trackPosition) {
        parser.position++;
        if (c === \\"\\\\n\\") {
            parser.line++;
            parser.column = 0;
        }
        else {
            parser.column++;
        }
    }
    switch (parser.state) {
        case 0:
            parser.state = 1;
            if (c === \\"\\\\uFEFF\\") {
                continue;
            }
            v1711(parser, c);
            continue;
        case 1:
            v1711(parser, c);
            continue;
        case 2:
            if (parser.sawRoot && !parser.closedRoot) {
                var starti = i - 1;
                while (c && c !== \\"<\\" && c !== \\"&\\") {
                    c = v1708(chunk, i++);
                    if (c && parser.trackPosition) {
                        parser.position++;
                        if (c === \\"\\\\n\\") {
                            parser.line++;
                            parser.column = 0;
                        }
                        else {
                            parser.column++;
                        }
                    }
                }
                parser.textNode += chunk.substring(starti, i - 1);
            }
            if (c === \\"<\\" && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {
                parser.state = 4;
                parser.startTagPosition = parser.position;
            }
            else {
                if (!v1713(c) && (!parser.sawRoot || parser.closedRoot)) {
                    v1716(parser, \\"Text data outside of root node.\\");
                }
                if (c === \\"&\\") {
                    parser.state = 3;
                }
                else {
                    parser.textNode += c;
                }
            }
            continue;
        case 34:
            if (c === \\"<\\") {
                parser.state = 35;
            }
            else {
                parser.script += c;
            }
            continue;
        case 35:
            if (c === \\"/\\") {
                parser.state = 32;
            }
            else {
                parser.script += \\"<\\" + c;
                parser.state = 34;
            }
            continue;
        case 4:
            if (c === \\"!\\") {
                parser.state = 5;
                parser.sgmlDecl = \\"\\";
            }
            else if (v1718(c)) { }
            else if (v1719(v1722, c)) {
                parser.state = 21;
                parser.tagName = c;
            }
            else if (c === \\"/\\") {
                parser.state = 32;
                parser.tagName = \\"\\";
            }
            else if (c === \\"?\\") {
                parser.state = 18;
                parser.procInstName = parser.procInstBody = \\"\\";
            }
            else {
                v1685(parser, \\"Unencoded <\\");
                if (parser.startTagPosition + 1 < parser.position) {
                    var pad = parser.position - parser.startTagPosition;
                    c = new v1723(pad).join(\\" \\") + c;
                }
                parser.textNode += \\"<\\" + c;
                parser.state = 2;
            }
            continue;
        case 5:
            if ((parser.sgmlDecl + c).toUpperCase() === v1724) {
                v1725(parser, \\"onopencdata\\");
                parser.state = 15;
                parser.sgmlDecl = \\"\\";
                parser.cdata = \\"\\";
            }
            else if (parser.sgmlDecl + c === \\"--\\") {
                parser.state = 12;
                parser.comment = \\"\\";
                parser.sgmlDecl = \\"\\";
            }
            else if ((parser.sgmlDecl + c).toUpperCase() === v1728) {
                parser.state = 7;
                if (parser.doctype || parser.sawRoot) {
                    v1685(parser, \\"Inappropriately located doctype declaration\\");
                }
                parser.doctype = \\"\\";
                parser.sgmlDecl = \\"\\";
            }
            else if (c === \\">\\") {
                v1729(parser, \\"onsgmldeclaration\\", parser.sgmlDecl);
                parser.sgmlDecl = \\"\\";
                parser.state = 2;
            }
            else if (v1730(c)) {
                parser.state = 6;
                parser.sgmlDecl += c;
            }
            else {
                parser.sgmlDecl += c;
            }
            continue;
        case 6:
            if (c === parser.q) {
                parser.state = 5;
                parser.q = \\"\\";
            }
            parser.sgmlDecl += c;
            continue;
        case 7:
            if (c === \\">\\") {
                parser.state = 2;
                v1725(parser, \\"ondoctype\\", parser.doctype);
                parser.doctype = true;
            }
            else {
                parser.doctype += c;
                if (c === \\"[\\") {
                    parser.state = 9;
                }
                else if (v1733(c)) {
                    parser.state = 8;
                    parser.q = c;
                }
            }
            continue;
        case 8:
            parser.doctype += c;
            if (c === parser.q) {
                parser.q = \\"\\";
                parser.state = 7;
            }
            continue;
        case 9:
            parser.doctype += c;
            if (c === \\"]\\") {
                parser.state = 7;
            }
            else if (v1733(c)) {
                parser.state = 10;
                parser.q = c;
            }
            continue;
        case 10:
            parser.doctype += c;
            if (c === parser.q) {
                parser.state = 9;
                parser.q = \\"\\";
            }
            continue;
        case 12:
            if (c === \\"-\\") {
                parser.state = 13;
            }
            else {
                parser.comment += c;
            }
            continue;
        case 13:
            if (c === \\"-\\") {
                parser.state = 14;
                parser.comment = v1734(parser.opt, parser.comment);
                if (parser.comment) {
                    v1725(parser, \\"oncomment\\", parser.comment);
                }
                parser.comment = \\"\\";
            }
            else {
                parser.comment += \\"-\\" + c;
                parser.state = 12;
            }
            continue;
        case 14:
            if (c !== \\">\\") {
                v1716(parser, \\"Malformed comment\\");
                parser.comment += \\"--\\" + c;
                parser.state = 12;
            }
            else {
                parser.state = 2;
            }
            continue;
        case 15:
            if (c === \\"]\\") {
                parser.state = 16;
            }
            else {
                parser.cdata += c;
            }
            continue;
        case 16:
            if (c === \\"]\\") {
                parser.state = 17;
            }
            else {
                parser.cdata += \\"]\\" + c;
                parser.state = 15;
            }
            continue;
        case 17:
            if (c === \\">\\") {
                if (parser.cdata) {
                    v1735(parser, \\"oncdata\\", parser.cdata);
                }
                v1735(parser, \\"onclosecdata\\");
                parser.cdata = \\"\\";
                parser.state = 2;
            }
            else if (c === \\"]\\") {
                parser.cdata += \\"]\\";
            }
            else {
                parser.cdata += \\"]]\\" + c;
                parser.state = 15;
            }
            continue;
        case 18:
            if (c === \\"?\\") {
                parser.state = 20;
            }
            else if (v1713(c)) {
                parser.state = 19;
            }
            else {
                parser.procInstName += c;
            }
            continue;
        case 19:
            if (!parser.procInstBody && v1713(c)) {
                continue;
            }
            else if (c === \\"?\\") {
                parser.state = 20;
            }
            else {
                parser.procInstBody += c;
            }
            continue;
        case 20:
            if (c === \\">\\") {
                v1735(parser, \\"onprocessinginstruction\\", { name: parser.procInstName, body: parser.procInstBody });
                parser.procInstName = parser.procInstBody = \\"\\";
                parser.state = 2;
            }
            else {
                parser.procInstBody += \\"?\\" + c;
                parser.state = 19;
            }
            continue;
        case 21:
            if (v1736(v1737, c)) {
                parser.tagName += c;
            }
            else {
                v1738(parser);
                if (c === \\">\\") {
                    v1742(parser);
                }
                else if (c === \\"/\\") {
                    parser.state = 22;
                }
                else {
                    if (!v1713(c)) {
                        v1716(parser, \\"Invalid character in tag name\\");
                    }
                    parser.state = 23;
                }
            }
            continue;
        case 22:
            if (c === \\">\\") {
                v1742(parser, true);
                v1754(parser);
            }
            else {
                v1716(parser, \\"Forward-slash in opening tag not followed by >\\");
                parser.state = 23;
            }
            continue;
        case 23:
            if (v1713(c)) {
                continue;
            }
            else if (c === \\">\\") {
                v1742(parser);
            }
            else if (c === \\"/\\") {
                parser.state = 22;
            }
            else if (v1736(v1722, c)) {
                parser.attribName = c;
                parser.attribValue = \\"\\";
                parser.state = 24;
            }
            else {
                v1716(parser, \\"Invalid attribute name\\");
            }
            continue;
        case 24:
            if (c === \\"=\\") {
                parser.state = 26;
            }
            else if (c === \\">\\") {
                v1716(parser, \\"Attribute without value\\");
                parser.attribValue = parser.attribName;
                v1758(parser);
                v1742(parser);
            }
            else if (v1713(c)) {
                parser.state = 25;
            }
            else if (v1736(v1766, c)) {
                parser.attribName += c;
            }
            else {
                v1716(parser, \\"Invalid attribute name\\");
            }
            continue;
        case 25:
            if (c === \\"=\\") {
                parser.state = 26;
            }
            else if (v1713(c)) {
                continue;
            }
            else {
                v1716(parser, \\"Attribute without value\\");
                parser.tag.attributes[parser.attribName] = \\"\\";
                parser.attribValue = \\"\\";
                v1735(parser, \\"onattribute\\", { name: parser.attribName, value: \\"\\" });
                parser.attribName = \\"\\";
                if (c === \\">\\") {
                    v1742(parser);
                }
                else if (v1736(v1722, c)) {
                    parser.attribName = c;
                    parser.state = 24;
                }
                else {
                    v1716(parser, \\"Invalid attribute name\\");
                    parser.state = 23;
                }
            }
            continue;
        case 26:
            if (v1713(c)) {
                continue;
            }
            else if (v1733(c)) {
                parser.q = c;
                parser.state = 27;
            }
            else {
                v1716(parser, \\"Unquoted attribute value\\");
                parser.state = 29;
                parser.attribValue = c;
            }
            continue;
        case 27:
            if (c !== parser.q) {
                if (c === \\"&\\") {
                    parser.state = 30;
                }
                else {
                    parser.attribValue += c;
                }
                continue;
            }
            v1758(parser);
            parser.q = \\"\\";
            parser.state = 28;
            continue;
        case 28:
            if (v1713(c)) {
                parser.state = 23;
            }
            else if (c === \\">\\") {
                v1742(parser);
            }
            else if (c === \\"/\\") {
                parser.state = 22;
            }
            else if (v1736(v1722, c)) {
                v1716(parser, \\"No whitespace between attributes\\");
                parser.attribName = c;
                parser.attribValue = \\"\\";
                parser.state = 24;
            }
            else {
                v1716(parser, \\"Invalid attribute name\\");
            }
            continue;
        case 29:
            if (!v1767(c)) {
                if (c === \\"&\\") {
                    parser.state = 31;
                }
                else {
                    parser.attribValue += c;
                }
                continue;
            }
            v1758(parser);
            if (c === \\">\\") {
                v1742(parser);
            }
            else {
                parser.state = 23;
            }
            continue;
        case 32:
            if (!parser.tagName) {
                if (v1713(c)) {
                    continue;
                }
                else if (v1771(v1722, c)) {
                    if (parser.script) {
                        parser.script += \\"</\\" + c;
                        parser.state = 34;
                    }
                    else {
                        v1716(parser, \\"Invalid tagname in closing tag.\\");
                    }
                }
                else {
                    parser.tagName = c;
                }
            }
            else if (c === \\">\\") {
                v1754(parser);
            }
            else if (v1736(v1766, c)) {
                parser.tagName += c;
            }
            else if (parser.script) {
                parser.script += \\"</\\" + parser.tagName;
                parser.tagName = \\"\\";
                parser.state = 34;
            }
            else {
                if (!v1713(c)) {
                    v1716(parser, \\"Invalid tagname in closing tag\\");
                }
                parser.state = 33;
            }
            continue;
        case 33:
            if (v1713(c)) {
                continue;
            }
            if (c === \\">\\") {
                v1754(parser);
            }
            else {
                v1716(parser, \\"Invalid characters in closing tag\\");
            }
            continue;
        case 3:
        case 30:
        case 31:
            var returnState;
            var buffer;
            switch (parser.state) {
                case 3:
                    returnState = 2;
                    buffer = \\"textNode\\";
                    break;
                case 30:
                    returnState = 27;
                    buffer = \\"attribValue\\";
                    break;
                case 31:
                    returnState = 29;
                    buffer = \\"attribValue\\";
                    break;
            }
            if (c === \\";\\") {
                parser[v1775] += v1776(parser);
                parser.entity = \\"\\";
                parser.state = v1783;
            }
            else if (v1736(parser.entity.length ? v1784 : v1785, c)) {
                parser.entity += c;
            }
            else {
                v1716(parser, \\"Invalid character in entity name\\");
                parser[v1775] += \\"&\\" + parser.entity + c;
                parser.entity = \\"\\";
                parser.state = v1783;
            }
            continue;
        default: throw new v1786(parser, \\"Unknown state: \\" + parser.state);
    }
} if (parser.position >= parser.bufferCheckPosition) {
    v1787(parser);
} return parser; };
const v1794 = {};
v1794.constructor = v1706;
v1706.prototype = v1794;
v1681.write = v1706;
var v1795;
v1795 = function () { this.error = null; return this; };
const v1796 = {};
v1796.constructor = v1795;
v1795.prototype = v1796;
v1681.resume = v1795;
var v1797;
v1797 = function () { return this.write(null); };
const v1798 = {};
v1798.constructor = v1797;
v1797.prototype = v1798;
v1681.close = v1797;
var v1799;
var v1801;
var v1802 = v1726;
v1801 = function flushBuffers(parser) { v1691(parser); if (parser.cdata !== \\"\\") {
    v1802(parser, \\"oncdata\\", parser.cdata);
    parser.cdata = \\"\\";
} if (parser.script !== \\"\\") {
    v1802(parser, \\"onscript\\", parser.script);
    parser.script = \\"\\";
} };
const v1803 = {};
v1803.constructor = v1801;
v1801.prototype = v1803;
var v1800 = v1801;
v1799 = function () { v1800(this); };
const v1804 = {};
v1804.constructor = v1799;
v1799.prototype = v1804;
v1681.flush = v1799;
v1666.prototype = v1681;
var v1665 = v1666;
v1664 = function (strict, opt) { return new v1665(strict, opt); };
const v1805 = {};
v1805.constructor = v1664;
v1664.prototype = v1805;
v1663.parser = v1664;
v1663.SAXParser = v1666;
var v1806;
const v1808 = require(\\"stream\\");
var v1807 = v1808;
const v1810 = [];
v1810.push(\\"text\\", \\"processinginstruction\\", \\"sgmldeclaration\\", \\"doctype\\", \\"comment\\", \\"opentagstart\\", \\"attribute\\", \\"opentag\\", \\"closetag\\", \\"opencdata\\", \\"cdata\\", \\"closecdata\\", \\"ready\\", \\"script\\", \\"opennamespace\\", \\"closenamespace\\");
var v1809 = v1810;
var v1811 = v31;
v1806 = function SAXStream(strict, opt) { if (!(this instanceof SAXStream)) {
    return new SAXStream(strict, opt);
} v1807.apply(this); this._parser = new v1687(strict, opt); this.writable = true; this.readable = true; var me = this; this._parser.onend = function () { me.emit(\\"end\\"); }; this._parser.onerror = function (er) { me.emit(\\"error\\", er); me._parser.error = null; }; this._decoder = null; v1809.forEach(function (ev) { v1811.defineProperty(me, \\"on\\" + ev, { get: function () { return me._parser[\\"on\\" + ev]; }, set: function (h) { if (!h) {
        me.removeAllListeners(ev);
        me._parser[\\"on\\" + ev] = h;
        return h;
    } me.on(ev, h); }, enumerable: true, configurable: false }); }); };
const v1812 = require(\\"stream\\").prototype;
const v1813 = Object.create(v1812);
var v1814;
const v1816 = Buffer;
var v1815 = v1816;
var v1817 = require;
v1814 = function (data) { if (typeof v1815 === \\"function\\" && typeof v1815.isBuffer === \\"function\\" && v1815.isBuffer(data)) {
    if (!this._decoder) {
        var SD = v1817(\\"string_decoder\\").StringDecoder;
        this._decoder = new SD(\\"utf8\\");
    }
    data = this._decoder.write(data);
} this._parser.write(data.toString()); this.emit(\\"data\\", data); return true; };
const v1818 = {};
v1818.constructor = v1814;
v1814.prototype = v1818;
v1813.write = v1814;
var v1819;
v1819 = function (chunk) { if (chunk && chunk.length) {
    this.write(chunk);
} this._parser.end(); return true; };
const v1820 = {};
v1820.constructor = v1819;
v1819.prototype = v1820;
v1813.end = v1819;
var v1821;
var v1822 = v1810;
var v1823 = v33;
v1821 = function (ev, handler) { var me = this; if (!me._parser[\\"on\\" + ev] && v1822.indexOf(ev) !== -1) {
    me._parser[\\"on\\" + ev] = function () { var args = arguments.length === 1 ? [arguments[0]] : v1823.apply(null, arguments); args.splice(0, 0, ev); me.emit.apply(me, args); };
} return v1812.on.call(me, ev, handler); };
const v1824 = {};
v1824.constructor = v1821;
v1821.prototype = v1824;
v1813.on = v1821;
v1806.prototype = v1813;
v1663.SAXStream = v1806;
var v1825;
var v1826 = v1806;
v1825 = function createStream(strict, opt) { return new v1826(strict, opt); };
const v1827 = {};
v1827.constructor = v1825;
v1825.prototype = v1827;
v1663.createStream = v1825;
v1663.MAX_BUFFER_LENGTH = 65536;
const v1828 = [];
v1828.push(\\"text\\", \\"processinginstruction\\", \\"sgmldeclaration\\", \\"doctype\\", \\"comment\\", \\"opentagstart\\", \\"attribute\\", \\"opentag\\", \\"closetag\\", \\"opencdata\\", \\"cdata\\", \\"closecdata\\", \\"error\\", \\"end\\", \\"ready\\", \\"script\\", \\"opennamespace\\", \\"closenamespace\\");
v1663.EVENTS = v1828;
const v1829 = {};
v1829[\\"0\\"] = \\"BEGIN\\";
v1829[\\"1\\"] = \\"BEGIN_WHITESPACE\\";
v1829[\\"2\\"] = \\"TEXT\\";
v1829[\\"3\\"] = \\"TEXT_ENTITY\\";
v1829[\\"4\\"] = \\"OPEN_WAKA\\";
v1829[\\"5\\"] = \\"SGML_DECL\\";
v1829[\\"6\\"] = \\"SGML_DECL_QUOTED\\";
v1829[\\"7\\"] = \\"DOCTYPE\\";
v1829[\\"8\\"] = \\"DOCTYPE_QUOTED\\";
v1829[\\"9\\"] = \\"DOCTYPE_DTD\\";
v1829[\\"10\\"] = \\"DOCTYPE_DTD_QUOTED\\";
v1829[\\"11\\"] = \\"COMMENT_STARTING\\";
v1829[\\"12\\"] = \\"COMMENT\\";
v1829[\\"13\\"] = \\"COMMENT_ENDING\\";
v1829[\\"14\\"] = \\"COMMENT_ENDED\\";
v1829[\\"15\\"] = \\"CDATA\\";
v1829[\\"16\\"] = \\"CDATA_ENDING\\";
v1829[\\"17\\"] = \\"CDATA_ENDING_2\\";
v1829[\\"18\\"] = \\"PROC_INST\\";
v1829[\\"19\\"] = \\"PROC_INST_BODY\\";
v1829[\\"20\\"] = \\"PROC_INST_ENDING\\";
v1829[\\"21\\"] = \\"OPEN_TAG\\";
v1829[\\"22\\"] = \\"OPEN_TAG_SLASH\\";
v1829[\\"23\\"] = \\"ATTRIB\\";
v1829[\\"24\\"] = \\"ATTRIB_NAME\\";
v1829[\\"25\\"] = \\"ATTRIB_NAME_SAW_WHITE\\";
v1829[\\"26\\"] = \\"ATTRIB_VALUE\\";
v1829[\\"27\\"] = \\"ATTRIB_VALUE_QUOTED\\";
v1829[\\"28\\"] = \\"ATTRIB_VALUE_CLOSED\\";
v1829[\\"29\\"] = \\"ATTRIB_VALUE_UNQUOTED\\";
v1829[\\"30\\"] = \\"ATTRIB_VALUE_ENTITY_Q\\";
v1829[\\"31\\"] = \\"ATTRIB_VALUE_ENTITY_U\\";
v1829[\\"32\\"] = \\"CLOSE_TAG\\";
v1829[\\"33\\"] = \\"CLOSE_TAG_SAW_WHITE\\";
v1829[\\"34\\"] = \\"SCRIPT\\";
v1829[\\"35\\"] = \\"SCRIPT_ENDING\\";
v1829.BEGIN = 0;
v1829.BEGIN_WHITESPACE = 1;
v1829.TEXT = 2;
v1829.TEXT_ENTITY = 3;
v1829.OPEN_WAKA = 4;
v1829.SGML_DECL = 5;
v1829.SGML_DECL_QUOTED = 6;
v1829.DOCTYPE = 7;
v1829.DOCTYPE_QUOTED = 8;
v1829.DOCTYPE_DTD = 9;
v1829.DOCTYPE_DTD_QUOTED = 10;
v1829.COMMENT_STARTING = 11;
v1829.COMMENT = 12;
v1829.COMMENT_ENDING = 13;
v1829.COMMENT_ENDED = 14;
v1829.CDATA = 15;
v1829.CDATA_ENDING = 16;
v1829.CDATA_ENDING_2 = 17;
v1829.PROC_INST = 18;
v1829.PROC_INST_BODY = 19;
v1829.PROC_INST_ENDING = 20;
v1829.OPEN_TAG = 21;
v1829.OPEN_TAG_SLASH = 22;
v1829.ATTRIB = 23;
v1829.ATTRIB_NAME = 24;
v1829.ATTRIB_NAME_SAW_WHITE = 25;
v1829.ATTRIB_VALUE = 26;
v1829.ATTRIB_VALUE_QUOTED = 27;
v1829.ATTRIB_VALUE_CLOSED = 28;
v1829.ATTRIB_VALUE_UNQUOTED = 29;
v1829.ATTRIB_VALUE_ENTITY_Q = 30;
v1829.ATTRIB_VALUE_ENTITY_U = 31;
v1829.CLOSE_TAG = 32;
v1829.CLOSE_TAG_SAW_WHITE = 33;
v1829.SCRIPT = 34;
v1829.SCRIPT_ENDING = 35;
v1663.STATE = v1829;
v1663.XML_ENTITIES = v1673;
v1663.ENTITIES = v1675;
var v1662 = v1663;
var v1830 = v1030;
var v1832;
v1832 = function (processors, item, key) { var i, len, process; for (i = 0, len = processors.length; i < len; i++) {
    process = processors[i];
    item = process(item, key);
} return item; };
const v1833 = {};
v1833.constructor = v1832;
v1832.prototype = v1833;
var v1831 = v1832;
var v1834 = v31;
var v1836;
var v1837 = v31;
v1836 = function (thing) { return typeof thing === \\"object\\" && (thing != null) && v1837.keys(thing).length === 0; };
const v1838 = {};
v1838.constructor = v1836;
v1836.prototype = v1838;
var v1835 = v1836;
v1661 = function () { var attrkey, charkey, ontext, stack; this.removeAllListeners(); this.saxParser = v1662.parser(this.options.strict, { trim: false, normalize: false, xmlns: this.options.xmlns }); this.saxParser.errThrown = false; this.saxParser.onerror = (function (_this) { return function (error) { _this.saxParser.resume(); if (!_this.saxParser.errThrown) {
    _this.saxParser.errThrown = true;
    return _this.emit(\\"error\\", error);
} }; })(this); this.saxParser.onend = (function (_this) { return function () { if (!_this.saxParser.ended) {
    _this.saxParser.ended = true;
    return _this.emit(\\"end\\", _this.resultObject);
} }; })(this); this.saxParser.ended = false; this.EXPLICIT_CHARKEY = this.options.explicitCharkey; this.resultObject = null; stack = []; attrkey = this.options.attrkey; charkey = this.options.charkey; this.saxParser.onopentag = (function (_this) { return function (node) { var key, newValue, obj, processedKey, ref; obj = {}; obj[charkey] = \\"\\"; if (!_this.options.ignoreAttrs) {
    ref = node.attributes;
    for (key in ref) {
        if (!v1830.call(ref, key))
            continue;
        if (!(attrkey in obj) && !_this.options.mergeAttrs) {
            obj[attrkey] = {};
        }
        newValue = _this.options.attrValueProcessors ? v1831(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];
        processedKey = _this.options.attrNameProcessors ? v1831(_this.options.attrNameProcessors, key) : key;
        if (_this.options.mergeAttrs) {
            _this.assignOrPush(obj, processedKey, newValue);
        }
        else {
            obj[attrkey][processedKey] = newValue;
        }
    }
} obj[\\"#name\\"] = _this.options.tagNameProcessors ? v1831(_this.options.tagNameProcessors, node.name) : node.name; if (_this.options.xmlns) {
    obj[_this.options.xmlnskey] = { uri: node.uri, local: node.local };
} return stack.push(obj); }; })(this); this.saxParser.onclosetag = (function (_this) { return function () { var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath; obj = stack.pop(); nodeName = obj[\\"#name\\"]; if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {
    delete obj[\\"#name\\"];
} if (obj.cdata === true) {
    cdata = obj.cdata;
    delete obj.cdata;
} s = stack[stack.length - 1]; if (obj[charkey].match(/^\\\\s*$/) && !cdata) {
    emptyStr = obj[charkey];
    delete obj[charkey];
}
else {
    if (_this.options.trim) {
        obj[charkey] = obj[charkey].trim();
    }
    if (_this.options.normalize) {
        obj[charkey] = obj[charkey].replace(/\\\\s{2,}/g, \\" \\").trim();
    }
    obj[charkey] = _this.options.valueProcessors ? v1831(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];
    if (v1834.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {
        obj = obj[charkey];
    }
} if (v1835(obj)) {
    obj = _this.options.emptyTag !== \\"\\" ? _this.options.emptyTag : emptyStr;
} if (_this.options.validator != null) {
    xpath = \\"/\\" + ((function () { var i, len, results; results = []; for (i = 0, len = stack.length; i < len; i++) {
        node = stack[i];
        results.push(node[\\"#name\\"]);
    } return results; })()).concat(nodeName).join(\\"/\\");
    (function () { var err; try {
        return obj = _this.options.validator(xpath, s && s[nodeName], obj);
    }
    catch (error1) {
        err = error1;
        return _this.emit(\\"error\\", err);
    } })();
} if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === \\"object\\") {
    if (!_this.options.preserveChildrenOrder) {
        node = {};
        if (_this.options.attrkey in obj) {
            node[_this.options.attrkey] = obj[_this.options.attrkey];
            delete obj[_this.options.attrkey];
        }
        if (!_this.options.charsAsChildren && _this.options.charkey in obj) {
            node[_this.options.charkey] = obj[_this.options.charkey];
            delete obj[_this.options.charkey];
        }
        if (v1834.getOwnPropertyNames(obj).length > 0) {
            node[_this.options.childkey] = obj;
        }
        obj = node;
    }
    else if (s) {
        s[_this.options.childkey] = s[_this.options.childkey] || [];
        objClone = {};
        for (key in obj) {
            if (!v1650.call(obj, key))
                continue;
            objClone[key] = obj[key];
        }
        s[_this.options.childkey].push(objClone);
        delete obj[\\"#name\\"];
        if (v1834.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {
            obj = obj[charkey];
        }
    }
} if (stack.length > 0) {
    return _this.assignOrPush(s, nodeName, obj);
}
else {
    if (_this.options.explicitRoot) {
        old = obj;
        obj = {};
        obj[nodeName] = old;
    }
    _this.resultObject = obj;
    _this.saxParser.ended = true;
    return _this.emit(\\"end\\", _this.resultObject);
} }; })(this); ontext = (function (_this) { return function (text) { var charChild, s; s = stack[stack.length - 1]; if (s) {
    s[charkey] += text;
    if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\\\\\n/g, \\"\\").trim() !== \\"\\")) {
        s[_this.options.childkey] = s[_this.options.childkey] || [];
        charChild = { \\"#name\\": \\"__text__\\" };
        charChild[charkey] = text;
        if (_this.options.normalize) {
            charChild[charkey] = charChild[charkey].replace(/\\\\s{2,}/g, \\" \\").trim();
        }
        s[_this.options.childkey].push(charChild);
    }
    return s;
} }; })(this); this.saxParser.ontext = ontext; return this.saxParser.oncdata = (function (_this) { return function (text) { var s; s = ontext(text); if (s) {
    return s.cdata = true;
} }; })(this); };
const v1839 = {};
v1839.constructor = v1661;
v1661.prototype = v1839;
v1653.reset = v1661;
var v1840;
const v1842 = Object.create(v646);
var v1843;
v1843 = function (str) { if (str[0] === \\"\\\\uFEFF\\") {
    return str.substring(1);
}
else {
    return str;
} };
const v1844 = {};
v1844.constructor = v1843;
v1843.prototype = v1844;
v1842.stripBOM = v1843;
var v1841 = v1842;
var v1845 = v1656;
v1840 = function (str, cb) { var err; if ((cb != null) && typeof cb === \\"function\\") {
    this.on(\\"end\\", function (result) { this.reset(); return cb(null, result); });
    this.on(\\"error\\", function (err) { this.reset(); return cb(err); });
} try {
    str = str.toString();
    if (str.trim() === \\"\\") {
        this.emit(\\"end\\", null);
        return true;
    }
    str = v1841.stripBOM(str);
    if (this.options.async) {
        this.remaining = str;
        v1845(this.processAsync);
        return this.saxParser;
    }
    return this.saxParser.write(str).close();
}
catch (error1) {
    err = error1;
    if (!(this.saxParser.errThrown || this.saxParser.ended)) {
        this.emit(\\"error\\", err);
        return this.saxParser.errThrown = true;
    }
    else if (this.saxParser.ended) {
        throw err;
    }
} };
const v1846 = {};
v1846.constructor = v1840;
v1840.prototype = v1846;
v1653.parseString = v1840;
v1636.prototype = v1653;
const v1847 = process.__signal_exit_emitter__.constructor.once;
v1636.once = v1847;
const v1848 = process.__signal_exit_emitter__.constructor.on;
v1636.on = v1848;
const v1849 = process.__signal_exit_emitter__.constructor.getEventListeners;
v1636.getEventListeners = v1849;
const v1850 = process.__signal_exit_emitter__.constructor;
v1636.EventEmitter = v1850;
v1636.usingDomains = true;
const v1851 = Symbol;
v1636.captureRejectionSymbol = v1851.for(\\"nodejs.rejection\\");
v1636.captureRejections = false;
const v1852 = require(\\"events\\").EventEmitterAsyncResource;
v1636.EventEmitterAsyncResource = v1852;
v1636.errorMonitor = v1851(\\"events.errorMonitor\\");
v1636.defaultMaxListeners = 10;
const v1853 = process.__signal_exit_emitter__.constructor.setMaxListeners;
v1636.setMaxListeners = v1853;
const v1854 = process.__signal_exit_emitter__.constructor.init;
v1636.init = v1854;
const v1855 = process.__signal_exit_emitter__.constructor.listenerCount;
v1636.listenerCount = v1855;
v1636.__super__ = v1652;
v1001.Parser = v1636;
v1001.parseString = v1645;
var v1000 = v1001;
const v1857 = {};
v1857.explicitCharkey = false;
v1857.trim = false;
v1857.normalize = false;
v1857.explicitRoot = false;
v1857.emptyTag = null;
v1857.explicitArray = true;
v1857.ignoreAttrs = false;
v1857.mergeAttrs = false;
v1857.validator = null;
var v1856 = v1857;
var v1859;
var v1861;
var v1862 = v3;
var v1863 = v33;
var v1864 = v1859;
var v1866;
var v1867 = v855;
v1866 = function parseScalar(text, shape) { if (text && text.$ && text.$.encoding === \\"base64\\") {
    shape = new v1867.create({ type: text.$.encoding });
} if (text && text._)
    text = text._; if (typeof shape.toType === \\"function\\") {
    return shape.toType(text);
}
else {
    return text;
} };
const v1868 = {};
v1868.constructor = v1866;
v1866.prototype = v1868;
var v1865 = v1866;
v1861 = function parseStructure(xml, shape) { var data = {}; if (xml === null)
    return data; v1862.each(shape.members, function (memberName, memberShape) { var xmlName = memberShape.name; if (v113.hasOwnProperty.call(xml, xmlName) && v1863.isArray(xml[xmlName])) {
    var xmlChild = xml[xmlName];
    if (!memberShape.flattened)
        xmlChild = xmlChild[0];
    data[memberName] = v1864(xmlChild, memberShape);
}
else if (memberShape.isXmlAttribute && xml.$ && v113.hasOwnProperty.call(xml.$, xmlName)) {
    data[memberName] = v1865(xml.$[xmlName], memberShape);
}
else if (memberShape.type === \\"list\\" && !shape.api.xmlNoDefaultLists) {
    data[memberName] = memberShape.defaultValue;
} }); return data; };
const v1869 = {};
v1869.constructor = v1861;
v1861.prototype = v1869;
var v1860 = v1861;
var v1871;
var v1872 = v33;
var v1873 = v3;
var v1874 = v1859;
v1871 = function parseMap(xml, shape) { var data = {}; if (xml === null)
    return data; var xmlKey = shape.key.name || \\"key\\"; var xmlValue = shape.value.name || \\"value\\"; var iterable = shape.flattened ? xml : xml.entry; if (v1872.isArray(iterable)) {
    v1873.arrayEach(iterable, function (child) { data[child[xmlKey][0]] = v1874(child[xmlValue][0], shape.value); });
} return data; };
const v1875 = {};
v1875.constructor = v1871;
v1871.prototype = v1875;
var v1870 = v1871;
var v1877;
var v1878 = v3;
var v1879 = v33;
v1877 = function parseList(xml, shape) { var data = []; var name = shape.member.name || \\"member\\"; if (shape.flattened) {
    v1878.arrayEach(xml, function (xmlChild) { data.push(v1874(xmlChild, shape.member)); });
}
else if (xml && v1879.isArray(xml[name])) {
    v1873.arrayEach(xml[name], function (child) { data.push(v1874(child, shape.member)); });
} return data; };
const v1880 = {};
v1880.constructor = v1877;
v1877.prototype = v1880;
var v1876 = v1877;
var v1882;
var v1883 = v33;
var v1884 = v1859;
var v1885 = v31;
var v1886 = v1877;
var v1887 = v1859;
v1882 = function parseUnknown(xml) { if (xml === undefined || xml === null)
    return \\"\\"; if (typeof xml === \\"string\\")
    return xml; if (v1883.isArray(xml)) {
    var arr = [];
    for (i = 0; i < xml.length; i++) {
        arr.push(v1884(xml[i], {}));
    }
    return arr;
} var keys = v1885.keys(xml), i; if (keys.length === 0 || (keys.length === 1 && keys[0] === \\"$\\")) {
    return {};
} var data = {}; for (i = 0; i < keys.length; i++) {
    var key = keys[i], value = xml[key];
    if (key === \\"$\\")
        continue;
    if (value.length > 1) {
        data[key] = v1886(value, { member: {} });
    }
    else {
        data[key] = v1887(value[0], {});
    }
} return data; };
const v1888 = {};
v1888.constructor = v1882;
v1882.prototype = v1888;
var v1881 = v1882;
var v1889 = v1866;
v1859 = function parseXml(xml, shape) { switch (shape.type) {
    case \\"structure\\": return v1860(xml, shape);
    case \\"map\\": return v1870(xml, shape);
    case \\"list\\": return v1876(xml, shape);
    case undefined:
    case null: return v1881(xml);
    default: return v1889(xml, shape);
} };
const v1890 = {};
v1890.constructor = v1859;
v1859.prototype = v1890;
var v1858 = v1859;
var v1891 = v3;
var v1892 = v1859;
v999 = function (xml, shape) { shape = shape || {}; var result = null; var error = null; var parser = new v1000.Parser(v1856); parser.parseString(xml, function (e, r) { error = e; result = r; }); if (result) {
    var data = v1858(result, shape);
    if (result.ResponseMetadata) {
        data.ResponseMetadata = v1887(result.ResponseMetadata[0], {});
    }
    return data;
}
else if (error) {
    throw v1891.error(error, { code: \\"XMLParserError\\", retryable: true });
}
else {
    return v1892({}, shape);
} };
const v1893 = {};
v1893.constructor = v999;
v999.prototype = v1893;
v998.parse = v999;
v997.prototype = v998;
v937.Parser = v997;
var v1894 = v855;
var v1895 = v3;
v853 = function extractData(resp) { var req = resp.request; var operation = req.service.api.operations[req.operation]; var shape = operation.output || {}; var origRules = shape; if (origRules.resultWrapper) {
    var tmp = v854.create({ type: \\"structure\\" });
    tmp.members[origRules.resultWrapper] = shape;
    tmp.memberNames = [origRules.resultWrapper];
    v936.property(shape, \\"name\\", shape.resultWrapper);
    shape = tmp;
} var parser = new v937.Parser(); if (shape && shape.members && !shape.members._XAMZRequestId) {
    var requestIdShape = v1894.create({ type: \\"string\\" }, { api: { protocol: \\"query\\" } }, \\"requestId\\");
    shape.members._XAMZRequestId = requestIdShape;
} var data = parser.parse(resp.httpResponse.body.toString(), shape); resp.requestId = data._XAMZRequestId || data.requestId; if (data._XAMZRequestId)
    delete data._XAMZRequestId; if (origRules.resultWrapper) {
    if (data[origRules.resultWrapper]) {
        v1895.update(data, data[origRules.resultWrapper]);
        delete data[origRules.resultWrapper];
    }
} resp.data = data; };
const v1896 = {};
v1896.constructor = v853;
v853.prototype = v1896;
v852.push(v853);
v798.extractData = v852;
const v1897 = [];
var v1898;
var v1899 = v40;
var v1900 = v3;
var v1901 = v40;
v1898 = function extractError(resp) { var data, body = resp.httpResponse.body.toString(); if (body.match(\\"<UnknownOperationException\\")) {
    data = { Code: \\"UnknownOperation\\", Message: \\"Unknown operation \\" + resp.request.operation };
}
else {
    try {
        data = new v937.Parser().parse(body);
    }
    catch (e) {
        data = { Code: resp.httpResponse.statusCode, Message: resp.httpResponse.statusMessage };
    }
} if (data.requestId && !resp.requestId)
    resp.requestId = data.requestId; if (data.Errors)
    data = data.Errors; if (data.Error)
    data = data.Error; if (data.Code) {
    resp.error = v1895.error(new v1899(), { code: data.Code, message: data.Message });
}
else {
    resp.error = v1900.error(new v1901(), { code: resp.httpResponse.statusCode, message: null });
} };
const v1902 = {};
v1902.constructor = v1898;
v1898.prototype = v1902;
v1897.push(v1898);
v798.extractError = v1897;
v797._events = v798;
v797.BUILD = v800;
v797.EXTRACT_DATA = v853;
v797.EXTRACT_ERROR = v1898;
const v1903 = Object.create(v401);
const v1904 = {};
const v1905 = [];
var v1906;
var v1908;
v1908 = function JsonBuilder() { };
const v1909 = {};
v1909.constructor = v1908;
var v1910;
var v1911 = v163;
var v1913;
var v1915;
var v1916 = v3;
var v1917 = v1913;
v1915 = function translateStructure(structure, shape) { if (shape.isDocument) {
    return structure;
} var struct = {}; v1916.each(structure, function (name, value) { var memberShape = shape.members[name]; if (memberShape) {
    if (memberShape.location !== \\"body\\")
        return;
    var locationName = memberShape.isLocationName ? memberShape.name : name;
    var result = v1917(value, memberShape);
    if (result !== undefined)
        struct[locationName] = result;
} }); return struct; };
const v1918 = {};
v1918.constructor = v1915;
v1915.prototype = v1918;
var v1914 = v1915;
var v1920;
var v1921 = v3;
var v1922 = v1913;
v1920 = function translateMap(map, shape) { var out = {}; v1921.each(map, function (key, value) { var result = v1922(value, shape.value); if (result !== undefined)
    out[key] = result; }); return out; };
const v1923 = {};
v1923.constructor = v1920;
v1920.prototype = v1923;
var v1919 = v1920;
var v1925;
var v1926 = v3;
var v1927 = v1913;
v1925 = function translateList(list, shape) { var out = []; v1926.arrayEach(list, function (value) { var result = v1927(value, shape.member); if (result !== undefined)
    out.push(result); }); return out; };
const v1928 = {};
v1928.constructor = v1925;
v1925.prototype = v1928;
var v1924 = v1925;
var v1930;
v1930 = function translateScalar(value, shape) { return shape.toWireFormat(value); };
const v1931 = {};
v1931.constructor = v1930;
v1930.prototype = v1931;
var v1929 = v1930;
v1913 = function translate(value, shape) { if (!shape || value === undefined || value === null)
    return undefined; switch (shape.type) {
    case \\"structure\\": return v1914(value, shape);
    case \\"map\\": return v1919(value, shape);
    case \\"list\\": return v1924(value, shape);
    default: return v1929(value, shape);
} };
const v1932 = {};
v1932.constructor = v1913;
v1913.prototype = v1932;
var v1912 = v1913;
v1910 = function (value, shape) { return v1911.stringify(v1912(value, shape)); };
const v1933 = {};
v1933.constructor = v1910;
v1910.prototype = v1933;
v1909.build = v1910;
v1908.prototype = v1909;
var v1907 = v1908;
var v1934 = v830;
v1906 = function buildRequest(req) { var httpRequest = req.httpRequest; var api = req.service.api; var target = api.targetPrefix + \\".\\" + api.operations[req.operation].name; var version = api.jsonVersion || \\"1.0\\"; var input = api.operations[req.operation].input; var builder = new v1907(); if (version === 1)
    version = \\"1.0\\"; httpRequest.body = builder.build(req.params || {}, input); httpRequest.headers[\\"Content-Type\\"] = \\"application/x-amz-json-\\" + version; httpRequest.headers[\\"X-Amz-Target\\"] = target; v1934(req); };
const v1935 = {};
v1935.constructor = v1906;
v1906.prototype = v1935;
v1905.push(v1906);
v1904.build = v1905;
const v1936 = [];
var v1937;
var v1938 = v163;
var v1940;
v1940 = function JsonParser() { };
const v1941 = {};
v1941.constructor = v1940;
var v1942;
var v1944;
var v1946;
var v1947 = v3;
var v1948 = v1944;
v1946 = function translateStructure(structure, shape) { if (structure == null)
    return undefined; if (shape.isDocument)
    return structure; var struct = {}; var shapeMembers = shape.members; v1947.each(shapeMembers, function (name, memberShape) { var locationName = memberShape.isLocationName ? memberShape.name : name; if (v113.hasOwnProperty.call(structure, locationName)) {
    var value = structure[locationName];
    var result = v1948(value, memberShape);
    if (result !== undefined)
        struct[name] = result;
} }); return struct; };
const v1949 = {};
v1949.constructor = v1946;
v1946.prototype = v1949;
var v1945 = v1946;
var v1951;
var v1952 = v3;
var v1953 = v1944;
v1951 = function translateMap(map, shape) { if (map == null)
    return undefined; var out = {}; v1952.each(map, function (key, value) { var result = v1953(value, shape.value); if (result === undefined)
    out[key] = null;
else
    out[key] = result; }); return out; };
const v1954 = {};
v1954.constructor = v1951;
v1951.prototype = v1954;
var v1950 = v1951;
var v1956;
var v1957 = v3;
v1956 = function translateList(list, shape) { if (list == null)
    return undefined; var out = []; v1957.arrayEach(list, function (value) { var result = v1943(value, shape.member); if (result === undefined)
    out.push(null);
else
    out.push(result); }); return out; };
const v1958 = {};
v1958.constructor = v1956;
v1956.prototype = v1958;
var v1955 = v1956;
var v1960;
v1960 = function translateScalar(value, shape) { return shape.toType(value); };
const v1961 = {};
v1961.constructor = v1960;
v1960.prototype = v1961;
var v1959 = v1960;
v1944 = function translate(value, shape) { if (!shape || value === undefined)
    return undefined; switch (shape.type) {
    case \\"structure\\": return v1945(value, shape);
    case \\"map\\": return v1950(value, shape);
    case \\"list\\": return v1955(value, shape);
    default: return v1959(value, shape);
} };
const v1962 = {};
v1962.constructor = v1944;
v1944.prototype = v1962;
var v1943 = v1944;
var v1963 = v163;
v1942 = function (value, shape) { return v1943(v1963.parse(value), shape); };
const v1964 = {};
v1964.constructor = v1942;
v1942.prototype = v1964;
v1941.parse = v1942;
v1940.prototype = v1941;
var v1939 = v1940;
v1937 = function extractData(resp) { var body = resp.httpResponse.body.toString() || \\"{}\\"; if (resp.request.service.config.convertResponseTypes === false) {
    resp.data = v1938.parse(body);
}
else {
    var operation = resp.request.service.api.operations[resp.request.operation];
    var shape = operation.output || {};
    var parser = new v1939();
    resp.data = parser.parse(body, shape);
} };
const v1965 = {};
v1965.constructor = v1937;
v1937.prototype = v1965;
v1936.push(v1937);
v1904.extractData = v1936;
const v1966 = [];
var v1967;
var v1968 = v163;
var v1969 = v3;
var v1970 = v40;
v1967 = function extractError(resp) { var error = {}; var httpResponse = resp.httpResponse; error.code = httpResponse.headers[\\"x-amzn-errortype\\"] || \\"UnknownError\\"; if (typeof error.code === \\"string\\") {
    error.code = error.code.split(\\":\\")[0];
} if (httpResponse.body.length > 0) {
    try {
        var e = v1968.parse(httpResponse.body.toString());
        var code = e.__type || e.code || e.Code;
        if (code) {
            error.code = code.split(\\"#\\").pop();
        }
        if (error.code === \\"RequestEntityTooLarge\\") {
            error.message = \\"Request body must be less than 1 MB\\";
        }
        else {
            error.message = (e.message || e.Message || null);
        }
    }
    catch (e) {
        error.statusCode = httpResponse.statusCode;
        error.message = httpResponse.statusMessage;
    }
}
else {
    error.statusCode = httpResponse.statusCode;
    error.message = httpResponse.statusCode.toString();
} resp.error = v1969.error(new v1970(), error); };
const v1971 = {};
v1971.constructor = v1967;
v1967.prototype = v1971;
v1966.push(v1967);
v1904.extractError = v1966;
v1903._events = v1904;
v1903.BUILD = v1906;
v1903.EXTRACT_DATA = v1937;
v1903.EXTRACT_ERROR = v1967;
const v1972 = Object.create(v401);
const v1973 = {};
const v1974 = [];
var v1975;
const v1977 = {};
var v1978;
var v1980;
v1980 = function populateMethod(req) { req.httpRequest.method = req.service.api.operations[req.operation].httpMethod; };
const v1981 = {};
v1981.constructor = v1980;
v1980.prototype = v1981;
var v1979 = v1980;
var v1983;
var v1985;
var v1986 = v3;
var v1987 = v373;
var v1988 = v3;
var v1989 = v3;
var v1990 = v136;
var v1991 = v3;
var v1992 = v3;
var v1993 = v33;
var v1994 = v136;
var v1995 = v3;
var v1996 = v136;
var v1997 = v3;
var v1998 = v31;
var v1999 = v33;
var v2000 = v3;
var v2001 = v136;
v1985 = function generateURI(endpointPath, operationPath, input, params) { var uri = [endpointPath, operationPath].join(\\"/\\"); uri = uri.replace(/\\\\/+/g, \\"/\\"); var queryString = {}, queryStringSet = false; v1986.each(input.members, function (name, member) { var paramValue = params[name]; if (paramValue === null || paramValue === undefined)
    return; if (member.location === \\"uri\\") {
    var regex = new v1987(\\"\\\\\\\\{\\" + member.name + \\"(\\\\\\\\+)?\\\\\\\\}\\");
    uri = uri.replace(regex, function (_, plus) { var fn = plus ? v1988.uriEscapePath : v1989.uriEscape; return fn(v1990(paramValue)); });
}
else if (member.location === \\"querystring\\") {
    queryStringSet = true;
    if (member.type === \\"list\\") {
        queryString[member.name] = paramValue.map(function (val) { return v1991.uriEscape(member.member.toWireFormat(val).toString()); });
    }
    else if (member.type === \\"map\\") {
        v1992.each(paramValue, function (key, value) { if (v1993.isArray(value)) {
            queryString[key] = value.map(function (val) { return v1989.uriEscape(v1994(val)); });
        }
        else {
            queryString[key] = v1995.uriEscape(v1996(value));
        } });
    }
    else {
        queryString[member.name] = v1991.uriEscape(member.toWireFormat(paramValue).toString());
    }
} }); if (queryStringSet) {
    uri += (uri.indexOf(\\"?\\") >= 0 ? \\"&\\" : \\"?\\");
    var parts = [];
    v1997.arrayEach(v1998.keys(queryString).sort(), function (key) { if (!v1999.isArray(queryString[key])) {
        queryString[key] = [queryString[key]];
    } for (var i = 0; i < queryString[key].length; i++) {
        parts.push(v2000.uriEscape(v2001(key)) + \\"=\\" + queryString[key][i]);
    } });
    uri += parts.join(\\"&\\");
} return uri; };
const v2002 = {};
v2002.constructor = v1985;
v1985.prototype = v2002;
var v1984 = v1985;
v1983 = function populateURI(req) { var operation = req.service.api.operations[req.operation]; var input = operation.input; var uri = v1984(req.httpRequest.endpoint.path, operation.httpPath, input, req.params); req.httpRequest.path = uri; };
const v2003 = {};
v2003.constructor = v1983;
v1983.prototype = v2003;
var v1982 = v1983;
var v2005;
var v2006 = v3;
v2005 = function populateHeaders(req) { var operation = req.service.api.operations[req.operation]; v2000.each(operation.input.members, function (name, member) { var value = req.params[name]; if (value === null || value === undefined)
    return; if (member.location === \\"headers\\" && member.type === \\"map\\") {
    v2006.each(value, function (key, memberValue) { req.httpRequest.headers[member.name + key] = memberValue; });
}
else if (member.location === \\"header\\") {
    value = member.toWireFormat(value).toString();
    if (member.isJsonValue) {
        value = v37.encode(value);
    }
    req.httpRequest.headers[member.name] = value;
} }); };
const v2007 = {};
v2007.constructor = v2005;
v2005.prototype = v2007;
var v2004 = v2005;
var v2008 = v830;
v1978 = function buildRequest(req) { v1979(req); v1982(req); v2004(req); v2008(req); };
const v2009 = {};
v2009.constructor = v1978;
v1978.prototype = v2009;
v1977.buildRequest = v1978;
var v2010;
v2010 = function extractError() { };
const v2011 = {};
v2011.constructor = v2010;
v2010.prototype = v2011;
v1977.extractError = v2010;
var v2012;
var v2013 = v3;
var v2014 = v373;
var v2015 = v3;
var v2016 = v117;
v2012 = function extractData(resp) { var req = resp.request; var data = {}; var r = resp.httpResponse; var operation = req.service.api.operations[req.operation]; var output = operation.output; var headers = {}; v2013.each(r.headers, function (k, v) { headers[k.toLowerCase()] = v; }); v2013.each(output.members, function (name, member) { var header = (member.name || name).toLowerCase(); if (member.location === \\"headers\\" && member.type === \\"map\\") {
    data[name] = {};
    var location = member.isLocationName ? member.name : \\"\\";
    var pattern = new v2014(\\"^\\" + location + \\"(.+)\\", \\"i\\");
    v2015.each(r.headers, function (k, v) { var result = k.match(pattern); if (result !== null) {
        data[name][result[1]] = v;
    } });
}
else if (member.location === \\"header\\") {
    if (headers[header] !== undefined) {
        var value = member.isJsonValue ? v37.decode(headers[header]) : headers[header];
        data[name] = member.toType(value);
    }
}
else if (member.location === \\"statusCode\\") {
    data[name] = v2016(r.statusCode, 10);
} }); resp.data = data; };
const v2017 = {};
v2017.constructor = v2012;
v2012.prototype = v2017;
v1977.extractData = v2012;
v1977.generateURI = v1985;
var v1976 = v1977;
var v2019;
var v2020 = v1908;
var v2022;
v2022 = function applyContentTypeHeader(req, isBinary) { if (!req.httpRequest.headers[\\"Content-Type\\"]) {
    var type = isBinary ? \\"binary/octet-stream\\" : \\"application/json\\";
    req.httpRequest.headers[\\"Content-Type\\"] = type;
} };
const v2023 = {};
v2023.constructor = v2022;
v2022.prototype = v2023;
var v2021 = v2022;
var v2024 = v2022;
v2019 = function populateBody(req) { var builder = new v2020(); var input = req.service.api.operations[req.operation].input; if (input.payload) {
    var params = {};
    var payloadShape = input.members[input.payload];
    params = req.params[input.payload];
    if (payloadShape.type === \\"structure\\") {
        req.httpRequest.body = builder.build(params || {}, payloadShape);
        v2021(req);
    }
    else if (params !== undefined) {
        req.httpRequest.body = params;
        if (payloadShape.type === \\"binary\\" || payloadShape.isStreaming) {
            v2021(req, true);
        }
    }
}
else {
    req.httpRequest.body = builder.build(req.params, input);
    v2024(req);
} };
const v2025 = {};
v2025.constructor = v2019;
v2019.prototype = v2025;
var v2018 = v2019;
v1975 = function buildRequest(req) { v1976.buildRequest(req); if ([\\"GET\\", \\"HEAD\\", \\"DELETE\\"].indexOf(req.httpRequest.method) < 0) {
    v2018(req);
} };
const v2026 = {};
v2026.constructor = v1975;
v1975.prototype = v2026;
v1974.push(v1975);
v1973.build = v1974;
const v2027 = [];
var v2028;
var v2029 = v1977;
var v2030 = v1940;
var v2031 = undefined;
var v2032 = v3;
var v2033 = v1940;
const v2035 = {};
v2035.buildRequest = v1906;
v2035.extractError = v1967;
v2035.extractData = v1937;
var v2034 = v2035;
var v2036 = v3;
v2028 = function extractData(resp) { v2029.extractData(resp); var req = resp.request; var operation = req.service.api.operations[req.operation]; var rules = req.service.api.operations[req.operation].output || {}; var parser; var hasEventOutput = operation.hasEventOutput; if (rules.payload) {
    var payloadMember = rules.members[rules.payload];
    var body = resp.httpResponse.body;
    if (payloadMember.isEventStream) {
        parser = new v2030();
        resp.data[v2031] = v2032.createEventStream(undefined === 2 ? resp.httpResponse.stream : body, parser, payloadMember);
    }
    else if (payloadMember.type === \\"structure\\" || payloadMember.type === \\"list\\") {
        var parser = new v2033();
        resp.data[rules.payload] = parser.parse(body, payloadMember);
    }
    else if (payloadMember.type === \\"binary\\" || payloadMember.isStreaming) {
        resp.data[rules.payload] = body;
    }
    else {
        resp.data[rules.payload] = payloadMember.toType(body);
    }
}
else {
    var data = resp.data;
    v2034.extractData(resp);
    resp.data = v2036.merge(data, resp.data);
} };
const v2037 = {};
v2037.constructor = v2028;
v2028.prototype = v2037;
v2027.push(v2028);
v1973.extractData = v2027;
const v2038 = [];
var v2039;
var v2040 = v2035;
v2039 = function extractError(resp) { v2040.extractError(resp); };
const v2041 = {};
v2041.constructor = v2039;
v2039.prototype = v2041;
v2038.push(v2039);
v1973.extractError = v2038;
v1972._events = v1973;
v1972.BUILD = v1975;
v1972.EXTRACT_DATA = v2028;
v1972.EXTRACT_ERROR = v2039;
const v2042 = Object.create(v401);
const v2043 = {};
const v2044 = [];
var v2045;
var v2046 = v1977;
var v2048;
v2048 = function populateBody(req) { var input = req.service.api.operations[req.operation].input; var builder = new v937.Builder(); var params = req.params; var payload = input.payload; if (payload) {
    var payloadMember = input.members[payload];
    params = params[payload];
    if (params === undefined)
        return;
    if (payloadMember.type === \\"structure\\") {
        var rootElement = payloadMember.name;
        req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);
    }
    else {
        req.httpRequest.body = params;
    }
}
else {
    req.httpRequest.body = builder.toXML(params, input, input.name || input.shape || v55.upperFirst(req.operation) + \\"Request\\");
} };
const v2049 = {};
v2049.constructor = v2048;
v2048.prototype = v2049;
var v2047 = v2048;
v2045 = function buildRequest(req) { v2046.buildRequest(req); if ([\\"GET\\", \\"HEAD\\"].indexOf(req.httpRequest.method) < 0) {
    v2047(req);
} };
const v2050 = {};
v2050.constructor = v2045;
v2045.prototype = v2050;
v2044.push(v2045);
v2043.build = v2044;
const v2051 = [];
var v2052;
var v2053 = v1977;
var v2054 = v3;
var v2055 = v3;
v2052 = function extractData(resp) { v2053.extractData(resp); var parser; var req = resp.request; var body = resp.httpResponse.body; var operation = req.service.api.operations[req.operation]; var output = operation.output; var hasEventOutput = operation.hasEventOutput; var payload = output.payload; if (payload) {
    var payloadMember = output.members[payload];
    if (payloadMember.isEventStream) {
        parser = new v937.Parser();
        resp.data[payload] = v2054.createEventStream(2 === 2 ? resp.httpResponse.stream : resp.httpResponse.body, parser, payloadMember);
    }
    else if (payloadMember.type === \\"structure\\") {
        parser = new v937.Parser();
        resp.data[payload] = parser.parse(body.toString(), payloadMember);
    }
    else if (payloadMember.type === \\"binary\\" || payloadMember.isStreaming) {
        resp.data[payload] = body;
    }
    else {
        resp.data[payload] = payloadMember.toType(body);
    }
}
else if (body.length > 0) {
    parser = new v937.Parser();
    var data = parser.parse(body.toString(), output);
    v2055.update(resp.data, data);
} };
const v2056 = {};
v2056.constructor = v2052;
v2052.prototype = v2056;
v2051.push(v2052);
v2043.extractData = v2051;
const v2057 = [];
var v2058;
var v2059 = v1977;
var v2060 = v3;
var v2061 = v40;
var v2062 = v3;
var v2063 = v40;
v2058 = function extractError(resp) { v2059.extractError(resp); var data; try {
    data = new v937.Parser().parse(resp.httpResponse.body.toString());
}
catch (e) {
    data = { Code: resp.httpResponse.statusCode, Message: resp.httpResponse.statusMessage };
} if (data.Errors)
    data = data.Errors; if (data.Error)
    data = data.Error; if (data.Code) {
    resp.error = v2060.error(new v2061(), { code: data.Code, message: data.Message });
}
else {
    resp.error = v2062.error(new v2063(), { code: resp.httpResponse.statusCode, message: null });
} };
const v2064 = {};
v2064.constructor = v2058;
v2058.prototype = v2064;
v2057.push(v2058);
v2043.extractError = v2057;
v2042._events = v2043;
v2042.BUILD = v2045;
v2042.EXTRACT_DATA = v2052;
v2042.EXTRACT_ERROR = v2058;
v796 = function serviceInterface() { switch (this.api.protocol) {
    case \\"ec2\\": return v797;
    case \\"query\\": return v797;
    case \\"json\\": return v1903;
    case \\"rest-json\\": return v1972;
    case \\"rest-xml\\": return v2042;
} if (this.api.protocol) {
    throw new v389(\\"Invalid service \`protocol' \\" + this.api.protocol + \\" in API config\\");
} };
const v2065 = {};
v2065.constructor = v796;
v796.prototype = v2065;
v309.serviceInterface = v796;
var v2066;
v2066 = function successfulResponse(resp) { return resp.httpResponse.statusCode < 300; };
const v2067 = {};
v2067.constructor = v2066;
v2066.prototype = v2067;
v309.successfulResponse = v2066;
var v2068;
v2068 = function numRetries() { if (this.config.maxRetries !== undefined) {
    return this.config.maxRetries;
}
else {
    return this.defaultRetryCount;
} };
const v2069 = {};
v2069.constructor = v2068;
v2068.prototype = v2069;
v309.numRetries = v2068;
var v2070;
v2070 = function retryDelays(retryCount, err) { return v3.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err); };
const v2071 = {};
v2071.constructor = v2070;
v2070.prototype = v2071;
v309.retryDelays = v2070;
var v2072;
v2072 = function retryableError(error) { if (this.timeoutError(error))
    return true; if (this.networkingError(error))
    return true; if (this.expiredCredentialsError(error))
    return true; if (this.throttledError(error))
    return true; if (error.statusCode >= 500)
    return true; return false; };
const v2073 = {};
v2073.constructor = v2072;
v2072.prototype = v2073;
v309.retryableError = v2072;
var v2074;
v2074 = function networkingError(error) { return error.code === \\"NetworkingError\\"; };
const v2075 = {};
v2075.constructor = v2074;
v2074.prototype = v2075;
v309.networkingError = v2074;
var v2076;
v2076 = function timeoutError(error) { return error.code === \\"TimeoutError\\"; };
const v2077 = {};
v2077.constructor = v2076;
v2076.prototype = v2077;
v309.timeoutError = v2076;
var v2078;
v2078 = function expiredCredentialsError(error) { return (error.code === \\"ExpiredTokenException\\"); };
const v2079 = {};
v2079.constructor = v2078;
v2078.prototype = v2079;
v309.expiredCredentialsError = v2078;
var v2080;
v2080 = function clockSkewError(error) { switch (error.code) {
    case \\"RequestTimeTooSkewed\\":
    case \\"RequestExpired\\":
    case \\"InvalidSignatureException\\":
    case \\"SignatureDoesNotMatch\\":
    case \\"AuthFailure\\":
    case \\"RequestInTheFuture\\": return true;
    default: return false;
} };
const v2081 = {};
v2081.constructor = v2080;
v2080.prototype = v2081;
v309.clockSkewError = v2080;
var v2082;
v2082 = function getSkewCorrectedDate() { return new v386(v386.now() + this.config.systemClockOffset); };
const v2083 = {};
v2083.constructor = v2082;
v2082.prototype = v2083;
v309.getSkewCorrectedDate = v2082;
var v2084;
v2084 = function applyClockOffset(newServerTime) { if (newServerTime) {
    this.config.systemClockOffset = newServerTime - v386.now();
} };
const v2085 = {};
v2085.constructor = v2084;
v2084.prototype = v2085;
v309.applyClockOffset = v2084;
var v2086;
var v2087 = v787;
v2086 = function isClockSkewed(newServerTime) { if (newServerTime) {
    return v2087.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;
} };
const v2088 = {};
v2088.constructor = v2086;
v2086.prototype = v2088;
v309.isClockSkewed = v2086;
var v2089;
v2089 = function throttledError(error) { if (error.statusCode === 429)
    return true; switch (error.code) {
    case \\"ProvisionedThroughputExceededException\\":
    case \\"Throttling\\":
    case \\"ThrottlingException\\":
    case \\"RequestLimitExceeded\\":
    case \\"RequestThrottled\\":
    case \\"RequestThrottledException\\":
    case \\"TooManyRequestsException\\":
    case \\"TransactionInProgressException\\":
    case \\"EC2ThrottledException\\": return true;
    default: return false;
} };
const v2090 = {};
v2090.constructor = v2089;
v2089.prototype = v2090;
v309.throttledError = v2089;
var v2091;
v2091 = function endpointFromTemplate(endpoint) { if (typeof endpoint !== \\"string\\")
    return endpoint; var e = endpoint; e = e.replace(/\\\\{service\\\\}/g, this.api.endpointPrefix); e = e.replace(/\\\\{region\\\\}/g, this.config.region); e = e.replace(/\\\\{scheme\\\\}/g, this.config.sslEnabled ? \\"https\\" : \\"http\\"); return e; };
const v2092 = {};
v2092.constructor = v2091;
v2091.prototype = v2092;
v309.endpointFromTemplate = v2091;
var v2093;
v2093 = function setEndpoint(endpoint) { this.endpoint = new v375.Endpoint(endpoint, this.config); };
const v2094 = {};
v2094.constructor = v2093;
v2093.prototype = v2094;
v309.setEndpoint = v2093;
var v2095;
v2095 = function paginationConfig(operation, throwException) { var paginator = this.api.operations[operation].paginator; if (!paginator) {
    if (throwException) {
        var e = new v389();
        throw v3.error(e, \\"No pagination configuration for \\" + operation);
    }
    return null;
} return paginator; };
const v2096 = {};
v2096.constructor = v2095;
v2095.prototype = v2096;
v309.paginationConfig = v2095;
v309.listeners = v403;
v309.on = v405;
v309.onAsync = v407;
v309.removeListener = v409;
v309.removeAllListeners = v411;
v309.emit = v413;
v309.callListeners = v415;
v309.addListeners = v418;
v309.addNamedListener = v420;
v309.addNamedAsyncListener = v422;
v309.addNamedListeners = v424;
v309.addListener = v405;
const v2097 = {};
v309._events = v2097;
const v2098 = {};
var v2099;
v2099 = function Publisher(options) { options = options || {}; this.enabled = options.enabled || false; this.port = options.port || 31000; this.clientId = options.clientId || \\"\\"; this.address = options.host || \\"127.0.0.1\\"; if (this.clientId.length > 255) {
    this.clientId = this.clientId.substr(0, 255);
} this.messagesInFlight = 0; };
v2099.prototype = v2098;
v2098.constructor = v2099;
const v2100 = {};
v2100.UserAgent = 256;
v2100.SdkException = 128;
v2100.SdkExceptionMessage = 512;
v2100.AwsException = 128;
v2100.AwsExceptionMessage = 512;
v2100.FinalSdkException = 128;
v2100.FinalSdkExceptionMessage = 512;
v2100.FinalAwsException = 128;
v2100.FinalAwsExceptionMessage = 512;
v2098.fieldsToTrim = v2100;
var v2101;
var v2102 = v31;
v2101 = function (event) { var trimmableFields = v2102.keys(this.fieldsToTrim); for (var i = 0, iLen = trimmableFields.length; i < iLen; i++) {
    var field = trimmableFields[i];
    if (event.hasOwnProperty(field)) {
        var maxLength = this.fieldsToTrim[field];
        var value = event[field];
        if (value && value.length > maxLength) {
            event[field] = value.substr(0, maxLength);
        }
    }
} return event; };
const v2103 = {};
v2103.constructor = v2101;
v2101.prototype = v2103;
v2098.trimFields = v2101;
var v2104;
var v2105 = v42;
var v2106 = v163;
var v2107 = 8192;
v2104 = function (event) { event.ClientId = this.clientId; this.trimFields(event); var message = v2105(v2106.stringify(event)); if (!this.enabled || message.length > v2107) {
    return;
} this.publishDatagram(message); };
const v2108 = {};
v2108.constructor = v2104;
v2104.prototype = v2108;
v2098.eventHandler = v2104;
var v2109;
v2109 = function (message) { var self = this; var client = this.getClient(); this.messagesInFlight++; this.client.send(message, 0, message.length, this.port, this.address, function (err, bytes) { if (--self.messagesInFlight <= 0) {
    self.destroyClient();
} }); };
const v2110 = {};
v2110.constructor = v2109;
v2109.prototype = v2110;
v2098.publishDatagram = v2109;
var v2111;
const v2113 = require(\\"dgram\\");
var v2112 = v2113;
v2111 = function () { if (!this.client) {
    this.client = v2112.createSocket(\\"udp4\\");
} return this.client; };
const v2114 = {};
v2114.constructor = v2111;
v2111.prototype = v2114;
v2098.getClient = v2111;
var v2115;
v2115 = function () { if (this.client) {
    this.client.close();
    this.client = void 0;
} };
const v2116 = {};
v2116.constructor = v2115;
v2115.prototype = v2116;
v2098.destroyClient = v2115;
const v2117 = Object.create(v2098);
v2117.enabled = false;
v2117.port = 31000;
v2117.clientId = \\"\\";
v2117.address = \\"127.0.0.1\\";
v2117.messagesInFlight = 0;
v309.publisher = v2117;
v299.prototype = v309;
v299.__super__ = v31;
var v2118;
v2118 = function defineMethods(svc) { v3.each(svc.prototype.api.operations, function iterator(method) { if (svc.prototype[method])
    return; var operation = svc.prototype.api.operations[method]; if (operation.authtype === \\"none\\") {
    svc.prototype[method] = function (params, callback) { return this.makeUnauthenticatedRequest(method, params, callback); };
}
else {
    svc.prototype[method] = function (params, callback) { return this.makeRequest(method, params, callback); };
} }); };
const v2119 = {};
v2119.constructor = v2118;
v2118.prototype = v2119;
v299.defineMethods = v2118;
var v2120;
const v2121 = {};
v2121.sts = true;
v2121.cognitoidentity = true;
v2121.acm = true;
v2121.apigateway = true;
v2121.applicationautoscaling = true;
v2121.appstream = true;
v2121.autoscaling = true;
v2121.batch = true;
v2121.budgets = true;
v2121.clouddirectory = true;
v2121.cloudformation = true;
v2121.cloudfront = true;
v2121.cloudhsm = true;
v2121.cloudsearch = true;
v2121.cloudsearchdomain = true;
v2121.cloudtrail = true;
v2121.cloudwatch = true;
v2121.cloudwatchevents = true;
v2121.cloudwatchlogs = true;
v2121.codebuild = true;
v2121.codecommit = true;
v2121.codedeploy = true;
v2121.codepipeline = true;
v2121.cognitoidentityserviceprovider = true;
v2121.cognitosync = true;
v2121.configservice = true;
v2121.cur = true;
v2121.datapipeline = true;
v2121.devicefarm = true;
v2121.directconnect = true;
v2121.directoryservice = true;
v2121.discovery = true;
v2121.dms = true;
v2121.dynamodb = true;
v2121.dynamodbstreams = true;
v2121.ec2 = true;
v2121.ecr = true;
v2121.ecs = true;
v2121.efs = true;
v2121.elasticache = true;
v2121.elasticbeanstalk = true;
v2121.elb = true;
v2121.elbv2 = true;
v2121.emr = true;
v2121.es = true;
v2121.elastictranscoder = true;
v2121.firehose = true;
v2121.gamelift = true;
v2121.glacier = true;
v2121.health = true;
v2121.iam = true;
v2121.importexport = true;
v2121.inspector = true;
v2121.iot = true;
v2121.iotdata = true;
v2121.kinesis = true;
v2121.kinesisanalytics = true;
v2121.kms = true;
v2121.lambda = true;
v2121.lexruntime = true;
v2121.lightsail = true;
v2121.machinelearning = true;
v2121.marketplacecommerceanalytics = true;
v2121.marketplacemetering = true;
v2121.mturk = true;
v2121.mobileanalytics = true;
v2121.opsworks = true;
v2121.opsworkscm = true;
v2121.organizations = true;
v2121.pinpoint = true;
v2121.polly = true;
v2121.rds = true;
v2121.redshift = true;
v2121.rekognition = true;
v2121.resourcegroupstaggingapi = true;
v2121.route53 = true;
v2121.route53domains = true;
v2121.s3 = true;
v2121.s3control = true;
v2121.servicecatalog = true;
v2121.ses = true;
v2121.shield = true;
v2121.simpledb = true;
v2121.sms = true;
v2121.snowball = true;
v2121.sns = true;
v2121.sqs = true;
v2121.ssm = true;
v2121.storagegateway = true;
v2121.stepfunctions = true;
v2121.support = true;
v2121.swf = true;
v2121.xray = true;
v2121.waf = true;
v2121.wafregional = true;
v2121.workdocs = true;
v2121.workspaces = true;
v2121.codestar = true;
v2121.lexmodelbuildingservice = true;
v2121.marketplaceentitlementservice = true;
v2121.athena = true;
v2121.greengrass = true;
v2121.dax = true;
v2121.migrationhub = true;
v2121.cloudhsmv2 = true;
v2121.glue = true;
v2121.mobile = true;
v2121.pricing = true;
v2121.costexplorer = true;
v2121.mediaconvert = true;
v2121.medialive = true;
v2121.mediapackage = true;
v2121.mediastore = true;
v2121.mediastoredata = true;
v2121.appsync = true;
v2121.guardduty = true;
v2121.mq = true;
v2121.comprehend = true;
v2121.iotjobsdataplane = true;
v2121.kinesisvideoarchivedmedia = true;
v2121.kinesisvideomedia = true;
v2121.kinesisvideo = true;
v2121.sagemakerruntime = true;
v2121.sagemaker = true;
v2121.translate = true;
v2121.resourcegroups = true;
v2121.alexaforbusiness = true;
v2121.cloud9 = true;
v2121.serverlessapplicationrepository = true;
v2121.servicediscovery = true;
v2121.workmail = true;
v2121.autoscalingplans = true;
v2121.transcribeservice = true;
v2121.connect = true;
v2121.acmpca = true;
v2121.fms = true;
v2121.secretsmanager = true;
v2121.iotanalytics = true;
v2121.iot1clickdevicesservice = true;
v2121.iot1clickprojects = true;
v2121.pi = true;
v2121.neptune = true;
v2121.mediatailor = true;
v2121.eks = true;
v2121.macie = true;
v2121.dlm = true;
v2121.signer = true;
v2121.chime = true;
v2121.pinpointemail = true;
v2121.ram = true;
v2121.route53resolver = true;
v2121.pinpointsmsvoice = true;
v2121.quicksight = true;
v2121.rdsdataservice = true;
v2121.amplify = true;
v2121.datasync = true;
v2121.robomaker = true;
v2121.transfer = true;
v2121.globalaccelerator = true;
v2121.comprehendmedical = true;
v2121.kinesisanalyticsv2 = true;
v2121.mediaconnect = true;
v2121.fsx = true;
v2121.securityhub = true;
v2121.appmesh = true;
v2121.licensemanager = true;
v2121.kafka = true;
v2121.apigatewaymanagementapi = true;
v2121.apigatewayv2 = true;
v2121.docdb = true;
v2121.backup = true;
v2121.worklink = true;
v2121.textract = true;
v2121.managedblockchain = true;
v2121.mediapackagevod = true;
v2121.groundstation = true;
v2121.iotthingsgraph = true;
v2121.iotevents = true;
v2121.ioteventsdata = true;
v2121.personalize = true;
v2121.personalizeevents = true;
v2121.personalizeruntime = true;
v2121.applicationinsights = true;
v2121.servicequotas = true;
v2121.ec2instanceconnect = true;
v2121.eventbridge = true;
v2121.lakeformation = true;
v2121.forecastservice = true;
v2121.forecastqueryservice = true;
v2121.qldb = true;
v2121.qldbsession = true;
v2121.workmailmessageflow = true;
v2121.codestarnotifications = true;
v2121.savingsplans = true;
v2121.sso = true;
v2121.ssooidc = true;
v2121.marketplacecatalog = true;
v2121.dataexchange = true;
v2121.sesv2 = true;
v2121.migrationhubconfig = true;
v2121.connectparticipant = true;
v2121.appconfig = true;
v2121.iotsecuretunneling = true;
v2121.wafv2 = true;
v2121.elasticinference = true;
v2121.imagebuilder = true;
v2121.schemas = true;
v2121.accessanalyzer = true;
v2121.codegurureviewer = true;
v2121.codeguruprofiler = true;
v2121.computeoptimizer = true;
v2121.frauddetector = true;
v2121.kendra = true;
v2121.networkmanager = true;
v2121.outposts = true;
v2121.augmentedairuntime = true;
v2121.ebs = true;
v2121.kinesisvideosignalingchannels = true;
v2121.detective = true;
v2121.codestarconnections = true;
v2121.synthetics = true;
v2121.iotsitewise = true;
v2121.macie2 = true;
v2121.codeartifact = true;
v2121.honeycode = true;
v2121.ivs = true;
v2121.braket = true;
v2121.identitystore = true;
v2121.appflow = true;
v2121.redshiftdata = true;
v2121.ssoadmin = true;
v2121.timestreamquery = true;
v2121.timestreamwrite = true;
v2121.s3outposts = true;
v2121.databrew = true;
v2121.servicecatalogappregistry = true;
v2121.networkfirewall = true;
v2121.mwaa = true;
v2121.amplifybackend = true;
v2121.appintegrations = true;
v2121.connectcontactlens = true;
v2121.devopsguru = true;
v2121.ecrpublic = true;
v2121.lookoutvision = true;
v2121.sagemakerfeaturestoreruntime = true;
v2121.customerprofiles = true;
v2121.auditmanager = true;
v2121.emrcontainers = true;
v2121.healthlake = true;
v2121.sagemakeredge = true;
v2121.amp = true;
v2121.greengrassv2 = true;
v2121.iotdeviceadvisor = true;
v2121.iotfleethub = true;
v2121.iotwireless = true;
v2121.location = true;
v2121.wellarchitected = true;
v2121.lexmodelsv2 = true;
v2121.lexruntimev2 = true;
v2121.fis = true;
v2121.lookoutmetrics = true;
v2121.mgn = true;
v2121.lookoutequipment = true;
v2121.nimble = true;
v2121.finspace = true;
v2121.finspacedata = true;
v2121.ssmcontacts = true;
v2121.ssmincidents = true;
v2121.applicationcostprofiler = true;
v2121.apprunner = true;
v2121.proton = true;
v2121.route53recoverycluster = true;
v2121.route53recoverycontrolconfig = true;
v2121.route53recoveryreadiness = true;
v2121.chimesdkidentity = true;
v2121.chimesdkmessaging = true;
v2121.snowdevicemanagement = true;
v2121.memorydb = true;
v2121.opensearch = true;
v2121.kafkaconnect = true;
v2121.voiceid = true;
v2121.wisdom = true;
v2121.account = true;
v2121.cloudcontrol = true;
v2121.grafana = true;
v2121.panorama = true;
v2121.chimesdkmeetings = true;
v2121.resiliencehub = true;
v2121.migrationhubstrategy = true;
v2121.appconfigdata = true;
v2121.drs = true;
v2121.migrationhubrefactorspaces = true;
v2121.evidently = true;
v2121.inspector2 = true;
v2121.rbin = true;
v2121.rum = true;
v2121.backupgateway = true;
v2121.iottwinmaker = true;
v2121.workspacesweb = true;
v2121.amplifyuibuilder = true;
v2121.keyspaces = true;
v2121.billingconductor = true;
v2121.gamesparks = true;
v2121.pinpointsmsvoicev2 = true;
v2121.ivschat = true;
v2121.chimesdkmediapipelines = true;
v2121.emrserverless = true;
v2121.m2 = true;
v2121.connectcampaigns = true;
v2121.redshiftserverless = true;
v2121.rolesanywhere = true;
v2121.licensemanagerusersubscriptions = true;
v2121.backupstorage = true;
v2121.privatenetworks = true;
var v2122 = v33;
var v2123 = v138;
var v2124 = v2;
const v2125 = {};
v2125.Publisher = v2099;
var v2126;
var v2128;
var v2129 = v8;
var v2130 = v8;
var v2131 = v8;
v2128 = function fromEnvironment(config) { config.port = config.port || v2129.env.AWS_CSM_PORT; config.enabled = config.enabled || v2130.env.AWS_CSM_ENABLED; config.clientId = config.clientId || v2129.env.AWS_CSM_CLIENT_ID; config.host = config.host || v2131.env.AWS_CSM_HOST; return config.port && config.enabled && config.clientId && config.host || [\\"false\\", \\"0\\"].indexOf(config.enabled) >= 0; };
const v2132 = {};
v2132.constructor = v2128;
v2128.prototype = v2132;
var v2127 = v2128;
var v2134;
var v2135 = v8;
v2134 = function fromConfigFile(config) { var sharedFileConfig; try {
    var configFile = v200.loadFrom({ isConfig: true, filename: v2135.env[\\"AWS_CONFIG_FILE\\"] });
    var sharedFileConfig = configFile[v2131.env.AWS_PROFILE || \\"default\\"];
}
catch (err) {
    return false;
} if (!sharedFileConfig)
    return config; config.port = config.port || sharedFileConfig.csm_port; config.enabled = config.enabled || sharedFileConfig.csm_enabled; config.clientId = config.clientId || sharedFileConfig.csm_client_id; config.host = config.host || sharedFileConfig.csm_host; return config.port && config.enabled && config.clientId && config.host; };
const v2136 = {};
v2136.constructor = v2134;
v2134.prototype = v2136;
var v2133 = v2134;
var v2138;
var v2139 = v117;
v2138 = function toJSType(config) { var falsyNotations = [\\"false\\", \\"0\\", undefined]; if (!config.enabled || falsyNotations.indexOf(config.enabled.toLowerCase()) >= 0) {
    config.enabled = false;
}
else {
    config.enabled = true;
} config.port = config.port ? v2139(config.port, 10) : undefined; return config; };
const v2140 = {};
v2140.constructor = v2138;
v2138.prototype = v2140;
var v2137 = v2138;
var v2141 = v2138;
v2126 = function resolveMonitoringConfig() { var config = { port: undefined, clientId: undefined, enabled: undefined, host: undefined }; if (v2127(config) || v2133(config))
    return v2137(config); return v2141(config); };
const v2142 = {};
v2142.constructor = v2126;
v2126.prototype = v2142;
v2125.configProvider = v2126;
v2120 = function defineService(serviceIdentifier, versions, features) { v2121[serviceIdentifier] = true; if (!v2122.isArray(versions)) {
    features = versions;
    versions = [];
} var svc = v2123(v381.Service, features || {}); if (typeof serviceIdentifier === \\"string\\") {
    v2124.Service.addVersions(svc, versions);
    var identifier = svc.serviceIdentifier || serviceIdentifier;
    svc.serviceIdentifier = identifier;
}
else {
    svc.prototype.api = serviceIdentifier;
    v375.Service.defineMethods(svc);
} v375.SequentialExecutor.call(this.prototype); if (!this.prototype.publisher && v2125) {
    var Publisher = v2125.Publisher;
    var configProvider = v2125.configProvider;
    var publisherConfig = configProvider();
    this.prototype.publisher = new Publisher(publisherConfig);
    if (publisherConfig.enabled) {
        undefined = true;
    }
} v381.SequentialExecutor.call(svc.prototype); v381.Service.addDefaultMonitoringListeners(svc.prototype); return svc; };
const v2143 = {};
v2143.constructor = v2120;
v2120.prototype = v2143;
v299.defineService = v2120;
var v2144;
var v2145 = v31;
v2144 = function addVersions(svc, versions) { if (!v2122.isArray(versions))
    versions = [versions]; svc.services = svc.services || {}; for (var i = 0; i < versions.length; i++) {
    if (svc.services[versions[i]] === undefined) {
        svc.services[versions[i]] = null;
    }
} svc.apiVersions = v2145.keys(svc.services).sort(); };
const v2146 = {};
v2146.constructor = v2144;
v2144.prototype = v2146;
v299.addVersions = v2144;
var v2147;
var v2148 = v138;
var v2150;
var v2151 = v144;
var v2152 = v144;
var v2153 = v144;
var v2154 = v144;
var v2155 = v144;
var v2156 = v144;
var v2157 = v144;
var v2158 = v144;
var v2159 = v144;
const v2161 = {};
const v2162 = {};
v2162.name = \\"ACM\\";
v2162.cors = true;
v2161.acm = v2162;
const v2163 = {};
v2163.name = \\"APIGateway\\";
v2163.cors = true;
v2161.apigateway = v2163;
const v2164 = {};
v2164.prefix = \\"application-autoscaling\\";
v2164.name = \\"ApplicationAutoScaling\\";
v2164.cors = true;
v2161.applicationautoscaling = v2164;
const v2165 = {};
v2165.name = \\"AppStream\\";
v2161.appstream = v2165;
const v2166 = {};
v2166.name = \\"AutoScaling\\";
v2166.cors = true;
v2161.autoscaling = v2166;
const v2167 = {};
v2167.name = \\"Batch\\";
v2161.batch = v2167;
const v2168 = {};
v2168.name = \\"Budgets\\";
v2161.budgets = v2168;
const v2169 = {};
v2169.name = \\"CloudDirectory\\";
const v2170 = [];
v2170.push(\\"2016-05-10*\\");
v2169.versions = v2170;
v2161.clouddirectory = v2169;
const v2171 = {};
v2171.name = \\"CloudFormation\\";
v2171.cors = true;
v2161.cloudformation = v2171;
const v2172 = {};
v2172.name = \\"CloudFront\\";
const v2173 = [];
v2173.push(\\"2013-05-12*\\", \\"2013-11-11*\\", \\"2014-05-31*\\", \\"2014-10-21*\\", \\"2014-11-06*\\", \\"2015-04-17*\\", \\"2015-07-27*\\", \\"2015-09-17*\\", \\"2016-01-13*\\", \\"2016-01-28*\\", \\"2016-08-01*\\", \\"2016-08-20*\\", \\"2016-09-07*\\", \\"2016-09-29*\\", \\"2016-11-25*\\", \\"2017-03-25*\\", \\"2017-10-30*\\", \\"2018-06-18*\\", \\"2018-11-05*\\", \\"2019-03-26*\\");
v2172.versions = v2173;
v2172.cors = true;
v2161.cloudfront = v2172;
const v2174 = {};
v2174.name = \\"CloudHSM\\";
v2174.cors = true;
v2161.cloudhsm = v2174;
const v2175 = {};
v2175.name = \\"CloudSearch\\";
v2161.cloudsearch = v2175;
const v2176 = {};
v2176.name = \\"CloudSearchDomain\\";
v2161.cloudsearchdomain = v2176;
const v2177 = {};
v2177.name = \\"CloudTrail\\";
v2177.cors = true;
v2161.cloudtrail = v2177;
const v2178 = {};
v2178.prefix = \\"monitoring\\";
v2178.name = \\"CloudWatch\\";
v2178.cors = true;
v2161.cloudwatch = v2178;
const v2179 = {};
v2179.prefix = \\"events\\";
v2179.name = \\"CloudWatchEvents\\";
const v2180 = [];
v2180.push(\\"2014-02-03*\\");
v2179.versions = v2180;
v2179.cors = true;
v2161.cloudwatchevents = v2179;
const v2181 = {};
v2181.prefix = \\"logs\\";
v2181.name = \\"CloudWatchLogs\\";
v2181.cors = true;
v2161.cloudwatchlogs = v2181;
const v2182 = {};
v2182.name = \\"CodeBuild\\";
v2182.cors = true;
v2161.codebuild = v2182;
const v2183 = {};
v2183.name = \\"CodeCommit\\";
v2183.cors = true;
v2161.codecommit = v2183;
const v2184 = {};
v2184.name = \\"CodeDeploy\\";
v2184.cors = true;
v2161.codedeploy = v2184;
const v2185 = {};
v2185.name = \\"CodePipeline\\";
v2185.cors = true;
v2161.codepipeline = v2185;
const v2186 = {};
v2186.prefix = \\"cognito-identity\\";
v2186.name = \\"CognitoIdentity\\";
v2186.cors = true;
v2161.cognitoidentity = v2186;
const v2187 = {};
v2187.prefix = \\"cognito-idp\\";
v2187.name = \\"CognitoIdentityServiceProvider\\";
v2187.cors = true;
v2161.cognitoidentityserviceprovider = v2187;
const v2188 = {};
v2188.prefix = \\"cognito-sync\\";
v2188.name = \\"CognitoSync\\";
v2188.cors = true;
v2161.cognitosync = v2188;
const v2189 = {};
v2189.prefix = \\"config\\";
v2189.name = \\"ConfigService\\";
v2189.cors = true;
v2161.configservice = v2189;
const v2190 = {};
v2190.name = \\"CUR\\";
v2190.cors = true;
v2161.cur = v2190;
const v2191 = {};
v2191.name = \\"DataPipeline\\";
v2161.datapipeline = v2191;
const v2192 = {};
v2192.name = \\"DeviceFarm\\";
v2192.cors = true;
v2161.devicefarm = v2192;
const v2193 = {};
v2193.name = \\"DirectConnect\\";
v2193.cors = true;
v2161.directconnect = v2193;
const v2194 = {};
v2194.prefix = \\"ds\\";
v2194.name = \\"DirectoryService\\";
v2161.directoryservice = v2194;
const v2195 = {};
v2195.name = \\"Discovery\\";
v2161.discovery = v2195;
const v2196 = {};
v2196.name = \\"DMS\\";
v2161.dms = v2196;
const v2197 = {};
v2197.name = \\"DynamoDB\\";
v2197.cors = true;
v2161.dynamodb = v2197;
const v2198 = {};
v2198.prefix = \\"streams.dynamodb\\";
v2198.name = \\"DynamoDBStreams\\";
v2198.cors = true;
v2161.dynamodbstreams = v2198;
const v2199 = {};
v2199.name = \\"EC2\\";
const v2200 = [];
v2200.push(\\"2013-06-15*\\", \\"2013-10-15*\\", \\"2014-02-01*\\", \\"2014-05-01*\\", \\"2014-06-15*\\", \\"2014-09-01*\\", \\"2014-10-01*\\", \\"2015-03-01*\\", \\"2015-04-15*\\", \\"2015-10-01*\\", \\"2016-04-01*\\", \\"2016-09-15*\\");
v2199.versions = v2200;
v2199.cors = true;
v2161.ec2 = v2199;
const v2201 = {};
v2201.name = \\"ECR\\";
v2201.cors = true;
v2161.ecr = v2201;
const v2202 = {};
v2202.name = \\"ECS\\";
v2202.cors = true;
v2161.ecs = v2202;
const v2203 = {};
v2203.prefix = \\"elasticfilesystem\\";
v2203.name = \\"EFS\\";
v2203.cors = true;
v2161.efs = v2203;
const v2204 = {};
v2204.name = \\"ElastiCache\\";
const v2205 = [];
v2205.push(\\"2012-11-15*\\", \\"2014-03-24*\\", \\"2014-07-15*\\", \\"2014-09-30*\\");
v2204.versions = v2205;
v2204.cors = true;
v2161.elasticache = v2204;
const v2206 = {};
v2206.name = \\"ElasticBeanstalk\\";
v2206.cors = true;
v2161.elasticbeanstalk = v2206;
const v2207 = {};
v2207.prefix = \\"elasticloadbalancing\\";
v2207.name = \\"ELB\\";
v2207.cors = true;
v2161.elb = v2207;
const v2208 = {};
v2208.prefix = \\"elasticloadbalancingv2\\";
v2208.name = \\"ELBv2\\";
v2208.cors = true;
v2161.elbv2 = v2208;
const v2209 = {};
v2209.prefix = \\"elasticmapreduce\\";
v2209.name = \\"EMR\\";
v2209.cors = true;
v2161.emr = v2209;
const v2210 = {};
v2210.name = \\"ES\\";
v2161.es = v2210;
const v2211 = {};
v2211.name = \\"ElasticTranscoder\\";
v2211.cors = true;
v2161.elastictranscoder = v2211;
const v2212 = {};
v2212.name = \\"Firehose\\";
v2212.cors = true;
v2161.firehose = v2212;
const v2213 = {};
v2213.name = \\"GameLift\\";
v2213.cors = true;
v2161.gamelift = v2213;
const v2214 = {};
v2214.name = \\"Glacier\\";
v2161.glacier = v2214;
const v2215 = {};
v2215.name = \\"Health\\";
v2161.health = v2215;
const v2216 = {};
v2216.name = \\"IAM\\";
v2216.cors = true;
v2161.iam = v2216;
const v2217 = {};
v2217.name = \\"ImportExport\\";
v2161.importexport = v2217;
const v2218 = {};
v2218.name = \\"Inspector\\";
const v2219 = [];
v2219.push(\\"2015-08-18*\\");
v2218.versions = v2219;
v2218.cors = true;
v2161.inspector = v2218;
const v2220 = {};
v2220.name = \\"Iot\\";
v2220.cors = true;
v2161.iot = v2220;
const v2221 = {};
v2221.prefix = \\"iot-data\\";
v2221.name = \\"IotData\\";
v2221.cors = true;
v2161.iotdata = v2221;
const v2222 = {};
v2222.name = \\"Kinesis\\";
v2222.cors = true;
v2161.kinesis = v2222;
const v2223 = {};
v2223.name = \\"KinesisAnalytics\\";
v2161.kinesisanalytics = v2223;
const v2224 = {};
v2224.name = \\"KMS\\";
v2224.cors = true;
v2161.kms = v2224;
const v2225 = {};
v2225.name = \\"Lambda\\";
v2225.cors = true;
v2161.lambda = v2225;
const v2226 = {};
v2226.prefix = \\"runtime.lex\\";
v2226.name = \\"LexRuntime\\";
v2226.cors = true;
v2161.lexruntime = v2226;
const v2227 = {};
v2227.name = \\"Lightsail\\";
v2161.lightsail = v2227;
const v2228 = {};
v2228.name = \\"MachineLearning\\";
v2228.cors = true;
v2161.machinelearning = v2228;
const v2229 = {};
v2229.name = \\"MarketplaceCommerceAnalytics\\";
v2229.cors = true;
v2161.marketplacecommerceanalytics = v2229;
const v2230 = {};
v2230.prefix = \\"meteringmarketplace\\";
v2230.name = \\"MarketplaceMetering\\";
v2161.marketplacemetering = v2230;
const v2231 = {};
v2231.prefix = \\"mturk-requester\\";
v2231.name = \\"MTurk\\";
v2231.cors = true;
v2161.mturk = v2231;
const v2232 = {};
v2232.name = \\"MobileAnalytics\\";
v2232.cors = true;
v2161.mobileanalytics = v2232;
const v2233 = {};
v2233.name = \\"OpsWorks\\";
v2233.cors = true;
v2161.opsworks = v2233;
const v2234 = {};
v2234.name = \\"OpsWorksCM\\";
v2161.opsworkscm = v2234;
const v2235 = {};
v2235.name = \\"Organizations\\";
v2161.organizations = v2235;
const v2236 = {};
v2236.name = \\"Pinpoint\\";
v2161.pinpoint = v2236;
const v2237 = {};
v2237.name = \\"Polly\\";
v2237.cors = true;
v2161.polly = v2237;
const v2238 = {};
v2238.name = \\"RDS\\";
const v2239 = [];
v2239.push(\\"2014-09-01*\\");
v2238.versions = v2239;
v2238.cors = true;
v2161.rds = v2238;
const v2240 = {};
v2240.name = \\"Redshift\\";
v2240.cors = true;
v2161.redshift = v2240;
const v2241 = {};
v2241.name = \\"Rekognition\\";
v2241.cors = true;
v2161.rekognition = v2241;
const v2242 = {};
v2242.name = \\"ResourceGroupsTaggingAPI\\";
v2161.resourcegroupstaggingapi = v2242;
const v2243 = {};
v2243.name = \\"Route53\\";
v2243.cors = true;
v2161.route53 = v2243;
const v2244 = {};
v2244.name = \\"Route53Domains\\";
v2244.cors = true;
v2161.route53domains = v2244;
const v2245 = {};
v2245.name = \\"S3\\";
v2245.dualstackAvailable = true;
v2245.cors = true;
v2161.s3 = v2245;
const v2246 = {};
v2246.name = \\"S3Control\\";
v2246.dualstackAvailable = true;
v2246.xmlNoDefaultLists = true;
v2161.s3control = v2246;
const v2247 = {};
v2247.name = \\"ServiceCatalog\\";
v2247.cors = true;
v2161.servicecatalog = v2247;
const v2248 = {};
v2248.prefix = \\"email\\";
v2248.name = \\"SES\\";
v2248.cors = true;
v2161.ses = v2248;
const v2249 = {};
v2249.name = \\"Shield\\";
v2161.shield = v2249;
const v2250 = {};
v2250.prefix = \\"sdb\\";
v2250.name = \\"SimpleDB\\";
v2161.simpledb = v2250;
const v2251 = {};
v2251.name = \\"SMS\\";
v2161.sms = v2251;
const v2252 = {};
v2252.name = \\"Snowball\\";
v2161.snowball = v2252;
const v2253 = {};
v2253.name = \\"SNS\\";
v2253.cors = true;
v2161.sns = v2253;
const v2254 = {};
v2254.name = \\"SQS\\";
v2254.cors = true;
v2161.sqs = v2254;
const v2255 = {};
v2255.name = \\"SSM\\";
v2255.cors = true;
v2161.ssm = v2255;
const v2256 = {};
v2256.name = \\"StorageGateway\\";
v2256.cors = true;
v2161.storagegateway = v2256;
const v2257 = {};
v2257.prefix = \\"states\\";
v2257.name = \\"StepFunctions\\";
v2161.stepfunctions = v2257;
const v2258 = {};
v2258.name = \\"STS\\";
v2258.cors = true;
v2161.sts = v2258;
const v2259 = {};
v2259.name = \\"Support\\";
v2161.support = v2259;
const v2260 = {};
v2260.name = \\"SWF\\";
v2161.swf = v2260;
const v2261 = {};
v2261.name = \\"XRay\\";
v2261.cors = true;
v2161.xray = v2261;
const v2262 = {};
v2262.name = \\"WAF\\";
v2262.cors = true;
v2161.waf = v2262;
const v2263 = {};
v2263.prefix = \\"waf-regional\\";
v2263.name = \\"WAFRegional\\";
v2161.wafregional = v2263;
const v2264 = {};
v2264.name = \\"WorkDocs\\";
v2264.cors = true;
v2161.workdocs = v2264;
const v2265 = {};
v2265.name = \\"WorkSpaces\\";
v2161.workspaces = v2265;
const v2266 = {};
v2266.name = \\"CodeStar\\";
v2161.codestar = v2266;
const v2267 = {};
v2267.prefix = \\"lex-models\\";
v2267.name = \\"LexModelBuildingService\\";
v2267.cors = true;
v2161.lexmodelbuildingservice = v2267;
const v2268 = {};
v2268.prefix = \\"entitlement.marketplace\\";
v2268.name = \\"MarketplaceEntitlementService\\";
v2161.marketplaceentitlementservice = v2268;
const v2269 = {};
v2269.name = \\"Athena\\";
v2269.cors = true;
v2161.athena = v2269;
const v2270 = {};
v2270.name = \\"Greengrass\\";
v2161.greengrass = v2270;
const v2271 = {};
v2271.name = \\"DAX\\";
v2161.dax = v2271;
const v2272 = {};
v2272.prefix = \\"AWSMigrationHub\\";
v2272.name = \\"MigrationHub\\";
v2161.migrationhub = v2272;
const v2273 = {};
v2273.name = \\"CloudHSMV2\\";
v2273.cors = true;
v2161.cloudhsmv2 = v2273;
const v2274 = {};
v2274.name = \\"Glue\\";
v2161.glue = v2274;
const v2275 = {};
v2275.name = \\"Mobile\\";
v2161.mobile = v2275;
const v2276 = {};
v2276.name = \\"Pricing\\";
v2276.cors = true;
v2161.pricing = v2276;
const v2277 = {};
v2277.prefix = \\"ce\\";
v2277.name = \\"CostExplorer\\";
v2277.cors = true;
v2161.costexplorer = v2277;
const v2278 = {};
v2278.name = \\"MediaConvert\\";
v2161.mediaconvert = v2278;
const v2279 = {};
v2279.name = \\"MediaLive\\";
v2161.medialive = v2279;
const v2280 = {};
v2280.name = \\"MediaPackage\\";
v2161.mediapackage = v2280;
const v2281 = {};
v2281.name = \\"MediaStore\\";
v2161.mediastore = v2281;
const v2282 = {};
v2282.prefix = \\"mediastore-data\\";
v2282.name = \\"MediaStoreData\\";
v2282.cors = true;
v2161.mediastoredata = v2282;
const v2283 = {};
v2283.name = \\"AppSync\\";
v2161.appsync = v2283;
const v2284 = {};
v2284.name = \\"GuardDuty\\";
v2161.guardduty = v2284;
const v2285 = {};
v2285.name = \\"MQ\\";
v2161.mq = v2285;
const v2286 = {};
v2286.name = \\"Comprehend\\";
v2286.cors = true;
v2161.comprehend = v2286;
const v2287 = {};
v2287.prefix = \\"iot-jobs-data\\";
v2287.name = \\"IoTJobsDataPlane\\";
v2161.iotjobsdataplane = v2287;
const v2288 = {};
v2288.prefix = \\"kinesis-video-archived-media\\";
v2288.name = \\"KinesisVideoArchivedMedia\\";
v2288.cors = true;
v2161.kinesisvideoarchivedmedia = v2288;
const v2289 = {};
v2289.prefix = \\"kinesis-video-media\\";
v2289.name = \\"KinesisVideoMedia\\";
v2289.cors = true;
v2161.kinesisvideomedia = v2289;
const v2290 = {};
v2290.name = \\"KinesisVideo\\";
v2290.cors = true;
v2161.kinesisvideo = v2290;
const v2291 = {};
v2291.prefix = \\"runtime.sagemaker\\";
v2291.name = \\"SageMakerRuntime\\";
v2161.sagemakerruntime = v2291;
const v2292 = {};
v2292.name = \\"SageMaker\\";
v2161.sagemaker = v2292;
const v2293 = {};
v2293.name = \\"Translate\\";
v2293.cors = true;
v2161.translate = v2293;
const v2294 = {};
v2294.prefix = \\"resource-groups\\";
v2294.name = \\"ResourceGroups\\";
v2294.cors = true;
v2161.resourcegroups = v2294;
const v2295 = {};
v2295.name = \\"AlexaForBusiness\\";
v2161.alexaforbusiness = v2295;
const v2296 = {};
v2296.name = \\"Cloud9\\";
v2161.cloud9 = v2296;
const v2297 = {};
v2297.prefix = \\"serverlessrepo\\";
v2297.name = \\"ServerlessApplicationRepository\\";
v2161.serverlessapplicationrepository = v2297;
const v2298 = {};
v2298.name = \\"ServiceDiscovery\\";
v2161.servicediscovery = v2298;
const v2299 = {};
v2299.name = \\"WorkMail\\";
v2161.workmail = v2299;
const v2300 = {};
v2300.prefix = \\"autoscaling-plans\\";
v2300.name = \\"AutoScalingPlans\\";
v2161.autoscalingplans = v2300;
const v2301 = {};
v2301.prefix = \\"transcribe\\";
v2301.name = \\"TranscribeService\\";
v2161.transcribeservice = v2301;
const v2302 = {};
v2302.name = \\"Connect\\";
v2302.cors = true;
v2161.connect = v2302;
const v2303 = {};
v2303.prefix = \\"acm-pca\\";
v2303.name = \\"ACMPCA\\";
v2161.acmpca = v2303;
const v2304 = {};
v2304.name = \\"FMS\\";
v2161.fms = v2304;
const v2305 = {};
v2305.name = \\"SecretsManager\\";
v2305.cors = true;
v2161.secretsmanager = v2305;
const v2306 = {};
v2306.name = \\"IoTAnalytics\\";
v2306.cors = true;
v2161.iotanalytics = v2306;
const v2307 = {};
v2307.prefix = \\"iot1click-devices\\";
v2307.name = \\"IoT1ClickDevicesService\\";
v2161.iot1clickdevicesservice = v2307;
const v2308 = {};
v2308.prefix = \\"iot1click-projects\\";
v2308.name = \\"IoT1ClickProjects\\";
v2161.iot1clickprojects = v2308;
const v2309 = {};
v2309.name = \\"PI\\";
v2161.pi = v2309;
const v2310 = {};
v2310.name = \\"Neptune\\";
v2161.neptune = v2310;
const v2311 = {};
v2311.name = \\"MediaTailor\\";
v2161.mediatailor = v2311;
const v2312 = {};
v2312.name = \\"EKS\\";
v2161.eks = v2312;
const v2313 = {};
v2313.name = \\"Macie\\";
v2161.macie = v2313;
const v2314 = {};
v2314.name = \\"DLM\\";
v2161.dlm = v2314;
const v2315 = {};
v2315.name = \\"Signer\\";
v2161.signer = v2315;
const v2316 = {};
v2316.name = \\"Chime\\";
v2161.chime = v2316;
const v2317 = {};
v2317.prefix = \\"pinpoint-email\\";
v2317.name = \\"PinpointEmail\\";
v2161.pinpointemail = v2317;
const v2318 = {};
v2318.name = \\"RAM\\";
v2161.ram = v2318;
const v2319 = {};
v2319.name = \\"Route53Resolver\\";
v2161.route53resolver = v2319;
const v2320 = {};
v2320.prefix = \\"sms-voice\\";
v2320.name = \\"PinpointSMSVoice\\";
v2161.pinpointsmsvoice = v2320;
const v2321 = {};
v2321.name = \\"QuickSight\\";
v2161.quicksight = v2321;
const v2322 = {};
v2322.prefix = \\"rds-data\\";
v2322.name = \\"RDSDataService\\";
v2161.rdsdataservice = v2322;
const v2323 = {};
v2323.name = \\"Amplify\\";
v2161.amplify = v2323;
const v2324 = {};
v2324.name = \\"DataSync\\";
v2161.datasync = v2324;
const v2325 = {};
v2325.name = \\"RoboMaker\\";
v2161.robomaker = v2325;
const v2326 = {};
v2326.name = \\"Transfer\\";
v2161.transfer = v2326;
const v2327 = {};
v2327.name = \\"GlobalAccelerator\\";
v2161.globalaccelerator = v2327;
const v2328 = {};
v2328.name = \\"ComprehendMedical\\";
v2328.cors = true;
v2161.comprehendmedical = v2328;
const v2329 = {};
v2329.name = \\"KinesisAnalyticsV2\\";
v2161.kinesisanalyticsv2 = v2329;
const v2330 = {};
v2330.name = \\"MediaConnect\\";
v2161.mediaconnect = v2330;
const v2331 = {};
v2331.name = \\"FSx\\";
v2161.fsx = v2331;
const v2332 = {};
v2332.name = \\"SecurityHub\\";
v2161.securityhub = v2332;
const v2333 = {};
v2333.name = \\"AppMesh\\";
const v2334 = [];
v2334.push(\\"2018-10-01*\\");
v2333.versions = v2334;
v2161.appmesh = v2333;
const v2335 = {};
v2335.prefix = \\"license-manager\\";
v2335.name = \\"LicenseManager\\";
v2161.licensemanager = v2335;
const v2336 = {};
v2336.name = \\"Kafka\\";
v2161.kafka = v2336;
const v2337 = {};
v2337.name = \\"ApiGatewayManagementApi\\";
v2161.apigatewaymanagementapi = v2337;
const v2338 = {};
v2338.name = \\"ApiGatewayV2\\";
v2161.apigatewayv2 = v2338;
const v2339 = {};
v2339.name = \\"DocDB\\";
v2161.docdb = v2339;
const v2340 = {};
v2340.name = \\"Backup\\";
v2161.backup = v2340;
const v2341 = {};
v2341.name = \\"WorkLink\\";
v2161.worklink = v2341;
const v2342 = {};
v2342.name = \\"Textract\\";
v2161.textract = v2342;
const v2343 = {};
v2343.name = \\"ManagedBlockchain\\";
v2161.managedblockchain = v2343;
const v2344 = {};
v2344.prefix = \\"mediapackage-vod\\";
v2344.name = \\"MediaPackageVod\\";
v2161.mediapackagevod = v2344;
const v2345 = {};
v2345.name = \\"GroundStation\\";
v2161.groundstation = v2345;
const v2346 = {};
v2346.name = \\"IoTThingsGraph\\";
v2161.iotthingsgraph = v2346;
const v2347 = {};
v2347.name = \\"IoTEvents\\";
v2161.iotevents = v2347;
const v2348 = {};
v2348.prefix = \\"iotevents-data\\";
v2348.name = \\"IoTEventsData\\";
v2161.ioteventsdata = v2348;
const v2349 = {};
v2349.name = \\"Personalize\\";
v2349.cors = true;
v2161.personalize = v2349;
const v2350 = {};
v2350.prefix = \\"personalize-events\\";
v2350.name = \\"PersonalizeEvents\\";
v2350.cors = true;
v2161.personalizeevents = v2350;
const v2351 = {};
v2351.prefix = \\"personalize-runtime\\";
v2351.name = \\"PersonalizeRuntime\\";
v2351.cors = true;
v2161.personalizeruntime = v2351;
const v2352 = {};
v2352.prefix = \\"application-insights\\";
v2352.name = \\"ApplicationInsights\\";
v2161.applicationinsights = v2352;
const v2353 = {};
v2353.prefix = \\"service-quotas\\";
v2353.name = \\"ServiceQuotas\\";
v2161.servicequotas = v2353;
const v2354 = {};
v2354.prefix = \\"ec2-instance-connect\\";
v2354.name = \\"EC2InstanceConnect\\";
v2161.ec2instanceconnect = v2354;
const v2355 = {};
v2355.name = \\"EventBridge\\";
v2161.eventbridge = v2355;
const v2356 = {};
v2356.name = \\"LakeFormation\\";
v2161.lakeformation = v2356;
const v2357 = {};
v2357.prefix = \\"forecast\\";
v2357.name = \\"ForecastService\\";
v2357.cors = true;
v2161.forecastservice = v2357;
const v2358 = {};
v2358.prefix = \\"forecastquery\\";
v2358.name = \\"ForecastQueryService\\";
v2358.cors = true;
v2161.forecastqueryservice = v2358;
const v2359 = {};
v2359.name = \\"QLDB\\";
v2161.qldb = v2359;
const v2360 = {};
v2360.prefix = \\"qldb-session\\";
v2360.name = \\"QLDBSession\\";
v2161.qldbsession = v2360;
const v2361 = {};
v2361.name = \\"WorkMailMessageFlow\\";
v2161.workmailmessageflow = v2361;
const v2362 = {};
v2362.prefix = \\"codestar-notifications\\";
v2362.name = \\"CodeStarNotifications\\";
v2161.codestarnotifications = v2362;
const v2363 = {};
v2363.name = \\"SavingsPlans\\";
v2161.savingsplans = v2363;
const v2364 = {};
v2364.name = \\"SSO\\";
v2161.sso = v2364;
const v2365 = {};
v2365.prefix = \\"sso-oidc\\";
v2365.name = \\"SSOOIDC\\";
v2161.ssooidc = v2365;
const v2366 = {};
v2366.prefix = \\"marketplace-catalog\\";
v2366.name = \\"MarketplaceCatalog\\";
v2161.marketplacecatalog = v2366;
const v2367 = {};
v2367.name = \\"DataExchange\\";
v2161.dataexchange = v2367;
const v2368 = {};
v2368.name = \\"SESV2\\";
v2161.sesv2 = v2368;
const v2369 = {};
v2369.prefix = \\"migrationhub-config\\";
v2369.name = \\"MigrationHubConfig\\";
v2161.migrationhubconfig = v2369;
const v2370 = {};
v2370.name = \\"ConnectParticipant\\";
v2161.connectparticipant = v2370;
const v2371 = {};
v2371.name = \\"AppConfig\\";
v2161.appconfig = v2371;
const v2372 = {};
v2372.name = \\"IoTSecureTunneling\\";
v2161.iotsecuretunneling = v2372;
const v2373 = {};
v2373.name = \\"WAFV2\\";
v2161.wafv2 = v2373;
const v2374 = {};
v2374.prefix = \\"elastic-inference\\";
v2374.name = \\"ElasticInference\\";
v2161.elasticinference = v2374;
const v2375 = {};
v2375.name = \\"Imagebuilder\\";
v2161.imagebuilder = v2375;
const v2376 = {};
v2376.name = \\"Schemas\\";
v2161.schemas = v2376;
const v2377 = {};
v2377.name = \\"AccessAnalyzer\\";
v2161.accessanalyzer = v2377;
const v2378 = {};
v2378.prefix = \\"codeguru-reviewer\\";
v2378.name = \\"CodeGuruReviewer\\";
v2161.codegurureviewer = v2378;
const v2379 = {};
v2379.name = \\"CodeGuruProfiler\\";
v2161.codeguruprofiler = v2379;
const v2380 = {};
v2380.prefix = \\"compute-optimizer\\";
v2380.name = \\"ComputeOptimizer\\";
v2161.computeoptimizer = v2380;
const v2381 = {};
v2381.name = \\"FraudDetector\\";
v2161.frauddetector = v2381;
const v2382 = {};
v2382.name = \\"Kendra\\";
v2161.kendra = v2382;
const v2383 = {};
v2383.name = \\"NetworkManager\\";
v2161.networkmanager = v2383;
const v2384 = {};
v2384.name = \\"Outposts\\";
v2161.outposts = v2384;
const v2385 = {};
v2385.prefix = \\"sagemaker-a2i-runtime\\";
v2385.name = \\"AugmentedAIRuntime\\";
v2161.augmentedairuntime = v2385;
const v2386 = {};
v2386.name = \\"EBS\\";
v2161.ebs = v2386;
const v2387 = {};
v2387.prefix = \\"kinesis-video-signaling\\";
v2387.name = \\"KinesisVideoSignalingChannels\\";
v2387.cors = true;
v2161.kinesisvideosignalingchannels = v2387;
const v2388 = {};
v2388.name = \\"Detective\\";
v2161.detective = v2388;
const v2389 = {};
v2389.prefix = \\"codestar-connections\\";
v2389.name = \\"CodeStarconnections\\";
v2161.codestarconnections = v2389;
const v2390 = {};
v2390.name = \\"Synthetics\\";
v2161.synthetics = v2390;
const v2391 = {};
v2391.name = \\"IoTSiteWise\\";
v2161.iotsitewise = v2391;
const v2392 = {};
v2392.name = \\"Macie2\\";
v2161.macie2 = v2392;
const v2393 = {};
v2393.name = \\"CodeArtifact\\";
v2161.codeartifact = v2393;
const v2394 = {};
v2394.name = \\"Honeycode\\";
v2161.honeycode = v2394;
const v2395 = {};
v2395.name = \\"IVS\\";
v2161.ivs = v2395;
const v2396 = {};
v2396.name = \\"Braket\\";
v2161.braket = v2396;
const v2397 = {};
v2397.name = \\"IdentityStore\\";
v2161.identitystore = v2397;
const v2398 = {};
v2398.name = \\"Appflow\\";
v2161.appflow = v2398;
const v2399 = {};
v2399.prefix = \\"redshift-data\\";
v2399.name = \\"RedshiftData\\";
v2161.redshiftdata = v2399;
const v2400 = {};
v2400.prefix = \\"sso-admin\\";
v2400.name = \\"SSOAdmin\\";
v2161.ssoadmin = v2400;
const v2401 = {};
v2401.prefix = \\"timestream-query\\";
v2401.name = \\"TimestreamQuery\\";
v2161.timestreamquery = v2401;
const v2402 = {};
v2402.prefix = \\"timestream-write\\";
v2402.name = \\"TimestreamWrite\\";
v2161.timestreamwrite = v2402;
const v2403 = {};
v2403.name = \\"S3Outposts\\";
v2161.s3outposts = v2403;
const v2404 = {};
v2404.name = \\"DataBrew\\";
v2161.databrew = v2404;
const v2405 = {};
v2405.prefix = \\"servicecatalog-appregistry\\";
v2405.name = \\"ServiceCatalogAppRegistry\\";
v2161.servicecatalogappregistry = v2405;
const v2406 = {};
v2406.prefix = \\"network-firewall\\";
v2406.name = \\"NetworkFirewall\\";
v2161.networkfirewall = v2406;
const v2407 = {};
v2407.name = \\"MWAA\\";
v2161.mwaa = v2407;
const v2408 = {};
v2408.name = \\"AmplifyBackend\\";
v2161.amplifybackend = v2408;
const v2409 = {};
v2409.name = \\"AppIntegrations\\";
v2161.appintegrations = v2409;
const v2410 = {};
v2410.prefix = \\"connect-contact-lens\\";
v2410.name = \\"ConnectContactLens\\";
v2161.connectcontactlens = v2410;
const v2411 = {};
v2411.prefix = \\"devops-guru\\";
v2411.name = \\"DevOpsGuru\\";
v2161.devopsguru = v2411;
const v2412 = {};
v2412.prefix = \\"ecr-public\\";
v2412.name = \\"ECRPUBLIC\\";
v2161.ecrpublic = v2412;
const v2413 = {};
v2413.name = \\"LookoutVision\\";
v2161.lookoutvision = v2413;
const v2414 = {};
v2414.prefix = \\"sagemaker-featurestore-runtime\\";
v2414.name = \\"SageMakerFeatureStoreRuntime\\";
v2161.sagemakerfeaturestoreruntime = v2414;
const v2415 = {};
v2415.prefix = \\"customer-profiles\\";
v2415.name = \\"CustomerProfiles\\";
v2161.customerprofiles = v2415;
const v2416 = {};
v2416.name = \\"AuditManager\\";
v2161.auditmanager = v2416;
const v2417 = {};
v2417.prefix = \\"emr-containers\\";
v2417.name = \\"EMRcontainers\\";
v2161.emrcontainers = v2417;
const v2418 = {};
v2418.name = \\"HealthLake\\";
v2161.healthlake = v2418;
const v2419 = {};
v2419.prefix = \\"sagemaker-edge\\";
v2419.name = \\"SagemakerEdge\\";
v2161.sagemakeredge = v2419;
const v2420 = {};
v2420.name = \\"Amp\\";
v2161.amp = v2420;
const v2421 = {};
v2421.name = \\"GreengrassV2\\";
v2161.greengrassv2 = v2421;
const v2422 = {};
v2422.name = \\"IotDeviceAdvisor\\";
v2161.iotdeviceadvisor = v2422;
const v2423 = {};
v2423.name = \\"IoTFleetHub\\";
v2161.iotfleethub = v2423;
const v2424 = {};
v2424.name = \\"IoTWireless\\";
v2161.iotwireless = v2424;
const v2425 = {};
v2425.name = \\"Location\\";
v2425.cors = true;
v2161.location = v2425;
const v2426 = {};
v2426.name = \\"WellArchitected\\";
v2161.wellarchitected = v2426;
const v2427 = {};
v2427.prefix = \\"models.lex.v2\\";
v2427.name = \\"LexModelsV2\\";
v2161.lexmodelsv2 = v2427;
const v2428 = {};
v2428.prefix = \\"runtime.lex.v2\\";
v2428.name = \\"LexRuntimeV2\\";
v2428.cors = true;
v2161.lexruntimev2 = v2428;
const v2429 = {};
v2429.name = \\"Fis\\";
v2161.fis = v2429;
const v2430 = {};
v2430.name = \\"LookoutMetrics\\";
v2161.lookoutmetrics = v2430;
const v2431 = {};
v2431.name = \\"Mgn\\";
v2161.mgn = v2431;
const v2432 = {};
v2432.name = \\"LookoutEquipment\\";
v2161.lookoutequipment = v2432;
const v2433 = {};
v2433.name = \\"Nimble\\";
v2161.nimble = v2433;
const v2434 = {};
v2434.name = \\"Finspace\\";
v2161.finspace = v2434;
const v2435 = {};
v2435.prefix = \\"finspace-data\\";
v2435.name = \\"Finspacedata\\";
v2161.finspacedata = v2435;
const v2436 = {};
v2436.prefix = \\"ssm-contacts\\";
v2436.name = \\"SSMContacts\\";
v2161.ssmcontacts = v2436;
const v2437 = {};
v2437.prefix = \\"ssm-incidents\\";
v2437.name = \\"SSMIncidents\\";
v2161.ssmincidents = v2437;
const v2438 = {};
v2438.name = \\"ApplicationCostProfiler\\";
v2161.applicationcostprofiler = v2438;
const v2439 = {};
v2439.name = \\"AppRunner\\";
v2161.apprunner = v2439;
const v2440 = {};
v2440.name = \\"Proton\\";
v2161.proton = v2440;
const v2441 = {};
v2441.prefix = \\"route53-recovery-cluster\\";
v2441.name = \\"Route53RecoveryCluster\\";
v2161.route53recoverycluster = v2441;
const v2442 = {};
v2442.prefix = \\"route53-recovery-control-config\\";
v2442.name = \\"Route53RecoveryControlConfig\\";
v2161.route53recoverycontrolconfig = v2442;
const v2443 = {};
v2443.prefix = \\"route53-recovery-readiness\\";
v2443.name = \\"Route53RecoveryReadiness\\";
v2161.route53recoveryreadiness = v2443;
const v2444 = {};
v2444.prefix = \\"chime-sdk-identity\\";
v2444.name = \\"ChimeSDKIdentity\\";
v2161.chimesdkidentity = v2444;
const v2445 = {};
v2445.prefix = \\"chime-sdk-messaging\\";
v2445.name = \\"ChimeSDKMessaging\\";
v2161.chimesdkmessaging = v2445;
const v2446 = {};
v2446.prefix = \\"snow-device-management\\";
v2446.name = \\"SnowDeviceManagement\\";
v2161.snowdevicemanagement = v2446;
const v2447 = {};
v2447.name = \\"MemoryDB\\";
v2161.memorydb = v2447;
const v2448 = {};
v2448.name = \\"OpenSearch\\";
v2161.opensearch = v2448;
const v2449 = {};
v2449.name = \\"KafkaConnect\\";
v2161.kafkaconnect = v2449;
const v2450 = {};
v2450.prefix = \\"voice-id\\";
v2450.name = \\"VoiceID\\";
v2161.voiceid = v2450;
const v2451 = {};
v2451.name = \\"Wisdom\\";
v2161.wisdom = v2451;
const v2452 = {};
v2452.name = \\"Account\\";
v2161.account = v2452;
const v2453 = {};
v2453.name = \\"CloudControl\\";
v2161.cloudcontrol = v2453;
const v2454 = {};
v2454.name = \\"Grafana\\";
v2161.grafana = v2454;
const v2455 = {};
v2455.name = \\"Panorama\\";
v2161.panorama = v2455;
const v2456 = {};
v2456.prefix = \\"chime-sdk-meetings\\";
v2456.name = \\"ChimeSDKMeetings\\";
v2161.chimesdkmeetings = v2456;
const v2457 = {};
v2457.name = \\"Resiliencehub\\";
v2161.resiliencehub = v2457;
const v2458 = {};
v2458.name = \\"MigrationHubStrategy\\";
v2161.migrationhubstrategy = v2458;
const v2459 = {};
v2459.name = \\"AppConfigData\\";
v2161.appconfigdata = v2459;
const v2460 = {};
v2460.name = \\"Drs\\";
v2161.drs = v2460;
const v2461 = {};
v2461.prefix = \\"migration-hub-refactor-spaces\\";
v2461.name = \\"MigrationHubRefactorSpaces\\";
v2161.migrationhubrefactorspaces = v2461;
const v2462 = {};
v2462.name = \\"Evidently\\";
v2161.evidently = v2462;
const v2463 = {};
v2463.name = \\"Inspector2\\";
v2161.inspector2 = v2463;
const v2464 = {};
v2464.name = \\"Rbin\\";
v2161.rbin = v2464;
const v2465 = {};
v2465.name = \\"RUM\\";
v2161.rum = v2465;
const v2466 = {};
v2466.prefix = \\"backup-gateway\\";
v2466.name = \\"BackupGateway\\";
v2161.backupgateway = v2466;
const v2467 = {};
v2467.name = \\"IoTTwinMaker\\";
v2161.iottwinmaker = v2467;
const v2468 = {};
v2468.prefix = \\"workspaces-web\\";
v2468.name = \\"WorkSpacesWeb\\";
v2161.workspacesweb = v2468;
const v2469 = {};
v2469.name = \\"AmplifyUIBuilder\\";
v2161.amplifyuibuilder = v2469;
const v2470 = {};
v2470.name = \\"Keyspaces\\";
v2161.keyspaces = v2470;
const v2471 = {};
v2471.name = \\"Billingconductor\\";
v2161.billingconductor = v2471;
const v2472 = {};
v2472.name = \\"GameSparks\\";
v2161.gamesparks = v2472;
const v2473 = {};
v2473.prefix = \\"pinpoint-sms-voice-v2\\";
v2473.name = \\"PinpointSMSVoiceV2\\";
v2161.pinpointsmsvoicev2 = v2473;
const v2474 = {};
v2474.name = \\"Ivschat\\";
v2161.ivschat = v2474;
const v2475 = {};
v2475.prefix = \\"chime-sdk-media-pipelines\\";
v2475.name = \\"ChimeSDKMediaPipelines\\";
v2161.chimesdkmediapipelines = v2475;
const v2476 = {};
v2476.prefix = \\"emr-serverless\\";
v2476.name = \\"EMRServerless\\";
v2161.emrserverless = v2476;
const v2477 = {};
v2477.name = \\"M2\\";
v2161.m2 = v2477;
const v2478 = {};
v2478.name = \\"ConnectCampaigns\\";
v2161.connectcampaigns = v2478;
const v2479 = {};
v2479.prefix = \\"redshift-serverless\\";
v2479.name = \\"RedshiftServerless\\";
v2161.redshiftserverless = v2479;
const v2480 = {};
v2480.name = \\"RolesAnywhere\\";
v2161.rolesanywhere = v2480;
const v2481 = {};
v2481.prefix = \\"license-manager-user-subscriptions\\";
v2481.name = \\"LicenseManagerUserSubscriptions\\";
v2161.licensemanagerusersubscriptions = v2481;
const v2482 = {};
v2482.name = \\"BackupStorage\\";
v2161.backupstorage = v2482;
const v2483 = {};
v2483.name = \\"PrivateNetworks\\";
v2161.privatenetworks = v2483;
var v2160 = v2161;
var v2484 = v144;
var v2485 = v146;
var v2486 = v883;
var v2488;
var v2489 = v144;
var v2490 = v144;
var v2491 = v144;
var v2492 = v144;
var v2493 = v144;
var v2494 = v144;
var v2495 = v146;
var v2496 = v855;
var v2497 = v855;
var v2498 = v146;
var v2499 = v855;
var v2500 = v855;
var v2501 = v146;
var v2502 = v855;
var v2503 = v144;
var v2504 = v144;
var v2505 = v146;
var v2506 = v146;
var v2508;
v2508 = function hasEventStream(topLevelShape) { var members = topLevelShape.members; var payload = topLevelShape.payload; if (!topLevelShape.members) {
    return false;
} if (payload) {
    var payloadMember = members[payload];
    return payloadMember.isEventStream;
} for (var name in members) {
    if (!members.hasOwnProperty(name)) {
        if (members[name].isEventStream === true) {
            return true;
        }
    }
} return false; };
const v2509 = {};
v2509.constructor = v2508;
v2508.prototype = v2509;
var v2507 = v2508;
v2488 = function Operation(name, operation, options) { var self = this; options = options || {}; v2489(this, \\"name\\", operation.name || name); v2490(this, \\"api\\", options.api, false); operation.http = operation.http || {}; v2491(this, \\"endpoint\\", operation.endpoint); v2489(this, \\"httpMethod\\", operation.http.method || \\"POST\\"); v2492(this, \\"httpPath\\", operation.http.requestUri || \\"/\\"); v2493(this, \\"authtype\\", operation.authtype || \\"\\"); v2492(this, \\"endpointDiscoveryRequired\\", operation.endpointdiscovery ? (operation.endpointdiscovery.required ? \\"REQUIRED\\" : \\"OPTIONAL\\") : \\"NULL\\"); var httpChecksumRequired = operation.httpChecksumRequired || (operation.httpChecksum && operation.httpChecksum.requestChecksumRequired); v2494(this, \\"httpChecksumRequired\\", httpChecksumRequired, false); v2495(this, \\"input\\", function () { if (!operation.input) {
    return new v2496.create({ type: \\"structure\\" }, options);
} return v2497.create(operation.input, options); }); v2498(this, \\"output\\", function () { if (!operation.output) {
    return new v2499.create({ type: \\"structure\\" }, options);
} return v2500.create(operation.output, options); }); v2501(this, \\"errors\\", function () { var list = []; if (!operation.errors)
    return null; for (var i = 0; i < operation.errors.length; i++) {
    list.push(v2502.create(operation.errors[i], options));
} return list; }); v2501(this, \\"paginator\\", function () { return options.api.paginators[name]; }); if (options.documentation) {
    v2503(this, \\"documentation\\", operation.documentation);
    v2504(this, \\"documentationUrl\\", operation.documentationUrl);
} v2505(this, \\"idempotentMembers\\", function () { var idempotentMembers = []; var input = self.input; var members = input.members; if (!input.members) {
    return idempotentMembers;
} for (var name in members) {
    if (!members.hasOwnProperty(name)) {
        continue;
    }
    if (members[name].isIdempotent === true) {
        idempotentMembers.push(name);
    }
} return idempotentMembers; }); v2506(this, \\"hasEventOutput\\", function () { var output = self.output; return v2507(output); }); };
const v2510 = {};
v2510.constructor = v2488;
v2488.prototype = v2510;
var v2487 = v2488;
var v2511 = v144;
var v2512 = v883;
var v2513 = v855;
var v2514 = v144;
var v2515 = v883;
var v2517;
var v2518 = v144;
var v2519 = v144;
var v2520 = v144;
var v2521 = v144;
v2517 = function Paginator(name, paginator) { v2518(this, \\"inputToken\\", paginator.input_token); v2519(this, \\"limitKey\\", paginator.limit_key); v2520(this, \\"moreResults\\", paginator.more_results); v2518(this, \\"outputToken\\", paginator.output_token); v2521(this, \\"resultKey\\", paginator.result_key); };
const v2522 = {};
v2522.constructor = v2517;
v2517.prototype = v2522;
var v2516 = v2517;
var v2523 = v144;
var v2525;
var v2526 = v144;
var v2527 = v144;
var v2528 = v144;
var v2529 = v144;
v2525 = function ResourceWaiter(name, waiter, options) { options = options || {}; v2526(this, \\"name\\", name); v2527(this, \\"api\\", options.api, false); if (waiter.operation) {
    v2528(this, \\"operation\\", v55.lowerFirst(waiter.operation));
} var self = this; var keys = [\\"type\\", \\"description\\", \\"delay\\", \\"maxAttempts\\", \\"acceptors\\"]; keys.forEach(function (key) { var value = waiter[key]; if (value) {
    v2529(self, key, value);
} }); };
const v2530 = {};
v2530.constructor = v2525;
v2525.prototype = v2530;
var v2524 = v2525;
var v2531 = v144;
v2150 = function Api(api, options) { var self = this; api = api || {}; options = options || {}; options.api = this; api.metadata = api.metadata || {}; var serviceIdentifier = options.serviceIdentifier; delete options.serviceIdentifier; v2151(this, \\"isApi\\", true, false); v2152(this, \\"apiVersion\\", api.metadata.apiVersion); v2153(this, \\"endpointPrefix\\", api.metadata.endpointPrefix); v2151(this, \\"signingName\\", api.metadata.signingName); v2154(this, \\"globalEndpoint\\", api.metadata.globalEndpoint); v2155(this, \\"signatureVersion\\", api.metadata.signatureVersion); v2154(this, \\"jsonVersion\\", api.metadata.jsonVersion); v2156(this, \\"targetPrefix\\", api.metadata.targetPrefix); v2152(this, \\"protocol\\", api.metadata.protocol); v2157(this, \\"timestampFormat\\", api.metadata.timestampFormat); v2158(this, \\"xmlNamespaceUri\\", api.metadata.xmlNamespace); v2156(this, \\"abbreviation\\", api.metadata.serviceAbbreviation); v2155(this, \\"fullName\\", api.metadata.serviceFullName); v2159(this, \\"serviceId\\", api.metadata.serviceId); if (serviceIdentifier && v2160[serviceIdentifier]) {
    v2484(this, \\"xmlNoDefaultLists\\", v2160[serviceIdentifier].xmlNoDefaultLists, false);
} v2485(this, \\"className\\", function () { var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName; if (!name)
    return null; name = name.replace(/^Amazon|AWS\\\\s*|\\\\(.*|\\\\s+|\\\\W+/g, \\"\\"); if (name === \\"ElasticLoadBalancing\\")
    name = \\"ELB\\"; return name; }); function addEndpointOperation(name, operation) { if (operation.endpointoperation === true) {
    v2484(self, \\"endpointOperation\\", v55.lowerFirst(name));
} if (operation.endpointdiscovery && !self.hasRequiredEndpointDiscovery) {
    v2159(self, \\"hasRequiredEndpointDiscovery\\", operation.endpointdiscovery.required === true);
} } v2159(this, \\"operations\\", new v2486(api.operations, options, function (name, operation) { return new v2487(name, operation, options); }, v55.lowerFirst, addEndpointOperation)); v2511(this, \\"shapes\\", new v2512(api.shapes, options, function (name, shape) { return v2513.create(shape, options); })); v2514(this, \\"paginators\\", new v2515(api.paginators, options, function (name, paginator) { return new v2516(name, paginator, options); })); v2523(this, \\"waiters\\", new v2512(api.waiters, options, function (name, waiter) { return new v2524(name, waiter, options); }, v55.lowerFirst)); if (options.documentation) {
    v2531(this, \\"documentation\\", api.documentation);
    v2523(this, \\"documentationUrl\\", api.documentationUrl);
} v2511(this, \\"errorCodeMapping\\", api.awsQueryCompatible); };
const v2532 = {};
v2532.constructor = v2150;
v2150.prototype = v2532;
var v2149 = v2150;
v2147 = function defineServiceApi(superclass, version, apiConfig) { var svc = v2148(superclass, { serviceIdentifier: superclass.serviceIdentifier }); function setApi(api) { if (api.isApi) {
    svc.prototype.api = api;
}
else {
    svc.prototype.api = new v2149(api, { serviceIdentifier: superclass.serviceIdentifier });
} } if (typeof version === \\"string\\") {
    if (apiConfig) {
        setApi(apiConfig);
    }
    else {
        try {
            setApi(v2124.apiLoader(superclass.serviceIdentifier, version));
        }
        catch (err) {
            throw v3.error(err, { message: \\"Could not find API configuration \\" + superclass.serviceIdentifier + \\"-\\" + version });
        }
    }
    if (!v113.hasOwnProperty.call(superclass.services, version)) {
        superclass.apiVersions = superclass.apiVersions.concat(version).sort();
    }
    superclass.services[version] = svc;
}
else {
    setApi(version);
} v375.Service.defineMethods(svc); return svc; };
const v2533 = {};
v2533.constructor = v2147;
v2147.prototype = v2533;
v299.defineServiceApi = v2147;
var v2534;
v2534 = function (identifier) { return v113.hasOwnProperty.call(v2121, identifier); };
const v2535 = {};
v2535.constructor = v2534;
v2534.prototype = v2535;
v299.hasService = v2534;
var v2536;
v2536 = function addDefaultMonitoringListeners(attachOn) { attachOn.addNamedListener(\\"MONITOR_EVENTS_BUBBLE\\", \\"apiCallAttempt\\", function EVENTS_BUBBLE(event) { var baseClass = v2145.getPrototypeOf(attachOn); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); }); attachOn.addNamedListener(\\"CALL_EVENTS_BUBBLE\\", \\"apiCall\\", function CALL_EVENTS_BUBBLE(event) { var baseClass = v307.getPrototypeOf(attachOn); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); }); };
const v2537 = {};
v2537.constructor = v2536;
v2536.prototype = v2537;
v299.addDefaultMonitoringListeners = v2536;
v299._serviceMap = v2121;
var v298 = v299;
var v2538 = v31;
var v2539 = v299;
v297 = function () { if (v298 !== v2538) {
    return v2539.apply(this, arguments);
} };
const v2540 = Object.create(v309);
v2540.constructor = v297;
const v2541 = {};
const v2542 = [];
var v2543;
var v2544 = v2540;
v2543 = function EVENTS_BUBBLE(event) { var baseClass = v307.getPrototypeOf(v2544); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v2545 = {};
v2545.constructor = v2543;
v2543.prototype = v2545;
v2542.push(v2543);
v2541.apiCallAttempt = v2542;
const v2546 = [];
var v2547;
v2547 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v2145.getPrototypeOf(v2544); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v2548 = {};
v2548.constructor = v2547;
v2547.prototype = v2548;
v2546.push(v2547);
v2541.apiCall = v2546;
v2540._events = v2541;
v2540.MONITOR_EVENTS_BUBBLE = v2543;
v2540.CALL_EVENTS_BUBBLE = v2547;
var v2549;
var v2550 = v2;
v2549 = function credentialsFrom(data, credentials) { if (!data)
    return null; if (!credentials)
    credentials = new v2550.TemporaryCredentials(); credentials.expired = false; credentials.accessKeyId = data.Credentials.AccessKeyId; credentials.secretAccessKey = data.Credentials.SecretAccessKey; credentials.sessionToken = data.Credentials.SessionToken; credentials.expireTime = data.Credentials.Expiration; return credentials; };
const v2551 = {};
v2551.constructor = v2549;
v2549.prototype = v2551;
v2540.credentialsFrom = v2549;
var v2552;
v2552 = function assumeRoleWithWebIdentity(params, callback) { return this.makeUnauthenticatedRequest(\\"assumeRoleWithWebIdentity\\", params, callback); };
const v2553 = {};
v2553.constructor = v2552;
v2552.prototype = v2553;
v2540.assumeRoleWithWebIdentity = v2552;
var v2554;
v2554 = function assumeRoleWithSAML(params, callback) { return this.makeUnauthenticatedRequest(\\"assumeRoleWithSAML\\", params, callback); };
const v2555 = {};
v2555.constructor = v2554;
v2554.prototype = v2555;
v2540.assumeRoleWithSAML = v2554;
var v2556;
v2556 = function setupRequestListeners(request) { request.addListener(\\"validate\\", this.optInRegionalEndpoint, true); };
const v2557 = {};
v2557.constructor = v2556;
v2556.prototype = v2557;
v2540.setupRequestListeners = v2556;
var v2558;
var v2560;
var v2562;
var v2563 = v40;
v2562 = function validateRegionalEndpointsFlagValue(configValue, errorOptions) { if (typeof configValue !== \\"string\\")
    return undefined;
else if ([\\"legacy\\", \\"regional\\"].indexOf(configValue.toLowerCase()) >= 0) {
    return configValue.toLowerCase();
}
else {
    throw v3.error(new v2563(), errorOptions);
} };
const v2564 = {};
v2564.constructor = v2562;
v2562.prototype = v2564;
var v2561 = v2562;
var v2565 = v8;
var v2566 = v8;
var v2567 = v2562;
var v2568 = v8;
var v2569 = v8;
var v2570 = v2562;
v2560 = function resolveRegionalEndpointsFlag(originalConfig, options) { originalConfig = originalConfig || {}; var resolved; if (originalConfig[options.clientConfig]) {
    resolved = v2561(originalConfig[options.clientConfig], { code: \\"InvalidConfiguration\\", message: \\"invalid \\\\\\"\\" + options.clientConfig + \\"\\\\\\" configuration. Expect \\\\\\"legacy\\\\\\" \\" + \\" or \\\\\\"regional\\\\\\". Got \\\\\\"\\" + originalConfig[options.clientConfig] + \\"\\\\\\".\\" });
    if (resolved)
        return resolved;
} if (!v3.isNode())
    return resolved; if (v113.hasOwnProperty.call(v2565.env, options.env)) {
    var envFlag = v2566.env[options.env];
    resolved = v2567(envFlag, { code: \\"InvalidEnvironmentalVariable\\", message: \\"invalid \\" + options.env + \\" environmental variable. Expect \\\\\\"legacy\\\\\\" \\" + \\" or \\\\\\"regional\\\\\\". Got \\\\\\"\\" + v2568.env[options.env] + \\"\\\\\\".\\" });
    if (resolved)
        return resolved;
} var profile = {}; try {
    var profiles = v3.getProfilesFromSharedConfig(v200);
    profile = profiles[v2569.env.AWS_PROFILE || \\"default\\"];
}
catch (e) { } if (profile && v113.hasOwnProperty.call(profile, options.sharedConfig)) {
    var fileFlag = profile[options.sharedConfig];
    resolved = v2570(fileFlag, { code: \\"InvalidConfiguration\\", message: \\"invalid \\" + options.sharedConfig + \\" profile config. Expect \\\\\\"legacy\\\\\\" \\" + \\" or \\\\\\"regional\\\\\\". Got \\\\\\"\\" + profile[options.sharedConfig] + \\"\\\\\\".\\" });
    if (resolved)
        return resolved;
} return resolved; };
const v2571 = {};
v2571.constructor = v2560;
v2560.prototype = v2571;
var v2559 = v2560;
var v2572 = \\"AWS_STS_REGIONAL_ENDPOINTS\\";
var v2573 = \\"sts_regional_endpoints\\";
var v2574 = v40;
v2558 = function optInRegionalEndpoint(req) { var service = req.service; var config = service.config; config.stsRegionalEndpoints = v2559(service._originalConfig, { env: v2572, sharedConfig: v2573, clientConfig: \\"stsRegionalEndpoints\\" }); if (config.stsRegionalEndpoints === \\"regional\\" && service.isGlobalEndpoint) {
    if (!config.region) {
        throw v3.error(new v2574(), { code: \\"ConfigError\\", message: \\"Missing region in config\\" });
    }
    var insertPoint = config.endpoint.indexOf(\\".amazonaws.com\\");
    var regionalEndpoint = config.endpoint.substring(0, insertPoint) + \\".\\" + config.region + config.endpoint.substring(insertPoint);
    req.httpRequest.updateEndpoint(regionalEndpoint);
    req.httpRequest.region = config.region;
} };
const v2575 = {};
v2575.constructor = v2558;
v2558.prototype = v2575;
v2540.optInRegionalEndpoint = v2558;
v297.prototype = v2540;
v297.__super__ = v299;
const v2576 = {};
v2576[\\"2011-06-15\\"] = null;
v297.services = v2576;
const v2577 = [];
v2577.push(\\"2011-06-15\\");
v297.apiVersions = v2577;
v297.serviceIdentifier = \\"sts\\";
var v296 = v297;
var v2578 = v77;
var v2579 = v40;
var v2580 = v40;
v293 = function loadRoleProfile(creds, roleProfile, callback) { if (this.disableAssumeRole) {
    throw v3.error(new v287(\\"Role assumption profiles are disabled. \\" + \\"Failed to load profile \\" + this.profile + \\" from \\" + creds.filename), { code: \\"SharedIniFileCredentialsProviderFailure\\" });
} var self = this; var roleArn = roleProfile[\\"role_arn\\"]; var roleSessionName = roleProfile[\\"role_session_name\\"]; var externalId = roleProfile[\\"external_id\\"]; var mfaSerial = roleProfile[\\"mfa_serial\\"]; var sourceProfileName = roleProfile[\\"source_profile\\"]; var profileRegion = roleProfile[\\"region\\"] || v294; if (!sourceProfileName) {
    throw v3.error(new v288(\\"source_profile is not set using profile \\" + this.profile), { code: \\"SharedIniFileCredentialsProviderFailure\\" });
} var sourceProfileExistanceTest = creds[sourceProfileName]; if (typeof sourceProfileExistanceTest !== \\"object\\") {
    throw v3.error(new v295(\\"source_profile \\" + sourceProfileName + \\" using profile \\" + this.profile + \\" does not exist\\"), { code: \\"SharedIniFileCredentialsProviderFailure\\" });
} var sourceCredentials = new v279.SharedIniFileCredentials(v3.merge(this.options || {}, { profile: sourceProfileName, preferStaticCredentials: true })); this.roleArn = roleArn; var sts = new v296({ credentials: sourceCredentials, region: profileRegion, httpOptions: this.httpOptions }); var roleParams = { RoleArn: roleArn, RoleSessionName: roleSessionName || \\"aws-sdk-js-\\" + v2578.now() }; if (externalId) {
    roleParams.ExternalId = externalId;
} if (mfaSerial && self.tokenCodeFn) {
    roleParams.SerialNumber = mfaSerial;
    self.tokenCodeFn(mfaSerial, function (err, token) { if (err) {
        var message;
        if (err instanceof v2579) {
            message = err.message;
        }
        else {
            message = err;
        }
        callback(v3.error(new v2580(\\"Error fetching MFA token: \\" + message), { code: \\"SharedIniFileCredentialsProviderFailure\\" }));
        return;
    } roleParams.TokenCode = token; sts.assumeRole(roleParams, callback); });
    return;
} sts.assumeRole(roleParams, callback); };
const v2581 = {};
v2581.constructor = v293;
v293.prototype = v2581;
v277.loadRoleProfile = v293;
const v2582 = Object.create(v277);
v2582.secretAccessKey = \\"hFtbgbtjmEVRnPRGHIeunft+g7PBUUYISFrP5ksw\\";
v2582.expired = false;
v2582.expireTime = null;
const v2583 = [];
v2583.push();
v2582.refreshCallbacks = v2583;
v2582.accessKeyId = \\"AKIA2PTXRDHQCY72R4HM\\";
v2582.sessionToken = undefined;
v2582.filename = undefined;
v2582.profile = \\"default\\";
v2582.disableAssumeRole = true;
v2582.preferStaticCredentials = false;
v2582.tokenCodeFn = null;
v2582.httpOptions = null;
v251.credentials = v2582;
const v2584 = Object.create(v252);
var v2585;
const v2586 = [];
var v2587;
var v2588 = v2;
v2587 = function () { return new v2588.EnvironmentCredentials(\\"AWS\\"); };
const v2589 = {};
v2589.constructor = v2587;
v2587.prototype = v2589;
var v2590;
var v2591 = v2;
v2590 = function () { return new v2591.EnvironmentCredentials(\\"AMAZON\\"); };
const v2592 = {};
v2592.constructor = v2590;
v2590.prototype = v2592;
var v2593;
var v2594 = v2;
v2593 = function () { return new v2594.SsoCredentials(); };
const v2595 = {};
v2595.constructor = v2593;
v2593.prototype = v2595;
var v2596;
var v2597 = v2;
v2596 = function () { return new v2597.SharedIniFileCredentials(); };
const v2598 = {};
v2598.constructor = v2596;
v2596.prototype = v2598;
var v2599;
v2599 = function () { return new v2588.ECSCredentials(); };
const v2600 = {};
v2600.constructor = v2599;
v2599.prototype = v2600;
var v2601;
var v2602 = v2;
v2601 = function () { return new v2602.ProcessCredentials(); };
const v2603 = {};
v2603.constructor = v2601;
v2601.prototype = v2603;
var v2604;
var v2605 = v2;
v2604 = function () { return new v2605.TokenFileWebIdentityCredentials(); };
const v2606 = {};
v2606.constructor = v2604;
v2604.prototype = v2606;
var v2607;
var v2608 = v2;
v2607 = function () { return new v2608.EC2MetadataCredentials(); };
const v2609 = {};
v2609.constructor = v2607;
v2607.prototype = v2609;
v2586.push(v2587, v2590, v2593, v2596, v2599, v2601, v2604, v2607);
v2585 = function CredentialProviderChain(providers) { if (providers) {
    this.providers = providers;
}
else {
    this.providers = v2586.slice(0);
} this.resolveCallbacks = []; };
v2585.prototype = v2584;
v2585.__super__ = v253;
v2585.defaultProviders = v2586;
var v2610;
v2610 = function addPromisesToClass(PromiseDependency) { this.prototype.resolvePromise = v3.promisifyMethod(\\"resolve\\", PromiseDependency); };
const v2611 = {};
v2611.constructor = v2610;
v2610.prototype = v2611;
v2585.addPromisesToClass = v2610;
var v2612;
v2612 = function deletePromisesFromClass() { delete this.prototype.resolvePromise; };
const v2613 = {};
v2613.constructor = v2612;
v2612.prototype = v2613;
v2585.deletePromisesFromClass = v2612;
v2584.constructor = v2585;
var v2614;
var v2615 = v40;
v2614 = function resolve(callback) { var self = this; if (self.providers.length === 0) {
    callback(new v2615(\\"No providers\\"));
    return self;
} if (self.resolveCallbacks.push(callback) === 1) {
    var index = 0;
    var providers = self.providers.slice(0);
    function resolveNext(err, creds) { if ((!err && creds) || index === providers.length) {
        v3.arrayEach(self.resolveCallbacks, function (callback) { callback(err, creds); });
        self.resolveCallbacks.length = 0;
        return;
    } var provider = providers[index++]; if (typeof provider === \\"function\\") {
        creds = provider.call();
    }
    else {
        creds = provider;
    } if (creds.get) {
        creds.get(function (getErr) { resolveNext(getErr, getErr ? null : creds); });
    }
    else {
        resolveNext(null, creds);
    } }
    resolveNext();
} return self; };
const v2616 = {};
v2616.constructor = v2614;
v2614.prototype = v2616;
v2584.resolve = v2614;
var v2617;
var v2618 = v244;
var v2619 = \\"resolve\\";
v2617 = function promise() { var self = this; var args = v71.slice.call(arguments); return new v2618(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[v2619].apply(self, args); }); };
const v2620 = {};
v2620.constructor = v2617;
v2617.prototype = v2620;
v2584.resolvePromise = v2617;
const v2621 = Object.create(v2584);
const v2622 = [];
v2622.push(v2587, v2590, v2593, v2596, v2599, v2601, v2604, v2607);
v2621.providers = v2622;
const v2623 = [];
v2623.push();
v2621.resolveCallbacks = v2623;
v251.credentialProvider = v2621;
v251.region = undefined;
v251.logger = null;
v251.apiVersions = v212;
v251.apiVersion = null;
v251.endpoint = undefined;
v251.httpOptions = v213;
v251.maxRetries = undefined;
v251.maxRedirects = 10;
v251.paramValidation = true;
v251.sslEnabled = true;
v251.s3ForcePathStyle = false;
v251.s3BucketEndpoint = false;
v251.s3DisableBodySigning = true;
v251.s3UsEast1RegionalEndpoint = \\"legacy\\";
v251.s3UseArnRegion = undefined;
v251.computeChecksums = true;
v251.convertResponseTypes = true;
v251.correctClockSkew = false;
v251.customUserAgent = null;
v251.dynamoDbCrc32 = true;
v251.systemClockOffset = 0;
v251.signatureVersion = null;
v251.signatureCache = true;
v251.retryDelayOptions = v214;
v251.useAccelerateEndpoint = false;
v251.clientSideMonitoring = false;
v251.endpointDiscoveryEnabled = undefined;
v251.endpointCacheSize = 1000;
v251.hostPrefixEnabled = true;
v251.stsRegionalEndpoints = \\"legacy\\";
v251.useFipsEndpoint = false;
v251.useDualstackEndpoint = false;
var v2624 = v787;
v152 = function isClockSkewed(serverTime) { if (serverTime) {
    v5.property(v251, \\"isClockSkewed\\", v2624.abs(new v76().getTime() - serverTime) >= 300000, false);
    return undefined;
} };
const v2625 = {};
v2625.constructor = v152;
v152.prototype = v2625;
v3.isClockSkewed = v152;
var v2626;
v2626 = function applyClockOffset(serverTime) { if (serverTime)
    0 = serverTime - new v76().getTime(); };
const v2627 = {};
v2627.constructor = v2626;
v2626.prototype = v2627;
v3.applyClockOffset = v2626;
v3.extractRequestId = v756;
var v2628;
var v2629 = v244;
v2628 = function addPromises(constructors, PromiseDependency) { var deletePromises = false; if (PromiseDependency === undefined && v75 && v251) {
    PromiseDependency = v251.getPromisesDependency();
} if (PromiseDependency === undefined && typeof v2629 !== \\"undefined\\") {
    PromiseDependency = v2629;
} if (typeof PromiseDependency !== \\"function\\")
    deletePromises = true; if (!v32.isArray(constructors))
    constructors = [constructors]; for (var ind = 0; ind < constructors.length; ind++) {
    var constructor = constructors[ind];
    if (deletePromises) {
        if (constructor.deletePromisesFromClass) {
            constructor.deletePromisesFromClass();
        }
    }
    else if (constructor.addPromisesToClass) {
        constructor.addPromisesToClass(PromiseDependency);
    }
} };
const v2630 = {};
v2630.constructor = v2628;
v2628.prototype = v2630;
v3.addPromises = v2628;
var v2631;
v2631 = function promisifyMethod(methodName, PromiseDependency) { return function promise() { var self = this; var args = v71.slice.call(arguments); return new PromiseDependency(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[methodName].apply(self, args); }); }; };
const v2632 = {};
v2632.constructor = v2631;
v2631.prototype = v2632;
v3.promisifyMethod = v2631;
var v2633;
v2633 = function isDualstackAvailable(service) { if (!service)
    return false; var metadata = v11(\\"../apis/metadata.json\\"); if (typeof service !== \\"string\\")
    service = service.serviceIdentifier; if (typeof service !== \\"string\\" || !metadata.hasOwnProperty(service))
    return false; return !!metadata[service].dualstackAvailable; };
const v2634 = {};
v2634.constructor = v2633;
v2633.prototype = v2634;
v3.isDualstackAvailable = v2633;
var v2635;
v2635 = function calculateRetryDelay(retryCount, retryDelayOptions, err) { if (!retryDelayOptions)
    retryDelayOptions = {}; var customBackoff = retryDelayOptions.customBackoff || null; if (typeof customBackoff === \\"function\\") {
    return customBackoff(retryCount, err);
} var base = typeof retryDelayOptions.base === \\"number\\" ? retryDelayOptions.base : 100; var delay = v2624.random() * (v2624.pow(2, retryCount) * base); return delay; };
const v2636 = {};
v2636.constructor = v2635;
v2635.prototype = v2636;
v3.calculateRetryDelay = v2635;
var v2637;
var v2638 = v2;
var v2639 = v751;
var v2640 = v117;
var v2641 = v40;
v2637 = function handleRequestWithRetries(httpRequest, options, cb) { if (!options)
    options = {}; var http = v2638.HttpClient.getInstance(); var httpOptions = options.httpOptions || {}; var retryCount = 0; var errCallback = function (err) { var maxRetries = options.maxRetries || 0; if (err && err.code === \\"TimeoutError\\")
    err.retryable = true; if (err && err.retryable && retryCount < maxRetries) {
    var delay = v5.calculateRetryDelay(retryCount, options.retryDelayOptions, err);
    if (delay >= 0) {
        retryCount++;
        v2639(sendRequest, delay + (err.retryAfter || 0));
        return;
    }
} cb(err); }; var sendRequest = function () { var data = \\"\\"; http.handleRequest(httpRequest, httpOptions, function (httpResponse) { httpResponse.on(\\"data\\", function (chunk) { data += chunk.toString(); }); httpResponse.on(\\"end\\", function () { var statusCode = httpResponse.statusCode; if (statusCode < 300) {
    cb(null, data);
}
else {
    var retryAfter = v2640(httpResponse.headers[\\"retry-after\\"], 10) * 1000 || 0;
    var err = v122.error(new v2641(), { statusCode: statusCode, retryable: statusCode >= 500 || statusCode === 429 });
    if (retryAfter && err.retryable)
        err.retryAfter = retryAfter;
    errCallback(err);
} }); }, errCallback); }; v3.defer(sendRequest); };
const v2642 = {};
v2642.constructor = v2637;
v2637.prototype = v2642;
v3.handleRequestWithRetries = v2637;
v3.uuid = v439;
var v2643;
v2643 = function convertPayloadToString(resp) { var req = resp.request; var operation = req.operation; var rules = req.service.api.operations[operation].output || {}; if (rules.payload && resp.data[rules.payload]) {
    resp.data[rules.payload] = resp.data[rules.payload].toString();
} };
const v2644 = {};
v2644.constructor = v2643;
v2643.prototype = v2644;
v3.convertPayloadToString = v2643;
var v2645;
var v2646 = v8;
var v2647 = v1656;
var v2648 = v751;
v2645 = function defer(callback) { if (typeof v2646 === \\"object\\" && typeof v7.nextTick === \\"function\\") {
    v7.nextTick(callback);
}
else if (typeof v2647 === \\"function\\") {
    v2647(callback);
}
else {
    v2648(callback, 0);
} };
const v2649 = {};
v2649.constructor = v2645;
v2645.prototype = v2649;
v3.defer = v2645;
var v2650;
v2650 = function getRequestPayloadShape(req) { var operations = req.service.api.operations; if (!operations)
    return undefined; var operation = (operations || {})[req.operation]; if (!operation || !operation.input || !operation.input.payload)
    return undefined; return operation.input.members[operation.input.payload]; };
const v2651 = {};
v2651.constructor = v2650;
v2650.prototype = v2651;
v3.getRequestPayloadShape = v2650;
var v2652;
v2652 = function getProfilesFromSharedConfig(iniLoader, filename) { var profiles = {}; var profilesFromConfig = {}; if (v2646.env[\\"AWS_SDK_LOAD_CONFIG\\"]) {
    var profilesFromConfig = iniLoader.loadFrom({ isConfig: true, filename: v7.env[\\"AWS_CONFIG_FILE\\"] });
} var profilesFromCreds = {}; try {
    var profilesFromCreds = iniLoader.loadFrom({ filename: filename || (v2646.env[\\"AWS_SDK_LOAD_CONFIG\\"] && v7.env[\\"AWS_SHARED_CREDENTIALS_FILE\\"]) });
}
catch (error) {
    if (!v7.env[\\"AWS_SDK_LOAD_CONFIG\\"])
        throw error;
} for (var i = 0, profileNames = v30.keys(profilesFromConfig); i < profileNames.length; i++) {
    profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromConfig[profileNames[i]]);
} for (var i = 0, profileNames = v471.keys(profilesFromCreds); i < profileNames.length; i++) {
    profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromCreds[profileNames[i]]);
} return profiles; function objectAssign(target, source) { for (var i = 0, keys = v471.keys(source); i < keys.length; i++) {
    target[keys[i]] = source[keys[i]];
} return target; } };
const v2653 = {};
v2653.constructor = v2652;
v2652.prototype = v2653;
v3.getProfilesFromSharedConfig = v2652;
const v2654 = {};
var v2655;
v2655 = function validateARN(str) { return str && str.indexOf(\\"arn:\\") === 0 && str.split(\\":\\").length >= 6; };
const v2656 = {};
v2656.constructor = v2655;
v2655.prototype = v2656;
v2654.validate = v2655;
var v2657;
v2657 = function parseARN(arn) { var matched = arn.split(\\":\\"); return { partition: matched[1], service: matched[2], region: matched[3], accountId: matched[4], resource: matched.slice(5).join(\\":\\") }; };
const v2658 = {};
v2658.constructor = v2657;
v2657.prototype = v2658;
v2654.parse = v2657;
var v2659;
v2659 = function buildARN(arnObject) { if (arnObject.service === undefined || arnObject.region === undefined || arnObject.accountId === undefined || arnObject.resource === undefined)
    throw v5.error(new v2641(\\"Input ARN object is invalid\\")); return \\"arn:\\" + (arnObject.partition || \\"aws\\") + \\":\\" + arnObject.service + \\":\\" + arnObject.region + \\":\\" + arnObject.accountId + \\":\\" + arnObject.resource; };
const v2660 = {};
v2660.constructor = v2659;
v2659.prototype = v2660;
v2654.build = v2659;
v3.ARN = v2654;
v3.defaultProfile = \\"default\\";
v3.configOptInEnv = \\"AWS_SDK_LOAD_CONFIG\\";
v3.sharedCredentialsFileEnv = \\"AWS_SHARED_CREDENTIALS_FILE\\";
v3.sharedConfigFileEnv = \\"AWS_CONFIG_FILE\\";
v3.imdsDisabledEnv = \\"AWS_EC2_METADATA_DISABLED\\";
var v2661;
v2661 = function () { return false; };
const v2662 = {};
v2662.constructor = v2661;
v2661.prototype = v2662;
v3.isBrowser = v2661;
var v2663;
v2663 = function () { return true; };
const v2664 = {};
v2664.constructor = v2663;
v2663.prototype = v2664;
v3.isNode = v2663;
v3.Buffer = v1816;
const v2665 = require(\\"domain\\");
v3.domain = v2665;
v3.stream = v1808;
v3.url = v22;
v3.querystring = v27;
var v2666;
var v2668;
const v2670 = require(\\"stream\\").Transform;
var v2669 = v2670;
v2668 = function EventUnmarshallerStream(options) { options = options || {}; options.readableObjectMode = true; v2669.call(this, options); this._readableState.objectMode = true; this.parser = options.parser; this.eventStreamModel = options.eventStreamModel; };
const v2671 = require(\\"stream\\").Transform.prototype;
const v2672 = Object.create(v2671);
var v2673;
var v2675;
var v2677;
var v2679;
var v2680 = v3;
var v2681 = v42;
var v2682 = 16;
var v2683 = v40;
var v2684 = v40;
var v2685 = 8;
var v2686 = 8;
var v2687 = v40;
var v2688 = 4;
var v2689 = 4;
var v2690 = v40;
var v2691 = 8;
var v2692 = 4;
var v2693 = 4;
var v2694 = 4;
v2679 = function splitMessage(message) { if (!v2680.Buffer.isBuffer(message))
    message = v2681(message); if (message.length < v2682) {
    throw new v2683(\\"Provided message too short to accommodate event stream message overhead\\");
} if (message.length !== message.readUInt32BE(0)) {
    throw new v2684(\\"Reported message length does not match received message length\\");
} var expectedPreludeChecksum = message.readUInt32BE(v2685); if (expectedPreludeChecksum !== v91.crc32(message.slice(0, v2686))) {
    throw new v2687(\\"The prelude checksum specified in the message (\\" + expectedPreludeChecksum + \\") does not match the calculated CRC32 checksum.\\");
} var expectedMessageChecksum = message.readUInt32BE(message.length - v2688); if (expectedMessageChecksum !== v91.crc32(message.slice(0, message.length - v2689))) {
    throw new v2690(\\"The message checksum did not match the expected value of \\" + expectedMessageChecksum);
} var headersStart = v2691 + v2692; var headersEnd = headersStart + message.readUInt32BE(v2693); return { headers: message.slice(headersStart, headersEnd), body: message.slice(headersEnd, message.length - v2694) }; };
const v2695 = {};
v2695.constructor = v2679;
v2679.prototype = v2695;
var v2678 = v2679;
var v2697;
var v2698 = \\"boolean\\";
var v2699 = \\"boolean\\";
var v2700 = \\"byte\\";
var v2701 = \\"short\\";
var v2702 = \\"integer\\";
var v2703 = \\"long\\";
var v2705;
var v2706 = v40;
var v2707 = v3;
var v2708 = v42;
v2705 = function Int64(bytes) { if (bytes.length !== 8) {
    throw new v2706(\\"Int64 buffers must be exactly 8 bytes\\");
} if (!v2707.Buffer.isBuffer(bytes))
    bytes = v2708(bytes); this.bytes = bytes; };
const v2709 = {};
v2709.constructor = v2705;
var v2710;
var v2712;
v2712 = function negate(bytes) { for (var i = 0; i < 8; i++) {
    bytes[i] ^= 255;
} for (var i = 7; i > -1; i--) {
    bytes[i]++;
    if (bytes[i] !== 0) {
        break;
    }
} };
const v2713 = {};
v2713.constructor = v2712;
v2712.prototype = v2713;
var v2711 = v2712;
var v2714 = v117;
v2710 = function () { var bytes = this.bytes.slice(0); var negative = bytes[0] && 128; if (negative) {
    v2711(bytes);
} return v2714(bytes.toString(\\"hex\\"), 16) * (negative ? -1 : 1); };
const v2715 = {};
v2715.constructor = v2710;
v2710.prototype = v2715;
v2709.valueOf = v2710;
var v2716;
var v2717 = v136;
v2716 = function () { return v2717(this.valueOf()); };
const v2718 = {};
v2718.constructor = v2716;
v2716.prototype = v2718;
v2709.toString = v2716;
v2705.prototype = v2709;
var v2719;
var v2720 = v40;
var v2721 = v44;
var v2722 = v787;
var v2723 = v787;
var v2724 = v2712;
var v2725 = v2705;
v2719 = function (number) { if (number > 9223372036854776000 || number < -9223372036854776000) {
    throw new v2720(number + \\" is too large (or, if negative, too small) to represent as an Int64\\");
} var bytes = new v2721(8); for (var i = 7, remaining = v2722.abs(v2723.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
    bytes[i] = remaining;
} if (number < 0) {
    v2724(bytes);
} return new v2725(bytes); };
const v2726 = {};
v2726.constructor = v2719;
v2719.prototype = v2726;
v2705.fromNumber = v2719;
var v2704 = v2705;
var v2727 = \\"binary\\";
var v2728 = undefined;
var v2729 = undefined;
var v2730 = \\"string\\";
var v2731 = undefined;
var v2732 = undefined;
var v2733 = \\"timestamp\\";
var v2734 = v77;
var v2735 = v2705;
var v2736 = \\"uuid\\";
var v2737 = v40;
v2697 = function parseHeaders(headers) { var out = {}; var position = 0; while (position < headers.length) {
    var nameLength = headers.readUInt8(position++);
    var name = headers.slice(position, position + nameLength).toString();
    position += nameLength;
    switch (headers.readUInt8(position++)) {
        case 0:
            out[name] = { type: v2698, value: true };
            break;
        case 1:
            out[name] = { type: v2699, value: false };
            break;
        case 2:
            out[name] = { type: v2700, value: headers.readInt8(position++) };
            break;
        case 3:
            out[name] = { type: v2701, value: headers.readInt16BE(position) };
            position += 2;
            break;
        case 4:
            out[name] = { type: v2702, value: headers.readInt32BE(position) };
            position += 4;
            break;
        case 5:
            out[name] = { type: v2703, value: new v2704(headers.slice(position, position + 8)) };
            position += 8;
            break;
        case 6:
            var binaryLength = headers.readUInt16BE(position);
            position += 2;
            out[name] = { type: v2727, value: headers.slice(position, position + v2728) };
            position += v2729;
            break;
        case 7:
            var stringLength = headers.readUInt16BE(position);
            position += 2;
            out[name] = { type: v2730, value: headers.slice(position, position + v2731).toString() };
            position += v2732;
            break;
        case 8:
            out[name] = { type: v2733, value: new v2734(new v2735(headers.slice(position, position + 8)).valueOf()) };
            position += 8;
            break;
        case 9:
            var uuidChars = headers.slice(position, position + 16).toString(\\"hex\\");
            position += 16;
            out[name] = { type: v2736, value: undefined(0, 8) + \\"-\\" + undefined(8, 4) + \\"-\\" + undefined(12, 4) + \\"-\\" + undefined(16, 4) + \\"-\\" + undefined(20) };
            break;
        default: throw new v2737(\\"Unrecognized header type tag\\");
    }
} return out; };
const v2738 = {};
v2738.constructor = v2697;
v2697.prototype = v2738;
var v2696 = v2697;
v2677 = function parseMessage(message) { var parsed = v2678(message); return { headers: v2696(parsed.headers), body: parsed.body }; };
const v2739 = {};
v2739.constructor = v2677;
v2677.prototype = v2739;
var v2676 = v2677;
var v2741;
var v2742 = v40;
v2741 = function parseError(message) { var errorCode = message.headers[\\":error-code\\"]; var errorMessage = message.headers[\\":error-message\\"]; var error = new v2742(errorMessage.value || errorMessage); error.code = error.name = errorCode.value || errorCode; return error; };
const v2743 = {};
v2743.constructor = v2741;
v2741.prototype = v2743;
var v2740 = v2741;
v2675 = function parseEvent(parser, message, shape) { var parsedMessage = v2676(message); var messageType = parsedMessage.headers[\\":message-type\\"]; if (messageType) {
    if (messageType.value === \\"error\\") {
        throw v2740(parsedMessage);
    }
    else if (messageType.value !== \\"event\\") {
        return;
    }
} var eventType = parsedMessage.headers[\\":event-type\\"]; var eventModel = shape.members[eventType.value]; if (!eventModel) {
    return;
} var result = {}; var eventPayloadMemberName = eventModel.eventPayloadMemberName; if (eventPayloadMemberName) {
    var payloadShape = eventModel.members[eventPayloadMemberName];
    if (payloadShape.type === \\"binary\\") {
        result[eventPayloadMemberName] = parsedMessage.body;
    }
    else {
        result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);
    }
} var eventHeaderNames = eventModel.eventHeaderMemberNames; for (var i = 0; i < eventHeaderNames.length; i++) {
    var name = eventHeaderNames[i];
    if (parsedMessage.headers[name]) {
        result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);
    }
} var output = {}; output[eventType.value] = result; return output; };
const v2744 = {};
v2744.constructor = v2675;
v2675.prototype = v2744;
var v2674 = v2675;
v2673 = function (chunk, encoding, callback) { try {
    var event = v2674(this.parser, chunk, this.eventStreamModel);
    this.push(event);
    return callback();
}
catch (err) {
    callback(err);
} };
const v2745 = {};
v2745.constructor = v2673;
v2673.prototype = v2745;
v2672._transform = v2673;
v2668.prototype = v2672;
var v2667 = v2668;
var v2747;
var v2748 = v2670;
v2747 = function EventMessageChunkerStream(options) { v2748.call(this, options); this.currentMessageTotalLength = 0; this.currentMessagePendingLength = 0; this.currentMessage = null; this.messageLengthBuffer = null; };
const v2749 = Object.create(v2671);
var v2750;
var v2751 = v46;
var v2752 = v787;
var v2753 = v787;
v2750 = function (chunk, encoding, callback) { var chunkLength = chunk.length; var currentOffset = 0; while (currentOffset < chunkLength) {
    if (!this.currentMessage) {
        var bytesRemaining = chunkLength - currentOffset;
        if (!this.messageLengthBuffer) {
            this.messageLengthBuffer = v2751(4);
        }
        var numBytesForTotal = v2752.min(4 - this.currentMessagePendingLength, bytesRemaining);
        chunk.copy(this.messageLengthBuffer, this.currentMessagePendingLength, currentOffset, currentOffset + numBytesForTotal);
        this.currentMessagePendingLength += numBytesForTotal;
        currentOffset += numBytesForTotal;
        if (this.currentMessagePendingLength < 4) {
            break;
        }
        this.allocateMessage(this.messageLengthBuffer.readUInt32BE(0));
        this.messageLengthBuffer = null;
    }
    var numBytesToWrite = v2753.min(this.currentMessageTotalLength - this.currentMessagePendingLength, chunkLength - currentOffset);
    chunk.copy(this.currentMessage, this.currentMessagePendingLength, currentOffset, currentOffset + numBytesToWrite);
    this.currentMessagePendingLength += numBytesToWrite;
    currentOffset += numBytesToWrite;
    if (this.currentMessageTotalLength && this.currentMessageTotalLength === this.currentMessagePendingLength) {
        this.push(this.currentMessage);
        this.currentMessage = null;
        this.currentMessageTotalLength = 0;
        this.currentMessagePendingLength = 0;
    }
} callback(); };
const v2754 = {};
v2754.constructor = v2750;
v2750.prototype = v2754;
v2749._transform = v2750;
var v2755;
var v2756 = v40;
v2755 = function (callback) { if (this.currentMessageTotalLength) {
    if (this.currentMessageTotalLength === this.currentMessagePendingLength) {
        callback(null, this.currentMessage);
    }
    else {
        callback(new v2756(\\"Truncated event message received.\\"));
    }
}
else {
    callback();
} };
const v2757 = {};
v2757.constructor = v2755;
v2755.prototype = v2757;
v2749._flush = v2755;
var v2758;
var v2759 = v40;
var v2760 = v46;
v2758 = function (size) { if (typeof size !== \\"number\\") {
    throw new v2759(\\"Attempted to allocate an event message where size was not a number: \\" + size);
} this.currentMessageTotalLength = size; this.currentMessagePendingLength = 4; this.currentMessage = v2760(size); this.currentMessage.writeUInt32BE(size, 0); };
const v2761 = {};
v2761.constructor = v2758;
v2758.prototype = v2761;
v2749.allocateMessage = v2758;
v2747.prototype = v2749;
var v2746 = v2747;
v2666 = function createEventStream(stream, parser, model) { var eventStream = new v2667({ parser: parser, eventStreamModel: model }); var eventMessageChunker = new v2746(); stream.pipe(eventMessageChunker).pipe(eventStream); stream.on(\\"error\\", function (err) { eventMessageChunker.emit(\\"error\\", err); }); eventMessageChunker.on(\\"error\\", function (err) { eventStream.emit(\\"error\\", err); }); return eventStream; };
const v2762 = {};
v2762.constructor = v2666;
v2666.prototype = v2762;
v3.createEventStream = v2666;
v3.realClock = v781;
v3.clientSideMonitoring = v2125;
v3.iniLoader = v200;
const v2763 = require(\\"util\\").getSystemErrorName;
v3.getSystemErrorName = v2763;
var v2764;
var v2765 = v8;
var v2766 = v8;
var v2767 = v8;
v2764 = function (options) { var envValue = options.environmentVariableSelector(v2765.env); if (envValue !== undefined) {
    return envValue;
} var configFile = {}; try {
    configFile = v200 ? v200.loadFrom({ isConfig: true, filename: v2766.env[\\"AWS_CONFIG_FILE\\"] }) : {};
}
catch (e) { } var sharedFileConfig = configFile[v2767.env.AWS_PROFILE || \\"default\\"] || {}; var configValue = options.configFileSelector(sharedFileConfig); if (configValue !== undefined) {
    return configValue;
} if (typeof options.default === \\"function\\") {
    return options.default();
} return options.default; };
const v2768 = {};
v2768.constructor = v2764;
v2764.prototype = v2768;
v3.loadConfig = v2764;
v2.util = v3;
v2.VERSION = \\"2.1193.0\\";
v2.Signers = v450;
const v2769 = {};
v2769.Json = v2035;
const v2770 = {};
v2770.buildRequest = v800;
v2770.extractError = v1898;
v2770.extractData = v853;
v2769.Query = v2770;
v2769.Rest = v1977;
const v2771 = {};
v2771.buildRequest = v1975;
v2771.extractError = v2039;
v2771.extractData = v2028;
v2769.RestJson = v2771;
const v2772 = {};
v2772.buildRequest = v2045;
v2772.extractError = v2058;
v2772.extractData = v2052;
v2769.RestXml = v2772;
v2.Protocol = v2769;
v2.XML = v937;
const v2773 = {};
v2773.Builder = v1908;
v2773.Parser = v1940;
v2.JSON = v2773;
const v2774 = {};
v2774.Api = v2150;
v2774.Operation = v2488;
v2774.Shape = v855;
v2774.Paginator = v2517;
v2774.ResourceWaiter = v2525;
v2.Model = v2774;
var v2775;
var v2776 = v40;
v2775 = function apiLoader(svc, version) { if (!apiLoader.services.hasOwnProperty(svc)) {
    throw new v2776(\\"InvalidService: Failed to load api for \\" + svc);
} return apiLoader.services[svc][version]; };
const v2777 = {};
v2777.constructor = v2775;
v2775.prototype = v2777;
const v2778 = {};
const v2779 = {};
v2778.sts = v2779;
const v2780 = {};
v2778.cognitoidentity = v2780;
const v2781 = {};
v2778.acm = v2781;
const v2782 = {};
v2778.apigateway = v2782;
const v2783 = {};
v2778.applicationautoscaling = v2783;
const v2784 = {};
v2778.appstream = v2784;
const v2785 = {};
v2778.autoscaling = v2785;
const v2786 = {};
v2778.batch = v2786;
const v2787 = {};
v2778.budgets = v2787;
const v2788 = {};
v2778.clouddirectory = v2788;
const v2789 = {};
v2778.cloudformation = v2789;
const v2790 = {};
v2778.cloudfront = v2790;
const v2791 = {};
v2778.cloudhsm = v2791;
const v2792 = {};
v2778.cloudsearch = v2792;
const v2793 = {};
v2778.cloudsearchdomain = v2793;
const v2794 = {};
v2778.cloudtrail = v2794;
const v2795 = {};
v2778.cloudwatch = v2795;
const v2796 = {};
v2778.cloudwatchevents = v2796;
const v2797 = {};
v2778.cloudwatchlogs = v2797;
const v2798 = {};
v2778.codebuild = v2798;
const v2799 = {};
v2778.codecommit = v2799;
const v2800 = {};
v2778.codedeploy = v2800;
const v2801 = {};
v2778.codepipeline = v2801;
const v2802 = {};
v2778.cognitoidentityserviceprovider = v2802;
const v2803 = {};
v2778.cognitosync = v2803;
const v2804 = {};
v2778.configservice = v2804;
const v2805 = {};
v2778.cur = v2805;
const v2806 = {};
v2778.datapipeline = v2806;
const v2807 = {};
v2778.devicefarm = v2807;
const v2808 = {};
v2778.directconnect = v2808;
const v2809 = {};
v2778.directoryservice = v2809;
const v2810 = {};
v2778.discovery = v2810;
const v2811 = {};
v2778.dms = v2811;
const v2812 = {};
v2778.dynamodb = v2812;
const v2813 = {};
v2778.dynamodbstreams = v2813;
const v2814 = {};
v2778.ec2 = v2814;
const v2815 = {};
v2778.ecr = v2815;
const v2816 = {};
v2778.ecs = v2816;
const v2817 = {};
v2778.efs = v2817;
const v2818 = {};
v2778.elasticache = v2818;
const v2819 = {};
v2778.elasticbeanstalk = v2819;
const v2820 = {};
v2778.elb = v2820;
const v2821 = {};
v2778.elbv2 = v2821;
const v2822 = {};
v2778.emr = v2822;
const v2823 = {};
v2778.es = v2823;
const v2824 = {};
v2778.elastictranscoder = v2824;
const v2825 = {};
v2778.firehose = v2825;
const v2826 = {};
v2778.gamelift = v2826;
const v2827 = {};
v2778.glacier = v2827;
const v2828 = {};
v2778.health = v2828;
const v2829 = {};
v2778.iam = v2829;
const v2830 = {};
v2778.importexport = v2830;
const v2831 = {};
v2778.inspector = v2831;
const v2832 = {};
v2778.iot = v2832;
const v2833 = {};
v2778.iotdata = v2833;
const v2834 = {};
v2778.kinesis = v2834;
const v2835 = {};
v2778.kinesisanalytics = v2835;
const v2836 = {};
v2778.kms = v2836;
const v2837 = {};
v2778.lambda = v2837;
const v2838 = {};
v2778.lexruntime = v2838;
const v2839 = {};
v2778.lightsail = v2839;
const v2840 = {};
v2778.machinelearning = v2840;
const v2841 = {};
v2778.marketplacecommerceanalytics = v2841;
const v2842 = {};
v2778.marketplacemetering = v2842;
const v2843 = {};
v2778.mturk = v2843;
const v2844 = {};
v2778.mobileanalytics = v2844;
const v2845 = {};
v2778.opsworks = v2845;
const v2846 = {};
v2778.opsworkscm = v2846;
const v2847 = {};
v2778.organizations = v2847;
const v2848 = {};
v2778.pinpoint = v2848;
const v2849 = {};
v2778.polly = v2849;
const v2850 = {};
v2778.rds = v2850;
const v2851 = {};
v2778.redshift = v2851;
const v2852 = {};
v2778.rekognition = v2852;
const v2853 = {};
v2778.resourcegroupstaggingapi = v2853;
const v2854 = {};
v2778.route53 = v2854;
const v2855 = {};
v2778.route53domains = v2855;
const v2856 = {};
v2778.s3 = v2856;
const v2857 = {};
v2778.s3control = v2857;
const v2858 = {};
v2778.servicecatalog = v2858;
const v2859 = {};
v2778.ses = v2859;
const v2860 = {};
v2778.shield = v2860;
const v2861 = {};
v2778.simpledb = v2861;
const v2862 = {};
v2778.sms = v2862;
const v2863 = {};
v2778.snowball = v2863;
const v2864 = {};
v2778.sns = v2864;
const v2865 = {};
v2778.sqs = v2865;
const v2866 = {};
v2778.ssm = v2866;
const v2867 = {};
v2778.storagegateway = v2867;
const v2868 = {};
v2778.stepfunctions = v2868;
const v2869 = {};
v2778.support = v2869;
const v2870 = {};
v2778.swf = v2870;
const v2871 = {};
v2778.xray = v2871;
const v2872 = {};
v2778.waf = v2872;
const v2873 = {};
v2778.wafregional = v2873;
const v2874 = {};
v2778.workdocs = v2874;
const v2875 = {};
v2778.workspaces = v2875;
const v2876 = {};
v2778.codestar = v2876;
const v2877 = {};
v2778.lexmodelbuildingservice = v2877;
const v2878 = {};
v2778.marketplaceentitlementservice = v2878;
const v2879 = {};
v2778.athena = v2879;
const v2880 = {};
v2778.greengrass = v2880;
const v2881 = {};
v2778.dax = v2881;
const v2882 = {};
v2778.migrationhub = v2882;
const v2883 = {};
v2778.cloudhsmv2 = v2883;
const v2884 = {};
v2778.glue = v2884;
const v2885 = {};
v2778.mobile = v2885;
const v2886 = {};
v2778.pricing = v2886;
const v2887 = {};
v2778.costexplorer = v2887;
const v2888 = {};
v2778.mediaconvert = v2888;
const v2889 = {};
v2778.medialive = v2889;
const v2890 = {};
v2778.mediapackage = v2890;
const v2891 = {};
v2778.mediastore = v2891;
const v2892 = {};
v2778.mediastoredata = v2892;
const v2893 = {};
v2778.appsync = v2893;
const v2894 = {};
v2778.guardduty = v2894;
const v2895 = {};
v2778.mq = v2895;
const v2896 = {};
v2778.comprehend = v2896;
const v2897 = {};
v2778.iotjobsdataplane = v2897;
const v2898 = {};
v2778.kinesisvideoarchivedmedia = v2898;
const v2899 = {};
v2778.kinesisvideomedia = v2899;
const v2900 = {};
v2778.kinesisvideo = v2900;
const v2901 = {};
v2778.sagemakerruntime = v2901;
const v2902 = {};
v2778.sagemaker = v2902;
const v2903 = {};
v2778.translate = v2903;
const v2904 = {};
v2778.resourcegroups = v2904;
const v2905 = {};
v2778.alexaforbusiness = v2905;
const v2906 = {};
v2778.cloud9 = v2906;
const v2907 = {};
v2778.serverlessapplicationrepository = v2907;
const v2908 = {};
v2778.servicediscovery = v2908;
const v2909 = {};
v2778.workmail = v2909;
const v2910 = {};
v2778.autoscalingplans = v2910;
const v2911 = {};
v2778.transcribeservice = v2911;
const v2912 = {};
v2778.connect = v2912;
const v2913 = {};
v2778.acmpca = v2913;
const v2914 = {};
v2778.fms = v2914;
const v2915 = {};
v2778.secretsmanager = v2915;
const v2916 = {};
v2778.iotanalytics = v2916;
const v2917 = {};
v2778.iot1clickdevicesservice = v2917;
const v2918 = {};
v2778.iot1clickprojects = v2918;
const v2919 = {};
v2778.pi = v2919;
const v2920 = {};
v2778.neptune = v2920;
const v2921 = {};
v2778.mediatailor = v2921;
const v2922 = {};
v2778.eks = v2922;
const v2923 = {};
v2778.macie = v2923;
const v2924 = {};
v2778.dlm = v2924;
const v2925 = {};
v2778.signer = v2925;
const v2926 = {};
v2778.chime = v2926;
const v2927 = {};
v2778.pinpointemail = v2927;
const v2928 = {};
v2778.ram = v2928;
const v2929 = {};
v2778.route53resolver = v2929;
const v2930 = {};
v2778.pinpointsmsvoice = v2930;
const v2931 = {};
v2778.quicksight = v2931;
const v2932 = {};
v2778.rdsdataservice = v2932;
const v2933 = {};
v2778.amplify = v2933;
const v2934 = {};
v2778.datasync = v2934;
const v2935 = {};
v2778.robomaker = v2935;
const v2936 = {};
v2778.transfer = v2936;
const v2937 = {};
v2778.globalaccelerator = v2937;
const v2938 = {};
v2778.comprehendmedical = v2938;
const v2939 = {};
v2778.kinesisanalyticsv2 = v2939;
const v2940 = {};
v2778.mediaconnect = v2940;
const v2941 = {};
v2778.fsx = v2941;
const v2942 = {};
v2778.securityhub = v2942;
const v2943 = {};
v2778.appmesh = v2943;
const v2944 = {};
v2778.licensemanager = v2944;
const v2945 = {};
v2778.kafka = v2945;
const v2946 = {};
v2778.apigatewaymanagementapi = v2946;
const v2947 = {};
v2778.apigatewayv2 = v2947;
const v2948 = {};
v2778.docdb = v2948;
const v2949 = {};
v2778.backup = v2949;
const v2950 = {};
v2778.worklink = v2950;
const v2951 = {};
v2778.textract = v2951;
const v2952 = {};
v2778.managedblockchain = v2952;
const v2953 = {};
v2778.mediapackagevod = v2953;
const v2954 = {};
v2778.groundstation = v2954;
const v2955 = {};
v2778.iotthingsgraph = v2955;
const v2956 = {};
v2778.iotevents = v2956;
const v2957 = {};
v2778.ioteventsdata = v2957;
const v2958 = {};
v2778.personalize = v2958;
const v2959 = {};
v2778.personalizeevents = v2959;
const v2960 = {};
v2778.personalizeruntime = v2960;
const v2961 = {};
v2778.applicationinsights = v2961;
const v2962 = {};
v2778.servicequotas = v2962;
const v2963 = {};
v2778.ec2instanceconnect = v2963;
const v2964 = {};
v2778.eventbridge = v2964;
const v2965 = {};
v2778.lakeformation = v2965;
const v2966 = {};
v2778.forecastservice = v2966;
const v2967 = {};
v2778.forecastqueryservice = v2967;
const v2968 = {};
v2778.qldb = v2968;
const v2969 = {};
v2778.qldbsession = v2969;
const v2970 = {};
v2778.workmailmessageflow = v2970;
const v2971 = {};
v2778.codestarnotifications = v2971;
const v2972 = {};
v2778.savingsplans = v2972;
const v2973 = {};
v2778.sso = v2973;
const v2974 = {};
v2778.ssooidc = v2974;
const v2975 = {};
v2778.marketplacecatalog = v2975;
const v2976 = {};
v2778.dataexchange = v2976;
const v2977 = {};
v2778.sesv2 = v2977;
const v2978 = {};
v2778.migrationhubconfig = v2978;
const v2979 = {};
v2778.connectparticipant = v2979;
const v2980 = {};
v2778.appconfig = v2980;
const v2981 = {};
v2778.iotsecuretunneling = v2981;
const v2982 = {};
v2778.wafv2 = v2982;
const v2983 = {};
v2778.elasticinference = v2983;
const v2984 = {};
v2778.imagebuilder = v2984;
const v2985 = {};
v2778.schemas = v2985;
const v2986 = {};
v2778.accessanalyzer = v2986;
const v2987 = {};
v2778.codegurureviewer = v2987;
const v2988 = {};
v2778.codeguruprofiler = v2988;
const v2989 = {};
v2778.computeoptimizer = v2989;
const v2990 = {};
v2778.frauddetector = v2990;
const v2991 = {};
v2778.kendra = v2991;
const v2992 = {};
v2778.networkmanager = v2992;
const v2993 = {};
v2778.outposts = v2993;
const v2994 = {};
v2778.augmentedairuntime = v2994;
const v2995 = {};
v2778.ebs = v2995;
const v2996 = {};
v2778.kinesisvideosignalingchannels = v2996;
const v2997 = {};
v2778.detective = v2997;
const v2998 = {};
v2778.codestarconnections = v2998;
const v2999 = {};
v2778.synthetics = v2999;
const v3000 = {};
v2778.iotsitewise = v3000;
const v3001 = {};
v2778.macie2 = v3001;
const v3002 = {};
v2778.codeartifact = v3002;
const v3003 = {};
v2778.honeycode = v3003;
const v3004 = {};
v2778.ivs = v3004;
const v3005 = {};
v2778.braket = v3005;
const v3006 = {};
v2778.identitystore = v3006;
const v3007 = {};
v2778.appflow = v3007;
const v3008 = {};
v2778.redshiftdata = v3008;
const v3009 = {};
v2778.ssoadmin = v3009;
const v3010 = {};
v2778.timestreamquery = v3010;
const v3011 = {};
v2778.timestreamwrite = v3011;
const v3012 = {};
v2778.s3outposts = v3012;
const v3013 = {};
v2778.databrew = v3013;
const v3014 = {};
v2778.servicecatalogappregistry = v3014;
const v3015 = {};
v2778.networkfirewall = v3015;
const v3016 = {};
v2778.mwaa = v3016;
const v3017 = {};
v2778.amplifybackend = v3017;
const v3018 = {};
v2778.appintegrations = v3018;
const v3019 = {};
v2778.connectcontactlens = v3019;
const v3020 = {};
v2778.devopsguru = v3020;
const v3021 = {};
v2778.ecrpublic = v3021;
const v3022 = {};
v2778.lookoutvision = v3022;
const v3023 = {};
v2778.sagemakerfeaturestoreruntime = v3023;
const v3024 = {};
v2778.customerprofiles = v3024;
const v3025 = {};
v2778.auditmanager = v3025;
const v3026 = {};
v2778.emrcontainers = v3026;
const v3027 = {};
v2778.healthlake = v3027;
const v3028 = {};
v2778.sagemakeredge = v3028;
const v3029 = {};
v2778.amp = v3029;
const v3030 = {};
v2778.greengrassv2 = v3030;
const v3031 = {};
v2778.iotdeviceadvisor = v3031;
const v3032 = {};
v2778.iotfleethub = v3032;
const v3033 = {};
v2778.iotwireless = v3033;
const v3034 = {};
v2778.location = v3034;
const v3035 = {};
v2778.wellarchitected = v3035;
const v3036 = {};
v2778.lexmodelsv2 = v3036;
const v3037 = {};
v2778.lexruntimev2 = v3037;
const v3038 = {};
v2778.fis = v3038;
const v3039 = {};
v2778.lookoutmetrics = v3039;
const v3040 = {};
v2778.mgn = v3040;
const v3041 = {};
v2778.lookoutequipment = v3041;
const v3042 = {};
v2778.nimble = v3042;
const v3043 = {};
v2778.finspace = v3043;
const v3044 = {};
v2778.finspacedata = v3044;
const v3045 = {};
v2778.ssmcontacts = v3045;
const v3046 = {};
v2778.ssmincidents = v3046;
const v3047 = {};
v2778.applicationcostprofiler = v3047;
const v3048 = {};
v2778.apprunner = v3048;
const v3049 = {};
v2778.proton = v3049;
const v3050 = {};
v2778.route53recoverycluster = v3050;
const v3051 = {};
v2778.route53recoverycontrolconfig = v3051;
const v3052 = {};
v2778.route53recoveryreadiness = v3052;
const v3053 = {};
v2778.chimesdkidentity = v3053;
const v3054 = {};
v2778.chimesdkmessaging = v3054;
const v3055 = {};
v2778.snowdevicemanagement = v3055;
const v3056 = {};
v2778.memorydb = v3056;
const v3057 = {};
v2778.opensearch = v3057;
const v3058 = {};
v2778.kafkaconnect = v3058;
const v3059 = {};
v2778.voiceid = v3059;
const v3060 = {};
v2778.wisdom = v3060;
const v3061 = {};
v2778.account = v3061;
const v3062 = {};
v2778.cloudcontrol = v3062;
const v3063 = {};
v2778.grafana = v3063;
const v3064 = {};
v2778.panorama = v3064;
const v3065 = {};
v2778.chimesdkmeetings = v3065;
const v3066 = {};
v2778.resiliencehub = v3066;
const v3067 = {};
v2778.migrationhubstrategy = v3067;
const v3068 = {};
v2778.appconfigdata = v3068;
const v3069 = {};
v2778.drs = v3069;
const v3070 = {};
v2778.migrationhubrefactorspaces = v3070;
const v3071 = {};
v2778.evidently = v3071;
const v3072 = {};
v2778.inspector2 = v3072;
const v3073 = {};
v2778.rbin = v3073;
const v3074 = {};
v2778.rum = v3074;
const v3075 = {};
v2778.backupgateway = v3075;
const v3076 = {};
v2778.iottwinmaker = v3076;
const v3077 = {};
v2778.workspacesweb = v3077;
const v3078 = {};
v2778.amplifyuibuilder = v3078;
const v3079 = {};
v2778.keyspaces = v3079;
const v3080 = {};
v2778.billingconductor = v3080;
const v3081 = {};
v2778.gamesparks = v3081;
const v3082 = {};
v2778.pinpointsmsvoicev2 = v3082;
const v3083 = {};
v2778.ivschat = v3083;
const v3084 = {};
v2778.chimesdkmediapipelines = v3084;
const v3085 = {};
v2778.emrserverless = v3085;
const v3086 = {};
v2778.m2 = v3086;
const v3087 = {};
v2778.connectcampaigns = v3087;
const v3088 = {};
v2778.redshiftserverless = v3088;
const v3089 = {};
v2778.rolesanywhere = v3089;
const v3090 = {};
v2778.licensemanagerusersubscriptions = v3090;
const v3091 = {};
v2778.backupstorage = v3091;
const v3092 = {};
v2778.privatenetworks = v3092;
v2775.services = v2778;
v2.apiLoader = v2775;
v2.EndpointCache = v643;
v2.SequentialExecutor = v402;
v2.Service = v299;
v2.Credentials = v253;
v2.CredentialProviderChain = v2585;
v2.Config = v154;
v2.config = v251;
var v3093;
var v3094 = v40;
var v3095 = v117;
v3093 = function Endpoint(endpoint, config) { v3.hideProperties(this, [\\"slashes\\", \\"auth\\", \\"hash\\", \\"search\\", \\"query\\"]); if (typeof endpoint === \\"undefined\\" || endpoint === null) {
    throw new v3094(\\"Invalid endpoint: \\" + endpoint);
}
else if (typeof endpoint !== \\"string\\") {
    return v3.copy(endpoint);
} if (!endpoint.match(/^http/)) {
    var useSSL = config && config.sslEnabled !== undefined ? config.sslEnabled : true;
    endpoint = (useSSL ? \\"https\\" : \\"http\\") + \\"://\\" + endpoint;
} v3.update(this, v3.urlParse(endpoint)); if (this.port) {
    this.port = v3095(this.port, 10);
}
else {
    this.port = this.protocol === \\"https:\\" ? 443 : 80;
} };
const v3096 = {};
v3096.constructor = v3093;
v3093.prototype = v3096;
v3093.__super__ = v31;
v2.Endpoint = v3093;
var v3097;
var v3098 = v2;
v3097 = function HttpRequest(endpoint, region) { endpoint = new v3098.Endpoint(endpoint); this.method = \\"POST\\"; this.path = endpoint.path || \\"/\\"; this.headers = {}; this.body = \\"\\"; this.endpoint = endpoint; this.region = region; this._userAgent = \\"\\"; this.setUserAgent(); };
const v3099 = {};
v3099.constructor = v3097;
var v3100;
v3100 = function setUserAgent() { this._userAgent = this.headers[this.getUserAgentHeaderName()] = v3.userAgent(); };
const v3101 = {};
v3101.constructor = v3100;
v3100.prototype = v3101;
v3099.setUserAgent = v3100;
var v3102;
v3102 = function getUserAgentHeaderName() { var prefix = v3.isBrowser() ? \\"X-Amz-\\" : \\"\\"; return prefix + \\"User-Agent\\"; };
const v3103 = {};
v3103.constructor = v3102;
v3102.prototype = v3103;
v3099.getUserAgentHeaderName = v3102;
var v3104;
v3104 = function appendToUserAgent(agentPartial) { if (typeof agentPartial === \\"string\\" && agentPartial) {
    this._userAgent += \\" \\" + agentPartial;
} this.headers[this.getUserAgentHeaderName()] = this._userAgent; };
const v3105 = {};
v3105.constructor = v3104;
v3104.prototype = v3105;
v3099.appendToUserAgent = v3104;
var v3106;
v3106 = function getUserAgent() { return this._userAgent; };
const v3107 = {};
v3107.constructor = v3106;
v3106.prototype = v3107;
v3099.getUserAgent = v3106;
var v3108;
v3108 = function pathname() { return this.path.split(\\"?\\", 1)[0]; };
const v3109 = {};
v3109.constructor = v3108;
v3108.prototype = v3109;
v3099.pathname = v3108;
var v3110;
v3110 = function search() { var query = this.path.split(\\"?\\", 2)[1]; if (query) {
    query = v3.queryStringParse(query);
    return v3.queryParamsToString(query);
} return \\"\\"; };
const v3111 = {};
v3111.constructor = v3110;
v3110.prototype = v3111;
v3099.search = v3110;
var v3112;
var v3113 = v2;
v3112 = function updateEndpoint(endpointStr) { var newEndpoint = new v3113.Endpoint(endpointStr); this.endpoint = newEndpoint; this.path = newEndpoint.path || \\"/\\"; if (this.headers[\\"Host\\"]) {
    this.headers[\\"Host\\"] = newEndpoint.host;
} };
const v3114 = {};
v3114.constructor = v3112;
v3112.prototype = v3114;
v3099.updateEndpoint = v3112;
v3097.prototype = v3099;
v3097.__super__ = v31;
v2.HttpRequest = v3097;
var v3115;
v3115 = function HttpResponse() { this.statusCode = undefined; this.headers = {}; this.body = undefined; this.streaming = false; this.stream = null; };
const v3116 = {};
v3116.constructor = v3115;
var v3117;
v3117 = function createUnbufferedStream() { this.streaming = true; return this.stream; };
const v3118 = {};
v3118.constructor = v3117;
v3117.prototype = v3118;
v3116.createUnbufferedStream = v3117;
v3115.prototype = v3116;
v3115.__super__ = v31;
v2.HttpResponse = v3115;
var v3119;
var v3120 = v31;
var v3121 = v31;
v3119 = function () { if (v3120 !== v3121) {
    return v3120.apply(this, arguments);
} };
const v3122 = {};
var v3123;
var v3124 = v2;
var v3125 = require;
var v3126 = require;
var v3127 = v8;
var v3128 = \\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\\";
var v3129 = v751;
var v3130 = v40;
const v3132 = require(\\"timers\\").clearTimeout;
var v3131 = v3132;
var v3133 = v40;
var v3134 = undefined;
var v3135 = v3132;
var v3136 = undefined;
v3123 = function handleRequest(httpRequest, httpOptions, callback, errCallback) { var self = this; var endpoint = httpRequest.endpoint; var pathPrefix = \\"\\"; if (!httpOptions)
    httpOptions = {}; if (httpOptions.proxy) {
    pathPrefix = endpoint.protocol + \\"//\\" + endpoint.hostname;
    if (endpoint.port !== 80 && endpoint.port !== 443) {
        pathPrefix += \\":\\" + endpoint.port;
    }
    endpoint = new v3124.Endpoint(httpOptions.proxy);
} var useSSL = endpoint.protocol === \\"https:\\"; var http = useSSL ? v3125(\\"https\\") : v3126(\\"http\\"); var options = { host: endpoint.hostname, port: endpoint.port, method: httpRequest.method, headers: httpRequest.headers, path: pathPrefix + httpRequest.path }; if (!httpOptions.agent) {
    options.agent = this.getAgent(useSSL, { keepAlive: v3127.env[v3128] === \\"1\\" ? true : false });
} v3.update(options, httpOptions); delete options.proxy; delete options.timeout; var stream = http.request(options, function (httpResp) { if (stream.didCallback)
    return; callback(httpResp); httpResp.emit(\\"headers\\", httpResp.statusCode, httpResp.headers, httpResp.statusMessage); }); httpRequest.stream = stream; stream.didCallback = false; if (httpOptions.connectTimeout) {
    var connectTimeoutId;
    stream.on(\\"socket\\", function (socket) { if (socket.connecting) {
        connectTimeoutId = v3129(function connectTimeout() { if (stream.didCallback)
            return; stream.didCallback = true; stream.abort(); errCallback(v3.error(new v3130(\\"Socket timed out without establishing a connection\\"), { code: \\"TimeoutError\\" })); }, httpOptions.connectTimeout);
        socket.on(\\"connect\\", function () { v3131(connectTimeoutId); connectTimeoutId = null; });
    } });
} stream.setTimeout(httpOptions.timeout || 0, function () { if (stream.didCallback)
    return; stream.didCallback = true; var msg = \\"Connection timed out after \\" + httpOptions.timeout + \\"ms\\"; errCallback(v3.error(new v3133(msg), { code: \\"TimeoutError\\" })); stream.abort(); }); stream.on(\\"error\\", function (err) { if (v3134) {
    v3135(v3136);
    connectTimeoutId = null;
} if (stream.didCallback)
    return; stream.didCallback = true; if (\\"ECONNRESET\\" === err.code || \\"EPIPE\\" === err.code || \\"ETIMEDOUT\\" === err.code) {
    errCallback(v3.error(err, { code: \\"TimeoutError\\" }));
}
else {
    errCallback(err);
} }); var expect = httpRequest.headers.Expect || httpRequest.headers.expect; if (expect === \\"100-continue\\") {
    stream.once(\\"continue\\", function () { self.writeBody(stream, httpRequest); });
}
else {
    this.writeBody(stream, httpRequest);
} return stream; };
const v3137 = {};
v3137.constructor = v3123;
v3123.prototype = v3137;
v3122.handleRequest = v3123;
var v3138;
var v3139 = v117;
var v3140 = v1808;
v3138 = function writeBody(stream, httpRequest) { var body = httpRequest.body; var totalBytes = v3139(httpRequest.headers[\\"Content-Length\\"], 10); if (body instanceof v3140) {
    var progressStream = this.progressStream(stream, totalBytes);
    if (progressStream) {
        body.pipe(progressStream).pipe(stream);
    }
    else {
        body.pipe(stream);
    }
}
else if (body) {
    stream.once(\\"finish\\", function () { stream.emit(\\"sendProgress\\", { loaded: totalBytes, total: totalBytes }); });
    stream.end(body);
}
else {
    stream.end();
} };
const v3141 = {};
v3141.constructor = v3138;
v3138.prototype = v3141;
v3122.writeBody = v3138;
var v3142;
var v3143 = require;
var v3144 = require;
var v3145 = v8;
var v3146 = v31;
var v3147 = Infinity;
v3142 = function getAgent(useSSL, agentOptions) { var http = useSSL ? v3143(\\"https\\") : v3144(\\"http\\"); if (useSSL) {
    if (!undefined) {
        undefined = new http.Agent(v3.merge({ rejectUnauthorized: v3145.env.NODE_TLS_REJECT_UNAUTHORIZED === \\"0\\" ? false : true }, agentOptions || {}));
        undefined(0);
        v3146.defineProperty(undefined, \\"maxSockets\\", { enumerable: true, get: function () { var defaultMaxSockets = 50; var globalAgent = http.globalAgent; if (globalAgent && globalAgent.maxSockets !== v3147 && typeof globalAgent.maxSockets === \\"number\\") {
                return globalAgent.maxSockets;
            } return defaultMaxSockets; } });
    }
    return undefined;
}
else {
    if (!undefined) {
        undefined = new http.Agent(agentOptions);
    }
    return undefined;
} };
const v3148 = {};
v3148.constructor = v3142;
v3142.prototype = v3148;
v3122.getAgent = v3142;
var v3149;
var v3150 = v2670;
v3149 = function progressStream(stream, totalBytes) { if (typeof v3150 === \\"undefined\\") {
    return;
} var loadedBytes = 0; var reporter = new v3150(); reporter._transform = function (chunk, encoding, callback) { if (chunk) {
    loadedBytes += chunk.length;
    stream.emit(\\"sendProgress\\", { loaded: loadedBytes, total: totalBytes });
} callback(null, chunk); }; return reporter; };
const v3151 = {};
v3151.constructor = v3149;
v3149.prototype = v3151;
v3122.progressStream = v3149;
v3122.emitter = null;
var v3152;
var v3153 = v31;
var v3154 = v31;
v3152 = function () { if (v3153 !== v3154) {
    return v3153.apply(this, arguments);
} };
v3152.prototype = v3122;
v3152.__super__ = v31;
v3122.constructor = v3152;
v3119.prototype = v3122;
v3119.__super__ = v31;
var v3155;
v3155 = function getInstance() { if (this.singleton === undefined) {
    this.singleton = new this();
} return this.singleton; };
const v3156 = {};
v3156.constructor = v3155;
v3155.prototype = v3156;
v3119.getInstance = v3155;
v3119.streamsApiVersion = 2;
v2.HttpClient = v3119;
const v3157 = {};
v3157.Core = v428;
v3157.CorePost = v753;
v3157.Logger = v763;
v3157.Json = v1903;
const v3158 = Object.create(v401);
const v3159 = {};
const v3160 = [];
v3160.push(v1978);
v3159.build = v3160;
const v3161 = [];
v3161.push(v2012);
v3159.extractData = v3161;
const v3162 = [];
v3162.push(v2010);
v3159.extractError = v3162;
v3158._events = v3159;
v3158.BUILD = v1978;
v3158.EXTRACT_DATA = v2012;
v3158.EXTRACT_ERROR = v2010;
v3157.Rest = v3158;
v3157.RestJson = v1972;
v3157.RestXml = v2042;
v3157.Query = v797;
v2.EventListeners = v3157;
var v3163;
var v3164 = v2665;
var v3165 = v2;
var v3166 = v2;
var v3168;
v3168 = function AcceptorStateMachine(states, state) { this.currentState = state || null; this.states = states || {}; };
const v3169 = {};
v3169.constructor = v3168;
var v3170;
v3170 = function runTo(finalState, done, bindObject, inputError) { if (typeof finalState === \\"function\\") {
    inputError = bindObject;
    bindObject = done;
    done = finalState;
    finalState = null;
} var self = this; var state = self.states[self.currentState]; state.fn.call(bindObject || self, inputError, function (err) { if (err) {
    if (state.fail)
        self.currentState = state.fail;
    else
        return done ? done.call(bindObject, err) : null;
}
else {
    if (state.accept)
        self.currentState = state.accept;
    else
        return done ? done.call(bindObject) : null;
} if (self.currentState === finalState) {
    return done ? done.call(bindObject, err) : null;
} self.runTo(finalState, done, bindObject, err); }); };
const v3171 = {};
v3171.constructor = v3170;
v3170.prototype = v3171;
v3169.runTo = v3170;
var v3172;
v3172 = function addState(name, acceptState, failState, fn) { if (typeof acceptState === \\"function\\") {
    fn = acceptState;
    acceptState = null;
    failState = null;
}
else if (typeof failState === \\"function\\") {
    fn = failState;
    failState = null;
} if (!this.currentState)
    this.currentState = name; this.states[name] = { accept: acceptState, fail: failState, fn: fn }; return this; };
const v3173 = {};
v3173.constructor = v3172;
v3172.prototype = v3173;
v3169.addState = v3172;
v3168.prototype = v3169;
var v3167 = v3168;
const v3174 = {};
const v3175 = {};
v3175.accept = \\"build\\";
v3175.fail = \\"error\\";
var v3176;
var v3178;
const v3180 = {};
v3180.success = 1;
v3180.error = 1;
v3180.complete = 1;
var v3179 = v3180;
v3178 = function isTerminalState(machine) { return v113.hasOwnProperty.call(v3179, machine._asm.currentState); };
const v3181 = {};
v3181.constructor = v3178;
v3178.prototype = v3181;
var v3177 = v3178;
var v3182 = v2665;
var v3183 = v2665;
v3176 = function (_, done) { var self = this; self._haltHandlersOnError = false; self.emit(self._asm.currentState, function (err) { if (err) {
    if (v3177(self)) {
        if (v3182 && self.domain instanceof v3183.Domain) {
            err.domainEmitter = self;
            err.domain = self.domain;
            err.domainThrown = false;
            self.domain.emit(\\"error\\", err);
        }
        else {
            throw err;
        }
    }
    else {
        self.response.error = err;
        done(err);
    }
}
else {
    done(self.response.error);
} }); };
const v3184 = {};
v3184.constructor = v3176;
v3176.prototype = v3184;
v3175.fn = v3176;
v3174.validate = v3175;
const v3185 = {};
v3185.accept = \\"afterBuild\\";
v3185.fail = \\"restart\\";
v3185.fn = v3176;
v3174.build = v3185;
const v3186 = {};
v3186.accept = \\"sign\\";
v3186.fail = \\"restart\\";
v3186.fn = v3176;
v3174.afterBuild = v3186;
const v3187 = {};
v3187.accept = \\"send\\";
v3187.fail = \\"retry\\";
v3187.fn = v3176;
v3174.sign = v3187;
const v3188 = {};
v3188.accept = \\"afterRetry\\";
v3188.fail = \\"afterRetry\\";
v3188.fn = v3176;
v3174.retry = v3188;
const v3189 = {};
v3189.accept = \\"sign\\";
v3189.fail = \\"error\\";
v3189.fn = v3176;
v3174.afterRetry = v3189;
const v3190 = {};
v3190.accept = \\"validateResponse\\";
v3190.fail = \\"retry\\";
v3190.fn = v3176;
v3174.send = v3190;
const v3191 = {};
v3191.accept = \\"extractData\\";
v3191.fail = \\"extractError\\";
v3191.fn = v3176;
v3174.validateResponse = v3191;
const v3192 = {};
v3192.accept = \\"extractData\\";
v3192.fail = \\"retry\\";
v3192.fn = v3176;
v3174.extractError = v3192;
const v3193 = {};
v3193.accept = \\"success\\";
v3193.fail = \\"retry\\";
v3193.fn = v3176;
v3174.extractData = v3193;
const v3194 = {};
v3194.accept = \\"build\\";
v3194.fail = \\"error\\";
v3194.fn = v3176;
v3174.restart = v3194;
const v3195 = {};
v3195.accept = \\"complete\\";
v3195.fail = \\"complete\\";
v3195.fn = v3176;
v3174.success = v3195;
const v3196 = {};
v3196.accept = \\"complete\\";
v3196.fail = \\"complete\\";
v3196.fn = v3176;
v3174.error = v3196;
const v3197 = {};
v3197.accept = null;
v3197.fail = null;
v3197.fn = v3176;
v3174.complete = v3197;
var v3198 = v2;
v3163 = function Request(service, operation, params) { var endpoint = service.endpoint; var region = service.config.region; var customUserAgent = service.config.customUserAgent; if (service.signingRegion) {
    region = service.signingRegion;
}
else if (service.isGlobalEndpoint) {
    region = \\"us-east-1\\";
} this.domain = v3164 && null; this.service = service; this.operation = operation; this.params = params || {}; this.httpRequest = new v3165.HttpRequest(endpoint, region); this.httpRequest.appendToUserAgent(customUserAgent); this.startTime = service.getSkewCorrectedDate(); this.response = new v3166.Response(this); this._asm = new v3167(v3174, \\"validate\\"); this._haltHandlersOnError = false; v3198.SequentialExecutor.call(this); this.emit = this.emitEvent; };
const v3199 = {};
v3199.constructor = v3163;
var v3200;
v3200 = function send(callback) { if (callback) {
    this.httpRequest.appendToUserAgent(\\"callback\\");
    this.on(\\"complete\\", function (resp) { callback.call(resp, resp.error, resp.data); });
} this.runTo(); return this.response; };
const v3201 = {};
v3201.constructor = v3200;
v3200.prototype = v3201;
v3199.send = v3200;
var v3202;
v3202 = function build(callback) { return this.runTo(\\"send\\", callback); };
const v3203 = {};
v3203.constructor = v3202;
v3202.prototype = v3203;
v3199.build = v3202;
var v3204;
v3204 = function runTo(state, done) { this._asm.runTo(state, done, this); return this; };
const v3205 = {};
v3205.constructor = v3204;
v3204.prototype = v3205;
v3199.runTo = v3204;
var v3206;
var v3207 = v40;
v3206 = function abort() { this.removeAllListeners(\\"validateResponse\\"); this.removeAllListeners(\\"extractError\\"); this.on(\\"validateResponse\\", function addAbortedError(resp) { resp.error = v3.error(new v3207(\\"Request aborted by user\\"), { code: \\"RequestAbortedError\\", retryable: false }); }); if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) {
    this.httpRequest.stream.abort();
    if (this.httpRequest._abortCallback) {
        this.httpRequest._abortCallback();
    }
    else {
        this.removeAllListeners(\\"send\\");
    }
} return this; };
const v3208 = {};
v3208.constructor = v3206;
v3206.prototype = v3208;
v3199.abort = v3206;
var v3209;
v3209 = function eachPage(callback) { callback = v65.makeAsync(callback, 3); function wrappedCallback(response) { callback.call(response, response.error, response.data, function (result) { if (result === false)
    return; if (response.hasNextPage()) {
    response.nextPage().on(\\"complete\\", wrappedCallback).send();
}
else {
    callback.call(response, null, null, v65.noop);
} }); } this.on(\\"complete\\", wrappedCallback).send(); };
const v3210 = {};
v3210.constructor = v3209;
v3209.prototype = v3210;
v3199.eachPage = v3209;
var v3211;
var v3212 = v33;
const v3214 = Object.create(v646);
var v3215;
var v3217;
v3217 = function Lexer() { };
const v3218 = {};
var v3219;
var v3221;
v3221 = function isAlpha(ch) { return (ch >= \\"a\\" && ch <= \\"z\\") || (ch >= \\"A\\" && ch <= \\"Z\\") || ch === \\"_\\"; };
const v3222 = {};
v3222.constructor = v3221;
v3221.prototype = v3222;
var v3220 = v3221;
var v3223 = \\"UnquotedIdentifier\\";
const v3225 = {};
v3225[\\".\\"] = \\"Dot\\";
v3225[\\"*\\"] = \\"Star\\";
v3225[\\",\\"] = \\"Comma\\";
v3225[\\":\\"] = \\"Colon\\";
v3225[\\"{\\"] = \\"Lbrace\\";
v3225[\\"}\\"] = \\"Rbrace\\";
v3225[\\"]\\"] = \\"Rbracket\\";
v3225[\\"(\\"] = \\"Lparen\\";
v3225[\\")\\"] = \\"Rparen\\";
v3225[\\"@\\"] = \\"Current\\";
var v3224 = v3225;
var v3226 = v3225;
var v3228;
v3228 = function isNum(ch) { return (ch >= \\"0\\" && ch <= \\"9\\") || ch === \\"-\\"; };
const v3229 = {};
v3229.constructor = v3228;
v3228.prototype = v3229;
var v3227 = v3228;
var v3230 = \\"QuotedIdentifier\\";
var v3231 = \\"Literal\\";
var v3232 = \\"Literal\\";
const v3234 = {};
v3234[\\"<\\"] = true;
v3234[\\">\\"] = true;
v3234[\\"=\\"] = true;
v3234[\\"!\\"] = true;
var v3233 = v3234;
const v3236 = {};
v3236[\\" \\"] = true;
v3236[\\"\\\\t\\"] = true;
v3236[\\"\\\\n\\"] = true;
var v3235 = v3236;
var v3237 = \\"And\\";
var v3238 = \\"Expref\\";
var v3239 = \\"Or\\";
var v3240 = \\"Pipe\\";
var v3241 = v40;
v3219 = function (stream) { var tokens = []; this._current = 0; var start; var identifier; var token; while (this._current < stream.length) {
    if (v3220(stream[this._current])) {
        start = this._current;
        identifier = this._consumeUnquotedIdentifier(stream);
        tokens.push({ type: v3223, value: identifier, start: start });
    }
    else if (v3224[stream[this._current]] !== undefined) {
        tokens.push({ type: v3226[stream[this._current]], value: stream[this._current], start: this._current });
        this._current++;
    }
    else if (v3227(stream[this._current])) {
        token = this._consumeNumber(stream);
        tokens.push(token);
    }
    else if (stream[this._current] === \\"[\\") {
        token = this._consumeLBracket(stream);
        tokens.push(token);
    }
    else if (stream[this._current] === \\"\\\\\\"\\") {
        start = this._current;
        identifier = this._consumeQuotedIdentifier(stream);
        tokens.push({ type: v3230, value: identifier, start: start });
    }
    else if (stream[this._current] === \\"'\\") {
        start = this._current;
        identifier = this._consumeRawStringLiteral(stream);
        tokens.push({ type: v3231, value: identifier, start: start });
    }
    else if (stream[this._current] === \\"\`\\") {
        start = this._current;
        var literal = this._consumeLiteral(stream);
        tokens.push({ type: v3232, value: literal, start: start });
    }
    else if (v3233[stream[this._current]] !== undefined) {
        tokens.push(this._consumeOperator(stream));
    }
    else if (v3235[stream[this._current]] !== undefined) {
        this._current++;
    }
    else if (stream[this._current] === \\"&\\") {
        start = this._current;
        this._current++;
        if (stream[this._current] === \\"&\\") {
            this._current++;
            tokens.push({ type: v3237, value: \\"&&\\", start: start });
        }
        else {
            tokens.push({ type: v3238, value: \\"&\\", start: start });
        }
    }
    else if (stream[this._current] === \\"|\\") {
        start = this._current;
        this._current++;
        if (stream[this._current] === \\"|\\") {
            this._current++;
            tokens.push({ type: v3239, value: \\"||\\", start: start });
        }
        else {
            tokens.push({ type: v3240, value: \\"|\\", start: start });
        }
    }
    else {
        var error = new v3241(\\"Unknown character:\\" + stream[this._current]);
        error.name = \\"LexerError\\";
        throw error;
    }
} return tokens; };
const v3242 = {};
v3242.constructor = v3219;
v3219.prototype = v3242;
v3218.tokenize = v3219;
var v3243;
var v3245;
v3245 = function isAlphaNum(ch) { return (ch >= \\"a\\" && ch <= \\"z\\") || (ch >= \\"A\\" && ch <= \\"Z\\") || (ch >= \\"0\\" && ch <= \\"9\\") || ch === \\"_\\"; };
const v3246 = {};
v3246.constructor = v3245;
v3245.prototype = v3246;
var v3244 = v3245;
v3243 = function (stream) { var start = this._current; this._current++; while (this._current < stream.length && v3244(stream[this._current])) {
    this._current++;
} return stream.slice(start, this._current); };
const v3247 = {};
v3247.constructor = v3243;
v3243.prototype = v3247;
v3218._consumeUnquotedIdentifier = v3243;
var v3248;
var v3249 = v163;
v3248 = function (stream) { var start = this._current; this._current++; var maxLength = stream.length; while (stream[this._current] !== \\"\\\\\\"\\" && this._current < maxLength) {
    var current = this._current;
    if (stream[current] === \\"\\\\\\\\\\" && (stream[current + 1] === \\"\\\\\\\\\\" || stream[current + 1] === \\"\\\\\\"\\")) {
        current += 2;
    }
    else {
        current++;
    }
    this._current = current;
} this._current++; return v3249.parse(stream.slice(start, this._current)); };
const v3250 = {};
v3250.constructor = v3248;
v3248.prototype = v3250;
v3218._consumeQuotedIdentifier = v3248;
var v3251;
v3251 = function (stream) { var start = this._current; this._current++; var maxLength = stream.length; while (stream[this._current] !== \\"'\\" && this._current < maxLength) {
    var current = this._current;
    if (stream[current] === \\"\\\\\\\\\\" && (stream[current + 1] === \\"\\\\\\\\\\" || stream[current + 1] === \\"'\\")) {
        current += 2;
    }
    else {
        current++;
    }
    this._current = current;
} this._current++; var literal = stream.slice(start + 1, this._current - 1); return literal.replace(\\"\\\\\\\\'\\", \\"'\\"); };
const v3252 = {};
v3252.constructor = v3251;
v3251.prototype = v3252;
v3218._consumeRawStringLiteral = v3251;
var v3253;
var v3254 = v3228;
var v3255 = v117;
var v3256 = \\"Number\\";
v3253 = function (stream) { var start = this._current; this._current++; var maxLength = stream.length; while (v3254(stream[this._current]) && this._current < maxLength) {
    this._current++;
} var value = v3255(stream.slice(start, this._current)); return { type: v3256, value: value, start: start }; };
const v3257 = {};
v3257.constructor = v3253;
v3253.prototype = v3257;
v3218._consumeNumber = v3253;
var v3258;
var v3259 = \\"Filter\\";
var v3260 = \\"Flatten\\";
var v3261 = \\"Lbracket\\";
v3258 = function (stream) { var start = this._current; this._current++; if (stream[this._current] === \\"?\\") {
    this._current++;
    return { type: v3259, value: \\"[?\\", start: start };
}
else if (stream[this._current] === \\"]\\") {
    this._current++;
    return { type: v3260, value: \\"[]\\", start: start };
}
else {
    return { type: v3261, value: \\"[\\", start: start };
} };
const v3262 = {};
v3262.constructor = v3258;
v3258.prototype = v3262;
v3218._consumeLBracket = v3258;
var v3263;
var v3264 = \\"NE\\";
var v3265 = \\"Not\\";
var v3266 = \\"LTE\\";
var v3267 = \\"LT\\";
var v3268 = \\"GTE\\";
var v3269 = \\"GT\\";
var v3270 = \\"EQ\\";
v3263 = function (stream) { var start = this._current; var startingChar = stream[start]; this._current++; if (startingChar === \\"!\\") {
    if (stream[this._current] === \\"=\\") {
        this._current++;
        return { type: v3264, value: \\"!=\\", start: start };
    }
    else {
        return { type: v3265, value: \\"!\\", start: start };
    }
}
else if (startingChar === \\"<\\") {
    if (stream[this._current] === \\"=\\") {
        this._current++;
        return { type: v3266, value: \\"<=\\", start: start };
    }
    else {
        return { type: v3267, value: \\"<\\", start: start };
    }
}
else if (startingChar === \\">\\") {
    if (stream[this._current] === \\"=\\") {
        this._current++;
        return { type: v3268, value: \\">=\\", start: start };
    }
    else {
        return { type: v3269, value: \\">\\", start: start };
    }
}
else if (startingChar === \\"=\\") {
    if (stream[this._current] === \\"=\\") {
        this._current++;
        return { type: v3270, value: \\"==\\", start: start };
    }
} };
const v3271 = {};
v3271.constructor = v3263;
v3263.prototype = v3271;
v3218._consumeOperator = v3263;
var v3272;
var v3274;
v3274 = function (str) { return str.trimLeft(); };
const v3275 = {};
v3275.constructor = v3274;
v3274.prototype = v3275;
var v3273 = v3274;
var v3276 = v163;
v3272 = function (stream) { this._current++; var start = this._current; var maxLength = stream.length; var literal; while (stream[this._current] !== \\"\`\\" && this._current < maxLength) {
    var current = this._current;
    if (stream[current] === \\"\\\\\\\\\\" && (stream[current + 1] === \\"\\\\\\\\\\" || stream[current + 1] === \\"\`\\")) {
        current += 2;
    }
    else {
        current++;
    }
    this._current = current;
} var literalString = v3273(stream.slice(start, this._current)); literalString = literalString.replace(\\"\\\\\\\\\`\\", \\"\`\\"); if (this._looksLikeJSON(literalString)) {
    literal = v3276.parse(literalString);
}
else {
    literal = v3276.parse(\\"\\\\\\"\\" + literalString + \\"\\\\\\"\\");
} this._current++; return literal; };
const v3277 = {};
v3277.constructor = v3272;
v3272.prototype = v3277;
v3218._consumeLiteral = v3272;
var v3278;
v3278 = function (literalString) { var startingChars = \\"[{\\\\\\"\\"; var jsonLiterals = [\\"true\\", \\"false\\", \\"null\\"]; var numberLooking = \\"-0123456789\\"; if (literalString === \\"\\") {
    return false;
}
else if (startingChars.indexOf(literalString[0]) >= 0) {
    return true;
}
else if (jsonLiterals.indexOf(literalString) >= 0) {
    return true;
}
else if (numberLooking.indexOf(literalString[0]) >= 0) {
    try {
        v3276.parse(literalString);
        return true;
    }
    catch (ex) {
        return false;
    }
}
else {
    return false;
} };
const v3279 = {};
v3279.constructor = v3278;
v3278.prototype = v3279;
v3218._looksLikeJSON = v3278;
v3217.prototype = v3218;
var v3216 = v3217;
v3215 = function tokenize(stream) { var lexer = new v3216(); return lexer.tokenize(stream); };
const v3280 = {};
v3280.constructor = v3215;
v3215.prototype = v3280;
v3214.tokenize = v3215;
var v3281;
var v3283;
v3283 = function Parser() { };
const v3284 = {};
var v3285;
var v3286 = \\"EOF\\";
var v3287 = v40;
v3285 = function (expression) { this._loadTokens(expression); this.index = 0; var ast = this.expression(0); if (this._lookahead(0) !== v3286) {
    var t = this._lookaheadToken(0);
    var error = new v3287(\\"Unexpected token type: \\" + t.type + \\", value: \\" + t.value);
    error.name = \\"ParserError\\";
    throw error;
} return ast; };
const v3288 = {};
v3288.constructor = v3285;
v3285.prototype = v3288;
v3284.parse = v3285;
var v3289;
var v3290 = v3217;
var v3291 = \\"EOF\\";
v3289 = function (expression) { var lexer = new v3290(); var tokens = lexer.tokenize(expression); tokens.push({ type: v3291, value: \\"\\", start: expression.length }); this.tokens = tokens; };
const v3292 = {};
v3292.constructor = v3289;
v3289.prototype = v3292;
v3284._loadTokens = v3289;
var v3293;
const v3295 = {};
v3295.EOF = 0;
v3295.UnquotedIdentifier = 0;
v3295.QuotedIdentifier = 0;
v3295.Rbracket = 0;
v3295.Rparen = 0;
v3295.Comma = 0;
v3295.Rbrace = 0;
v3295.Number = 0;
v3295.Current = 0;
v3295.Expref = 0;
v3295.Pipe = 1;
v3295.Or = 2;
v3295.And = 3;
v3295.EQ = 5;
v3295.GT = 5;
v3295.LT = 5;
v3295.GTE = 5;
v3295.LTE = 5;
v3295.NE = 5;
v3295.Flatten = 9;
v3295.Star = 20;
v3295.Filter = 21;
v3295.Dot = 40;
v3295.Not = 45;
v3295.Lbrace = 50;
v3295.Lbracket = 55;
v3295.Lparen = 60;
var v3294 = v3295;
v3293 = function (rbp) { var leftToken = this._lookaheadToken(0); this._advance(); var left = this.nud(leftToken); var currentToken = this._lookahead(0); while (rbp < v3294[currentToken]) {
    this._advance();
    left = this.led(currentToken, left);
    currentToken = this._lookahead(0);
} return left; };
const v3296 = {};
v3296.constructor = v3293;
v3293.prototype = v3296;
v3284.expression = v3293;
var v3297;
v3297 = function (number) { return this.tokens[this.index + number].type; };
const v3298 = {};
v3298.constructor = v3297;
v3297.prototype = v3298;
v3284._lookahead = v3297;
var v3299;
v3299 = function (number) { return this.tokens[this.index + number]; };
const v3300 = {};
v3300.constructor = v3299;
v3299.prototype = v3300;
v3284._lookaheadToken = v3299;
var v3301;
v3301 = function () { this.index++; };
const v3302 = {};
v3302.constructor = v3301;
v3301.prototype = v3302;
v3284._advance = v3301;
var v3303;
var v3304 = \\"UnquotedIdentifier\\";
var v3305 = \\"Lparen\\";
var v3306 = v40;
var v3307 = undefined;
var v3308 = \\"Not\\";
var v3309 = \\"Star\\";
var v3310 = \\"Rbracket\\";
var v3311 = \\"Filter\\";
var v3312 = \\"Lbrace\\";
var v3313 = \\"Flatten\\";
var v3314 = \\"Flatten\\";
var v3315 = \\"Lbracket\\";
var v3316 = \\"Number\\";
var v3317 = \\"Colon\\";
var v3318 = \\"Current\\";
var v3319 = \\"Current\\";
var v3320 = \\"Lparen\\";
var v3321 = \\"Rparen\\";
var v3322 = \\"Current\\";
var v3323 = undefined;
v3303 = function (token) { var left; var right; var expression; switch (token.type) {
    case v3232: return { type: \\"Literal\\", value: token.value };
    case v3304: return { type: \\"Field\\", name: token.value };
    case v3230:
        var node = { type: \\"Field\\", name: token.value };
        if (this._lookahead(0) === v3305) {
            throw new v3306(\\"Quoted identifier not allowed for function names.\\");
        }
        return v3307;
    case v3308:
        right = this.expression(45);
        return { type: \\"NotExpression\\", children: [right] };
    case v3309:
        left = { type: \\"Identity\\" };
        right = null;
        if (this._lookahead(0) === v3310) {
            right = { type: \\"Identity\\" };
        }
        else {
            right = this._parseProjectionRHS(20);
        }
        return { type: \\"ValueProjection\\", children: [left, right] };
    case v3311: return this.led(token.type, { type: \\"Identity\\" });
    case v3312: return this._parseMultiselectHash();
    case v3313:
        left = { type: v3314, children: [{ type: \\"Identity\\" }] };
        right = this._parseProjectionRHS(9);
        return { type: \\"Projection\\", children: [left, right] };
    case v3315:
        if (this._lookahead(0) === v3316 || this._lookahead(0) === v3317) {
            right = this._parseIndexExpression();
            return this._projectIfSlice({ type: \\"Identity\\" }, right);
        }
        else if (this._lookahead(0) === v3309 && this._lookahead(1) === v3310) {
            this._advance();
            this._advance();
            right = this._parseProjectionRHS(20);
            return { type: \\"Projection\\", children: [{ type: \\"Identity\\" }, right] };
        }
        return this._parseMultiselectList();
    case v3318: return { type: v3319 };
    case v3238:
        expression = this.expression(0);
        return { type: \\"ExpressionReference\\", children: [expression] };
    case v3320:
        var args = [];
        while (this._lookahead(0) !== v3321) {
            if (this._lookahead(0) === v3318) {
                expression = { type: v3322 };
                this._advance();
            }
            else {
                expression = this.expression(0);
            }
            undefined(expression);
        }
        this._match(v3321);
        return v3323[0];
    default: this._errorToken(token);
} };
const v3324 = {};
v3324.constructor = v3303;
v3303.prototype = v3324;
v3284.nud = v3303;
var v3325;
var v3326 = \\"Dot\\";
var v3327 = undefined;
var v3328 = \\"Pipe\\";
var v3329 = \\"Pipe\\";
var v3330 = \\"And\\";
var v3331 = \\"Rparen\\";
var v3332 = \\"Comma\\";
var v3333 = \\"Comma\\";
var v3334 = undefined;
var v3335 = undefined;
var v3336 = undefined;
var v3337 = undefined;
var v3338 = \\"Rbracket\\";
var v3339 = undefined;
var v3340 = undefined;
var v3341 = undefined;
var v3342 = \\"EQ\\";
var v3343 = \\"NE\\";
var v3344 = \\"LT\\";
var v3345 = \\"LTE\\";
var v3346 = \\"Number\\";
var v3347 = \\"Colon\\";
var v3348 = \\"Star\\";
var v3349 = \\"Rbracket\\";
v3325 = function (tokenName, left) { var right; switch (tokenName) {
    case v3326:
        var rbp = 40;
        if (this._lookahead(0) !== v3309) {
            right = this._parseDotRHS(v3327);
            return { type: \\"Subexpression\\", children: [left, right] };
        }
        this._advance();
        right = this._parseProjectionRHS(v3327);
        return { type: \\"ValueProjection\\", children: [left, right] };
    case v3328:
        right = this.expression(1);
        return { type: v3329, children: [left, right] };
    case v3239:
        right = this.expression(2);
        return { type: \\"OrExpression\\", children: [left, right] };
    case v3330:
        right = this.expression(3);
        return { type: \\"AndExpression\\", children: [left, right] };
    case v3305:
        var name = left.name;
        var args = [];
        var expression, node;
        while (this._lookahead(0) !== v3331) {
            if (this._lookahead(0) === v3318) {
                expression = { type: v3319 };
                this._advance();
            }
            else {
                expression = this.expression(0);
            }
            if (this._lookahead(0) === v3332) {
                this._match(v3333);
            }
            undefined(v3334);
        }
        this._match(v3331);
        node = { type: \\"Function\\", name: v3335, children: v3336 };
        return v3337;
    case v3311:
        var condition = this.expression(0);
        this._match(v3338);
        if (this._lookahead(0) === v3314) {
            right = { type: \\"Identity\\" };
        }
        else {
            right = this._parseProjectionRHS(21);
        }
        return { type: \\"FilterProjection\\", children: [left, right, v3339] };
    case v3314:
        var leftNode = { type: v3314, children: [left] };
        var rightNode = this._parseProjectionRHS(9);
        return { type: \\"Projection\\", children: [v3340, v3341] };
    case v3342:
    case v3343:
    case v3269:
    case v3268:
    case v3344:
    case v3345: return this._parseComparator(left, tokenName);
    case v3315:
        var token = this._lookaheadToken(0);
        if (undefined === v3346 || undefined === v3347) {
            right = this._parseIndexExpression();
            return this._projectIfSlice(left, right);
        }
        this._match(v3348);
        this._match(v3349);
        right = this._parseProjectionRHS(20);
        return { type: \\"Projection\\", children: [left, right] };
    default: this._errorToken(this._lookaheadToken(0));
} };
const v3350 = {};
v3350.constructor = v3325;
v3325.prototype = v3350;
v3284.led = v3325;
var v3351;
v3351 = function (tokenType) { if (this._lookahead(0) === tokenType) {
    this._advance();
}
else {
    var t = this._lookaheadToken(0);
    var error = new v3306(\\"Expected \\" + tokenType + \\", got: \\" + t.type);
    error.name = \\"ParserError\\";
    throw error;
} };
const v3352 = {};
v3352.constructor = v3351;
v3351.prototype = v3352;
v3284._match = v3351;
var v3353;
v3353 = function (token) { var error = new v3306(\\"Invalid token (\\" + token.type + \\"): \\\\\\"\\" + token.value + \\"\\\\\\"\\"); error.name = \\"ParserError\\"; throw error; };
const v3354 = {};
v3354.constructor = v3353;
v3353.prototype = v3354;
v3284._errorToken = v3353;
var v3355;
v3355 = function () { if (this._lookahead(0) === v3347 || this._lookahead(1) === v3347) {
    return this._parseSliceExpression();
}
else {
    var node = { type: \\"Index\\", value: this._lookaheadToken(0).value };
    this._advance();
    this._match(v3349);
    return node;
} };
const v3356 = {};
v3356.constructor = v3355;
v3355.prototype = v3356;
v3284._parseIndexExpression = v3355;
var v3357;
v3357 = function (left, right) { var indexExpr = { type: \\"IndexExpression\\", children: [left, right] }; if (right.type === \\"Slice\\") {
    return { type: \\"Projection\\", children: [indexExpr, this._parseProjectionRHS(20)] };
}
else {
    return indexExpr;
} };
const v3358 = {};
v3358.constructor = v3357;
v3357.prototype = v3358;
v3284._projectIfSlice = v3357;
var v3359;
v3359 = function () { var parts = [null, null, null]; var index = 0; var currentToken = this._lookahead(0); while (currentToken !== v3338 && index < 3) {
    if (currentToken === v3347) {
        index++;
        this._advance();
    }
    else if (currentToken === v3346) {
        parts[index] = this._lookaheadToken(0).value;
        this._advance();
    }
    else {
        var t = this._lookahead(0);
        var error = new v3287(\\"Syntax error, unexpected token: \\" + t.value + \\"(\\" + t.type + \\")\\");
        error.name = \\"Parsererror\\";
        throw error;
    }
    currentToken = this._lookahead(0);
} this._match(v3338); return { type: \\"Slice\\", children: parts }; };
const v3360 = {};
v3360.constructor = v3359;
v3359.prototype = v3360;
v3284._parseSliceExpression = v3359;
var v3361;
var v3362 = v3295;
v3361 = function (left, comparator) { var right = this.expression(v3362[comparator]); return { type: \\"Comparator\\", name: comparator, children: [left, right] }; };
const v3363 = {};
v3363.constructor = v3361;
v3361.prototype = v3363;
v3284._parseComparator = v3361;
var v3364;
var v3365 = \\"UnquotedIdentifier\\";
var v3366 = \\"Lbracket\\";
v3364 = function (rbp) { var lookahead = this._lookahead(0); var exprTokens = [v3365, v3230, v3348]; if (exprTokens.indexOf(lookahead) >= 0) {
    return this.expression(rbp);
}
else if (lookahead === v3366) {
    this._match(v3315);
    return this._parseMultiselectList();
}
else if (lookahead === v3312) {
    this._match(v3312);
    return this._parseMultiselectHash();
} };
const v3367 = {};
v3367.constructor = v3364;
v3364.prototype = v3367;
v3284._parseDotRHS = v3364;
var v3368;
v3368 = function (rbp) { var right; if (v3362[this._lookahead(0)] < 10) {
    right = { type: \\"Identity\\" };
}
else if (this._lookahead(0) === v3315) {
    right = this.expression(rbp);
}
else if (this._lookahead(0) === v3311) {
    right = this.expression(rbp);
}
else if (this._lookahead(0) === v3326) {
    this._match(v3326);
    right = this._parseDotRHS(rbp);
}
else {
    var t = this._lookaheadToken(0);
    var error = new v3287(\\"Sytanx error, unexpected token: \\" + t.value + \\"(\\" + t.type + \\")\\");
    error.name = \\"ParserError\\";
    throw error;
} return right; };
const v3369 = {};
v3369.constructor = v3368;
v3368.prototype = v3369;
v3284._parseProjectionRHS = v3368;
var v3370;
v3370 = function () { var expressions = []; while (this._lookahead(0) !== v3338) {
    var expression = this.expression(0);
    expressions.push(expression);
    if (this._lookahead(0) === v3332) {
        this._match(v3333);
        if (this._lookahead(0) === v3310) {
            throw new v3306(\\"Unexpected token Rbracket\\");
        }
    }
} this._match(v3338); return { type: \\"MultiSelectList\\", children: expressions }; };
const v3371 = {};
v3371.constructor = v3370;
v3370.prototype = v3371;
v3284._parseMultiselectList = v3370;
var v3372;
var v3373 = \\"QuotedIdentifier\\";
var v3374 = \\"Rbrace\\";
v3372 = function () { var pairs = []; var identifierTypes = [v3365, v3373]; var keyToken, keyName, value, node; for (;;) {
    keyToken = this._lookaheadToken(0);
    if (identifierTypes.indexOf(keyToken.type) < 0) {
        throw new v3287(\\"Expecting an identifier token, got: \\" + keyToken.type);
    }
    keyName = keyToken.value;
    this._advance();
    this._match(v3317);
    value = this.expression(0);
    node = { type: \\"KeyValuePair\\", name: keyName, value: value };
    pairs.push(node);
    if (this._lookahead(0) === v3333) {
        this._match(v3333);
    }
    else if (this._lookahead(0) === v3374) {
        this._match(v3374);
        break;
    }
} return { type: \\"MultiSelectHash\\", children: pairs }; };
const v3375 = {};
v3375.constructor = v3372;
v3372.prototype = v3375;
v3284._parseMultiselectHash = v3372;
v3283.prototype = v3284;
var v3282 = v3283;
v3281 = function compile(stream) { var parser = new v3282(); var ast = parser.parse(stream); return ast; };
const v3376 = {};
v3376.constructor = v3281;
v3281.prototype = v3376;
v3214.compile = v3281;
var v3377;
var v3378 = v3283;
var v3380;
var v3381 = 0;
var v3382 = 8;
var v3383 = 0;
var v3384 = 2;
var v3385 = 3;
var v3386 = 1;
var v3387 = 2;
var v3388 = 2;
var v3389 = 3;
var v3390 = 4;
var v3391 = 6;
var v3392 = 3;
var v3393 = 8;
var v3394 = 9;
var v3395 = 4;
var v3396 = 3;
var v3397 = 6;
var v3398 = 9;
var v3399 = 6;
var v3400 = 1;
var v3401 = 4;
var v3402 = 4;
var v3403 = 8;
v3380 = function Runtime(interpreter) { this._interpreter = interpreter; this.functionTable = { abs: { _func: this._functionAbs, _signature: [{ types: [v3381] }] }, avg: { _func: this._functionAvg, _signature: [{ types: [v3382] }] }, ceil: { _func: this._functionCeil, _signature: [{ types: [v3383] }] }, contains: { _func: this._functionContains, _signature: [{ types: [v3384, v3385] }, { types: [v3386] }] }, \\"ends_with\\": { _func: this._functionEndsWith, _signature: [{ types: [v3387] }, { types: [v3387] }] }, floor: { _func: this._functionFloor, _signature: [{ types: [v3381] }] }, length: { _func: this._functionLength, _signature: [{ types: [v3388, v3389, v3390] }] }, map: { _func: this._functionMap, _signature: [{ types: [v3391] }, { types: [v3392] }] }, max: { _func: this._functionMax, _signature: [{ types: [v3393, v3394] }] }, \\"merge\\": { _func: this._functionMerge, _signature: [{ types: [v3395], variadic: true }] }, \\"max_by\\": { _func: this._functionMaxBy, _signature: [{ types: [v3396] }, { types: [v3397] }] }, sum: { _func: this._functionSum, _signature: [{ types: [v3393] }] }, \\"starts_with\\": { _func: this._functionStartsWith, _signature: [{ types: [v3384] }, { types: [v3384] }] }, min: { _func: this._functionMin, _signature: [{ types: [v3393, v3398] }] }, \\"min_by\\": { _func: this._functionMinBy, _signature: [{ types: [v3385] }, { types: [v3399] }] }, type: { _func: this._functionType, _signature: [{ types: [v3400] }] }, keys: { _func: this._functionKeys, _signature: [{ types: [v3401] }] }, values: { _func: this._functionValues, _signature: [{ types: [v3402] }] }, sort: { _func: this._functionSort, _signature: [{ types: [v3398, v3403] }] }, \\"sort_by\\": { _func: this._functionSortBy, _signature: [{ types: [v3385] }, { types: [v3391] }] }, join: { _func: this._functionJoin, _signature: [{ types: [v3384] }, { types: [v3394] }] }, reverse: { _func: this._functionReverse, _signature: [{ types: [v3388, v3385] }] }, \\"to_array\\": { _func: this._functionToArray, _signature: [{ types: [v3386] }] }, \\"to_string\\": { _func: this._functionToString, _signature: [{ types: [v3400] }] }, \\"to_number\\": { _func: this._functionToNumber, _signature: [{ types: [v3386] }] }, \\"not_null\\": { _func: this._functionNotNull, _signature: [{ types: [v3400], variadic: true }] } }; };
const v3404 = {};
var v3405;
v3405 = function (name, resolvedArgs) { var functionEntry = this.functionTable[name]; if (functionEntry === undefined) {
    throw new v3287(\\"Unknown function: \\" + name + \\"()\\");
} this._validateArgs(name, resolvedArgs, functionEntry._signature); return functionEntry._func.call(this, resolvedArgs); };
const v3406 = {};
v3406.constructor = v3405;
v3405.prototype = v3406;
v3404.callFunction = v3405;
var v3407;
const v3409 = {};
v3409[\\"0\\"] = \\"number\\";
v3409[\\"1\\"] = \\"any\\";
v3409[\\"2\\"] = \\"string\\";
v3409[\\"3\\"] = \\"array\\";
v3409[\\"4\\"] = \\"object\\";
v3409[\\"5\\"] = \\"boolean\\";
v3409[\\"6\\"] = \\"expression\\";
v3409[\\"7\\"] = \\"null\\";
v3409[\\"8\\"] = \\"Array<number>\\";
v3409[\\"9\\"] = \\"Array<string>\\";
var v3408 = v3409;
v3407 = function (name, args, signature) { var pluralized; if (signature[signature.length - 1].variadic) {
    if (args.length < signature.length) {
        pluralized = signature.length === 1 ? \\" argument\\" : \\" arguments\\";
        throw new v3287(\\"ArgumentError: \\" + name + \\"() \\" + \\"takes at least\\" + signature.length + pluralized + \\" but received \\" + args.length);
    }
}
else if (args.length !== signature.length) {
    pluralized = signature.length === 1 ? \\" argument\\" : \\" arguments\\";
    throw new v3287(\\"ArgumentError: \\" + name + \\"() \\" + \\"takes \\" + signature.length + pluralized + \\" but received \\" + args.length);
} var currentSpec; var actualType; var typeMatched; for (var i = 0; i < signature.length; i++) {
    typeMatched = false;
    currentSpec = signature[i].types;
    actualType = this._getTypeName(args[i]);
    for (var j = 0; j < currentSpec.length; j++) {
        if (this._typeMatches(actualType, currentSpec[j], args[i])) {
            typeMatched = true;
            break;
        }
    }
    if (!typeMatched) {
        var expected = currentSpec.map(function (typeIdentifier) { return v3408[typeIdentifier]; }).join(\\",\\");
        throw new v3287(\\"TypeError: \\" + name + \\"() \\" + \\"expected argument \\" + (i + 1) + \\" to be type \\" + expected + \\" but received type \\" + v3408[actualType] + \\" instead.\\");
    }
} };
const v3410 = {};
v3410.constructor = v3407;
v3407.prototype = v3410;
v3404._validateArgs = v3407;
var v3411;
var v3412 = 9;
var v3413 = 0;
var v3414 = 2;
v3411 = function (actual, expected, argValue) { if (expected === v3400) {
    return true;
} if (expected === v3412 || expected === v3403 || expected === v3392) {
    if (expected === v3392) {
        return actual === v3392;
    }
    else if (actual === v3392) {
        var subtype;
        if (expected === v3403) {
            subtype = v3413;
        }
        else if (expected === v3412) {
            subtype = v3414;
        }
        for (var i = 0; i < argValue.length; i++) {
            if (!this._typeMatches(this._getTypeName(argValue[i]), subtype, argValue[i])) {
                return false;
            }
        }
        return true;
    }
}
else {
    return actual === expected;
} };
const v3415 = {};
v3415.constructor = v3411;
v3411.prototype = v3415;
v3404._typeMatches = v3411;
var v3416;
var v3417 = 5;
var v3418 = 7;
var v3419 = \\"Expref\\";
var v3420 = 6;
v3416 = function (obj) { switch (v113.toString.call(obj)) {
    case \\"[object String]\\": return v3414;
    case \\"[object Number]\\": return v3413;
    case \\"[object Array]\\": return v3392;
    case \\"[object Boolean]\\": return v3417;
    case \\"[object Null]\\": return v3418;
    case \\"[object Object]\\": if (obj.jmespathType === v3419) {
        return v3420;
    }
    else {
        return v3402;
    }
} };
const v3421 = {};
v3421.constructor = v3416;
v3416.prototype = v3421;
v3404._getTypeName = v3416;
var v3422;
v3422 = function (resolvedArgs) { return resolvedArgs[0].lastIndexOf(resolvedArgs[1]) === 0; };
const v3423 = {};
v3423.constructor = v3422;
v3422.prototype = v3423;
v3404._functionStartsWith = v3422;
var v3424;
v3424 = function (resolvedArgs) { var searchStr = resolvedArgs[0]; var suffix = resolvedArgs[1]; return searchStr.indexOf(suffix, searchStr.length - suffix.length) !== -1; };
const v3425 = {};
v3425.constructor = v3424;
v3424.prototype = v3425;
v3404._functionEndsWith = v3424;
var v3426;
v3426 = function (resolvedArgs) { var typeName = this._getTypeName(resolvedArgs[0]); if (typeName === v3414) {
    var originalStr = resolvedArgs[0];
    var reversedStr = \\"\\";
    for (var i = originalStr.length - 1; i >= 0; i--) {
        reversedStr += originalStr[i];
    }
    return reversedStr;
}
else {
    var reversedArray = resolvedArgs[0].slice(0);
    reversedArray.reverse();
    return reversedArray;
} };
const v3427 = {};
v3427.constructor = v3426;
v3426.prototype = v3427;
v3404._functionReverse = v3426;
var v3428;
var v3429 = v787;
v3428 = function (resolvedArgs) { return v3429.abs(resolvedArgs[0]); };
const v3430 = {};
v3430.constructor = v3428;
v3428.prototype = v3430;
v3404._functionAbs = v3428;
var v3431;
v3431 = function (resolvedArgs) { return v3429.ceil(resolvedArgs[0]); };
const v3432 = {};
v3432.constructor = v3431;
v3431.prototype = v3432;
v3404._functionCeil = v3431;
var v3433;
v3433 = function (resolvedArgs) { var sum = 0; var inputArray = resolvedArgs[0]; for (var i = 0; i < inputArray.length; i++) {
    sum += inputArray[i];
} return sum / inputArray.length; };
const v3434 = {};
v3434.constructor = v3433;
v3433.prototype = v3434;
v3404._functionAvg = v3433;
var v3435;
v3435 = function (resolvedArgs) { return resolvedArgs[0].indexOf(resolvedArgs[1]) >= 0; };
const v3436 = {};
v3436.constructor = v3435;
v3435.prototype = v3436;
v3404._functionContains = v3435;
var v3437;
v3437 = function (resolvedArgs) { return v3429.floor(resolvedArgs[0]); };
const v3438 = {};
v3438.constructor = v3437;
v3437.prototype = v3438;
v3404._functionFloor = v3437;
var v3439;
var v3441;
v3441 = function isObject(obj) { if (obj !== null) {
    return v113.toString.call(obj) === \\"[object Object]\\";
}
else {
    return false;
} };
const v3442 = {};
v3442.constructor = v3441;
v3441.prototype = v3442;
var v3440 = v3441;
var v3443 = v31;
v3439 = function (resolvedArgs) { if (!v3440(resolvedArgs[0])) {
    return resolvedArgs[0].length;
}
else {
    return v3443.keys(resolvedArgs[0]).length;
} };
const v3444 = {};
v3444.constructor = v3439;
v3439.prototype = v3444;
v3404._functionLength = v3439;
var v3445;
v3445 = function (resolvedArgs) { var mapped = []; var interpreter = this._interpreter; var exprefNode = resolvedArgs[0]; var elements = resolvedArgs[1]; for (var i = 0; i < elements.length; i++) {
    mapped.push(interpreter.visit(exprefNode, elements[i]));
} return mapped; };
const v3446 = {};
v3446.constructor = v3445;
v3445.prototype = v3446;
v3404._functionMap = v3445;
var v3447;
v3447 = function (resolvedArgs) { var merged = {}; for (var i = 0; i < resolvedArgs.length; i++) {
    var current = resolvedArgs[i];
    for (var key in current) {
        merged[key] = current[key];
    }
} return merged; };
const v3448 = {};
v3448.constructor = v3447;
v3447.prototype = v3448;
v3404._functionMerge = v3447;
var v3449;
v3449 = function (resolvedArgs) { if (resolvedArgs[0].length > 0) {
    var typeName = this._getTypeName(resolvedArgs[0][0]);
    if (typeName === v3413) {
        return v3429.max.apply(v3429, resolvedArgs[0]);
    }
    else {
        var elements = resolvedArgs[0];
        var maxElement = elements[0];
        for (var i = 1; i < elements.length; i++) {
            if (maxElement.localeCompare(elements[i]) < 0) {
                maxElement = elements[i];
            }
        }
        return maxElement;
    }
}
else {
    return null;
} };
const v3450 = {};
v3450.constructor = v3449;
v3449.prototype = v3450;
v3404._functionMax = v3449;
var v3451;
v3451 = function (resolvedArgs) { if (resolvedArgs[0].length > 0) {
    var typeName = this._getTypeName(resolvedArgs[0][0]);
    if (typeName === v3413) {
        return v3429.min.apply(v3429, resolvedArgs[0]);
    }
    else {
        var elements = resolvedArgs[0];
        var minElement = elements[0];
        for (var i = 1; i < elements.length; i++) {
            if (elements[i].localeCompare(minElement) < 0) {
                minElement = elements[i];
            }
        }
        return minElement;
    }
}
else {
    return null;
} };
const v3452 = {};
v3452.constructor = v3451;
v3451.prototype = v3452;
v3404._functionMin = v3451;
var v3453;
v3453 = function (resolvedArgs) { var sum = 0; var listToSum = resolvedArgs[0]; for (var i = 0; i < listToSum.length; i++) {
    sum += listToSum[i];
} return sum; };
const v3454 = {};
v3454.constructor = v3453;
v3453.prototype = v3454;
v3404._functionSum = v3453;
var v3455;
v3455 = function (resolvedArgs) { switch (this._getTypeName(resolvedArgs[0])) {
    case v3413: return \\"number\\";
    case v3414: return \\"string\\";
    case v3392: return \\"array\\";
    case v3402: return \\"object\\";
    case v3417: return \\"boolean\\";
    case v3420: return \\"expref\\";
    case v3418: return \\"null\\";
} };
const v3456 = {};
v3456.constructor = v3455;
v3455.prototype = v3456;
v3404._functionType = v3455;
var v3457;
v3457 = function (resolvedArgs) { return v3443.keys(resolvedArgs[0]); };
const v3458 = {};
v3458.constructor = v3457;
v3457.prototype = v3458;
v3404._functionKeys = v3457;
var v3459;
v3459 = function (resolvedArgs) { var obj = resolvedArgs[0]; var keys = v3443.keys(obj); var values = []; for (var i = 0; i < keys.length; i++) {
    values.push(obj[keys[i]]);
} return values; };
const v3460 = {};
v3460.constructor = v3459;
v3459.prototype = v3460;
v3404._functionValues = v3459;
var v3461;
v3461 = function (resolvedArgs) { var joinChar = resolvedArgs[0]; var listJoin = resolvedArgs[1]; return listJoin.join(joinChar); };
const v3462 = {};
v3462.constructor = v3461;
v3461.prototype = v3462;
v3404._functionJoin = v3461;
var v3463;
v3463 = function (resolvedArgs) { if (this._getTypeName(resolvedArgs[0]) === v3392) {
    return resolvedArgs[0];
}
else {
    return [resolvedArgs[0]];
} };
const v3464 = {};
v3464.constructor = v3463;
v3463.prototype = v3464;
v3404._functionToArray = v3463;
var v3465;
var v3466 = v163;
v3465 = function (resolvedArgs) { if (this._getTypeName(resolvedArgs[0]) === v3414) {
    return resolvedArgs[0];
}
else {
    return v3466.stringify(resolvedArgs[0]);
} };
const v3467 = {};
v3467.constructor = v3465;
v3465.prototype = v3467;
v3404._functionToString = v3465;
var v3468;
var v3469 = v1017;
v3468 = function (resolvedArgs) { var typeName = this._getTypeName(resolvedArgs[0]); var convertedValue; if (typeName === v3413) {
    return resolvedArgs[0];
}
else if (typeName === v3414) {
    convertedValue = +resolvedArgs[0];
    if (!v3469(convertedValue)) {
        return convertedValue;
    }
} return null; };
const v3470 = {};
v3470.constructor = v3468;
v3468.prototype = v3470;
v3404._functionToNumber = v3468;
var v3471;
v3471 = function (resolvedArgs) { for (var i = 0; i < resolvedArgs.length; i++) {
    if (this._getTypeName(resolvedArgs[i]) !== v3418) {
        return resolvedArgs[i];
    }
} return null; };
const v3472 = {};
v3472.constructor = v3471;
v3471.prototype = v3472;
v3404._functionNotNull = v3471;
var v3473;
v3473 = function (resolvedArgs) { var sortedArray = resolvedArgs[0].slice(0); sortedArray.sort(); return sortedArray; };
const v3474 = {};
v3474.constructor = v3473;
v3473.prototype = v3474;
v3404._functionSort = v3473;
var v3475;
v3475 = function (resolvedArgs) { var sortedArray = resolvedArgs[0].slice(0); if (sortedArray.length === 0) {
    return sortedArray;
} var interpreter = this._interpreter; var exprefNode = resolvedArgs[1]; var requiredType = this._getTypeName(interpreter.visit(exprefNode, sortedArray[0])); if ([v3413, v3414].indexOf(requiredType) < 0) {
    throw new v3287(\\"TypeError\\");
} var that = this; var decorated = []; for (var i = 0; i < sortedArray.length; i++) {
    decorated.push([i, sortedArray[i]]);
} decorated.sort(function (a, b) { var exprA = interpreter.visit(exprefNode, a[1]); var exprB = interpreter.visit(exprefNode, b[1]); if (that._getTypeName(exprA) !== requiredType) {
    throw new v3287(\\"TypeError: expected \\" + requiredType + \\", received \\" + that._getTypeName(exprA));
}
else if (that._getTypeName(exprB) !== requiredType) {
    throw new v3287(\\"TypeError: expected \\" + requiredType + \\", received \\" + that._getTypeName(exprB));
} if (exprA > exprB) {
    return 1;
}
else if (exprA < exprB) {
    return -1;
}
else {
    return a[0] - b[0];
} }); for (var j = 0; j < decorated.length; j++) {
    sortedArray[j] = decorated[j][1];
} return sortedArray; };
const v3476 = {};
v3476.constructor = v3475;
v3475.prototype = v3476;
v3404._functionSortBy = v3475;
var v3477;
var v3478 = Infinity;
v3477 = function (resolvedArgs) { var exprefNode = resolvedArgs[1]; var resolvedArray = resolvedArgs[0]; var keyFunction = this.createKeyFunction(exprefNode, [v3413, v3414]); var maxNumber = -v3478; var maxRecord; var current; for (var i = 0; i < resolvedArray.length; i++) {
    current = keyFunction(resolvedArray[i]);
    if (current > maxNumber) {
        maxNumber = current;
        maxRecord = resolvedArray[i];
    }
} return maxRecord; };
const v3479 = {};
v3479.constructor = v3477;
v3477.prototype = v3479;
v3404._functionMaxBy = v3477;
var v3480;
v3480 = function (resolvedArgs) { var exprefNode = resolvedArgs[1]; var resolvedArray = resolvedArgs[0]; var keyFunction = this.createKeyFunction(exprefNode, [v3413, v3414]); var minNumber = v3478; var minRecord; var current; for (var i = 0; i < resolvedArray.length; i++) {
    current = keyFunction(resolvedArray[i]);
    if (current < minNumber) {
        minNumber = current;
        minRecord = resolvedArray[i];
    }
} return minRecord; };
const v3481 = {};
v3481.constructor = v3480;
v3480.prototype = v3481;
v3404._functionMinBy = v3480;
var v3482;
v3482 = function (exprefNode, allowedTypes) { var that = this; var interpreter = this._interpreter; var keyFunc = function (x) { var current = interpreter.visit(exprefNode, x); if (allowedTypes.indexOf(that._getTypeName(current)) < 0) {
    var msg = \\"TypeError: expected one of \\" + allowedTypes + \\", received \\" + that._getTypeName(current);
    throw new v3287(msg);
} return current; }; return keyFunc; };
const v3483 = {};
v3483.constructor = v3482;
v3482.prototype = v3483;
v3404.createKeyFunction = v3482;
v3380.prototype = v3404;
var v3379 = v3380;
var v3485;
v3485 = function TreeInterpreter(runtime) { this.runtime = runtime; };
const v3486 = {};
var v3487;
v3487 = function (node, value) { return this.visit(node, value); };
const v3488 = {};
v3488.constructor = v3487;
v3487.prototype = v3488;
v3486.search = v3487;
var v3489;
var v3491;
v3491 = function isArray(obj) { if (obj !== null) {
    return v113.toString.call(obj) === \\"[object Array]\\";
}
else {
    return false;
} };
const v3492 = {};
v3492.constructor = v3491;
v3491.prototype = v3492;
var v3490 = v3491;
var v3493 = undefined;
var v3494 = v3491;
var v3495 = undefined;
var v3496 = undefined;
var v3497 = undefined;
var v3498 = undefined;
var v3499 = undefined;
var v3500 = undefined;
var v3501 = undefined;
var v3503;
var v3504 = v31;
v3503 = function objValues(obj) { var keys = v3504.keys(obj); var values = []; for (var i = 0; i < keys.length; i++) {
    values.push(obj[keys[i]]);
} return values; };
const v3505 = {};
v3505.constructor = v3503;
v3503.prototype = v3505;
var v3502 = v3503;
var v3506 = undefined;
var v3508;
var v3509 = v3491;
var v3510 = v3441;
v3508 = function isFalse(obj) { if (obj === \\"\\" || obj === false || obj === null) {
    return true;
}
else if (v3509(obj) && obj.length === 0) {
    return true;
}
else if (v3510(obj)) {
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            return false;
        }
    }
    return true;
}
else {
    return false;
} };
const v3511 = {};
v3511.constructor = v3508;
v3508.prototype = v3511;
var v3507 = v3508;
var v3512 = undefined;
var v3513 = undefined;
var v3515;
const v3517 = console._stdout._writableState.afterWriteTickInfo.constructor.prototype.hasOwnProperty;
var v3516 = v3517;
var v3518 = v3517;
v3515 = function strictDeepEqual(first, second) { if (first === second) {
    return true;
} var firstType = v113.toString.call(first); if (firstType !== v113.toString.call(second)) {
    return false;
} if (v3509(first) === true) {
    if (first.length !== second.length) {
        return false;
    }
    for (var i = 0; i < first.length; i++) {
        if (strictDeepEqual(first[i], second[i]) === false) {
            return false;
        }
    }
    return true;
} if (v3510(first) === true) {
    var keysSeen = {};
    for (var key in first) {
        if (v3516.call(first, key)) {
            if (strictDeepEqual(first[key], second[key]) === false) {
                return false;
            }
            keysSeen[key] = true;
        }
    }
    for (var key2 in second) {
        if (v3518.call(second, key2)) {
            if (keysSeen[key2] !== true) {
                return false;
            }
        }
    }
    return true;
} return false; };
const v3519 = {};
v3519.constructor = v3515;
v3515.prototype = v3519;
var v3514 = v3515;
var v3520 = \\"NE\\";
var v3521 = v3515;
var v3522 = \\"GT\\";
var v3523 = \\"GTE\\";
var v3524 = undefined;
var v3525 = undefined;
var v3526 = undefined;
var v3527 = undefined;
v3489 = function (node, value) { var matched, current, result, first, second, field, left, right, collected, i; switch (node.type) {
    case \\"Field\\":
        if (value !== null && v3440(value)) {
            field = value[node.name];
            if (field === undefined) {
                return null;
            }
            else {
                return field;
            }
        }
        return null;
    case \\"Subexpression\\":
        result = this.visit(node.children[0], value);
        for (i = 1; i < node.children.length; i++) {
            result = this.visit(node.children[1], result);
            if (result === null) {
                return null;
            }
        }
        return result;
    case \\"IndexExpression\\":
        left = this.visit(node.children[0], value);
        right = this.visit(node.children[1], left);
        return right;
    case \\"Index\\":
        if (!v3490(value)) {
            return null;
        }
        var index = node.value;
        if (v3493 < 0) {
            index = value.length + v3493;
        }
        result = value[v3493];
        if (result === undefined) {
            result = null;
        }
        return result;
    case \\"Slice\\":
        if (!v3494(value)) {
            return null;
        }
        var sliceParams = node.children.slice(0);
        var computed = this.computeSliceParams(value.length, v3495);
        var start = v3496[0];
        var stop = v3496[1];
        var step = v3496[2];
        result = [];
        if (v3497 > 0) {
            for (i = v3498; i < v3499; i += v3497) {
                result.push(value[i]);
            }
        }
        else {
            for (i = v3500; i > v3499; i += v3497) {
                result.push(value[i]);
            }
        }
        return result;
    case \\"Projection\\":
        var base = this.visit(node.children[0], value);
        if (!v3490(v3501)) {
            return null;
        }
        collected = [];
        for (i = 0; i < undefined; i++) {
            current = this.visit(node.children[1], v3501[i]);
            if (current !== null) {
                collected.push(current);
            }
        }
        return collected;
    case \\"ValueProjection\\":
        base = this.visit(node.children[0], value);
        if (!v3440(v3501)) {
            return null;
        }
        collected = [];
        var values = v3502(v3501);
        for (i = 0; i < undefined; i++) {
            current = this.visit(node.children[1], v3506[i]);
            if (current !== null) {
                collected.push(current);
            }
        }
        return collected;
    case \\"FilterProjection\\":
        base = this.visit(node.children[0], value);
        if (!v3490(v3501)) {
            return null;
        }
        var filtered = [];
        var finalResults = [];
        for (i = 0; i < undefined; i++) {
            matched = this.visit(node.children[2], v3501[i]);
            if (!v3507(matched)) {
                undefined(v3501[i]);
            }
        }
        for (var j = 0; j < undefined; j++) {
            current = this.visit(node.children[1], v3512[j]);
            if (current !== null) {
                undefined(current);
            }
        }
        return v3513;
    case \\"Comparator\\":
        first = this.visit(node.children[0], value);
        second = this.visit(node.children[1], value);
        switch (node.name) {
            case v3342:
                result = v3514(first, second);
                break;
            case v3520:
                result = !v3521(first, second);
                break;
            case v3522:
                result = first > second;
                break;
            case v3523:
                result = first >= second;
                break;
            case v3267:
                result = first < second;
                break;
            case v3266:
                result = first <= second;
                break;
            default: throw new v3287(\\"Unknown comparator: \\" + node.name);
        }
        return result;
    case v3260:
        var original = this.visit(node.children[0], value);
        if (!v3490(v3524)) {
            return null;
        }
        var merged = [];
        for (i = 0; i < undefined; i++) {
            current = v3524[i];
            if (v3490(current)) {
                undefined(v3525, current);
            }
            else {
                undefined(current);
            }
        }
        return v3525;
    case \\"Identity\\": return value;
    case \\"MultiSelectList\\":
        if (value === null) {
            return null;
        }
        collected = [];
        for (i = 0; i < node.children.length; i++) {
            collected.push(this.visit(node.children[i], value));
        }
        return collected;
    case \\"MultiSelectHash\\":
        if (value === null) {
            return null;
        }
        collected = {};
        var child;
        for (i = 0; i < node.children.length; i++) {
            child = node.children[i];
            collected[undefined] = this.visit(undefined, value);
        }
        return collected;
    case \\"OrExpression\\":
        matched = this.visit(node.children[0], value);
        if (v3507(matched)) {
            matched = this.visit(node.children[1], value);
        }
        return matched;
    case \\"AndExpression\\":
        first = this.visit(node.children[0], value);
        if (v3507(first) === true) {
            return first;
        }
        return this.visit(node.children[1], value);
    case \\"NotExpression\\":
        first = this.visit(node.children[0], value);
        return v3507(first);
    case \\"Literal\\": return node.value;
    case v3328:
        left = this.visit(node.children[0], value);
        return this.visit(node.children[1], left);
    case v3319: return value;
    case \\"Function\\":
        var resolvedArgs = [];
        for (i = 0; i < node.children.length; i++) {
            undefined(this.visit(node.children[i], value));
        }
        return this.runtime.callFunction(node.name, v3526);
    case \\"ExpressionReference\\":
        var refNode = node.children[0];
        undefined = v3419;
        return v3527;
    default: throw new v3287(\\"Unknown node type: \\" + node.type);
} };
const v3528 = {};
v3528.constructor = v3489;
v3489.prototype = v3528;
v3486.visit = v3489;
var v3529;
v3529 = function (arrayLength, sliceParams) { var start = sliceParams[0]; var stop = sliceParams[1]; var step = sliceParams[2]; var computed = [null, null, null]; if (step === null) {
    step = 1;
}
else if (step === 0) {
    var error = new v3287(\\"Invalid slice, step cannot be 0\\");
    error.name = \\"RuntimeError\\";
    throw error;
} var stepValueNegative = step < 0 ? true : false; if (start === null) {
    start = stepValueNegative ? arrayLength - 1 : 0;
}
else {
    start = this.capSliceRange(arrayLength, start, step);
} if (stop === null) {
    stop = stepValueNegative ? -1 : arrayLength;
}
else {
    stop = this.capSliceRange(arrayLength, stop, step);
} computed[0] = start; computed[1] = stop; computed[2] = step; return computed; };
const v3530 = {};
v3530.constructor = v3529;
v3529.prototype = v3530;
v3486.computeSliceParams = v3529;
var v3531;
v3531 = function (arrayLength, actualValue, step) { if (actualValue < 0) {
    actualValue += arrayLength;
    if (actualValue < 0) {
        actualValue = step < 0 ? -1 : 0;
    }
}
else if (actualValue >= arrayLength) {
    actualValue = step < 0 ? arrayLength - 1 : arrayLength;
} return actualValue; };
const v3532 = {};
v3532.constructor = v3531;
v3531.prototype = v3532;
v3486.capSliceRange = v3531;
v3485.prototype = v3486;
var v3484 = v3485;
v3377 = function search(data, expression) { var parser = new v3378(); var runtime = new v3379(); var interpreter = new v3484(runtime); runtime._interpreter = interpreter; var node = parser.parse(expression); return interpreter.search(node, data); };
const v3533 = {};
v3533.constructor = v3377;
v3377.prototype = v3533;
v3214.search = v3377;
v3214.strictDeepEqual = v3515;
var v3213 = v3214;
v3211 = function eachItem(callback) { var self = this; function wrappedCallback(err, data) { if (err)
    return callback(err, null); if (data === null)
    return callback(null, null); var config = self.service.paginationConfig(self.operation); var resultKey = config.resultKey; if (v3212.isArray(resultKey))
    resultKey = resultKey[0]; var items = v3213.search(data, resultKey); var continueIteration = true; v3.arrayEach(items, function (item) { continueIteration = callback(null, item); if (continueIteration === false) {
    return v111;
} }); return continueIteration; } this.eachPage(wrappedCallback); };
const v3534 = {};
v3534.constructor = v3211;
v3211.prototype = v3534;
v3199.eachItem = v3211;
var v3535;
v3535 = function isPageable() { return this.service.paginationConfig(this.operation) ? true : false; };
const v3536 = {};
v3536.constructor = v3535;
v3535.prototype = v3536;
v3199.isPageable = v3535;
var v3537;
var v3538 = v8;
var v3539 = v117;
var v3540 = v1017;
var v3541 = undefined;
var v3542 = v40;
var v3543 = undefined;
var v3544 = undefined;
v3537 = function createReadStream() { var streams = v3.stream; var req = this; var stream = null; if (2 === 2) {
    stream = new streams.PassThrough();
    v3538.nextTick(function () { req.send(); });
}
else {
    stream = new streams.Stream();
    stream.readable = true;
    stream.sent = false;
    stream.on(\\"newListener\\", function (event) { if (!stream.sent && event === \\"data\\") {
        stream.sent = true;
        v3538.nextTick(function () { req.send(); });
    } });
} this.on(\\"error\\", function (err) { stream.emit(\\"error\\", err); }); this.on(\\"httpHeaders\\", function streamHeaders(statusCode, headers, resp) { if (statusCode < 300) {
    req.removeListener(\\"httpData\\", v428.HTTP_DATA);
    req.removeListener(\\"httpError\\", undefined);
    req.on(\\"httpError\\", function streamHttpError(error) { resp.error = error; resp.error.retryable = false; });
    var shouldCheckContentLength = false;
    var expectedLen;
    if (req.httpRequest.method !== \\"HEAD\\") {
        expectedLen = v3539(headers[\\"content-length\\"], 10);
    }
    if (expectedLen !== undefined && !v3540(expectedLen) && expectedLen >= 0) {
        shouldCheckContentLength = true;
        var receivedLen = 0;
    }
    var checkContentLengthAndEmit = function checkContentLengthAndEmit() { if (shouldCheckContentLength && v3541 !== expectedLen) {
        stream.emit(\\"error\\", v3.error(new v3542(\\"Stream content length mismatch. Received \\" + v3543 + \\" of \\" + expectedLen + \\" bytes.\\"), { code: \\"StreamContentLengthMismatch\\" }));
    }
    else if (2 === 2) {
        stream.end();
    }
    else {
        stream.emit(\\"end\\");
    } };
    var httpStream = resp.httpResponse.createUnbufferedStream();
    if (2 === 2) {
        if (shouldCheckContentLength) {
            var lengthAccumulator = new streams.PassThrough();
            lengthAccumulator._write = function (chunk) { if (chunk && chunk.length) {
                v3544 += chunk.length;
            } return streams.PassThrough.prototype._write.apply(this, arguments); };
            lengthAccumulator.on(\\"end\\", checkContentLengthAndEmit);
            stream.on(\\"error\\", function (err) { shouldCheckContentLength = false; httpStream.unpipe(lengthAccumulator); lengthAccumulator.emit(\\"end\\"); lengthAccumulator.end(); });
            httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });
        }
        else {
            httpStream.pipe(stream);
        }
    }
    else {
        if (shouldCheckContentLength) {
            httpStream.on(\\"data\\", function (arg) { if (arg && arg.length) {
                v3544 += arg.length;
            } });
        }
        httpStream.on(\\"data\\", function (arg) { stream.emit(\\"data\\", arg); });
        httpStream.on(\\"end\\", checkContentLengthAndEmit);
    }
    httpStream.on(\\"error\\", function (err) { shouldCheckContentLength = false; stream.emit(\\"error\\", err); });
} }); return stream; };
const v3545 = {};
v3545.constructor = v3537;
v3537.prototype = v3545;
v3199.createReadStream = v3537;
var v3546;
v3546 = function emit(eventName, args, done) { if (typeof args === \\"function\\") {
    done = args;
    args = null;
} if (!done)
    done = function () { }; if (!args)
    args = this.eventParameters(eventName, this.response); var origEmit = v401.emit; origEmit.call(this, eventName, args, function (err) { if (err)
    this.response.error = err; done.call(this, err); }); };
const v3547 = {};
v3547.constructor = v3546;
v3546.prototype = v3547;
v3199.emitEvent = v3546;
var v3548;
v3548 = function eventParameters(eventName) { switch (eventName) {
    case \\"restart\\":
    case \\"validate\\":
    case \\"sign\\":
    case \\"build\\":
    case \\"afterValidate\\":
    case \\"afterBuild\\": return [this];
    case \\"error\\": return [this.response.error, this.response];
    default: return [this.response];
} };
const v3549 = {};
v3549.constructor = v3548;
v3548.prototype = v3549;
v3199.eventParameters = v3548;
var v3550;
v3550 = function presign(expires, callback) { if (!callback && typeof expires === \\"function\\") {
    callback = expires;
    expires = null;
} return new v450.Presign().sign(this.toGet(), expires, callback); };
const v3551 = {};
v3551.constructor = v3550;
v3550.prototype = v3551;
v3199.presign = v3550;
var v3552;
v3552 = function isPresigned() { return v113.hasOwnProperty.call(this.httpRequest.headers, \\"presigned-expires\\"); };
const v3553 = {};
v3553.constructor = v3552;
v3552.prototype = v3553;
v3199.isPresigned = v3552;
var v3554;
v3554 = function toUnauthenticated() { this._unAuthenticated = true; this.removeListener(\\"validate\\", v428.VALIDATE_CREDENTIALS); this.removeListener(\\"sign\\", v428.SIGN); return this; };
const v3555 = {};
v3555.constructor = v3554;
v3554.prototype = v3555;
v3199.toUnauthenticated = v3554;
var v3556;
v3556 = function toGet() { if (this.service.api.protocol === \\"query\\" || this.service.api.protocol === \\"ec2\\") {
    this.removeListener(\\"build\\", this.buildAsGet);
    this.addListener(\\"build\\", this.buildAsGet);
} return this; };
const v3557 = {};
v3557.constructor = v3556;
v3556.prototype = v3557;
v3199.toGet = v3556;
var v3558;
v3558 = function buildAsGet(request) { request.httpRequest.method = \\"GET\\"; request.httpRequest.path = request.service.endpoint.path + \\"?\\" + request.httpRequest.body; request.httpRequest.body = \\"\\"; delete request.httpRequest.headers[\\"Content-Length\\"]; delete request.httpRequest.headers[\\"Content-Type\\"]; };
const v3559 = {};
v3559.constructor = v3558;
v3558.prototype = v3559;
v3199.buildAsGet = v3558;
var v3560;
v3560 = function haltHandlersOnError() { this._haltHandlersOnError = true; };
const v3561 = {};
v3561.constructor = v3560;
v3560.prototype = v3561;
v3199.haltHandlersOnError = v3560;
var v3562;
var v3563 = v244;
var v3564 = v31;
v3562 = function promise() { var self = this; this.httpRequest.appendToUserAgent(\\"promise\\"); return new v3563(function (resolve, reject) { self.on(\\"complete\\", function (resp) { if (resp.error) {
    reject(resp.error);
}
else {
    resolve(v3564.defineProperty(resp.data || {}, \\"$response\\", { value: resp }));
} }); self.runTo(); }); };
const v3565 = {};
v3565.constructor = v3562;
v3562.prototype = v3565;
v3199.promise = v3562;
v3199.listeners = v403;
v3199.on = v405;
v3199.onAsync = v407;
v3199.removeListener = v409;
v3199.removeAllListeners = v411;
v3199.emit = v413;
v3199.callListeners = v415;
v3199.addListeners = v418;
v3199.addNamedListener = v420;
v3199.addNamedAsyncListener = v422;
v3199.addNamedListeners = v424;
v3199.addListener = v405;
v3163.prototype = v3199;
v3163.__super__ = v31;
var v3566;
var v3567 = v31;
v3566 = function addPromisesToClass(PromiseDependency) { this.prototype.promise = function promise() { var self = this; this.httpRequest.appendToUserAgent(\\"promise\\"); return new PromiseDependency(function (resolve, reject) { self.on(\\"complete\\", function (resp) { if (resp.error) {
    reject(resp.error);
}
else {
    resolve(v3567.defineProperty(resp.data || {}, \\"$response\\", { value: resp }));
} }); self.runTo(); }); }; };
const v3568 = {};
v3568.constructor = v3566;
v3566.prototype = v3568;
v3163.addPromisesToClass = v3566;
var v3569;
v3569 = function deletePromisesFromClass() { delete this.prototype.promise; };
const v3570 = {};
v3570.constructor = v3569;
v3569.prototype = v3570;
v3163.deletePromisesFromClass = v3569;
v2.Request = v3163;
var v3571;
var v3572 = v2;
v3571 = function Response(request) { this.request = request; this.data = null; this.error = null; this.retryCount = 0; this.redirectCount = 0; this.httpResponse = new v3572.HttpResponse(); if (request) {
    this.maxRetries = request.service.numRetries();
    this.maxRedirects = request.service.config.maxRedirects;
} };
const v3573 = {};
v3573.constructor = v3571;
var v3574;
v3574 = function nextPage(callback) { var config; var service = this.request.service; var operation = this.request.operation; try {
    config = service.paginationConfig(operation, true);
}
catch (e) {
    this.error = e;
} if (!this.hasNextPage()) {
    if (callback)
        callback(this.error, null);
    else if (this.error)
        throw this.error;
    return null;
} var params = v3.copy(this.request.params); if (!this.nextPageTokens) {
    return callback ? callback(null, null) : null;
}
else {
    var inputTokens = config.inputToken;
    if (typeof inputTokens === \\"string\\")
        inputTokens = [inputTokens];
    for (var i = 0; i < inputTokens.length; i++) {
        params[inputTokens[i]] = this.nextPageTokens[i];
    }
    return service.makeRequest(this.request.operation, params, callback);
} };
const v3575 = {};
v3575.constructor = v3574;
v3574.prototype = v3575;
v3573.nextPage = v3574;
var v3576;
v3576 = function hasNextPage() { this.cacheNextPageTokens(); if (this.nextPageTokens)
    return true; if (this.nextPageTokens === undefined)
    return undefined;
else
    return false; };
const v3577 = {};
v3577.constructor = v3576;
v3576.prototype = v3577;
v3573.hasNextPage = v3576;
var v3578;
var v3579 = v3214;
var v3580 = v3214;
v3578 = function cacheNextPageTokens() { if (v113.hasOwnProperty.call(this, \\"nextPageTokens\\"))
    return this.nextPageTokens; this.nextPageTokens = undefined; var config = this.request.service.paginationConfig(this.request.operation); if (!config)
    return this.nextPageTokens; this.nextPageTokens = null; if (config.moreResults) {
    if (!v3579.search(this.data, config.moreResults)) {
        return this.nextPageTokens;
    }
} var exprs = config.outputToken; if (typeof exprs === \\"string\\")
    exprs = [exprs]; v3.arrayEach.call(this, exprs, function (expr) { var output = v3580.search(this.data, expr); if (output) {
    this.nextPageTokens = this.nextPageTokens || [];
    this.nextPageTokens.push(output);
} }); return this.nextPageTokens; };
const v3581 = {};
v3581.constructor = v3578;
v3578.prototype = v3581;
v3573.cacheNextPageTokens = v3578;
v3571.prototype = v3573;
v3571.__super__ = v31;
v2.Response = v3571;
var v3582;
v3582 = function constructor(service, state) { this.service = service; this.state = state; this.loadWaiterConfig(this.state); };
const v3583 = {};
v3583.constructor = v3582;
v3583.service = null;
v3583.state = null;
v3583.config = null;
const v3584 = {};
var v3585;
var v3586 = v3214;
var v3587 = v3214;
var v3588 = undefined;
v3585 = function (resp, expected, argument) { try {
    var result = v3586.search(resp.data, argument);
}
catch (err) {
    return false;
} return v3587.strictDeepEqual(v3588, expected); };
const v3589 = {};
v3589.constructor = v3585;
v3585.prototype = v3589;
v3584.path = v3585;
var v3590;
var v3591 = v33;
var v3592 = undefined;
var v3593 = undefined;
var v3594 = undefined;
v3590 = function (resp, expected, argument) { try {
    var results = v3587.search(resp.data, argument);
}
catch (err) {
    return false;
} if (!v3591.isArray(v3592))
    results = [v3593]; var numResults = undefined; if (!numResults)
    return false; for (var ind = 0; ind < numResults; ind++) {
    if (!v3587.strictDeepEqual(v3594[ind], expected)) {
        return false;
    }
} return true; };
const v3595 = {};
v3595.constructor = v3590;
v3590.prototype = v3595;
v3584.pathAll = v3590;
var v3596;
var v3597 = v3214;
var v3598 = v33;
var v3599 = undefined;
var v3600 = v3214;
var v3601 = undefined;
v3596 = function (resp, expected, argument) { try {
    var results = v3597.search(resp.data, argument);
}
catch (err) {
    return false;
} if (!v3598.isArray(v3599))
    results = [v3599]; var numResults = undefined; for (var ind = 0; ind < numResults; ind++) {
    if (v3600.strictDeepEqual(v3601[ind], expected)) {
        return true;
    }
} return false; };
const v3602 = {};
v3602.constructor = v3596;
v3596.prototype = v3602;
v3584.pathAny = v3596;
var v3603;
v3603 = function (resp, expected) { var statusCode = resp.httpResponse.statusCode; return (typeof statusCode === \\"number\\") && (statusCode === expected); };
const v3604 = {};
v3604.constructor = v3603;
v3603.prototype = v3604;
v3584.status = v3603;
var v3605;
v3605 = function (resp, expected) { if (typeof expected === \\"string\\" && resp.error) {
    return expected === resp.error.code;
} return expected === !!resp.error; };
const v3606 = {};
v3606.constructor = v3605;
v3605.prototype = v3606;
v3584.error = v3605;
v3583.matchers = v3584;
const v3607 = Object.create(v401);
const v3608 = {};
const v3609 = [];
var v3610;
v3610 = function (resp) { var waiter = resp.request._waiter; if (resp.error && resp.error.code === \\"ResourceNotReady\\") {
    resp.error.retryDelay = (waiter.config.delay || 0) * 1000;
} };
const v3611 = {};
v3611.constructor = v3610;
v3610.prototype = v3611;
v3609.push(v3610);
v3608.retry = v3609;
const v3612 = [];
var v3613;
v3613 = function CHECK_ACCEPTORS(resp) { var waiter = resp.request._waiter; var acceptors = waiter.config.acceptors; var acceptorMatched = false; var state = \\"retry\\"; acceptors.forEach(function (acceptor) { if (!acceptorMatched) {
    var matcher = waiter.matchers[acceptor.matcher];
    if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {
        acceptorMatched = true;
        state = acceptor.state;
    }
} }); if (!acceptorMatched && resp.error)
    state = \\"failure\\"; if (state === \\"success\\") {
    waiter.setSuccess(resp);
}
else {
    waiter.setError(resp, state === \\"retry\\");
} };
const v3614 = {};
v3614.constructor = v3613;
v3613.prototype = v3614;
v3612.push(v3613);
v3608.extractData = v3612;
const v3615 = [];
v3615.push(v3613);
v3608.extractError = v3615;
v3607._events = v3608;
v3607.RETRY_CHECK = v3610;
v3607.CHECK_OUTPUT = v3613;
v3607.CHECK_ERROR = v3613;
v3583.listeners = v3607;
var v3616;
v3616 = function wait(params, callback) { if (typeof params === \\"function\\") {
    callback = params;
    params = undefined;
} if (params && params.$waiter) {
    params = v3.copy(params);
    if (typeof params.$waiter.delay === \\"number\\") {
        this.config.delay = params.$waiter.delay;
    }
    if (typeof params.$waiter.maxAttempts === \\"number\\") {
        this.config.maxAttempts = params.$waiter.maxAttempts;
    }
    delete params.$waiter;
} var request = this.service.makeRequest(this.config.operation, params); request._waiter = this; request.response.maxRetries = this.config.maxAttempts; request.addListeners(this.listeners); if (callback)
    request.send(callback); return request; };
const v3617 = {};
v3617.constructor = v3616;
v3616.prototype = v3617;
v3583.wait = v3616;
var v3618;
v3618 = function setSuccess(resp) { resp.error = null; resp.data = resp.data || {}; resp.request.removeAllListeners(\\"extractData\\"); };
const v3619 = {};
v3619.constructor = v3618;
v3618.prototype = v3619;
v3583.setSuccess = v3618;
var v3620;
var v3621 = v40;
v3620 = function setError(resp, retryable) { resp.data = null; resp.error = v3.error(resp.error || new v3621(), { code: \\"ResourceNotReady\\", message: \\"Resource is not in the state \\" + this.state, retryable: retryable }); };
const v3622 = {};
v3622.constructor = v3620;
v3620.prototype = v3622;
v3583.setError = v3620;
var v3623;
var v3624 = v40;
v3623 = function loadWaiterConfig(state) { if (!this.service.api.waiters[state]) {
    throw new v3.error(new v3624(), { code: \\"StateNotFoundError\\", message: \\"State \\" + state + \\" not found.\\" });
} this.config = v3.copy(this.service.api.waiters[state]); };
const v3625 = {};
v3625.constructor = v3623;
v3623.prototype = v3625;
v3583.loadWaiterConfig = v3623;
v3582.prototype = v3583;
v3582.__super__ = v31;
v2.ResourceWaiter = v3582;
var v3626;
v3626 = function ParamValidator(validation) { if (validation === true || validation === undefined) {
    validation = { \\"min\\": true };
} this.validation = validation; };
const v3627 = {};
v3627.constructor = v3626;
var v3628;
var v3629 = v40;
v3628 = function validate(shape, params, context) { this.errors = []; this.validateMember(shape, params || {}, context || \\"params\\"); if (this.errors.length > 1) {
    var msg = this.errors.join(\\"\\\\n* \\");
    msg = \\"There were \\" + this.errors.length + \\" validation errors:\\\\n* \\" + msg;
    throw v3.error(new v3629(msg), { code: \\"MultipleValidationErrors\\", errors: this.errors });
}
else if (this.errors.length === 1) {
    throw this.errors[0];
}
else {
    return true;
} };
const v3630 = {};
v3630.constructor = v3628;
v3628.prototype = v3630;
v3627.validate = v3628;
var v3631;
var v3632 = v40;
v3631 = function fail(code, message) { this.errors.push(v3.error(new v3632(message), { code: code })); };
const v3633 = {};
v3633.constructor = v3631;
v3631.prototype = v3633;
v3627.fail = v3631;
var v3634;
v3634 = function validateStructure(shape, params, context) { if (shape.isDocument)
    return true; this.validateType(params, context, [\\"object\\"], \\"structure\\"); var paramName; for (var i = 0; shape.required && i < shape.required.length; i++) {
    paramName = shape.required[i];
    var value = params[paramName];
    if (value === undefined || value === null) {
        this.fail(\\"MissingRequiredParameter\\", \\"Missing required key '\\" + paramName + \\"' in \\" + context);
    }
} for (paramName in params) {
    if (!v113.hasOwnProperty.call(params, paramName))
        continue;
    var paramValue = params[paramName], memberShape = shape.members[paramName];
    if (memberShape !== undefined) {
        var memberContext = [context, paramName].join(\\".\\");
        this.validateMember(memberShape, paramValue, memberContext);
    }
    else if (paramValue !== undefined && paramValue !== null) {
        this.fail(\\"UnexpectedParameter\\", \\"Unexpected key '\\" + paramName + \\"' found in \\" + context);
    }
} return true; };
const v3635 = {};
v3635.constructor = v3634;
v3634.prototype = v3635;
v3627.validateStructure = v3634;
var v3636;
v3636 = function validateMember(shape, param, context) { switch (shape.type) {
    case \\"structure\\": return this.validateStructure(shape, param, context);
    case \\"list\\": return this.validateList(shape, param, context);
    case \\"map\\": return this.validateMap(shape, param, context);
    default: return this.validateScalar(shape, param, context);
} };
const v3637 = {};
v3637.constructor = v3636;
v3636.prototype = v3637;
v3627.validateMember = v3636;
var v3638;
var v3639 = v33;
v3638 = function validateList(shape, params, context) { if (this.validateType(params, context, [v3639])) {
    this.validateRange(shape, params.length, context, \\"list member count\\");
    for (var i = 0; i < params.length; i++) {
        this.validateMember(shape.member, params[i], context + \\"[\\" + i + \\"]\\");
    }
} };
const v3640 = {};
v3640.constructor = v3638;
v3638.prototype = v3640;
v3627.validateList = v3638;
var v3641;
v3641 = function validateMap(shape, params, context) { if (this.validateType(params, context, [\\"object\\"], \\"map\\")) {
    var mapCount = 0;
    for (var param in params) {
        if (!v113.hasOwnProperty.call(params, param))
            continue;
        this.validateMember(shape.key, param, context + \\"[key='\\" + param + \\"']\\");
        this.validateMember(shape.value, params[param], context + \\"['\\" + param + \\"']\\");
        mapCount++;
    }
    this.validateRange(shape, mapCount, context, \\"map member count\\");
} };
const v3642 = {};
v3642.constructor = v3641;
v3641.prototype = v3642;
v3627.validateMap = v3641;
var v3643;
var v3644 = v77;
v3643 = function validateScalar(shape, value, context) { switch (shape.type) {
    case null:
    case undefined:
    case \\"string\\": return this.validateString(shape, value, context);
    case \\"base64\\":
    case \\"binary\\": return this.validatePayload(value, context);
    case \\"integer\\":
    case \\"float\\": return this.validateNumber(shape, value, context);
    case \\"boolean\\": return this.validateType(value, context, [\\"boolean\\"]);
    case \\"timestamp\\": return this.validateType(value, context, [v3644, /^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$/, \\"number\\"], \\"Date object, ISO-8601 string, or a UNIX timestamp\\");
    default: return this.fail(\\"UnkownType\\", \\"Unhandled type \\" + shape.type + \\" for \\" + context);
} };
const v3645 = {};
v3645.constructor = v3643;
v3643.prototype = v3645;
v3627.validateScalar = v3643;
var v3646;
v3646 = function validateString(shape, value, context) { var validTypes = [\\"string\\"]; if (shape.isJsonValue) {
    validTypes = validTypes.concat([\\"number\\", \\"object\\", \\"boolean\\"]);
} if (value !== null && this.validateType(value, context, validTypes)) {
    this.validateEnum(shape, value, context);
    this.validateRange(shape, value.length, context, \\"string length\\");
    this.validatePattern(shape, value, context);
    this.validateUri(shape, value, context);
} };
const v3647 = {};
v3647.constructor = v3646;
v3646.prototype = v3647;
v3627.validateString = v3646;
var v3648;
v3648 = function validateUri(shape, value, context) { if (shape[\\"location\\"] === \\"uri\\") {
    if (value.length === 0) {
        this.fail(\\"UriParameterError\\", \\"Expected uri parameter to have length >= 1,\\" + \\" but found \\\\\\"\\" + value + \\"\\\\\\" for \\" + context);
    }
} };
const v3649 = {};
v3649.constructor = v3648;
v3648.prototype = v3649;
v3627.validateUri = v3648;
var v3650;
var v3651 = v373;
v3650 = function validatePattern(shape, value, context) { if (this.validation[\\"pattern\\"] && shape[\\"pattern\\"] !== undefined) {
    if (!(new v3651(shape[\\"pattern\\"])).test(value)) {
        this.fail(\\"PatternMatchError\\", \\"Provided value \\\\\\"\\" + value + \\"\\\\\\" \\" + \\"does not match regex pattern /\\" + shape[\\"pattern\\"] + \\"/ for \\" + context);
    }
} };
const v3652 = {};
v3652.constructor = v3650;
v3650.prototype = v3652;
v3627.validatePattern = v3650;
var v3653;
v3653 = function validateRange(shape, value, context, descriptor) { if (this.validation[\\"min\\"]) {
    if (shape[\\"min\\"] !== undefined && value < shape[\\"min\\"]) {
        this.fail(\\"MinRangeError\\", \\"Expected \\" + descriptor + \\" >= \\" + shape[\\"min\\"] + \\", but found \\" + value + \\" for \\" + context);
    }
} if (this.validation[\\"max\\"]) {
    if (shape[\\"max\\"] !== undefined && value > shape[\\"max\\"]) {
        this.fail(\\"MaxRangeError\\", \\"Expected \\" + descriptor + \\" <= \\" + shape[\\"max\\"] + \\", but found \\" + value + \\" for \\" + context);
    }
} };
const v3654 = {};
v3654.constructor = v3653;
v3653.prototype = v3654;
v3627.validateRange = v3653;
var v3655;
v3655 = function validateRange(shape, value, context) { if (this.validation[\\"enum\\"] && shape[\\"enum\\"] !== undefined) {
    if (shape[\\"enum\\"].indexOf(value) === -1) {
        this.fail(\\"EnumError\\", \\"Found string value of \\" + value + \\", but \\" + \\"expected \\" + shape[\\"enum\\"].join(\\"|\\") + \\" for \\" + context);
    }
} };
const v3656 = {};
v3656.constructor = v3655;
v3655.prototype = v3656;
v3627.validateEnum = v3655;
var v3657;
var v3658 = v373;
v3657 = function validateType(value, context, acceptedTypes, type) { if (value === null || value === undefined)
    return false; var foundInvalidType = false; for (var i = 0; i < acceptedTypes.length; i++) {
    if (typeof acceptedTypes[i] === \\"string\\") {
        if (typeof value === acceptedTypes[i])
            return true;
    }
    else if (acceptedTypes[i] instanceof v3658) {
        if ((value || \\"\\").toString().match(acceptedTypes[i]))
            return true;
    }
    else {
        if (value instanceof acceptedTypes[i])
            return true;
        if (v3.isType(value, acceptedTypes[i]))
            return true;
        if (!type && !foundInvalidType)
            acceptedTypes = acceptedTypes.slice();
        acceptedTypes[i] = v3.typeName(acceptedTypes[i]);
    }
    foundInvalidType = true;
} var acceptedType = type; if (!acceptedType) {
    acceptedType = acceptedTypes.join(\\", \\").replace(/,([^,]+)$/, \\", or$1\\");
} var vowel = acceptedType.match(/^[aeiou]/i) ? \\"n\\" : \\"\\"; this.fail(\\"InvalidParameterType\\", \\"Expected \\" + context + \\" to be a\\" + vowel + \\" \\" + acceptedType); return false; };
const v3659 = {};
v3659.constructor = v3657;
v3657.prototype = v3659;
v3627.validateType = v3657;
var v3660;
var v3661 = v912;
v3660 = function validateNumber(shape, value, context) { if (value === null || value === undefined)
    return; if (typeof value === \\"string\\") {
    var castedValue = v3661(value);
    if (castedValue.toString() === value)
        value = castedValue;
} if (this.validateType(value, context, [\\"number\\"])) {
    this.validateRange(shape, value, context, \\"numeric value\\");
} };
const v3662 = {};
v3662.constructor = v3660;
v3660.prototype = v3662;
v3627.validateNumber = v3660;
var v3663;
var v3664 = undefined;
var v3665 = undefined;
v3663 = function validatePayload(value, context) { if (value === null || value === undefined)
    return; if (typeof value === \\"string\\")
    return; if (value && typeof value.byteLength === \\"number\\")
    return; if (v3.isNode()) {
    var Stream = v3.stream.Stream;
    if (v3.Buffer.isBuffer(value) || value instanceof Stream)
        return;
}
else {
    if (typeof v3664 !== void 0 && value instanceof v3665)
        return;
} var types = [\\"Buffer\\", \\"Stream\\", \\"File\\", \\"Blob\\", \\"ArrayBuffer\\", \\"DataView\\"]; if (value) {
    for (var i = 0; i < types.length; i++) {
        if (v3.isType(value, types[i]))
            return;
        if (v3.typeName(value.constructor) === types[i])
            return;
    }
} this.fail(\\"InvalidParameterType\\", \\"Expected \\" + context + \\" to be a \\" + \\"string, Buffer, Stream, Blob, or typed array object\\"); };
const v3666 = {};
v3666.constructor = v3663;
v3663.prototype = v3666;
v3627.validatePayload = v3663;
v3626.prototype = v3627;
v3626.__super__ = v31;
v2.ParamValidator = v3626;
v2.events = v426;
v2.IniLoader = v181;
v2.STS = v297;
var v3667;
var v3668 = v2;
v3667 = function TemporaryCredentials(params, masterCredentials) { v3668.Credentials.call(this); this.loadMasterCredentials(masterCredentials); this.expired = true; this.params = params || {}; if (this.params.RoleArn) {
    this.params.RoleSessionName = this.params.RoleSessionName || \\"temporary-credentials\\";
} };
const v3669 = Object.create(v252);
v3669.constructor = v3667;
var v3670;
v3670 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3671 = {};
v3671.constructor = v3670;
v3670.prototype = v3671;
v3669.refresh = v3670;
var v3672;
v3672 = function load(callback) { var self = this; self.createClients(); self.masterCredentials.get(function () { self.service.config.credentials = self.masterCredentials; var operation = self.params.RoleArn ? self.service.assumeRole : self.service.getSessionToken; operation.call(self.service, function (err, data) { if (!err) {
    self.service.credentialsFrom(data, self);
} callback(err); }); }); };
const v3673 = {};
v3673.constructor = v3672;
v3672.prototype = v3673;
v3669.load = v3672;
var v3674;
var v3675 = v2;
v3674 = function loadMasterCredentials(masterCredentials) { this.masterCredentials = masterCredentials || v2582; while (this.masterCredentials.masterCredentials) {
    this.masterCredentials = this.masterCredentials.masterCredentials;
} if (typeof this.masterCredentials.get !== \\"function\\") {
    this.masterCredentials = new v3675.Credentials(this.masterCredentials);
} };
const v3676 = {};
v3676.constructor = v3674;
v3674.prototype = v3676;
v3669.loadMasterCredentials = v3674;
var v3677;
var v3678 = v297;
v3677 = function () { this.service = this.service || new v3678({ params: this.params }); };
const v3679 = {};
v3679.constructor = v3677;
v3677.prototype = v3679;
v3669.createClients = v3677;
v3667.prototype = v3669;
v3667.__super__ = v253;
v2.TemporaryCredentials = v3667;
var v3680;
var v3681 = v2;
var v3682 = v40;
var v3683 = v297;
v3680 = function ChainableTemporaryCredentials(options) { v3681.Credentials.call(this); options = options || {}; this.errorCode = \\"ChainableTemporaryCredentialsProviderFailure\\"; this.expired = true; this.tokenCodeFn = null; var params = v3.copy(options.params) || {}; if (params.RoleArn) {
    params.RoleSessionName = params.RoleSessionName || \\"temporary-credentials\\";
} if (params.SerialNumber) {
    if (!options.tokenCodeFn || (typeof options.tokenCodeFn !== \\"function\\")) {
        throw new v3.error(new v3682(\\"tokenCodeFn must be a function when params.SerialNumber is given\\"), { code: this.errorCode });
    }
    else {
        this.tokenCodeFn = options.tokenCodeFn;
    }
} var config = v3.merge({ params: params, credentials: options.masterCredentials || v2582 }, options.stsConfig || {}); this.service = new v3683(config); };
const v3684 = Object.create(v252);
v3684.constructor = v3680;
var v3685;
v3685 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3686 = {};
v3686.constructor = v3685;
v3685.prototype = v3686;
v3684.refresh = v3685;
var v3687;
v3687 = function load(callback) { var self = this; var operation = self.service.config.params.RoleArn ? \\"assumeRole\\" : \\"getSessionToken\\"; this.getTokenCode(function (err, tokenCode) { var params = {}; if (err) {
    callback(err);
    return;
} if (tokenCode) {
    params.TokenCode = tokenCode;
} self.service[operation](params, function (err, data) { if (!err) {
    self.service.credentialsFrom(data, self);
} callback(err); }); }); };
const v3688 = {};
v3688.constructor = v3687;
v3687.prototype = v3688;
v3684.load = v3687;
var v3689;
var v3690 = v40;
var v3691 = v40;
v3689 = function getTokenCode(callback) { var self = this; if (this.tokenCodeFn) {
    this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) { if (err) {
        var message = err;
        if (err instanceof v3690) {
            message = err.message;
        }
        callback(v3.error(new v3691(\\"Error fetching MFA token: \\" + message), { code: self.errorCode }));
        return;
    } callback(null, token); });
}
else {
    callback(null);
} };
const v3692 = {};
v3692.constructor = v3689;
v3689.prototype = v3692;
v3684.getTokenCode = v3689;
v3680.prototype = v3684;
v3680.__super__ = v253;
v2.ChainableTemporaryCredentials = v3680;
var v3693;
var v3694 = v2;
v3693 = function WebIdentityCredentials(params, clientConfig) { v3694.Credentials.call(this); this.expired = true; this.params = params; this.params.RoleSessionName = this.params.RoleSessionName || \\"web-identity\\"; this.data = null; this._clientConfig = v3.copy(clientConfig || {}); };
const v3695 = Object.create(v252);
v3695.constructor = v3693;
var v3696;
v3696 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3697 = {};
v3697.constructor = v3696;
v3696.prototype = v3697;
v3695.refresh = v3696;
var v3698;
v3698 = function load(callback) { var self = this; self.createClients(); self.service.assumeRoleWithWebIdentity(function (err, data) { self.data = null; if (!err) {
    self.data = data;
    self.service.credentialsFrom(data, self);
} callback(err); }); };
const v3699 = {};
v3699.constructor = v3698;
v3698.prototype = v3699;
v3695.load = v3698;
var v3700;
var v3701 = v297;
v3700 = function () { if (!this.service) {
    var stsConfig = v3.merge({}, this._clientConfig);
    stsConfig.params = this.params;
    this.service = new v3701(stsConfig);
} };
const v3702 = {};
v3702.constructor = v3700;
v3700.prototype = v3702;
v3695.createClients = v3700;
v3693.prototype = v3695;
v3693.__super__ = v253;
v2.WebIdentityCredentials = v3693;
var v3703;
var v3704 = v299;
var v3705 = v31;
v3703 = function () { if (v3704 !== v3705) {
    return v3704.apply(this, arguments);
} };
const v3706 = Object.create(v309);
v3706.constructor = v3703;
const v3707 = {};
const v3708 = [];
var v3709;
var v3710 = v3706;
v3709 = function EVENTS_BUBBLE(event) { var baseClass = v387.getPrototypeOf(v3710); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v3711 = {};
v3711.constructor = v3709;
v3709.prototype = v3711;
v3708.push(v3709);
v3707.apiCallAttempt = v3708;
const v3712 = [];
var v3713;
v3713 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v388.getPrototypeOf(v3710); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v3714 = {};
v3714.constructor = v3713;
v3713.prototype = v3714;
v3712.push(v3713);
v3707.apiCall = v3712;
v3706._events = v3707;
v3706.MONITOR_EVENTS_BUBBLE = v3709;
v3706.CALL_EVENTS_BUBBLE = v3713;
v3703.prototype = v3706;
v3703.__super__ = v299;
const v3715 = {};
v3715[\\"2014-06-30\\"] = null;
v3703.services = v3715;
const v3716 = [];
v3716.push(\\"2014-06-30\\");
v3703.apiVersions = v3716;
v3703.serviceIdentifier = \\"cognitoidentity\\";
v2.CognitoIdentity = v3703;
var v3717;
var v3718 = v2;
var v3719 = v31;
v3717 = function CognitoIdentityCredentials(params, clientConfig) { v3718.Credentials.call(this); this.expired = true; this.params = params; this.data = null; this._identityId = null; this._clientConfig = v3.copy(clientConfig || {}); this.loadCachedId(); var self = this; v3719.defineProperty(this, \\"identityId\\", { get: function () { self.loadCachedId(); return self._identityId || self.params.IdentityId; }, set: function (identityId) { self._identityId = identityId; } }); };
const v3720 = Object.create(v252);
const v3721 = {};
v3721.id = \\"aws.cognito.identity-id.\\";
v3721.providers = \\"aws.cognito.identity-providers.\\";
v3720.localStorageKey = v3721;
v3720.constructor = v3717;
var v3722;
v3722 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3723 = {};
v3723.constructor = v3722;
v3722.prototype = v3723;
v3720.refresh = v3722;
var v3724;
v3724 = function load(callback) { var self = this; self.createClients(); self.data = null; self._identityId = null; self.getId(function (err) { if (!err) {
    if (!self.params.RoleArn) {
        self.getCredentialsForIdentity(callback);
    }
    else {
        self.getCredentialsFromSTS(callback);
    }
}
else {
    self.clearIdOnNotAuthorized(err);
    callback(err);
} }); };
const v3725 = {};
v3725.constructor = v3724;
v3724.prototype = v3725;
v3720.load = v3724;
var v3726;
v3726 = function clearCache() { this._identityId = null; delete this.params.IdentityId; var poolId = this.params.IdentityPoolId; var loginId = this.params.LoginId || \\"\\"; delete this.storage[this.localStorageKey.id + poolId + loginId]; delete this.storage[this.localStorageKey.providers + poolId + loginId]; };
const v3727 = {};
v3727.constructor = v3726;
v3726.prototype = v3727;
v3720.clearCachedId = v3726;
var v3728;
v3728 = function clearIdOnNotAuthorized(err) { var self = this; if (err.code == \\"NotAuthorizedException\\") {
    self.clearCachedId();
} };
const v3729 = {};
v3729.constructor = v3728;
v3728.prototype = v3729;
v3720.clearIdOnNotAuthorized = v3728;
var v3730;
v3730 = function getId(callback) { var self = this; if (typeof self.params.IdentityId === \\"string\\") {
    return callback(null, self.params.IdentityId);
} self.cognito.getId(function (err, data) { if (!err && data.IdentityId) {
    self.params.IdentityId = data.IdentityId;
    callback(null, data.IdentityId);
}
else {
    callback(err);
} }); };
const v3731 = {};
v3731.constructor = v3730;
v3730.prototype = v3731;
v3720.getId = v3730;
var v3732;
v3732 = function loadCredentials(data, credentials) { if (!data || !credentials)
    return; credentials.expired = false; credentials.accessKeyId = data.Credentials.AccessKeyId; credentials.secretAccessKey = data.Credentials.SecretKey; credentials.sessionToken = data.Credentials.SessionToken; credentials.expireTime = data.Credentials.Expiration; };
const v3733 = {};
v3733.constructor = v3732;
v3732.prototype = v3733;
v3720.loadCredentials = v3732;
var v3734;
v3734 = function getCredentialsForIdentity(callback) { var self = this; self.cognito.getCredentialsForIdentity(function (err, data) { if (!err) {
    self.cacheId(data);
    self.data = data;
    self.loadCredentials(self.data, self);
}
else {
    self.clearIdOnNotAuthorized(err);
} callback(err); }); };
const v3735 = {};
v3735.constructor = v3734;
v3734.prototype = v3735;
v3720.getCredentialsForIdentity = v3734;
var v3736;
v3736 = function getCredentialsFromSTS(callback) { var self = this; self.cognito.getOpenIdToken(function (err, data) { if (!err) {
    self.cacheId(data);
    self.params.WebIdentityToken = data.Token;
    self.webIdentityCredentials.refresh(function (webErr) { if (!webErr) {
        self.data = self.webIdentityCredentials.data;
        self.sts.credentialsFrom(self.data, self);
    } callback(webErr); });
}
else {
    self.clearIdOnNotAuthorized(err);
    callback(err);
} }); };
const v3737 = {};
v3737.constructor = v3736;
v3736.prototype = v3737;
v3720.getCredentialsFromSTS = v3736;
var v3738;
var v3739 = v31;
v3738 = function loadCachedId() { var self = this; if (v3.isBrowser() && !self.params.IdentityId) {
    var id = self.getStorage(\\"id\\");
    if (id && self.params.Logins) {
        var actualProviders = v3739.keys(self.params.Logins);
        var cachedProviders = (self.getStorage(\\"providers\\") || \\"\\").split(\\",\\");
        var intersect = cachedProviders.filter(function (n) { return actualProviders.indexOf(n) !== -1; });
        if (intersect.length !== 0) {
            self.params.IdentityId = id;
        }
    }
    else if (id) {
        self.params.IdentityId = id;
    }
} };
const v3740 = {};
v3740.constructor = v3738;
v3738.prototype = v3740;
v3720.loadCachedId = v3738;
var v3741;
var v3742 = v2;
var v3743 = v3703;
var v3744 = v297;
v3741 = function () { var clientConfig = this._clientConfig; this.webIdentityCredentials = this.webIdentityCredentials || new v3742.WebIdentityCredentials(this.params, clientConfig); if (!this.cognito) {
    var cognitoConfig = v3.merge({}, clientConfig);
    cognitoConfig.params = this.params;
    this.cognito = new v3743(cognitoConfig);
} this.sts = this.sts || new v3744(clientConfig); };
const v3745 = {};
v3745.constructor = v3741;
v3741.prototype = v3745;
v3720.createClients = v3741;
var v3746;
var v3747 = v31;
v3746 = function cacheId(data) { this._identityId = data.IdentityId; this.params.IdentityId = this._identityId; if (v3.isBrowser()) {
    this.setStorage(\\"id\\", data.IdentityId);
    if (this.params.Logins) {
        this.setStorage(\\"providers\\", v3747.keys(this.params.Logins).join(\\",\\"));
    }
} };
const v3748 = {};
v3748.constructor = v3746;
v3746.prototype = v3748;
v3720.cacheId = v3746;
var v3749;
v3749 = function getStorage(key) { return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || \\"\\")]; };
const v3750 = {};
v3750.constructor = v3749;
v3749.prototype = v3750;
v3720.getStorage = v3749;
var v3751;
v3751 = function setStorage(key, val) { try {
    this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || \\"\\")] = val;
}
catch (_) { } };
const v3752 = {};
v3752.constructor = v3751;
v3751.prototype = v3752;
v3720.setStorage = v3751;
const v3753 = {};
v3720.storage = v3753;
v3717.prototype = v3720;
v3717.__super__ = v253;
v2.CognitoIdentityCredentials = v3717;
var v3754;
var v3755 = v2;
v3754 = function SAMLCredentials(params) { v3755.Credentials.call(this); this.expired = true; this.params = params; };
const v3756 = Object.create(v252);
v3756.constructor = v3754;
var v3757;
v3757 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3758 = {};
v3758.constructor = v3757;
v3757.prototype = v3758;
v3756.refresh = v3757;
var v3759;
v3759 = function load(callback) { var self = this; self.createClients(); self.service.assumeRoleWithSAML(function (err, data) { if (!err) {
    self.service.credentialsFrom(data, self);
} callback(err); }); };
const v3760 = {};
v3760.constructor = v3759;
v3759.prototype = v3760;
v3756.load = v3759;
var v3761;
var v3762 = v297;
v3761 = function () { this.service = this.service || new v3762({ params: this.params }); };
const v3763 = {};
v3763.constructor = v3761;
v3761.prototype = v3763;
v3756.createClients = v3761;
v3754.prototype = v3756;
v3754.__super__ = v253;
v2.SAMLCredentials = v3754;
var v3764;
var v3765 = v2;
var v3766 = v8;
v3764 = function ProcessCredentials(options) { v3765.Credentials.call(this); options = options || {}; this.filename = options.filename; this.profile = options.profile || v3766.env.AWS_PROFILE || \\"default\\"; this.get(options.callback || v65.noop); };
const v3767 = Object.create(v252);
v3767.constructor = v3764;
var v3768;
var v3769 = v200;
var v3770 = v31;
var v3771 = v40;
var v3772 = v77;
var v3773 = v40;
v3768 = function load(callback) { var self = this; try {
    var profiles = v3.getProfilesFromSharedConfig(v3769, this.filename);
    var profile = profiles[this.profile] || {};
    if (v3770.keys(profile).length === 0) {
        throw v3.error(new v3771(\\"Profile \\" + this.profile + \\" not found\\"), { code: \\"ProcessCredentialsProviderFailure\\" });
    }
    if (profile[\\"credential_process\\"]) {
        this.loadViaCredentialProcess(profile, function (err, data) { if (err) {
            callback(err, null);
        }
        else {
            self.expired = false;
            self.accessKeyId = data.AccessKeyId;
            self.secretAccessKey = data.SecretAccessKey;
            self.sessionToken = data.SessionToken;
            if (data.Expiration) {
                self.expireTime = new v3772(data.Expiration);
            }
            callback(null);
        } });
    }
    else {
        throw v3.error(new v3773(\\"Profile \\" + this.profile + \\" did not include credential process\\"), { code: \\"ProcessCredentialsProviderFailure\\" });
    }
}
catch (err) {
    callback(err);
} };
const v3774 = {};
v3774.constructor = v3768;
v3768.prototype = v3774;
v3767.load = v3768;
var v3775;
const v3777 = require(\\"child_process\\");
var v3776 = v3777;
var v3778 = v8;
var v3779 = v40;
var v3780 = v163;
var v3781 = v77;
var v3782 = v40;
var v3783 = v40;
v3775 = function loadViaCredentialProcess(profile, callback) { v3776.exec(profile[\\"credential_process\\"], { env: v3778.env }, function (err, stdOut, stdErr) { if (err) {
    callback(v3.error(new v3779(\\"credential_process returned error\\"), { code: \\"ProcessCredentialsProviderFailure\\" }), null);
}
else {
    try {
        var credData = v3780.parse(stdOut);
        if (credData.Expiration) {
            var currentTime = v73.getDate();
            var expireTime = new v3781(credData.Expiration);
            if (expireTime < currentTime) {
                throw v3782(\\"credential_process returned expired credentials\\");
            }
        }
        if (credData.Version !== 1) {
            throw v3779(\\"credential_process does not return Version == 1\\");
        }
        callback(null, credData);
    }
    catch (err) {
        callback(v3.error(new v3783(err.message), { code: \\"ProcessCredentialsProviderFailure\\" }), null);
    }
} }); };
const v3784 = {};
v3784.constructor = v3775;
v3775.prototype = v3784;
v3767.loadViaCredentialProcess = v3775;
var v3785;
var v3786 = v200;
v3785 = function refresh(callback) { v3786.clearCachedFiles(); this.coalesceRefresh(callback || v65.callback); };
const v3787 = {};
v3787.constructor = v3785;
v3785.prototype = v3787;
v3767.refresh = v3785;
v3764.prototype = v3767;
v3764.__super__ = v253;
v2.ProcessCredentials = v3764;
v2.NodeHttpClient = v3152;
var v3788;
var v3789 = v2;
v3788 = function TokenFileWebIdentityCredentials(clientConfig) { v3789.Credentials.call(this); this.data = null; this.clientConfig = v3.copy(clientConfig || {}); };
const v3790 = Object.create(v252);
v3790.constructor = v3788;
var v3791;
var v3792 = v8;
var v3793 = v8;
var v3794 = v8;
var v3795 = v8;
v3791 = function getParamsFromEnv() { var ENV_TOKEN_FILE = \\"AWS_WEB_IDENTITY_TOKEN_FILE\\", ENV_ROLE_ARN = \\"AWS_ROLE_ARN\\"; if (v3792.env[ENV_TOKEN_FILE] && v3793.env[ENV_ROLE_ARN]) {
    return [{ envTokenFile: v3794.env[ENV_TOKEN_FILE], roleArn: v3795.env[ENV_ROLE_ARN], roleSessionName: v3795.env[\\"AWS_ROLE_SESSION_NAME\\"] }];
} };
const v3796 = {};
v3796.constructor = v3791;
v3791.prototype = v3796;
v3790.getParamsFromEnv = v3791;
var v3797;
var v3798 = v200;
var v3799 = v31;
var v3800 = v40;
v3797 = function getParamsFromSharedConfig() { var profiles = v3.getProfilesFromSharedConfig(v3798); var profileName = v3793.env.AWS_PROFILE || \\"default\\"; var profile = profiles[profileName] || {}; if (v3799.keys(profile).length === 0) {
    throw v3.error(new v3800(\\"Profile \\" + profileName + \\" not found\\"), { code: \\"TokenFileWebIdentityCredentialsProviderFailure\\" });
} var paramsArray = []; while (!profile[\\"web_identity_token_file\\"] && profile[\\"source_profile\\"]) {
    paramsArray.unshift({ roleArn: profile[\\"role_arn\\"], roleSessionName: profile[\\"role_session_name\\"] });
    var sourceProfile = profile[\\"source_profile\\"];
    profile = profiles[sourceProfile];
} paramsArray.unshift({ envTokenFile: profile[\\"web_identity_token_file\\"], roleArn: profile[\\"role_arn\\"], roleSessionName: profile[\\"role_session_name\\"] }); return paramsArray; };
const v3801 = {};
v3801.constructor = v3797;
v3797.prototype = v3801;
v3790.getParamsFromSharedConfig = v3797;
var v3802;
v3802 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3803 = {};
v3803.constructor = v3802;
v3802.prototype = v3803;
v3790.refresh = v3802;
var v3804;
v3804 = function assumeRoleChaining(paramsArray, callback) { var self = this; if (paramsArray.length === 0) {
    self.service.credentialsFrom(self.data, self);
    callback();
}
else {
    var params = paramsArray.shift();
    self.service.config.credentials = self.service.credentialsFrom(self.data, self);
    self.service.assumeRole({ RoleArn: params.roleArn, RoleSessionName: params.roleSessionName || \\"token-file-web-identity\\" }, function (err, data) { self.data = null; if (err) {
        callback(err);
    }
    else {
        self.data = data;
        self.assumeRoleChaining(paramsArray, callback);
    } });
} };
const v3805 = {};
v3805.constructor = v3804;
v3804.prototype = v3805;
v3790.assumeRoleChaining = v3804;
var v3806;
const v3808 = require(\\"fs\\");
var v3807 = v3808;
v3806 = function load(callback) { var self = this; try {
    var paramsArray = self.getParamsFromEnv();
    if (!paramsArray) {
        paramsArray = self.getParamsFromSharedConfig();
    }
    if (paramsArray) {
        var params = paramsArray.shift();
        var oidcToken = v3807.readFileSync(params.envTokenFile, { encoding: \\"ascii\\" });
        if (!self.service) {
            self.createClients();
        }
        self.service.assumeRoleWithWebIdentity({ WebIdentityToken: oidcToken, RoleArn: params.roleArn, RoleSessionName: params.roleSessionName || \\"token-file-web-identity\\" }, function (err, data) { self.data = null; if (err) {
            callback(err);
        }
        else {
            self.data = data;
            self.assumeRoleChaining(paramsArray, callback);
        } });
    }
}
catch (err) {
    callback(err);
} };
const v3809 = {};
v3809.constructor = v3806;
v3806.prototype = v3809;
v3790.load = v3806;
var v3810;
var v3811 = v297;
v3810 = function () { if (!this.service) {
    var stsConfig = v3.merge({}, this.clientConfig);
    this.service = new v3811(stsConfig);
    this.service.retryableError = function (error) { if (error.code === \\"IDPCommunicationErrorException\\" || error.code === \\"InvalidIdentityToken\\") {
        return true;
    }
    else {
        return v309.retryableError.call(this, error);
    } };
} };
const v3812 = {};
v3812.constructor = v3810;
v3810.prototype = v3812;
v3790.createClients = v3810;
v3788.prototype = v3790;
v3788.__super__ = v253;
v2.TokenFileWebIdentityCredentials = v3788;
var v3813;
v3813 = function MetadataService(options) { if (options && options.host) {
    options.endpoint = \\"http://\\" + options.host;
    delete options.host;
} v3.update(this, options); };
const v3814 = {};
v3814.endpoint = \\"http://169.254.169.254\\";
const v3815 = {};
v3815.timeout = 0;
v3814.httpOptions = v3815;
v3814.disableFetchToken = false;
v3814.constructor = v3813;
var v3816;
var v3817 = v8;
var v3818 = v40;
const v3820 = URL;
var v3819 = v3820;
var v3821 = v3820;
var v3822 = v2;
v3816 = function request(path, options, callback) { if (arguments.length === 2) {
    callback = options;
    options = {};
} if (v3817.env[\\"AWS_EC2_METADATA_DISABLED\\"]) {
    callback(new v3818(\\"EC2 Instance Metadata Service access disabled\\"));
    return;
} path = path || \\"/\\"; if (v3819) {
    new v3821(this.endpoint);
} var httpRequest = new v3822.HttpRequest(this.endpoint + path); httpRequest.method = options.method || \\"GET\\"; if (options.headers) {
    httpRequest.headers = options.headers;
} v3.handleRequestWithRetries(httpRequest, this, callback); };
const v3823 = {};
v3823.constructor = v3816;
v3816.prototype = v3823;
v3814.request = v3816;
const v3824 = [];
v3824.push();
v3814.loadCredentialsCallbacks = v3824;
var v3825;
v3825 = function fetchMetadataToken(callback) { var self = this; var tokenFetchPath = \\"/latest/api/token\\"; self.request(tokenFetchPath, { \\"method\\": \\"PUT\\", \\"headers\\": { \\"x-aws-ec2-metadata-token-ttl-seconds\\": \\"21600\\" } }, callback); };
const v3826 = {};
v3826.constructor = v3825;
v3825.prototype = v3826;
v3814.fetchMetadataToken = v3825;
var v3827;
var v3828 = v163;
v3827 = function fetchCredentials(options, cb) { var self = this; var basePath = \\"/latest/meta-data/iam/security-credentials/\\"; self.request(basePath, options, function (err, roleName) { if (err) {
    self.disableFetchToken = !(err.statusCode === 401);
    cb(v3.error(err, { message: \\"EC2 Metadata roleName request returned error\\" }));
    return;
} roleName = roleName.split(\\"\\\\n\\")[0]; self.request(basePath + roleName, options, function (credErr, credData) { if (credErr) {
    self.disableFetchToken = !(credErr.statusCode === 401);
    cb(v3.error(credErr, { message: \\"EC2 Metadata creds request returned error\\" }));
    return;
} try {
    var credentials = v3828.parse(credData);
    cb(null, credentials);
}
catch (parseError) {
    cb(parseError);
} }); }); };
const v3829 = {};
v3829.constructor = v3827;
v3827.prototype = v3829;
v3814.fetchCredentials = v3827;
var v3830;
v3830 = function loadCredentials(callback) { var self = this; self.loadCredentialsCallbacks.push(callback); if (self.loadCredentialsCallbacks.length > 1) {
    return;
} function callbacks(err, creds) { var cb; while ((cb = self.loadCredentialsCallbacks.shift()) !== undefined) {
    cb(err, creds);
} } if (self.disableFetchToken) {
    self.fetchCredentials({}, callbacks);
}
else {
    self.fetchMetadataToken(function (tokenError, token) { if (tokenError) {
        if (tokenError.code === \\"TimeoutError\\") {
            self.disableFetchToken = true;
        }
        else if (tokenError.retryable === true) {
            callbacks(v3.error(tokenError, { message: \\"EC2 Metadata token request returned error\\" }));
            return;
        }
        else if (tokenError.statusCode === 400) {
            callbacks(v3.error(tokenError, { message: \\"EC2 Metadata token request returned 400\\" }));
            return;
        }
    } var options = {}; if (token) {
        options.headers = { \\"x-aws-ec2-metadata-token\\": token };
    } self.fetchCredentials(options, callbacks); });
} };
const v3831 = {};
v3831.constructor = v3830;
v3830.prototype = v3831;
v3814.loadCredentials = v3830;
v3813.prototype = v3814;
v3813.__super__ = v31;
v2.MetadataService = v3813;
var v3832;
var v3833 = v2;
var v3834 = v2;
v3832 = function EC2MetadataCredentials(options) { v3833.Credentials.call(this); options = options ? v3.copy(options) : {}; options = v3.merge({ maxRetries: this.defaultMaxRetries }, options); if (!options.httpOptions)
    options.httpOptions = {}; options.httpOptions = v3.merge({ timeout: this.defaultTimeout, connectTimeout: this.defaultConnectTimeout }, options.httpOptions); this.metadataService = new v3834.MetadataService(options); this.logger = options.logger || v251 && null; };
const v3835 = Object.create(v252);
v3835.constructor = v3832;
v3835.defaultTimeout = 1000;
v3835.defaultConnectTimeout = 1000;
v3835.defaultMaxRetries = 3;
v3835.originalExpiration = undefined;
var v3836;
v3836 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3837 = {};
v3837.constructor = v3836;
v3836.prototype = v3837;
v3835.refresh = v3836;
var v3838;
v3838 = function load(callback) { var self = this; self.metadataService.loadCredentials(function (err, creds) { if (err) {
    if (self.hasLoadedCredentials()) {
        self.extendExpirationIfExpired();
        callback();
    }
    else {
        callback(err);
    }
}
else {
    self.setCredentials(creds);
    self.extendExpirationIfExpired();
    callback();
} }); };
const v3839 = {};
v3839.constructor = v3838;
v3838.prototype = v3839;
v3835.load = v3838;
var v3840;
v3840 = function hasLoadedCredentials() { return this.AccessKeyId && this.secretAccessKey; };
const v3841 = {};
v3841.constructor = v3840;
v3840.prototype = v3841;
v3835.hasLoadedCredentials = v3840;
var v3842;
var v3843 = v787;
var v3844 = v787;
var v3845 = v77;
v3842 = function extendExpirationIfExpired() { if (this.needsRefresh()) {
    this.originalExpiration = this.originalExpiration || this.expireTime;
    this.expired = false;
    var nextTimeout = 15 * 60 + v3843.floor(v3844.random() * 5 * 60);
    var currentTime = v73.getDate().getTime();
    this.expireTime = new v3845(currentTime + nextTimeout * 1000);
    this.logger.warn(\\"Attempting credential expiration extension due to a \\" + \\"credential service availability issue. A refresh of these \\" + \\"credentials will be attempted again at \\" + this.expireTime + \\"\\\\nFor more information, please visit: https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\\");
} };
const v3846 = {};
v3846.constructor = v3842;
v3842.prototype = v3846;
v3835.extendExpirationIfExpired = v3842;
var v3847;
var v3848 = v77;
v3847 = function setCredentials(creds) { var currentTime = v73.getDate().getTime(); var expireTime = new v3848(creds.Expiration); this.expired = currentTime >= expireTime ? true : false; this.metadata = creds; this.accessKeyId = creds.AccessKeyId; this.secretAccessKey = creds.SecretAccessKey; this.sessionToken = creds.Token; this.expireTime = expireTime; };
const v3849 = {};
v3849.constructor = v3847;
v3847.prototype = v3849;
v3835.setCredentials = v3847;
v3832.prototype = v3835;
v3832.__super__ = v253;
v2.EC2MetadataCredentials = v3832;
var v3850;
var v3851 = v2;
v3850 = function RemoteCredentials(options) { v3851.Credentials.call(this); options = options ? v3.copy(options) : {}; if (!options.httpOptions)
    options.httpOptions = {}; options.httpOptions = v3.merge(this.httpOptions, options.httpOptions); v3.update(this, options); };
const v3852 = Object.create(v252);
v3852.constructor = v3850;
const v3853 = {};
v3853.timeout = 1000;
v3852.httpOptions = v3853;
v3852.maxRetries = 3;
var v3854;
var v3855 = v282;
var v3856 = v8;
var v3857 = v8;
var v3858 = \\"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\\";
var v3859 = v8;
var v3860 = \\"AWS_CONTAINER_CREDENTIALS_FULL_URI\\";
v3854 = function isConfiguredForEcsCredentials() { return v3855(v3856 && v3856.env && (v3857.env[v3858] || v3859.env[v3860])); };
const v3861 = {};
v3861.constructor = v3854;
v3854.prototype = v3861;
v3852.isConfiguredForEcsCredentials = v3854;
var v3862;
var v3863 = v8;
var v3864 = v8;
var v3865 = \\"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\\";
var v3866 = v8;
var v3867 = \\"AWS_CONTAINER_CREDENTIALS_FULL_URI\\";
var v3868 = \\"169.254.170.2\\";
const v3870 = [];
v3870.push(\\"http:\\", \\"https:\\");
var v3869 = v3870;
var v3871 = v40;
var v3872 = v3870;
const v3874 = [];
v3874.push(\\"https:\\");
var v3873 = v3874;
const v3876 = [];
v3876.push(\\"localhost\\", \\"127.0.0.1\\");
var v3875 = v3876;
var v3877 = v40;
var v3878 = v3876;
var v3879 = v40;
var v3880 = \\"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\\";
var v3881 = \\"AWS_CONTAINER_CREDENTIALS_FULL_URI\\";
var v3882 = v40;
v3862 = function getECSFullUri() { if (v3857 && v3863.env) {
    var relative = v3864.env[v3865], full = v3866.env[v3867];
    if (relative) {
        return \\"http://\\" + v3868 + relative;
    }
    else if (full) {
        var parsed = v3.urlParse(full);
        if (v3869.indexOf(parsed.protocol) < 0) {
            throw v3.error(new v3871(\\"Unsupported protocol:  AWS.RemoteCredentials supports \\" + v3872.join(\\",\\") + \\" only; \\" + parsed.protocol + \\" requested.\\"), { code: \\"ECSCredentialsProviderFailure\\" });
        }
        if (v3873.indexOf(parsed.protocol) < 0 && v3875.indexOf(parsed.hostname) < 0) {
            throw v3.error(new v3877(\\"Unsupported hostname: AWS.RemoteCredentials only supports \\" + v3878.join(\\",\\") + \\" for \\" + parsed.protocol + \\"; \\" + parsed.protocol + \\"//\\" + parsed.hostname + \\" requested.\\"), { code: \\"ECSCredentialsProviderFailure\\" });
        }
        return full;
    }
    else {
        throw v3.error(new v3879(\\"Variable \\" + v3880 + \\" or \\" + v3881 + \\" must be set to use AWS.RemoteCredentials.\\"), { code: \\"ECSCredentialsProviderFailure\\" });
    }
}
else {
    throw v3.error(new v3882(\\"No process info available\\"), { code: \\"ECSCredentialsProviderFailure\\" });
} };
const v3883 = {};
v3883.constructor = v3862;
v3862.prototype = v3883;
v3852.getECSFullUri = v3862;
var v3884;
var v3885 = v8;
var v3886 = v8;
var v3887 = v8;
var v3888 = \\"AWS_CONTAINER_CREDENTIALS_FULL_URI\\";
var v3889 = \\"AWS_CONTAINER_AUTHORIZATION_TOKEN\\";
v3884 = function getECSAuthToken() { if (v3885 && v3886.env && v3887.env[v3888]) {
    return v3885.env[v3889];
} };
const v3890 = {};
v3890.constructor = v3884;
v3884.prototype = v3890;
v3852.getECSAuthToken = v3884;
var v3891;
v3891 = function credsFormatIsValid(credData) { return (!!credData.accessKeyId && !!credData.secretAccessKey && !!credData.sessionToken && !!credData.expireTime); };
const v3892 = {};
v3892.constructor = v3891;
v3891.prototype = v3892;
v3852.credsFormatIsValid = v3891;
var v3893;
var v3894 = v77;
v3893 = function formatCreds(credData) { if (!!credData.credentials) {
    credData = credData.credentials;
} return { expired: false, accessKeyId: credData.accessKeyId || credData.AccessKeyId, secretAccessKey: credData.secretAccessKey || credData.SecretAccessKey, sessionToken: credData.sessionToken || credData.Token, expireTime: new v3894(credData.expiration || credData.Expiration) }; };
const v3895 = {};
v3895.constructor = v3893;
v3893.prototype = v3895;
v3852.formatCreds = v3893;
var v3896;
var v3897 = v2;
v3896 = function request(url, callback) { var httpRequest = new v3897.HttpRequest(url); httpRequest.method = \\"GET\\"; httpRequest.headers.Accept = \\"application/json\\"; var token = this.getECSAuthToken(); if (token) {
    httpRequest.headers.Authorization = token;
} v3.handleRequestWithRetries(httpRequest, this, callback); };
const v3898 = {};
v3898.constructor = v3896;
v3896.prototype = v3898;
v3852.request = v3896;
var v3899;
v3899 = function refresh(callback) { this.coalesceRefresh(callback || v65.callback); };
const v3900 = {};
v3900.constructor = v3899;
v3899.prototype = v3900;
v3852.refresh = v3899;
var v3901;
var v3902 = v163;
var v3903 = v40;
var v3904 = undefined;
v3901 = function load(callback) { var self = this; var fullUri; try {
    fullUri = this.getECSFullUri();
}
catch (err) {
    callback(err);
    return;
} this.request(fullUri, function (err, data) { if (!err) {
    try {
        data = v3902.parse(data);
        var creds = self.formatCreds(data);
        if (!self.credsFormatIsValid(creds)) {
            throw v3.error(new v3903(\\"Response data is not in valid format\\"), { code: \\"ECSCredentialsProviderFailure\\" });
        }
        v3.update(self, creds);
    }
    catch (dataError) {
        err = dataError;
    }
} callback(err, v3904); }); };
const v3905 = {};
v3905.constructor = v3901;
v3901.prototype = v3905;
v3852.load = v3901;
v3850.prototype = v3852;
v3850.__super__ = v253;
v2.RemoteCredentials = v3850;
v2.ECSCredentials = v3850;
var v3906;
var v3907 = v2;
v3906 = function EnvironmentCredentials(envPrefix) { v3907.Credentials.call(this); this.envPrefix = envPrefix; this.get(function () { }); };
const v3908 = Object.create(v252);
v3908.constructor = v3906;
var v3909;
var v3910 = v8;
var v3911 = v8;
var v3912 = v40;
var v3913 = v8;
var v3914 = v2;
v3909 = function refresh(callback) { if (!callback)
    callback = v65.callback; if (!v3910 || !v3911.env) {
    callback(v3.error(new v3912(\\"No process info or environment variables available\\"), { code: \\"EnvironmentCredentialsProviderFailure\\" }));
    return;
} var keys = [\\"ACCESS_KEY_ID\\", \\"SECRET_ACCESS_KEY\\", \\"SESSION_TOKEN\\"]; var values = []; for (var i = 0; i < keys.length; i++) {
    var prefix = \\"\\";
    if (this.envPrefix)
        prefix = this.envPrefix + \\"_\\";
    values[i] = v3913.env[prefix + keys[i]];
    if (!values[i] && keys[i] !== \\"SESSION_TOKEN\\") {
        callback(v3.error(new v3912(\\"Variable \\" + prefix + keys[i] + \\" not set.\\"), { code: \\"EnvironmentCredentialsProviderFailure\\" }));
        return;
    }
} this.expired = false; v3914.Credentials.apply(this, values); callback(); };
const v3915 = {};
v3915.constructor = v3909;
v3909.prototype = v3915;
v3908.refresh = v3909;
v3906.prototype = v3908;
v3906.__super__ = v253;
v2.EnvironmentCredentials = v3906;
var v3916;
var v3917 = v2;
v3916 = function FileSystemCredentials(filename) { v3917.Credentials.call(this); this.filename = filename; this.get(function () { }); };
const v3918 = Object.create(v252);
v3918.constructor = v3916;
var v3919;
var v3920 = v163;
var v3921 = v2;
var v3922 = v40;
v3919 = function refresh(callback) { if (!callback)
    callback = v65.callback; try {
    var creds = v3920.parse(v3.readFileSync(this.filename));
    v3921.Credentials.call(this, creds);
    if (!this.accessKeyId || !this.secretAccessKey) {
        throw v3.error(new v3922(\\"Credentials not set in \\" + this.filename), { code: \\"FileSystemCredentialsProviderFailure\\" });
    }
    this.expired = false;
    callback();
}
catch (err) {
    callback(err);
} };
const v3923 = {};
v3923.constructor = v3919;
v3919.prototype = v3923;
v3918.refresh = v3919;
v3916.prototype = v3918;
v3916.__super__ = v253;
v2.FileSystemCredentials = v3916;
v2.SharedIniFileCredentials = v278;
var v3924;
var v3925 = v2;
var v3926 = v8;
v3924 = function SsoCredentials(options) { v3925.Credentials.call(this); options = options || {}; this.errorCode = \\"SsoCredentialsProviderFailure\\"; this.expired = true; this.filename = options.filename; this.profile = options.profile || v3926.env.AWS_PROFILE || \\"default\\"; this.service = options.ssoClient; this.get(options.callback || v65.noop); };
const v3927 = Object.create(v252);
v3927.constructor = v3924;
var v3928;
var v3929 = v200;
var v3930 = v31;
var v3931 = v40;
var v3932 = v40;
var v3933 = v96;
var v3934 = v192;
var v3935 = v200;
var v3936 = v163;
var v3937 = v40;
var v3938 = v40;
var v3939 = v77;
var v3940 = v40;
var v3941 = v2;
var v3942 = v40;
var v3943 = v77;
v3928 = function load(callback) { var EXPIRE_WINDOW_MS = 15 * 60 * 1000; var self = this; try {
    var profiles = v3.getProfilesFromSharedConfig(v3929, this.filename);
    var profile = profiles[this.profile] || {};
    if (v3930.keys(profile).length === 0) {
        throw v3.error(new v3931(\\"Profile \\" + this.profile + \\" not found\\"), { code: self.errorCode });
    }
    if (!profile.sso_start_url || !profile.sso_account_id || !profile.sso_region || !profile.sso_role_name) {
        throw v3.error(new v3932(\\"Profile \\" + this.profile + \\" does not have valid SSO credentials. Required parameters \\\\\\"sso_account_id\\\\\\", \\\\\\"sso_region\\\\\\", \\" + \\"\\\\\\"sso_role_name\\\\\\", \\\\\\"sso_start_url\\\\\\". Reference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html\\"), { code: self.errorCode });
    }
    var hasher = v3933.createHash(\\"sha1\\");
    var fileName = hasher.update(profile.sso_start_url).digest(\\"hex\\") + \\".json\\";
    var cachePath = v3934.join(v3935.getHomeDir(), \\".aws\\", \\"sso\\", \\"cache\\", fileName);
    var cacheFile = v3.readFileSync(cachePath);
    var cacheContent = null;
    if (cacheFile) {
        cacheContent = v3936.parse(cacheFile);
    }
    if (!cacheContent) {
        throw v3.error(new v3937(\\"Cached credentials not found under \\" + this.profile + \\" profile. Please make sure you log in with aws sso login first\\"), { code: self.errorCode });
    }
    if (!cacheContent.startUrl || !cacheContent.region || !cacheContent.accessToken || !cacheContent.expiresAt) {
        throw v3.error(new v3938(\\"Cached credentials are missing required properties. Try running aws sso login.\\"));
    }
    if (new v3939(cacheContent.expiresAt).getTime() - v3939.now() <= EXPIRE_WINDOW_MS) {
        throw v3.error(new v3940(\\"The SSO session associated with this profile has expired. To refresh this SSO session run aws sso login with the corresponding profile.\\"));
    }
    if (!self.service || self.service.config.region !== profile.sso_region) {
        self.service = new v3941.SSO({ region: profile.sso_region });
    }
    var request = { accessToken: cacheContent.accessToken, accountId: profile.sso_account_id, roleName: profile.sso_role_name };
    self.service.getRoleCredentials(request, function (err, data) { if (err || !data || !data.roleCredentials) {
        callback(v3.error(err || new v3942(\\"Please log in using \\\\\\"aws sso login\\\\\\"\\"), { code: self.errorCode }), null);
    }
    else if (!data.roleCredentials.accessKeyId || !data.roleCredentials.secretAccessKey || !data.roleCredentials.sessionToken || !data.roleCredentials.expiration) {
        throw v3.error(new v3942(\\"SSO returns an invalid temporary credential.\\"));
    }
    else {
        self.expired = false;
        self.accessKeyId = data.roleCredentials.accessKeyId;
        self.secretAccessKey = data.roleCredentials.secretAccessKey;
        self.sessionToken = data.roleCredentials.sessionToken;
        self.expireTime = new v3943(data.roleCredentials.expiration);
        callback(null);
    } });
}
catch (err) {
    callback(err);
} };
const v3944 = {};
v3944.constructor = v3928;
v3928.prototype = v3944;
v3927.load = v3928;
var v3945;
var v3946 = v200;
v3945 = function refresh(callback) { v3946.clearCachedFiles(); this.coalesceRefresh(callback || v65.callback); };
const v3947 = {};
v3947.constructor = v3945;
v3945.prototype = v3947;
v3927.refresh = v3945;
v3924.prototype = v3927;
v3924.__super__ = v253;
v2.SsoCredentials = v3924;
var v3948;
var v3949 = v299;
var v3950 = v31;
v3948 = function () { if (v3949 !== v3950) {
    return v3949.apply(this, arguments);
} };
const v3951 = Object.create(v309);
v3951.constructor = v3948;
const v3952 = {};
const v3953 = [];
var v3954;
var v3955 = v31;
var v3956 = v3951;
v3954 = function EVENTS_BUBBLE(event) { var baseClass = v3955.getPrototypeOf(v3956); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v3957 = {};
v3957.constructor = v3954;
v3954.prototype = v3957;
v3953.push(v3954);
v3952.apiCallAttempt = v3953;
const v3958 = [];
var v3959;
v3959 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v387.getPrototypeOf(v3956); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v3960 = {};
v3960.constructor = v3959;
v3959.prototype = v3960;
v3958.push(v3959);
v3952.apiCall = v3958;
v3951._events = v3952;
v3951.MONITOR_EVENTS_BUBBLE = v3954;
v3951.CALL_EVENTS_BUBBLE = v3959;
v3948.prototype = v3951;
v3948.__super__ = v299;
const v3961 = {};
v3961[\\"2015-12-08\\"] = null;
v3948.services = v3961;
const v3962 = [];
v3962.push(\\"2015-12-08\\");
v3948.apiVersions = v3962;
v3948.serviceIdentifier = \\"acm\\";
v2.ACM = v3948;
var v3963;
var v3964 = v299;
var v3965 = v31;
v3963 = function () { if (v3964 !== v3965) {
    return v3964.apply(this, arguments);
} };
const v3966 = Object.create(v309);
v3966.constructor = v3963;
const v3967 = {};
const v3968 = [];
var v3969;
var v3970 = v31;
var v3971 = v3966;
v3969 = function EVENTS_BUBBLE(event) { var baseClass = v3970.getPrototypeOf(v3971); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v3972 = {};
v3972.constructor = v3969;
v3969.prototype = v3972;
v3968.push(v3969);
v3967.apiCallAttempt = v3968;
const v3973 = [];
var v3974;
v3974 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v3955.getPrototypeOf(v3971); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v3975 = {};
v3975.constructor = v3974;
v3974.prototype = v3975;
v3973.push(v3974);
v3967.apiCall = v3973;
v3966._events = v3967;
v3966.MONITOR_EVENTS_BUBBLE = v3969;
v3966.CALL_EVENTS_BUBBLE = v3974;
var v3976;
v3976 = function setAcceptHeader(req) { var httpRequest = req.httpRequest; if (!httpRequest.headers.Accept) {
    httpRequest.headers[\\"Accept\\"] = \\"application/json\\";
} };
const v3977 = {};
v3977.constructor = v3976;
v3976.prototype = v3977;
v3966.setAcceptHeader = v3976;
var v3978;
v3978 = function setupRequestListeners(request) { request.addListener(\\"build\\", this.setAcceptHeader); if (request.operation === \\"getExport\\") {
    var params = request.params || {};
    if (params.exportType === \\"swagger\\") {
        request.addListener(\\"extractData\\", v3.convertPayloadToString);
    }
} };
const v3979 = {};
v3979.constructor = v3978;
v3978.prototype = v3979;
v3966.setupRequestListeners = v3978;
v3963.prototype = v3966;
v3963.__super__ = v299;
const v3980 = {};
v3980[\\"2015-07-09\\"] = null;
v3963.services = v3980;
const v3981 = [];
v3981.push(\\"2015-07-09\\");
v3963.apiVersions = v3981;
v3963.serviceIdentifier = \\"apigateway\\";
v2.APIGateway = v3963;
var v3982;
var v3983 = v299;
var v3984 = v31;
v3982 = function () { if (v3983 !== v3984) {
    return v3983.apply(this, arguments);
} };
const v3985 = Object.create(v309);
v3985.constructor = v3982;
const v3986 = {};
const v3987 = [];
var v3988;
var v3989 = v31;
var v3990 = v3985;
v3988 = function EVENTS_BUBBLE(event) { var baseClass = v3989.getPrototypeOf(v3990); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v3991 = {};
v3991.constructor = v3988;
v3988.prototype = v3991;
v3987.push(v3988);
v3986.apiCallAttempt = v3987;
const v3992 = [];
var v3993;
v3993 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v3970.getPrototypeOf(v3990); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v3994 = {};
v3994.constructor = v3993;
v3993.prototype = v3994;
v3992.push(v3993);
v3986.apiCall = v3992;
v3985._events = v3986;
v3985.MONITOR_EVENTS_BUBBLE = v3988;
v3985.CALL_EVENTS_BUBBLE = v3993;
v3982.prototype = v3985;
v3982.__super__ = v299;
const v3995 = {};
v3995[\\"2016-02-06\\"] = null;
v3982.services = v3995;
const v3996 = [];
v3996.push(\\"2016-02-06\\");
v3982.apiVersions = v3996;
v3982.serviceIdentifier = \\"applicationautoscaling\\";
v2.ApplicationAutoScaling = v3982;
var v3997;
var v3998 = v299;
var v3999 = v31;
v3997 = function () { if (v3998 !== v3999) {
    return v3998.apply(this, arguments);
} };
const v4000 = Object.create(v309);
v4000.constructor = v3997;
const v4001 = {};
const v4002 = [];
var v4003;
var v4004 = v31;
var v4005 = v4000;
v4003 = function EVENTS_BUBBLE(event) { var baseClass = v4004.getPrototypeOf(v4005); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4006 = {};
v4006.constructor = v4003;
v4003.prototype = v4006;
v4002.push(v4003);
v4001.apiCallAttempt = v4002;
const v4007 = [];
var v4008;
v4008 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v3989.getPrototypeOf(v4005); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4009 = {};
v4009.constructor = v4008;
v4008.prototype = v4009;
v4007.push(v4008);
v4001.apiCall = v4007;
v4000._events = v4001;
v4000.MONITOR_EVENTS_BUBBLE = v4003;
v4000.CALL_EVENTS_BUBBLE = v4008;
v3997.prototype = v4000;
v3997.__super__ = v299;
const v4010 = {};
v4010[\\"2016-12-01\\"] = null;
v3997.services = v4010;
const v4011 = [];
v4011.push(\\"2016-12-01\\");
v3997.apiVersions = v4011;
v3997.serviceIdentifier = \\"appstream\\";
v2.AppStream = v3997;
var v4012;
var v4013 = v299;
var v4014 = v31;
v4012 = function () { if (v4013 !== v4014) {
    return v4013.apply(this, arguments);
} };
const v4015 = Object.create(v309);
v4015.constructor = v4012;
const v4016 = {};
const v4017 = [];
var v4018;
var v4019 = v31;
var v4020 = v4015;
v4018 = function EVENTS_BUBBLE(event) { var baseClass = v4019.getPrototypeOf(v4020); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4021 = {};
v4021.constructor = v4018;
v4018.prototype = v4021;
v4017.push(v4018);
v4016.apiCallAttempt = v4017;
const v4022 = [];
var v4023;
v4023 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4004.getPrototypeOf(v4020); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4024 = {};
v4024.constructor = v4023;
v4023.prototype = v4024;
v4022.push(v4023);
v4016.apiCall = v4022;
v4015._events = v4016;
v4015.MONITOR_EVENTS_BUBBLE = v4018;
v4015.CALL_EVENTS_BUBBLE = v4023;
v4012.prototype = v4015;
v4012.__super__ = v299;
const v4025 = {};
v4025[\\"2011-01-01\\"] = null;
v4012.services = v4025;
const v4026 = [];
v4026.push(\\"2011-01-01\\");
v4012.apiVersions = v4026;
v4012.serviceIdentifier = \\"autoscaling\\";
v2.AutoScaling = v4012;
var v4027;
var v4028 = v299;
var v4029 = v31;
v4027 = function () { if (v4028 !== v4029) {
    return v4028.apply(this, arguments);
} };
const v4030 = Object.create(v309);
v4030.constructor = v4027;
const v4031 = {};
const v4032 = [];
var v4033;
var v4034 = v31;
var v4035 = v4030;
v4033 = function EVENTS_BUBBLE(event) { var baseClass = v4034.getPrototypeOf(v4035); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4036 = {};
v4036.constructor = v4033;
v4033.prototype = v4036;
v4032.push(v4033);
v4031.apiCallAttempt = v4032;
const v4037 = [];
var v4038;
v4038 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4019.getPrototypeOf(v4035); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4039 = {};
v4039.constructor = v4038;
v4038.prototype = v4039;
v4037.push(v4038);
v4031.apiCall = v4037;
v4030._events = v4031;
v4030.MONITOR_EVENTS_BUBBLE = v4033;
v4030.CALL_EVENTS_BUBBLE = v4038;
v4027.prototype = v4030;
v4027.__super__ = v299;
const v4040 = {};
v4040[\\"2016-08-10\\"] = null;
v4027.services = v4040;
const v4041 = [];
v4041.push(\\"2016-08-10\\");
v4027.apiVersions = v4041;
v4027.serviceIdentifier = \\"batch\\";
v2.Batch = v4027;
var v4042;
var v4043 = v299;
var v4044 = v31;
v4042 = function () { if (v4043 !== v4044) {
    return v4043.apply(this, arguments);
} };
const v4045 = Object.create(v309);
v4045.constructor = v4042;
const v4046 = {};
const v4047 = [];
var v4048;
var v4049 = v31;
var v4050 = v4045;
v4048 = function EVENTS_BUBBLE(event) { var baseClass = v4049.getPrototypeOf(v4050); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4051 = {};
v4051.constructor = v4048;
v4048.prototype = v4051;
v4047.push(v4048);
v4046.apiCallAttempt = v4047;
const v4052 = [];
var v4053;
v4053 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4034.getPrototypeOf(v4050); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4054 = {};
v4054.constructor = v4053;
v4053.prototype = v4054;
v4052.push(v4053);
v4046.apiCall = v4052;
v4045._events = v4046;
v4045.MONITOR_EVENTS_BUBBLE = v4048;
v4045.CALL_EVENTS_BUBBLE = v4053;
v4042.prototype = v4045;
v4042.__super__ = v299;
const v4055 = {};
v4055[\\"2016-10-20\\"] = null;
v4042.services = v4055;
const v4056 = [];
v4056.push(\\"2016-10-20\\");
v4042.apiVersions = v4056;
v4042.serviceIdentifier = \\"budgets\\";
v2.Budgets = v4042;
var v4057;
var v4058 = v299;
var v4059 = v31;
v4057 = function () { if (v4058 !== v4059) {
    return v4058.apply(this, arguments);
} };
const v4060 = Object.create(v309);
v4060.constructor = v4057;
const v4061 = {};
const v4062 = [];
var v4063;
var v4064 = v31;
var v4065 = v4060;
v4063 = function EVENTS_BUBBLE(event) { var baseClass = v4064.getPrototypeOf(v4065); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4066 = {};
v4066.constructor = v4063;
v4063.prototype = v4066;
v4062.push(v4063);
v4061.apiCallAttempt = v4062;
const v4067 = [];
var v4068;
v4068 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4049.getPrototypeOf(v4065); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4069 = {};
v4069.constructor = v4068;
v4068.prototype = v4069;
v4067.push(v4068);
v4061.apiCall = v4067;
v4060._events = v4061;
v4060.MONITOR_EVENTS_BUBBLE = v4063;
v4060.CALL_EVENTS_BUBBLE = v4068;
v4057.prototype = v4060;
v4057.__super__ = v299;
const v4070 = {};
v4070[\\"2016-05-10\\"] = null;
v4070[\\"2016-05-10*\\"] = null;
v4070[\\"2017-01-11\\"] = null;
v4057.services = v4070;
const v4071 = [];
v4071.push(\\"2016-05-10\\", \\"2016-05-10*\\", \\"2017-01-11\\");
v4057.apiVersions = v4071;
v4057.serviceIdentifier = \\"clouddirectory\\";
v2.CloudDirectory = v4057;
var v4072;
var v4073 = v299;
var v4074 = v31;
v4072 = function () { if (v4073 !== v4074) {
    return v4073.apply(this, arguments);
} };
const v4075 = Object.create(v309);
v4075.constructor = v4072;
const v4076 = {};
const v4077 = [];
var v4078;
var v4079 = v31;
var v4080 = v4075;
v4078 = function EVENTS_BUBBLE(event) { var baseClass = v4079.getPrototypeOf(v4080); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4081 = {};
v4081.constructor = v4078;
v4078.prototype = v4081;
v4077.push(v4078);
v4076.apiCallAttempt = v4077;
const v4082 = [];
var v4083;
v4083 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4064.getPrototypeOf(v4080); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4084 = {};
v4084.constructor = v4083;
v4083.prototype = v4084;
v4082.push(v4083);
v4076.apiCall = v4082;
v4075._events = v4076;
v4075.MONITOR_EVENTS_BUBBLE = v4078;
v4075.CALL_EVENTS_BUBBLE = v4083;
v4072.prototype = v4075;
v4072.__super__ = v299;
const v4085 = {};
v4085[\\"2010-05-15\\"] = null;
v4072.services = v4085;
const v4086 = [];
v4086.push(\\"2010-05-15\\");
v4072.apiVersions = v4086;
v4072.serviceIdentifier = \\"cloudformation\\";
v2.CloudFormation = v4072;
var v4087;
var v4088 = v299;
var v4089 = v31;
v4087 = function () { if (v4088 !== v4089) {
    return v4088.apply(this, arguments);
} };
const v4090 = Object.create(v309);
v4090.constructor = v4087;
const v4091 = {};
const v4092 = [];
var v4093;
var v4094 = v31;
var v4095 = v4090;
v4093 = function EVENTS_BUBBLE(event) { var baseClass = v4094.getPrototypeOf(v4095); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4096 = {};
v4096.constructor = v4093;
v4093.prototype = v4096;
v4092.push(v4093);
v4091.apiCallAttempt = v4092;
const v4097 = [];
var v4098;
v4098 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4079.getPrototypeOf(v4095); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4099 = {};
v4099.constructor = v4098;
v4098.prototype = v4099;
v4097.push(v4098);
v4091.apiCall = v4097;
v4090._events = v4091;
v4090.MONITOR_EVENTS_BUBBLE = v4093;
v4090.CALL_EVENTS_BUBBLE = v4098;
var v4100;
v4100 = function setupRequestListeners(request) { request.addListener(\\"extractData\\", v3.hoistPayloadMember); };
const v4101 = {};
v4101.constructor = v4100;
v4100.prototype = v4101;
v4090.setupRequestListeners = v4100;
v4087.prototype = v4090;
v4087.__super__ = v299;
const v4102 = {};
v4102[\\"2013-05-12*\\"] = null;
v4102[\\"2013-11-11*\\"] = null;
v4102[\\"2014-05-31*\\"] = null;
v4102[\\"2014-10-21*\\"] = null;
v4102[\\"2014-11-06*\\"] = null;
v4102[\\"2015-04-17*\\"] = null;
v4102[\\"2015-07-27*\\"] = null;
v4102[\\"2015-09-17*\\"] = null;
v4102[\\"2016-01-13*\\"] = null;
v4102[\\"2016-01-28*\\"] = null;
v4102[\\"2016-08-01*\\"] = null;
v4102[\\"2016-08-20*\\"] = null;
v4102[\\"2016-09-07*\\"] = null;
v4102[\\"2016-09-29*\\"] = null;
v4102[\\"2016-11-25\\"] = null;
v4102[\\"2016-11-25*\\"] = null;
v4102[\\"2017-03-25\\"] = null;
v4102[\\"2017-03-25*\\"] = null;
v4102[\\"2017-10-30\\"] = null;
v4102[\\"2017-10-30*\\"] = null;
v4102[\\"2018-06-18\\"] = null;
v4102[\\"2018-06-18*\\"] = null;
v4102[\\"2018-11-05\\"] = null;
v4102[\\"2018-11-05*\\"] = null;
v4102[\\"2019-03-26\\"] = null;
v4102[\\"2019-03-26*\\"] = null;
v4102[\\"2020-05-31\\"] = null;
v4087.services = v4102;
const v4103 = [];
v4103.push(\\"2013-05-12*\\", \\"2013-11-11*\\", \\"2014-05-31*\\", \\"2014-10-21*\\", \\"2014-11-06*\\", \\"2015-04-17*\\", \\"2015-07-27*\\", \\"2015-09-17*\\", \\"2016-01-13*\\", \\"2016-01-28*\\", \\"2016-08-01*\\", \\"2016-08-20*\\", \\"2016-09-07*\\", \\"2016-09-29*\\", \\"2016-11-25\\", \\"2016-11-25*\\", \\"2017-03-25\\", \\"2017-03-25*\\", \\"2017-10-30\\", \\"2017-10-30*\\", \\"2018-06-18\\", \\"2018-06-18*\\", \\"2018-11-05\\", \\"2018-11-05*\\", \\"2019-03-26\\", \\"2019-03-26*\\", \\"2020-05-31\\");
v4087.apiVersions = v4103;
v4087.serviceIdentifier = \\"cloudfront\\";
var v4104;
var v4105 = v40;
v4104 = function Signer(keyPairId, privateKey) { if (keyPairId === void 0 || privateKey === void 0) {
    throw new v4105(\\"A key pair ID and private key are required\\");
} this.keyPairId = keyPairId; this.privateKey = privateKey; };
const v4106 = {};
v4106.constructor = v4104;
var v4107;
var v4109;
var v4111;
v4111 = function (string) { var replacements = { \\"+\\": \\"-\\", \\"=\\": \\"_\\", \\"/\\": \\"~\\" }; return string.replace(/[\\\\+=\\\\/]/g, function (match) { return replacements[match]; }); };
const v4112 = {};
v4112.constructor = v4111;
v4111.prototype = v4112;
var v4110 = v4111;
var v4113 = v38;
var v4115;
var v4116 = v96;
var v4117 = v4111;
v4115 = function (policy, privateKey) { var sign = v4116.createSign(\\"RSA-SHA1\\"); sign.write(policy); return v4117(sign.sign(privateKey, \\"base64\\")); };
const v4118 = {};
v4118.constructor = v4115;
v4115.prototype = v4118;
var v4114 = v4115;
v4109 = function (policy, keyPairId, privateKey) { policy = policy.replace(/\\\\s/gm, \\"\\"); return { Policy: v4110(v4113(policy)), \\"Key-Pair-Id\\": keyPairId, Signature: v4114(policy, privateKey) }; };
const v4119 = {};
v4119.constructor = v4109;
v4109.prototype = v4119;
var v4108 = v4109;
var v4121;
var v4122 = v163;
var v4123 = v4115;
v4121 = function (url, expires, keyPairId, privateKey) { var policy = v4122.stringify({ Statement: [{ Resource: url, Condition: { DateLessThan: { \\"AWS:EpochTime\\": expires } } }] }); return { Expires: expires, \\"Key-Pair-Id\\": keyPairId, Signature: v4123(policy.toString(), privateKey) }; };
const v4124 = {};
v4124.constructor = v4121;
v4121.prototype = v4124;
var v4120 = v4121;
var v4126;
v4126 = function (result, callback) { if (!callback || typeof callback !== \\"function\\") {
    return result;
} callback(null, result); };
const v4127 = {};
v4127.constructor = v4126;
v4126.prototype = v4127;
var v4125 = v4126;
v4107 = function (options, cb) { var signatureHash = \\"policy\\" in options ? v4108(options.policy, this.keyPairId, this.privateKey) : v4120(options.url, options.expires, this.keyPairId, this.privateKey); var cookieHash = {}; for (var key in signatureHash) {
    if (v113.hasOwnProperty.call(signatureHash, key)) {
        cookieHash[\\"CloudFront-\\" + key] = signatureHash[key];
    }
} return v4125(cookieHash, cb); };
const v4128 = {};
v4128.constructor = v4107;
v4107.prototype = v4128;
v4106.getSignedCookie = v4107;
var v4129;
var v4131;
var v4133;
var v4134 = v40;
v4133 = function (url) { var parts = url.split(\\"://\\"); if (parts.length < 2) {
    throw new v4134(\\"Invalid URL.\\");
} return parts[0].replace(\\"*\\", \\"\\"); };
const v4135 = {};
v4135.constructor = v4133;
v4133.prototype = v4135;
var v4132 = v4133;
var v4137;
var v4138 = v22;
v4137 = function (rtmpUrl) { var parsed = v4138.parse(rtmpUrl); return parsed.path.replace(/^\\\\//, \\"\\") + (parsed.hash || \\"\\"); };
const v4139 = {};
v4139.constructor = v4137;
v4137.prototype = v4139;
var v4136 = v4137;
var v4140 = v40;
v4131 = function (url) { switch (v4132(url)) {
    case \\"http\\":
    case \\"https\\": return url;
    case \\"rtmp\\": return v4136(url);
    default: throw new v4140(\\"Invalid URI scheme. Scheme must be one of\\" + \\" http, https, or rtmp\\");
} };
const v4141 = {};
v4141.constructor = v4131;
v4131.prototype = v4141;
var v4130 = v4131;
var v4143;
v4143 = function (err, callback) { if (!callback || typeof callback !== \\"function\\") {
    throw err;
} callback(err); };
const v4144 = {};
v4144.constructor = v4143;
v4143.prototype = v4144;
var v4142 = v4143;
var v4145 = v22;
var v4146 = v4109;
var v4147 = v4121;
var v4148 = undefined;
var v4149 = v4133;
var v4150 = v4137;
var v4151 = v22;
var v4152 = v22;
var v4153 = v4143;
var v4154 = v4126;
var v4155 = undefined;
v4129 = function (options, cb) { try {
    var resource = v4130(options.url);
}
catch (err) {
    return v4142(err, cb);
} var parsedUrl = v4145.parse(options.url, true), signatureHash = v113.hasOwnProperty.call(options, \\"policy\\") ? v4146(options.policy, this.keyPairId, this.privateKey) : v4147(v4148, options.expires, this.keyPairId, this.privateKey); parsedUrl.search = null; for (var key in signatureHash) {
    if (v113.hasOwnProperty.call(signatureHash, key)) {
        parsedUrl.query[key] = signatureHash[key];
    }
} try {
    var signedUrl = v4149(options.url) === \\"rtmp\\" ? v4150(v4151.format(parsedUrl)) : v4152.format(parsedUrl);
}
catch (err) {
    return v4153(err, cb);
} return v4154(v4155, cb); };
const v4156 = {};
v4156.constructor = v4129;
v4129.prototype = v4156;
v4106.getSignedUrl = v4129;
v4104.prototype = v4106;
v4104.__super__ = v31;
v4087.Signer = v4104;
v2.CloudFront = v4087;
var v4157;
var v4158 = v299;
var v4159 = v31;
v4157 = function () { if (v4158 !== v4159) {
    return v4158.apply(this, arguments);
} };
const v4160 = Object.create(v309);
v4160.constructor = v4157;
const v4161 = {};
const v4162 = [];
var v4163;
var v4164 = v31;
var v4165 = v4160;
v4163 = function EVENTS_BUBBLE(event) { var baseClass = v4164.getPrototypeOf(v4165); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4166 = {};
v4166.constructor = v4163;
v4163.prototype = v4166;
v4162.push(v4163);
v4161.apiCallAttempt = v4162;
const v4167 = [];
var v4168;
v4168 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4094.getPrototypeOf(v4165); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4169 = {};
v4169.constructor = v4168;
v4168.prototype = v4169;
v4167.push(v4168);
v4161.apiCall = v4167;
v4160._events = v4161;
v4160.MONITOR_EVENTS_BUBBLE = v4163;
v4160.CALL_EVENTS_BUBBLE = v4168;
v4157.prototype = v4160;
v4157.__super__ = v299;
const v4170 = {};
v4170[\\"2014-05-30\\"] = null;
v4157.services = v4170;
const v4171 = [];
v4171.push(\\"2014-05-30\\");
v4157.apiVersions = v4171;
v4157.serviceIdentifier = \\"cloudhsm\\";
v2.CloudHSM = v4157;
var v4172;
var v4173 = v299;
var v4174 = v31;
v4172 = function () { if (v4173 !== v4174) {
    return v4173.apply(this, arguments);
} };
const v4175 = Object.create(v309);
v4175.constructor = v4172;
const v4176 = {};
const v4177 = [];
var v4178;
var v4179 = v31;
var v4180 = v4175;
v4178 = function EVENTS_BUBBLE(event) { var baseClass = v4179.getPrototypeOf(v4180); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4181 = {};
v4181.constructor = v4178;
v4178.prototype = v4181;
v4177.push(v4178);
v4176.apiCallAttempt = v4177;
const v4182 = [];
var v4183;
v4183 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4164.getPrototypeOf(v4180); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4184 = {};
v4184.constructor = v4183;
v4183.prototype = v4184;
v4182.push(v4183);
v4176.apiCall = v4182;
v4175._events = v4176;
v4175.MONITOR_EVENTS_BUBBLE = v4178;
v4175.CALL_EVENTS_BUBBLE = v4183;
v4172.prototype = v4175;
v4172.__super__ = v299;
const v4185 = {};
v4185[\\"2011-02-01\\"] = null;
v4185[\\"2013-01-01\\"] = null;
v4172.services = v4185;
const v4186 = [];
v4186.push(\\"2011-02-01\\", \\"2013-01-01\\");
v4172.apiVersions = v4186;
v4172.serviceIdentifier = \\"cloudsearch\\";
v2.CloudSearch = v4172;
var v4187;
var v4188 = v299;
var v4189 = v31;
v4187 = function () { if (v4188 !== v4189) {
    return v4188.apply(this, arguments);
} };
const v4190 = Object.create(v309);
v4190.constructor = v4187;
const v4191 = {};
const v4192 = [];
var v4193;
var v4194 = v31;
var v4195 = v4190;
v4193 = function EVENTS_BUBBLE(event) { var baseClass = v4194.getPrototypeOf(v4195); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4196 = {};
v4196.constructor = v4193;
v4193.prototype = v4196;
v4192.push(v4193);
v4191.apiCallAttempt = v4192;
const v4197 = [];
var v4198;
v4198 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4179.getPrototypeOf(v4195); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4199 = {};
v4199.constructor = v4198;
v4198.prototype = v4199;
v4197.push(v4198);
v4191.apiCall = v4197;
v4190._events = v4191;
v4190.MONITOR_EVENTS_BUBBLE = v4193;
v4190.CALL_EVENTS_BUBBLE = v4198;
var v4200;
var v4201 = v40;
v4200 = function validateService() { if (!this.config.endpoint || this.config.endpoint.indexOf(\\"{\\") >= 0) {
    var msg = \\"AWS.CloudSearchDomain requires an explicit \\" + \\"\`endpoint' configuration option.\\";
    throw v3.error(new v4201(), { name: \\"InvalidEndpoint\\", message: msg });
} };
const v4202 = {};
v4202.constructor = v4200;
v4200.prototype = v4202;
v4190.validateService = v4200;
var v4203;
v4203 = function setupRequestListeners(request) { request.removeListener(\\"validate\\", v428.VALIDATE_CREDENTIALS); request.onAsync(\\"validate\\", this.validateCredentials); request.addListener(\\"validate\\", this.updateRegion); if (request.operation === \\"search\\") {
    request.addListener(\\"build\\", this.convertGetToPost);
} };
const v4204 = {};
v4204.constructor = v4203;
v4203.prototype = v4204;
v4190.setupRequestListeners = v4203;
var v4205;
v4205 = function (req, done) { if (!req.service.api.signatureVersion)
    return done(); req.service.config.getCredentials(function (err) { if (err) {
    req.removeListener(\\"sign\\", v428.SIGN);
} done(); }); };
const v4206 = {};
v4206.constructor = v4205;
v4205.prototype = v4206;
v4190.validateCredentials = v4205;
var v4207;
v4207 = function (request) { var httpRequest = request.httpRequest; var path = httpRequest.path.split(\\"?\\"); httpRequest.method = \\"POST\\"; httpRequest.path = path[0]; httpRequest.body = path[1]; httpRequest.headers[\\"Content-Length\\"] = httpRequest.body.length; httpRequest.headers[\\"Content-Type\\"] = \\"application/x-www-form-urlencoded\\"; };
const v4208 = {};
v4208.constructor = v4207;
v4207.prototype = v4208;
v4190.convertGetToPost = v4207;
var v4209;
v4209 = function updateRegion(request) { var endpoint = request.httpRequest.endpoint.hostname; var zones = endpoint.split(\\".\\"); request.httpRequest.region = zones[1] || request.httpRequest.region; };
const v4210 = {};
v4210.constructor = v4209;
v4209.prototype = v4210;
v4190.updateRegion = v4209;
v4187.prototype = v4190;
v4187.__super__ = v299;
const v4211 = {};
v4211[\\"2013-01-01\\"] = null;
v4187.services = v4211;
const v4212 = [];
v4212.push(\\"2013-01-01\\");
v4187.apiVersions = v4212;
v4187.serviceIdentifier = \\"cloudsearchdomain\\";
v2.CloudSearchDomain = v4187;
var v4213;
var v4214 = v299;
var v4215 = v31;
v4213 = function () { if (v4214 !== v4215) {
    return v4214.apply(this, arguments);
} };
const v4216 = Object.create(v309);
v4216.constructor = v4213;
const v4217 = {};
const v4218 = [];
var v4219;
var v4220 = v31;
var v4221 = v4216;
v4219 = function EVENTS_BUBBLE(event) { var baseClass = v4220.getPrototypeOf(v4221); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4222 = {};
v4222.constructor = v4219;
v4219.prototype = v4222;
v4218.push(v4219);
v4217.apiCallAttempt = v4218;
const v4223 = [];
var v4224;
v4224 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4194.getPrototypeOf(v4221); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4225 = {};
v4225.constructor = v4224;
v4224.prototype = v4225;
v4223.push(v4224);
v4217.apiCall = v4223;
v4216._events = v4217;
v4216.MONITOR_EVENTS_BUBBLE = v4219;
v4216.CALL_EVENTS_BUBBLE = v4224;
v4213.prototype = v4216;
v4213.__super__ = v299;
const v4226 = {};
v4226[\\"2013-11-01\\"] = null;
v4213.services = v4226;
const v4227 = [];
v4227.push(\\"2013-11-01\\");
v4213.apiVersions = v4227;
v4213.serviceIdentifier = \\"cloudtrail\\";
v2.CloudTrail = v4213;
var v4228;
var v4229 = v299;
var v4230 = v31;
v4228 = function () { if (v4229 !== v4230) {
    return v4229.apply(this, arguments);
} };
const v4231 = Object.create(v309);
v4231.constructor = v4228;
const v4232 = {};
const v4233 = [];
var v4234;
var v4235 = v31;
var v4236 = v4231;
v4234 = function EVENTS_BUBBLE(event) { var baseClass = v4235.getPrototypeOf(v4236); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4237 = {};
v4237.constructor = v4234;
v4234.prototype = v4237;
v4233.push(v4234);
v4232.apiCallAttempt = v4233;
const v4238 = [];
var v4239;
v4239 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4220.getPrototypeOf(v4236); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4240 = {};
v4240.constructor = v4239;
v4239.prototype = v4240;
v4238.push(v4239);
v4232.apiCall = v4238;
v4231._events = v4232;
v4231.MONITOR_EVENTS_BUBBLE = v4234;
v4231.CALL_EVENTS_BUBBLE = v4239;
v4228.prototype = v4231;
v4228.__super__ = v299;
const v4241 = {};
v4241[\\"2010-08-01\\"] = null;
v4228.services = v4241;
const v4242 = [];
v4242.push(\\"2010-08-01\\");
v4228.apiVersions = v4242;
v4228.serviceIdentifier = \\"cloudwatch\\";
v2.CloudWatch = v4228;
var v4243;
var v4244 = v299;
var v4245 = v31;
v4243 = function () { if (v4244 !== v4245) {
    return v4244.apply(this, arguments);
} };
const v4246 = Object.create(v309);
v4246.constructor = v4243;
const v4247 = {};
const v4248 = [];
var v4249;
var v4250 = v31;
var v4251 = v4246;
v4249 = function EVENTS_BUBBLE(event) { var baseClass = v4250.getPrototypeOf(v4251); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4252 = {};
v4252.constructor = v4249;
v4249.prototype = v4252;
v4248.push(v4249);
v4247.apiCallAttempt = v4248;
const v4253 = [];
var v4254;
v4254 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4235.getPrototypeOf(v4251); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4255 = {};
v4255.constructor = v4254;
v4254.prototype = v4255;
v4253.push(v4254);
v4247.apiCall = v4253;
v4246._events = v4247;
v4246.MONITOR_EVENTS_BUBBLE = v4249;
v4246.CALL_EVENTS_BUBBLE = v4254;
v4243.prototype = v4246;
v4243.__super__ = v299;
const v4256 = {};
v4256[\\"2014-02-03*\\"] = null;
v4256[\\"2015-10-07\\"] = null;
v4243.services = v4256;
const v4257 = [];
v4257.push(\\"2014-02-03*\\", \\"2015-10-07\\");
v4243.apiVersions = v4257;
v4243.serviceIdentifier = \\"cloudwatchevents\\";
v2.CloudWatchEvents = v4243;
var v4258;
var v4259 = v299;
var v4260 = v31;
v4258 = function () { if (v4259 !== v4260) {
    return v4259.apply(this, arguments);
} };
const v4261 = Object.create(v309);
v4261.constructor = v4258;
const v4262 = {};
const v4263 = [];
var v4264;
var v4265 = v31;
var v4266 = v4261;
v4264 = function EVENTS_BUBBLE(event) { var baseClass = v4265.getPrototypeOf(v4266); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4267 = {};
v4267.constructor = v4264;
v4264.prototype = v4267;
v4263.push(v4264);
v4262.apiCallAttempt = v4263;
const v4268 = [];
var v4269;
v4269 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4250.getPrototypeOf(v4266); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4270 = {};
v4270.constructor = v4269;
v4269.prototype = v4270;
v4268.push(v4269);
v4262.apiCall = v4268;
v4261._events = v4262;
v4261.MONITOR_EVENTS_BUBBLE = v4264;
v4261.CALL_EVENTS_BUBBLE = v4269;
v4258.prototype = v4261;
v4258.__super__ = v299;
const v4271 = {};
v4271[\\"2014-03-28\\"] = null;
v4258.services = v4271;
const v4272 = [];
v4272.push(\\"2014-03-28\\");
v4258.apiVersions = v4272;
v4258.serviceIdentifier = \\"cloudwatchlogs\\";
v2.CloudWatchLogs = v4258;
var v4273;
var v4274 = v299;
var v4275 = v31;
v4273 = function () { if (v4274 !== v4275) {
    return v4274.apply(this, arguments);
} };
const v4276 = Object.create(v309);
v4276.constructor = v4273;
const v4277 = {};
const v4278 = [];
var v4279;
var v4280 = v31;
var v4281 = v4276;
v4279 = function EVENTS_BUBBLE(event) { var baseClass = v4280.getPrototypeOf(v4281); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4282 = {};
v4282.constructor = v4279;
v4279.prototype = v4282;
v4278.push(v4279);
v4277.apiCallAttempt = v4278;
const v4283 = [];
var v4284;
v4284 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4265.getPrototypeOf(v4281); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4285 = {};
v4285.constructor = v4284;
v4284.prototype = v4285;
v4283.push(v4284);
v4277.apiCall = v4283;
v4276._events = v4277;
v4276.MONITOR_EVENTS_BUBBLE = v4279;
v4276.CALL_EVENTS_BUBBLE = v4284;
v4273.prototype = v4276;
v4273.__super__ = v299;
const v4286 = {};
v4286[\\"2016-10-06\\"] = null;
v4273.services = v4286;
const v4287 = [];
v4287.push(\\"2016-10-06\\");
v4273.apiVersions = v4287;
v4273.serviceIdentifier = \\"codebuild\\";
v2.CodeBuild = v4273;
var v4288;
var v4289 = v299;
var v4290 = v31;
v4288 = function () { if (v4289 !== v4290) {
    return v4289.apply(this, arguments);
} };
const v4291 = Object.create(v309);
v4291.constructor = v4288;
const v4292 = {};
const v4293 = [];
var v4294;
var v4295 = v31;
var v4296 = v4291;
v4294 = function EVENTS_BUBBLE(event) { var baseClass = v4295.getPrototypeOf(v4296); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4297 = {};
v4297.constructor = v4294;
v4294.prototype = v4297;
v4293.push(v4294);
v4292.apiCallAttempt = v4293;
const v4298 = [];
var v4299;
v4299 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4280.getPrototypeOf(v4296); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4300 = {};
v4300.constructor = v4299;
v4299.prototype = v4300;
v4298.push(v4299);
v4292.apiCall = v4298;
v4291._events = v4292;
v4291.MONITOR_EVENTS_BUBBLE = v4294;
v4291.CALL_EVENTS_BUBBLE = v4299;
v4288.prototype = v4291;
v4288.__super__ = v299;
const v4301 = {};
v4301[\\"2015-04-13\\"] = null;
v4288.services = v4301;
const v4302 = [];
v4302.push(\\"2015-04-13\\");
v4288.apiVersions = v4302;
v4288.serviceIdentifier = \\"codecommit\\";
v2.CodeCommit = v4288;
var v4303;
var v4304 = v299;
var v4305 = v31;
v4303 = function () { if (v4304 !== v4305) {
    return v4304.apply(this, arguments);
} };
const v4306 = Object.create(v309);
v4306.constructor = v4303;
const v4307 = {};
const v4308 = [];
var v4309;
var v4310 = v31;
var v4311 = v4306;
v4309 = function EVENTS_BUBBLE(event) { var baseClass = v4310.getPrototypeOf(v4311); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4312 = {};
v4312.constructor = v4309;
v4309.prototype = v4312;
v4308.push(v4309);
v4307.apiCallAttempt = v4308;
const v4313 = [];
var v4314;
v4314 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4295.getPrototypeOf(v4311); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4315 = {};
v4315.constructor = v4314;
v4314.prototype = v4315;
v4313.push(v4314);
v4307.apiCall = v4313;
v4306._events = v4307;
v4306.MONITOR_EVENTS_BUBBLE = v4309;
v4306.CALL_EVENTS_BUBBLE = v4314;
v4303.prototype = v4306;
v4303.__super__ = v299;
const v4316 = {};
v4316[\\"2014-10-06\\"] = null;
v4303.services = v4316;
const v4317 = [];
v4317.push(\\"2014-10-06\\");
v4303.apiVersions = v4317;
v4303.serviceIdentifier = \\"codedeploy\\";
v2.CodeDeploy = v4303;
var v4318;
var v4319 = v299;
var v4320 = v31;
v4318 = function () { if (v4319 !== v4320) {
    return v4319.apply(this, arguments);
} };
const v4321 = Object.create(v309);
v4321.constructor = v4318;
const v4322 = {};
const v4323 = [];
var v4324;
var v4325 = v31;
var v4326 = v4321;
v4324 = function EVENTS_BUBBLE(event) { var baseClass = v4325.getPrototypeOf(v4326); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4327 = {};
v4327.constructor = v4324;
v4324.prototype = v4327;
v4323.push(v4324);
v4322.apiCallAttempt = v4323;
const v4328 = [];
var v4329;
v4329 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4310.getPrototypeOf(v4326); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4330 = {};
v4330.constructor = v4329;
v4329.prototype = v4330;
v4328.push(v4329);
v4322.apiCall = v4328;
v4321._events = v4322;
v4321.MONITOR_EVENTS_BUBBLE = v4324;
v4321.CALL_EVENTS_BUBBLE = v4329;
v4318.prototype = v4321;
v4318.__super__ = v299;
const v4331 = {};
v4331[\\"2015-07-09\\"] = null;
v4318.services = v4331;
const v4332 = [];
v4332.push(\\"2015-07-09\\");
v4318.apiVersions = v4332;
v4318.serviceIdentifier = \\"codepipeline\\";
v2.CodePipeline = v4318;
var v4333;
var v4334 = v299;
var v4335 = v31;
v4333 = function () { if (v4334 !== v4335) {
    return v4334.apply(this, arguments);
} };
const v4336 = Object.create(v309);
v4336.constructor = v4333;
const v4337 = {};
const v4338 = [];
var v4339;
var v4340 = v31;
var v4341 = v4336;
v4339 = function EVENTS_BUBBLE(event) { var baseClass = v4340.getPrototypeOf(v4341); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4342 = {};
v4342.constructor = v4339;
v4339.prototype = v4342;
v4338.push(v4339);
v4337.apiCallAttempt = v4338;
const v4343 = [];
var v4344;
v4344 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4325.getPrototypeOf(v4341); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4345 = {};
v4345.constructor = v4344;
v4344.prototype = v4345;
v4343.push(v4344);
v4337.apiCall = v4343;
v4336._events = v4337;
v4336.MONITOR_EVENTS_BUBBLE = v4339;
v4336.CALL_EVENTS_BUBBLE = v4344;
v4333.prototype = v4336;
v4333.__super__ = v299;
const v4346 = {};
v4346[\\"2016-04-18\\"] = null;
v4333.services = v4346;
const v4347 = [];
v4347.push(\\"2016-04-18\\");
v4333.apiVersions = v4347;
v4333.serviceIdentifier = \\"cognitoidentityserviceprovider\\";
v2.CognitoIdentityServiceProvider = v4333;
var v4348;
var v4349 = v299;
var v4350 = v31;
v4348 = function () { if (v4349 !== v4350) {
    return v4349.apply(this, arguments);
} };
const v4351 = Object.create(v309);
v4351.constructor = v4348;
const v4352 = {};
const v4353 = [];
var v4354;
var v4355 = v31;
var v4356 = v4351;
v4354 = function EVENTS_BUBBLE(event) { var baseClass = v4355.getPrototypeOf(v4356); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4357 = {};
v4357.constructor = v4354;
v4354.prototype = v4357;
v4353.push(v4354);
v4352.apiCallAttempt = v4353;
const v4358 = [];
var v4359;
v4359 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4340.getPrototypeOf(v4356); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4360 = {};
v4360.constructor = v4359;
v4359.prototype = v4360;
v4358.push(v4359);
v4352.apiCall = v4358;
v4351._events = v4352;
v4351.MONITOR_EVENTS_BUBBLE = v4354;
v4351.CALL_EVENTS_BUBBLE = v4359;
v4348.prototype = v4351;
v4348.__super__ = v299;
const v4361 = {};
v4361[\\"2014-06-30\\"] = null;
v4348.services = v4361;
const v4362 = [];
v4362.push(\\"2014-06-30\\");
v4348.apiVersions = v4362;
v4348.serviceIdentifier = \\"cognitosync\\";
v2.CognitoSync = v4348;
var v4363;
var v4364 = v299;
var v4365 = v31;
v4363 = function () { if (v4364 !== v4365) {
    return v4364.apply(this, arguments);
} };
const v4366 = Object.create(v309);
v4366.constructor = v4363;
const v4367 = {};
const v4368 = [];
var v4369;
var v4370 = v31;
var v4371 = v4366;
v4369 = function EVENTS_BUBBLE(event) { var baseClass = v4370.getPrototypeOf(v4371); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4372 = {};
v4372.constructor = v4369;
v4369.prototype = v4372;
v4368.push(v4369);
v4367.apiCallAttempt = v4368;
const v4373 = [];
var v4374;
v4374 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4355.getPrototypeOf(v4371); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4375 = {};
v4375.constructor = v4374;
v4374.prototype = v4375;
v4373.push(v4374);
v4367.apiCall = v4373;
v4366._events = v4367;
v4366.MONITOR_EVENTS_BUBBLE = v4369;
v4366.CALL_EVENTS_BUBBLE = v4374;
v4363.prototype = v4366;
v4363.__super__ = v299;
const v4376 = {};
v4376[\\"2014-11-12\\"] = null;
v4363.services = v4376;
const v4377 = [];
v4377.push(\\"2014-11-12\\");
v4363.apiVersions = v4377;
v4363.serviceIdentifier = \\"configservice\\";
v2.ConfigService = v4363;
var v4378;
var v4379 = v299;
var v4380 = v31;
v4378 = function () { if (v4379 !== v4380) {
    return v4379.apply(this, arguments);
} };
const v4381 = Object.create(v309);
v4381.constructor = v4378;
const v4382 = {};
const v4383 = [];
var v4384;
var v4385 = v31;
var v4386 = v4381;
v4384 = function EVENTS_BUBBLE(event) { var baseClass = v4385.getPrototypeOf(v4386); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4387 = {};
v4387.constructor = v4384;
v4384.prototype = v4387;
v4383.push(v4384);
v4382.apiCallAttempt = v4383;
const v4388 = [];
var v4389;
v4389 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4370.getPrototypeOf(v4386); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4390 = {};
v4390.constructor = v4389;
v4389.prototype = v4390;
v4388.push(v4389);
v4382.apiCall = v4388;
v4381._events = v4382;
v4381.MONITOR_EVENTS_BUBBLE = v4384;
v4381.CALL_EVENTS_BUBBLE = v4389;
v4378.prototype = v4381;
v4378.__super__ = v299;
const v4391 = {};
v4391[\\"2017-01-06\\"] = null;
v4378.services = v4391;
const v4392 = [];
v4392.push(\\"2017-01-06\\");
v4378.apiVersions = v4392;
v4378.serviceIdentifier = \\"cur\\";
v2.CUR = v4378;
var v4393;
var v4394 = v299;
var v4395 = v31;
v4393 = function () { if (v4394 !== v4395) {
    return v4394.apply(this, arguments);
} };
const v4396 = Object.create(v309);
v4396.constructor = v4393;
const v4397 = {};
const v4398 = [];
var v4399;
var v4400 = v31;
var v4401 = v4396;
v4399 = function EVENTS_BUBBLE(event) { var baseClass = v4400.getPrototypeOf(v4401); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4402 = {};
v4402.constructor = v4399;
v4399.prototype = v4402;
v4398.push(v4399);
v4397.apiCallAttempt = v4398;
const v4403 = [];
var v4404;
v4404 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4385.getPrototypeOf(v4401); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4405 = {};
v4405.constructor = v4404;
v4404.prototype = v4405;
v4403.push(v4404);
v4397.apiCall = v4403;
v4396._events = v4397;
v4396.MONITOR_EVENTS_BUBBLE = v4399;
v4396.CALL_EVENTS_BUBBLE = v4404;
v4393.prototype = v4396;
v4393.__super__ = v299;
const v4406 = {};
v4406[\\"2012-10-29\\"] = null;
v4393.services = v4406;
const v4407 = [];
v4407.push(\\"2012-10-29\\");
v4393.apiVersions = v4407;
v4393.serviceIdentifier = \\"datapipeline\\";
v2.DataPipeline = v4393;
var v4408;
var v4409 = v299;
var v4410 = v31;
v4408 = function () { if (v4409 !== v4410) {
    return v4409.apply(this, arguments);
} };
const v4411 = Object.create(v309);
v4411.constructor = v4408;
const v4412 = {};
const v4413 = [];
var v4414;
var v4415 = v31;
var v4416 = v4411;
v4414 = function EVENTS_BUBBLE(event) { var baseClass = v4415.getPrototypeOf(v4416); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4417 = {};
v4417.constructor = v4414;
v4414.prototype = v4417;
v4413.push(v4414);
v4412.apiCallAttempt = v4413;
const v4418 = [];
var v4419;
v4419 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4400.getPrototypeOf(v4416); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4420 = {};
v4420.constructor = v4419;
v4419.prototype = v4420;
v4418.push(v4419);
v4412.apiCall = v4418;
v4411._events = v4412;
v4411.MONITOR_EVENTS_BUBBLE = v4414;
v4411.CALL_EVENTS_BUBBLE = v4419;
v4408.prototype = v4411;
v4408.__super__ = v299;
const v4421 = {};
v4421[\\"2015-06-23\\"] = null;
v4408.services = v4421;
const v4422 = [];
v4422.push(\\"2015-06-23\\");
v4408.apiVersions = v4422;
v4408.serviceIdentifier = \\"devicefarm\\";
v2.DeviceFarm = v4408;
var v4423;
var v4424 = v299;
var v4425 = v31;
v4423 = function () { if (v4424 !== v4425) {
    return v4424.apply(this, arguments);
} };
const v4426 = Object.create(v309);
v4426.constructor = v4423;
const v4427 = {};
const v4428 = [];
var v4429;
var v4430 = v31;
var v4431 = v4426;
v4429 = function EVENTS_BUBBLE(event) { var baseClass = v4430.getPrototypeOf(v4431); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4432 = {};
v4432.constructor = v4429;
v4429.prototype = v4432;
v4428.push(v4429);
v4427.apiCallAttempt = v4428;
const v4433 = [];
var v4434;
v4434 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4415.getPrototypeOf(v4431); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4435 = {};
v4435.constructor = v4434;
v4434.prototype = v4435;
v4433.push(v4434);
v4427.apiCall = v4433;
v4426._events = v4427;
v4426.MONITOR_EVENTS_BUBBLE = v4429;
v4426.CALL_EVENTS_BUBBLE = v4434;
v4423.prototype = v4426;
v4423.__super__ = v299;
const v4436 = {};
v4436[\\"2012-10-25\\"] = null;
v4423.services = v4436;
const v4437 = [];
v4437.push(\\"2012-10-25\\");
v4423.apiVersions = v4437;
v4423.serviceIdentifier = \\"directconnect\\";
v2.DirectConnect = v4423;
var v4438;
var v4439 = v299;
var v4440 = v31;
v4438 = function () { if (v4439 !== v4440) {
    return v4439.apply(this, arguments);
} };
const v4441 = Object.create(v309);
v4441.constructor = v4438;
const v4442 = {};
const v4443 = [];
var v4444;
var v4445 = v31;
var v4446 = v4441;
v4444 = function EVENTS_BUBBLE(event) { var baseClass = v4445.getPrototypeOf(v4446); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4447 = {};
v4447.constructor = v4444;
v4444.prototype = v4447;
v4443.push(v4444);
v4442.apiCallAttempt = v4443;
const v4448 = [];
var v4449;
v4449 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4430.getPrototypeOf(v4446); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4450 = {};
v4450.constructor = v4449;
v4449.prototype = v4450;
v4448.push(v4449);
v4442.apiCall = v4448;
v4441._events = v4442;
v4441.MONITOR_EVENTS_BUBBLE = v4444;
v4441.CALL_EVENTS_BUBBLE = v4449;
v4438.prototype = v4441;
v4438.__super__ = v299;
const v4451 = {};
v4451[\\"2015-04-16\\"] = null;
v4438.services = v4451;
const v4452 = [];
v4452.push(\\"2015-04-16\\");
v4438.apiVersions = v4452;
v4438.serviceIdentifier = \\"directoryservice\\";
v2.DirectoryService = v4438;
var v4453;
var v4454 = v299;
var v4455 = v31;
v4453 = function () { if (v4454 !== v4455) {
    return v4454.apply(this, arguments);
} };
const v4456 = Object.create(v309);
v4456.constructor = v4453;
const v4457 = {};
const v4458 = [];
var v4459;
var v4460 = v31;
var v4461 = v4456;
v4459 = function EVENTS_BUBBLE(event) { var baseClass = v4460.getPrototypeOf(v4461); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4462 = {};
v4462.constructor = v4459;
v4459.prototype = v4462;
v4458.push(v4459);
v4457.apiCallAttempt = v4458;
const v4463 = [];
var v4464;
v4464 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4445.getPrototypeOf(v4461); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4465 = {};
v4465.constructor = v4464;
v4464.prototype = v4465;
v4463.push(v4464);
v4457.apiCall = v4463;
v4456._events = v4457;
v4456.MONITOR_EVENTS_BUBBLE = v4459;
v4456.CALL_EVENTS_BUBBLE = v4464;
v4453.prototype = v4456;
v4453.__super__ = v299;
const v4466 = {};
v4466[\\"2015-11-01\\"] = null;
v4453.services = v4466;
const v4467 = [];
v4467.push(\\"2015-11-01\\");
v4453.apiVersions = v4467;
v4453.serviceIdentifier = \\"discovery\\";
v2.Discovery = v4453;
var v4468;
var v4469 = v299;
var v4470 = v31;
v4468 = function () { if (v4469 !== v4470) {
    return v4469.apply(this, arguments);
} };
const v4471 = Object.create(v309);
v4471.constructor = v4468;
const v4472 = {};
const v4473 = [];
var v4474;
var v4475 = v31;
var v4476 = v4471;
v4474 = function EVENTS_BUBBLE(event) { var baseClass = v4475.getPrototypeOf(v4476); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4477 = {};
v4477.constructor = v4474;
v4474.prototype = v4477;
v4473.push(v4474);
v4472.apiCallAttempt = v4473;
const v4478 = [];
var v4479;
v4479 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4460.getPrototypeOf(v4476); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4480 = {};
v4480.constructor = v4479;
v4479.prototype = v4480;
v4478.push(v4479);
v4472.apiCall = v4478;
v4471._events = v4472;
v4471.MONITOR_EVENTS_BUBBLE = v4474;
v4471.CALL_EVENTS_BUBBLE = v4479;
v4468.prototype = v4471;
v4468.__super__ = v299;
const v4481 = {};
v4481[\\"2016-01-01\\"] = null;
v4468.services = v4481;
const v4482 = [];
v4482.push(\\"2016-01-01\\");
v4468.apiVersions = v4482;
v4468.serviceIdentifier = \\"dms\\";
v2.DMS = v4468;
var v4483;
var v4484 = v299;
var v4485 = v31;
v4483 = function () { if (v4484 !== v4485) {
    return v4484.apply(this, arguments);
} };
const v4486 = Object.create(v309);
v4486.constructor = v4483;
const v4487 = {};
const v4488 = [];
var v4489;
var v4490 = v31;
var v4491 = v4486;
v4489 = function EVENTS_BUBBLE(event) { var baseClass = v4490.getPrototypeOf(v4491); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4492 = {};
v4492.constructor = v4489;
v4489.prototype = v4492;
v4488.push(v4489);
v4487.apiCallAttempt = v4488;
const v4493 = [];
var v4494;
v4494 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4475.getPrototypeOf(v4491); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4495 = {};
v4495.constructor = v4494;
v4494.prototype = v4495;
v4493.push(v4494);
v4487.apiCall = v4493;
v4486._events = v4487;
v4486.MONITOR_EVENTS_BUBBLE = v4489;
v4486.CALL_EVENTS_BUBBLE = v4494;
var v4496;
v4496 = function setupRequestListeners(request) { if (request.service.config.dynamoDbCrc32) {
    request.removeListener(\\"extractData\\", v1903.EXTRACT_DATA);
    request.addListener(\\"extractData\\", this.checkCrc32);
    request.addListener(\\"extractData\\", v1903.EXTRACT_DATA);
} };
const v4497 = {};
v4497.constructor = v4496;
v4496.prototype = v4497;
v4486.setupRequestListeners = v4496;
var v4498;
var v4499 = v40;
v4498 = function checkCrc32(resp) { if (!resp.httpResponse.streaming && !resp.request.service.crc32IsValid(resp)) {
    resp.data = null;
    resp.error = v3.error(new v4499(), { code: \\"CRC32CheckFailed\\", message: \\"CRC32 integrity check failed\\", retryable: true });
    resp.request.haltHandlersOnError();
    throw (resp.error);
} };
const v4500 = {};
v4500.constructor = v4498;
v4498.prototype = v4500;
v4486.checkCrc32 = v4498;
var v4501;
var v4502 = v117;
v4501 = function crc32IsValid(resp) { var crc = resp.httpResponse.headers[\\"x-amz-crc32\\"]; if (!crc)
    return true; return v4502(crc, 10) === v91.crc32(resp.httpResponse.body); };
const v4503 = {};
v4503.constructor = v4501;
v4501.prototype = v4503;
v4486.crc32IsValid = v4501;
v4486.defaultRetryCount = 10;
var v4504;
v4504 = function retryDelays(retryCount, err) { var retryDelayOptions = v3.copy(this.config.retryDelayOptions); if (typeof retryDelayOptions.base !== \\"number\\") {
    retryDelayOptions.base = 50;
} var delay = v3.calculateRetryDelay(retryCount, retryDelayOptions, err); return delay; };
const v4505 = {};
v4505.constructor = v4504;
v4504.prototype = v4505;
v4486.retryDelays = v4504;
v4483.prototype = v4486;
v4483.__super__ = v299;
const v4506 = {};
v4506[\\"2011-12-05\\"] = null;
var v4507;
var v4508 = v4483;
var v4509 = v31;
v4507 = function () { if (v4508 !== v4509) {
    return v4508.apply(this, arguments);
} };
const v4510 = Object.create(v4486);
v4510.serviceIdentifier = \\"dynamodb\\";
v4510.constructor = v4507;
const v4511 = Object.create(v2532);
v4511.isApi = true;
v4511.apiVersion = \\"2012-08-10\\";
v4511.endpointPrefix = \\"dynamodb\\";
v4511.signingName = undefined;
v4511.globalEndpoint = undefined;
v4511.signatureVersion = \\"v4\\";
v4511.jsonVersion = \\"1.0\\";
v4511.targetPrefix = \\"DynamoDB_20120810\\";
v4511.protocol = \\"json\\";
v4511.timestampFormat = undefined;
v4511.xmlNamespaceUri = undefined;
v4511.abbreviation = \\"DynamoDB\\";
v4511.fullName = \\"Amazon DynamoDB\\";
v4511.serviceId = \\"DynamoDB\\";
v4511.xmlNoDefaultLists = undefined;
v4511.hasRequiredEndpointDiscovery = false;
v4511.endpointOperation = \\"describeEndpoints\\";
const v4512 = Object.create(v889);
v4511.operations = v4512;
const v4513 = Object.create(v889);
v4511.shapes = v4513;
const v4514 = Object.create(v889);
v4511.paginators = v4514;
const v4515 = Object.create(v889);
v4511.waiters = v4515;
v4511.errorCodeMapping = undefined;
v4510.api = v4511;
var v4516;
var v4517 = \\"batchExecuteStatement\\";
v4516 = function (params, callback) { return this.makeRequest(v4517, params, callback); };
const v4518 = {};
v4518.constructor = v4516;
v4516.prototype = v4518;
v4510.batchExecuteStatement = v4516;
var v4519;
var v4520 = \\"batchGetItem\\";
v4519 = function (params, callback) { return this.makeRequest(v4520, params, callback); };
const v4521 = {};
v4521.constructor = v4519;
v4519.prototype = v4521;
v4510.batchGetItem = v4519;
var v4522;
var v4523 = \\"batchWriteItem\\";
v4522 = function (params, callback) { return this.makeRequest(v4523, params, callback); };
const v4524 = {};
v4524.constructor = v4522;
v4522.prototype = v4524;
v4510.batchWriteItem = v4522;
var v4525;
var v4526 = \\"createBackup\\";
v4525 = function (params, callback) { return this.makeRequest(v4526, params, callback); };
const v4527 = {};
v4527.constructor = v4525;
v4525.prototype = v4527;
v4510.createBackup = v4525;
var v4528;
var v4529 = \\"createGlobalTable\\";
v4528 = function (params, callback) { return this.makeRequest(v4529, params, callback); };
const v4530 = {};
v4530.constructor = v4528;
v4528.prototype = v4530;
v4510.createGlobalTable = v4528;
var v4531;
var v4532 = \\"createTable\\";
v4531 = function (params, callback) { return this.makeRequest(v4532, params, callback); };
const v4533 = {};
v4533.constructor = v4531;
v4531.prototype = v4533;
v4510.createTable = v4531;
var v4534;
var v4535 = \\"deleteBackup\\";
v4534 = function (params, callback) { return this.makeRequest(v4535, params, callback); };
const v4536 = {};
v4536.constructor = v4534;
v4534.prototype = v4536;
v4510.deleteBackup = v4534;
var v4537;
var v4538 = \\"deleteItem\\";
v4537 = function (params, callback) { return this.makeRequest(v4538, params, callback); };
const v4539 = {};
v4539.constructor = v4537;
v4537.prototype = v4539;
v4510.deleteItem = v4537;
var v4540;
var v4541 = \\"deleteTable\\";
v4540 = function (params, callback) { return this.makeRequest(v4541, params, callback); };
const v4542 = {};
v4542.constructor = v4540;
v4540.prototype = v4542;
v4510.deleteTable = v4540;
var v4543;
var v4544 = \\"describeBackup\\";
v4543 = function (params, callback) { return this.makeRequest(v4544, params, callback); };
const v4545 = {};
v4545.constructor = v4543;
v4543.prototype = v4545;
v4510.describeBackup = v4543;
var v4546;
var v4547 = \\"describeContinuousBackups\\";
v4546 = function (params, callback) { return this.makeRequest(v4547, params, callback); };
const v4548 = {};
v4548.constructor = v4546;
v4546.prototype = v4548;
v4510.describeContinuousBackups = v4546;
var v4549;
var v4550 = \\"describeContributorInsights\\";
v4549 = function (params, callback) { return this.makeRequest(v4550, params, callback); };
const v4551 = {};
v4551.constructor = v4549;
v4549.prototype = v4551;
v4510.describeContributorInsights = v4549;
var v4552;
var v4553 = \\"describeEndpoints\\";
v4552 = function (params, callback) { return this.makeRequest(v4553, params, callback); };
const v4554 = {};
v4554.constructor = v4552;
v4552.prototype = v4554;
v4510.describeEndpoints = v4552;
var v4555;
var v4556 = \\"describeExport\\";
v4555 = function (params, callback) { return this.makeRequest(v4556, params, callback); };
const v4557 = {};
v4557.constructor = v4555;
v4555.prototype = v4557;
v4510.describeExport = v4555;
var v4558;
var v4559 = \\"describeGlobalTable\\";
v4558 = function (params, callback) { return this.makeRequest(v4559, params, callback); };
const v4560 = {};
v4560.constructor = v4558;
v4558.prototype = v4560;
v4510.describeGlobalTable = v4558;
var v4561;
var v4562 = \\"describeGlobalTableSettings\\";
v4561 = function (params, callback) { return this.makeRequest(v4562, params, callback); };
const v4563 = {};
v4563.constructor = v4561;
v4561.prototype = v4563;
v4510.describeGlobalTableSettings = v4561;
var v4564;
var v4565 = \\"describeKinesisStreamingDestination\\";
v4564 = function (params, callback) { return this.makeRequest(v4565, params, callback); };
const v4566 = {};
v4566.constructor = v4564;
v4564.prototype = v4566;
v4510.describeKinesisStreamingDestination = v4564;
var v4567;
var v4568 = \\"describeLimits\\";
v4567 = function (params, callback) { return this.makeRequest(v4568, params, callback); };
const v4569 = {};
v4569.constructor = v4567;
v4567.prototype = v4569;
v4510.describeLimits = v4567;
var v4570;
var v4571 = \\"describeTable\\";
v4570 = function (params, callback) { return this.makeRequest(v4571, params, callback); };
const v4572 = {};
v4572.constructor = v4570;
v4570.prototype = v4572;
v4510.describeTable = v4570;
var v4573;
var v4574 = \\"describeTableReplicaAutoScaling\\";
v4573 = function (params, callback) { return this.makeRequest(v4574, params, callback); };
const v4575 = {};
v4575.constructor = v4573;
v4573.prototype = v4575;
v4510.describeTableReplicaAutoScaling = v4573;
var v4576;
var v4577 = \\"describeTimeToLive\\";
v4576 = function (params, callback) { return this.makeRequest(v4577, params, callback); };
const v4578 = {};
v4578.constructor = v4576;
v4576.prototype = v4578;
v4510.describeTimeToLive = v4576;
var v4579;
var v4580 = \\"disableKinesisStreamingDestination\\";
v4579 = function (params, callback) { return this.makeRequest(v4580, params, callback); };
const v4581 = {};
v4581.constructor = v4579;
v4579.prototype = v4581;
v4510.disableKinesisStreamingDestination = v4579;
var v4582;
var v4583 = \\"enableKinesisStreamingDestination\\";
v4582 = function (params, callback) { return this.makeRequest(v4583, params, callback); };
const v4584 = {};
v4584.constructor = v4582;
v4582.prototype = v4584;
v4510.enableKinesisStreamingDestination = v4582;
var v4585;
var v4586 = \\"executeStatement\\";
v4585 = function (params, callback) { return this.makeRequest(v4586, params, callback); };
const v4587 = {};
v4587.constructor = v4585;
v4585.prototype = v4587;
v4510.executeStatement = v4585;
var v4588;
var v4589 = \\"executeTransaction\\";
v4588 = function (params, callback) { return this.makeRequest(v4589, params, callback); };
const v4590 = {};
v4590.constructor = v4588;
v4588.prototype = v4590;
v4510.executeTransaction = v4588;
var v4591;
var v4592 = \\"exportTableToPointInTime\\";
v4591 = function (params, callback) { return this.makeRequest(v4592, params, callback); };
const v4593 = {};
v4593.constructor = v4591;
v4591.prototype = v4593;
v4510.exportTableToPointInTime = v4591;
var v4594;
var v4595 = \\"getItem\\";
v4594 = function (params, callback) { return this.makeRequest(v4595, params, callback); };
const v4596 = {};
v4596.constructor = v4594;
v4594.prototype = v4596;
v4510.getItem = v4594;
var v4597;
var v4598 = \\"listBackups\\";
v4597 = function (params, callback) { return this.makeRequest(v4598, params, callback); };
const v4599 = {};
v4599.constructor = v4597;
v4597.prototype = v4599;
v4510.listBackups = v4597;
var v4600;
var v4601 = \\"listContributorInsights\\";
v4600 = function (params, callback) { return this.makeRequest(v4601, params, callback); };
const v4602 = {};
v4602.constructor = v4600;
v4600.prototype = v4602;
v4510.listContributorInsights = v4600;
var v4603;
var v4604 = \\"listExports\\";
v4603 = function (params, callback) { return this.makeRequest(v4604, params, callback); };
const v4605 = {};
v4605.constructor = v4603;
v4603.prototype = v4605;
v4510.listExports = v4603;
var v4606;
var v4607 = \\"listGlobalTables\\";
v4606 = function (params, callback) { return this.makeRequest(v4607, params, callback); };
const v4608 = {};
v4608.constructor = v4606;
v4606.prototype = v4608;
v4510.listGlobalTables = v4606;
var v4609;
var v4610 = \\"listTables\\";
v4609 = function (params, callback) { return this.makeRequest(v4610, params, callback); };
const v4611 = {};
v4611.constructor = v4609;
v4609.prototype = v4611;
v4510.listTables = v4609;
var v4612;
var v4613 = \\"listTagsOfResource\\";
v4612 = function (params, callback) { return this.makeRequest(v4613, params, callback); };
const v4614 = {};
v4614.constructor = v4612;
v4612.prototype = v4614;
v4510.listTagsOfResource = v4612;
var v4615;
var v4616 = \\"putItem\\";
v4615 = function (params, callback) { return this.makeRequest(v4616, params, callback); };
const v4617 = {};
v4617.constructor = v4615;
v4615.prototype = v4617;
v4510.putItem = v4615;
var v4618;
var v4619 = \\"query\\";
v4618 = function (params, callback) { return this.makeRequest(v4619, params, callback); };
const v4620 = {};
v4620.constructor = v4618;
v4618.prototype = v4620;
v4510.query = v4618;
var v4621;
var v4622 = \\"restoreTableFromBackup\\";
v4621 = function (params, callback) { return this.makeRequest(v4622, params, callback); };
const v4623 = {};
v4623.constructor = v4621;
v4621.prototype = v4623;
v4510.restoreTableFromBackup = v4621;
var v4624;
var v4625 = \\"restoreTableToPointInTime\\";
v4624 = function (params, callback) { return this.makeRequest(v4625, params, callback); };
const v4626 = {};
v4626.constructor = v4624;
v4624.prototype = v4626;
v4510.restoreTableToPointInTime = v4624;
var v4627;
var v4628 = \\"scan\\";
v4627 = function (params, callback) { return this.makeRequest(v4628, params, callback); };
const v4629 = {};
v4629.constructor = v4627;
v4627.prototype = v4629;
v4510.scan = v4627;
var v4630;
var v4631 = \\"tagResource\\";
v4630 = function (params, callback) { return this.makeRequest(v4631, params, callback); };
const v4632 = {};
v4632.constructor = v4630;
v4630.prototype = v4632;
v4510.tagResource = v4630;
var v4633;
var v4634 = \\"transactGetItems\\";
v4633 = function (params, callback) { return this.makeRequest(v4634, params, callback); };
const v4635 = {};
v4635.constructor = v4633;
v4633.prototype = v4635;
v4510.transactGetItems = v4633;
var v4636;
var v4637 = \\"transactWriteItems\\";
v4636 = function (params, callback) { return this.makeRequest(v4637, params, callback); };
const v4638 = {};
v4638.constructor = v4636;
v4636.prototype = v4638;
v4510.transactWriteItems = v4636;
var v4639;
var v4640 = \\"untagResource\\";
v4639 = function (params, callback) { return this.makeRequest(v4640, params, callback); };
const v4641 = {};
v4641.constructor = v4639;
v4639.prototype = v4641;
v4510.untagResource = v4639;
var v4642;
var v4643 = \\"updateContinuousBackups\\";
v4642 = function (params, callback) { return this.makeRequest(v4643, params, callback); };
const v4644 = {};
v4644.constructor = v4642;
v4642.prototype = v4644;
v4510.updateContinuousBackups = v4642;
var v4645;
var v4646 = \\"updateContributorInsights\\";
v4645 = function (params, callback) { return this.makeRequest(v4646, params, callback); };
const v4647 = {};
v4647.constructor = v4645;
v4645.prototype = v4647;
v4510.updateContributorInsights = v4645;
var v4648;
var v4649 = \\"updateGlobalTable\\";
v4648 = function (params, callback) { return this.makeRequest(v4649, params, callback); };
const v4650 = {};
v4650.constructor = v4648;
v4648.prototype = v4650;
v4510.updateGlobalTable = v4648;
var v4651;
var v4652 = \\"updateGlobalTableSettings\\";
v4651 = function (params, callback) { return this.makeRequest(v4652, params, callback); };
const v4653 = {};
v4653.constructor = v4651;
v4651.prototype = v4653;
v4510.updateGlobalTableSettings = v4651;
var v4654;
var v4655 = \\"updateItem\\";
v4654 = function (params, callback) { return this.makeRequest(v4655, params, callback); };
const v4656 = {};
v4656.constructor = v4654;
v4654.prototype = v4656;
v4510.updateItem = v4654;
var v4657;
var v4658 = \\"updateTable\\";
v4657 = function (params, callback) { return this.makeRequest(v4658, params, callback); };
const v4659 = {};
v4659.constructor = v4657;
v4657.prototype = v4659;
v4510.updateTable = v4657;
var v4660;
var v4661 = \\"updateTableReplicaAutoScaling\\";
v4660 = function (params, callback) { return this.makeRequest(v4661, params, callback); };
const v4662 = {};
v4662.constructor = v4660;
v4660.prototype = v4662;
v4510.updateTableReplicaAutoScaling = v4660;
var v4663;
var v4664 = \\"updateTimeToLive\\";
v4663 = function (params, callback) { return this.makeRequest(v4664, params, callback); };
const v4665 = {};
v4665.constructor = v4663;
v4663.prototype = v4665;
v4510.updateTimeToLive = v4663;
v4507.prototype = v4510;
v4507.__super__ = v4483;
v4506[\\"2012-08-10\\"] = v4507;
v4483.services = v4506;
const v4666 = [];
v4666.push(\\"2011-12-05\\", \\"2012-08-10\\");
v4483.apiVersions = v4666;
v4483.serviceIdentifier = \\"dynamodb\\";
const v4667 = {};
var v4668;
var v4670;
var v4672;
var v4673 = v3;
var v4674 = v3;
var v4675 = v3;
var v4676 = v3;
v4672 = function isBinary(data) { var types = [\\"Buffer\\", \\"File\\", \\"Blob\\", \\"ArrayBuffer\\", \\"DataView\\", \\"Int8Array\\", \\"Uint8Array\\", \\"Uint8ClampedArray\\", \\"Int16Array\\", \\"Uint16Array\\", \\"Int32Array\\", \\"Uint32Array\\", \\"Float32Array\\", \\"Float64Array\\"]; if (v4673.isNode()) {
    var Stream = v4674.stream.Stream;
    if (v4675.Buffer.isBuffer(data) || data instanceof Stream) {
        return true;
    }
} for (var i = 0; i < types.length; i++) {
    if (data !== undefined && data.constructor) {
        if (v4676.isType(data, types[i]))
            return true;
        if (v4673.typeName(data.constructor) === types[i])
            return true;
    }
} return false; };
const v4677 = {};
v4677.constructor = v4672;
v4672.prototype = v4677;
var v4671 = v4672;
var v4678 = v3;
v4670 = function typeOf(data) { if (data === null && typeof data === \\"object\\") {
    return \\"null\\";
}
else if (data !== undefined && v4671(data)) {
    return \\"Binary\\";
}
else if (data !== undefined && data.constructor) {
    return data.wrapperName || v4678.typeName(data.constructor);
}
else if (data !== undefined && typeof data === \\"object\\") {
    return \\"Object\\";
}
else {
    return \\"undefined\\";
} };
const v4679 = {};
v4679.constructor = v4670;
v4670.prototype = v4679;
var v4669 = v4670;
var v4681;
v4681 = function formatMap(data, options) { var map = { M: {} }; for (var key in data) {
    var formatted = v4667.input(data[key], options);
    if (formatted !== void 0) {
        map[\\"M\\"][key] = formatted;
    }
} return map; };
const v4682 = {};
v4682.constructor = v4681;
v4681.prototype = v4682;
var v4680 = v4681;
var v4684;
v4684 = function formatList(data, options) { var list = { L: [] }; for (var i = 0; i < data.length; i++) {
    list[\\"L\\"].push(v4667.input(data[i], options));
} return list; };
const v4685 = {};
v4685.constructor = v4684;
v4684.prototype = v4685;
var v4683 = v4684;
var v4687;
var v4689;
v4689 = function filterEmptySetValues(set) { var nonEmptyValues = []; var potentiallyEmptyTypes = { String: true, Binary: true, Number: false }; if (potentiallyEmptyTypes[set.type]) {
    for (var i = 0; i < set.values.length; i++) {
        if (set.values[i].length === 0) {
            continue;
        }
        nonEmptyValues.push(set.values[i]);
    }
    return nonEmptyValues;
} return set.values; };
const v4690 = {};
v4690.constructor = v4689;
v4689.prototype = v4690;
var v4688 = v4689;
v4687 = function formatSet(data, options) { options = options || {}; var values = data.values; if (options.convertEmptyValues) {
    values = v4688(data);
    if (values.length === 0) {
        return v4667.input(null);
    }
} var map = {}; switch (data.type) {
    case \\"String\\":
        map[\\"SS\\"] = values;
        break;
    case \\"Binary\\":
        map[\\"BS\\"] = values;
        break;
    case \\"Number\\": map[\\"NS\\"] = values.map(function (value) { return value.toString(); });
} return map; };
const v4691 = {};
v4691.constructor = v4687;
v4687.prototype = v4691;
var v4686 = v4687;
var v4692 = v4681;
v4668 = function convertInput(data, options) { options = options || {}; var type = v4669(data); if (type === \\"Object\\") {
    return v4680(data, options);
}
else if (type === \\"Array\\") {
    return v4683(data, options);
}
else if (type === \\"Set\\") {
    return v4686(data, options);
}
else if (type === \\"String\\") {
    if (data.length === 0 && options.convertEmptyValues) {
        return convertInput(null);
    }
    return { S: data };
}
else if (type === \\"Number\\" || type === \\"NumberValue\\") {
    return { N: data.toString() };
}
else if (type === \\"Binary\\") {
    if (data.length === 0 && options.convertEmptyValues) {
        return convertInput(null);
    }
    return { B: data };
}
else if (type === \\"Boolean\\") {
    return { BOOL: data };
}
else if (type === \\"null\\") {
    return { NULL: true };
}
else if (type !== \\"undefined\\" && type !== \\"Function\\") {
    return v4692(data, options);
} };
const v4693 = {};
v4693.constructor = v4668;
v4668.prototype = v4693;
v4667.input = v4668;
var v4694;
v4694 = function marshallItem(data, options) { return v4667.input(data, options).M; };
const v4695 = {};
v4695.constructor = v4694;
v4694.prototype = v4695;
v4667.marshall = v4694;
var v4696;
var v4698;
v4698 = function Set(list, options) { options = options || {}; this.wrapperName = \\"Set\\"; this.initialize(list, options.validate); };
const v4699 = {};
v4699.constructor = v4698;
var v4700;
v4700 = function (list, validate) { var self = this; self.values = [].concat(list); self.detectType(); if (validate) {
    self.validate();
} };
const v4701 = {};
v4701.constructor = v4700;
v4700.prototype = v4701;
v4699.initialize = v4700;
var v4702;
const v4704 = {};
v4704.String = \\"String\\";
v4704.Number = \\"Number\\";
v4704.NumberValue = \\"Number\\";
v4704.Binary = \\"Binary\\";
var v4703 = v4704;
var v4705 = v4670;
var v4706 = v3;
var v4707 = v40;
v4702 = function () { this.type = v4703[v4705(this.values[0])]; if (!this.type) {
    throw v4706.error(new v4707(), { code: \\"InvalidSetType\\", message: \\"Sets can contain string, number, or binary values\\" });
} };
const v4708 = {};
v4708.constructor = v4702;
v4702.prototype = v4708;
v4699.detectType = v4702;
var v4709;
var v4710 = v4704;
var v4711 = v4670;
var v4712 = v40;
v4709 = function () { var self = this; var length = self.values.length; var values = self.values; for (var i = 0; i < length; i++) {
    if (v4710[v4711(values[i])] !== self.type) {
        throw v4706.error(new v4712(), { code: \\"InvalidType\\", message: self.type + \\" Set contains \\" + v4711(values[i]) + \\" value\\" });
    }
} };
const v4713 = {};
v4713.constructor = v4709;
v4709.prototype = v4713;
v4699.validate = v4709;
var v4714;
v4714 = function () { var self = this; return self.values; };
const v4715 = {};
v4715.constructor = v4714;
v4714.prototype = v4715;
v4699.toJSON = v4714;
v4698.prototype = v4699;
v4698.__super__ = v31;
var v4697 = v4698;
var v4717;
var v4719;
v4719 = function NumberValue(value) { this.wrapperName = \\"NumberValue\\"; this.value = value.toString(); };
const v4720 = {};
v4720.constructor = v4719;
var v4721;
v4721 = function () { return this.toNumber(); };
const v4722 = {};
v4722.constructor = v4721;
v4721.prototype = v4722;
v4720.toJSON = v4721;
var v4723;
const v4725 = Number;
var v4724 = v4725;
v4723 = function () { return v4724(this.value); };
const v4726 = {};
v4726.constructor = v4723;
v4723.prototype = v4726;
v4720.toNumber = v4723;
var v4727;
v4727 = function () { return this.value; };
const v4728 = {};
v4728.constructor = v4727;
v4727.prototype = v4728;
v4720.toString = v4727;
v4719.prototype = v4720;
v4719.__super__ = v31;
var v4718 = v4719;
var v4729 = v4725;
v4717 = function convertNumber(value, wrapNumbers) { return wrapNumbers ? new v4718(value) : v4729(value); };
const v4730 = {};
v4730.constructor = v4717;
v4717.prototype = v4730;
var v4716 = v4717;
var v4731 = v4698;
var v4732 = v4698;
var v4733 = v4717;
v4696 = function convertOutput(data, options) { options = options || {}; var list, map, i; for (var type in data) {
    var values = data[type];
    if (type === \\"M\\") {
        map = {};
        for (var key in values) {
            map[key] = convertOutput(values[key], options);
        }
        return map;
    }
    else if (type === \\"L\\") {
        list = [];
        for (i = 0; i < values.length; i++) {
            list.push(convertOutput(values[i], options));
        }
        return list;
    }
    else if (type === \\"SS\\") {
        list = [];
        for (i = 0; i < values.length; i++) {
            list.push(values[i] + \\"\\");
        }
        return new v4697(list);
    }
    else if (type === \\"NS\\") {
        list = [];
        for (i = 0; i < values.length; i++) {
            list.push(v4716(values[i], options.wrapNumbers));
        }
        return new v4731(list);
    }
    else if (type === \\"BS\\") {
        list = [];
        for (i = 0; i < values.length; i++) {
            list.push(v41.toBuffer(values[i]));
        }
        return new v4732(list);
    }
    else if (type === \\"S\\") {
        return values + \\"\\";
    }
    else if (type === \\"N\\") {
        return v4733(values, options.wrapNumbers);
    }
    else if (type === \\"B\\") {
        return v41.toBuffer(values);
    }
    else if (type === \\"BOOL\\") {
        return (values === \\"true\\" || values === \\"TRUE\\" || values === true);
    }
    else if (type === \\"NULL\\") {
        return null;
    }
} };
const v4734 = {};
v4734.constructor = v4696;
v4696.prototype = v4734;
v4667.output = v4696;
var v4735;
v4735 = function unmarshall(data, options) { return v4667.output({ M: data }, options); };
const v4736 = {};
v4736.constructor = v4735;
v4735.prototype = v4736;
v4667.unmarshall = v4735;
v4483.Converter = v4667;
var v4737;
v4737 = function DocumentClient(options) { var self = this; self.options = options || {}; self.configure(self.options); };
const v4738 = {};
v4738.constructor = v4737;
var v4739;
v4739 = function configure(options) { var self = this; self.service = options.service; self.bindServiceObject(options); self.attrValue = options.attrValue = self.service.api.operations.putItem.input.members.Item.value.shape; };
const v4740 = {};
v4740.constructor = v4739;
v4739.prototype = v4740;
v4738.configure = v4739;
var v4741;
var v4742 = v2;
v4741 = function bindServiceObject(options) { var self = this; options = options || {}; if (!self.service) {
    self.service = new v4742.DynamoDB(options);
}
else {
    var config = v3.copy(self.service.config);
    self.service = new self.service.constructor.__super__(config);
    self.service.config.params = v3.merge(self.service.config.params || {}, options.params);
} };
const v4743 = {};
v4743.constructor = v4741;
v4741.prototype = v4743;
v4738.bindServiceObject = v4741;
var v4744;
v4744 = function (operation, params, callback) { var self = this; var request = self.service[operation](params); self.setupRequest(request); self.setupResponse(request); if (typeof callback === \\"function\\") {
    request.send(callback);
} return request; };
const v4745 = {};
v4745.constructor = v4744;
v4744.prototype = v4745;
v4738.makeServiceRequest = v4744;
const v4746 = {};
v4746.batchGet = \\"batchGetItem\\";
v4746.batchWrite = \\"batchWriteItem\\";
v4746.delete = \\"deleteItem\\";
v4746.get = \\"getItem\\";
v4746.put = \\"putItem\\";
v4746.query = \\"query\\";
v4746.scan = \\"scan\\";
v4746.update = \\"updateItem\\";
v4746.transactGet = \\"transactGetItems\\";
v4746.transactWrite = \\"transactWriteItems\\";
v4738.serviceClientOperationsMap = v4746;
var v4747;
v4747 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"batchGet\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4748 = {};
v4748.constructor = v4747;
v4747.prototype = v4748;
v4738.batchGet = v4747;
var v4749;
v4749 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"batchWrite\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4750 = {};
v4750.constructor = v4749;
v4749.prototype = v4750;
v4738.batchWrite = v4749;
var v4751;
v4751 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"delete\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4752 = {};
v4752.constructor = v4751;
v4751.prototype = v4752;
v4738.delete = v4751;
var v4753;
v4753 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"get\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4754 = {};
v4754.constructor = v4753;
v4753.prototype = v4754;
v4738.get = v4753;
var v4755;
v4755 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"put\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4756 = {};
v4756.constructor = v4755;
v4755.prototype = v4756;
v4738.put = v4755;
var v4757;
v4757 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"update\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4758 = {};
v4758.constructor = v4757;
v4757.prototype = v4758;
v4738.update = v4757;
var v4759;
v4759 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"scan\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4760 = {};
v4760.constructor = v4759;
v4759.prototype = v4760;
v4738.scan = v4759;
var v4761;
v4761 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"query\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4762 = {};
v4762.constructor = v4761;
v4761.prototype = v4762;
v4738.query = v4761;
var v4763;
v4763 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"transactWrite\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4764 = {};
v4764.constructor = v4763;
v4763.prototype = v4764;
v4738.transactWrite = v4763;
var v4765;
v4765 = function (params, callback) { var operation = this.serviceClientOperationsMap[\\"transactGet\\"]; return this.makeServiceRequest(operation, params, callback); };
const v4766 = {};
v4766.constructor = v4765;
v4765.prototype = v4766;
v4738.transactGet = v4765;
var v4767;
var v4768 = v4698;
v4767 = function (list, options) { options = options || {}; return new v4768(list, options); };
const v4769 = {};
v4769.constructor = v4767;
v4767.prototype = v4769;
v4738.createSet = v4767;
var v4770;
var v4772;
var v4773 = v282;
var v4774 = v282;
v4772 = function (options) { options = options || {}; this.attrValue = options.attrValue; this.convertEmptyValues = v4773(options.convertEmptyValues); this.wrapNumbers = v4774(options.wrapNumbers); };
const v4775 = {};
v4775.constructor = v4772;
var v4776;
v4776 = function (value, shape) { this.mode = \\"input\\"; return this.translate(value, shape); };
const v4777 = {};
v4777.constructor = v4776;
v4776.prototype = v4777;
v4775.translateInput = v4776;
var v4778;
v4778 = function (value, shape) { this.mode = \\"output\\"; return this.translate(value, shape); };
const v4779 = {};
v4779.constructor = v4778;
v4778.prototype = v4779;
v4775.translateOutput = v4778;
var v4780;
var v4781 = v4667;
v4780 = function (value, shape) { var self = this; if (!shape || value === undefined)
    return undefined; if (shape.shape === self.attrValue) {
    return v4781[self.mode](value, { convertEmptyValues: self.convertEmptyValues, wrapNumbers: self.wrapNumbers });
} switch (shape.type) {
    case \\"structure\\": return self.translateStructure(value, shape);
    case \\"map\\": return self.translateMap(value, shape);
    case \\"list\\": return self.translateList(value, shape);
    default: return self.translateScalar(value, shape);
} };
const v4782 = {};
v4782.constructor = v4780;
v4780.prototype = v4782;
v4775.translate = v4780;
var v4783;
var v4784 = v3;
v4783 = function (structure, shape) { var self = this; if (structure == null)
    return undefined; var struct = {}; v4784.each(structure, function (name, value) { var memberShape = shape.members[name]; if (memberShape) {
    var result = self.translate(value, memberShape);
    if (result !== undefined)
        struct[name] = result;
} }); return struct; };
const v4785 = {};
v4785.constructor = v4783;
v4783.prototype = v4785;
v4775.translateStructure = v4783;
var v4786;
var v4787 = v3;
v4786 = function (list, shape) { var self = this; if (list == null)
    return undefined; var out = []; v4787.arrayEach(list, function (value) { var result = self.translate(value, shape.member); if (result === undefined)
    out.push(null);
else
    out.push(result); }); return out; };
const v4788 = {};
v4788.constructor = v4786;
v4786.prototype = v4788;
v4775.translateList = v4786;
var v4789;
var v4790 = v3;
v4789 = function (map, shape) { var self = this; if (map == null)
    return undefined; var out = {}; v4790.each(map, function (key, value) { var result = self.translate(value, shape.value); if (result === undefined)
    out[key] = null;
else
    out[key] = result; }); return out; };
const v4791 = {};
v4791.constructor = v4789;
v4789.prototype = v4791;
v4775.translateMap = v4789;
var v4792;
v4792 = function (value, shape) { return shape.toType(value); };
const v4793 = {};
v4793.constructor = v4792;
v4792.prototype = v4793;
v4775.translateScalar = v4792;
v4772.prototype = v4775;
var v4771 = v4772;
v4770 = function () { return new v4771(this.options); };
const v4794 = {};
v4794.constructor = v4770;
v4770.prototype = v4794;
v4738.getTranslator = v4770;
var v4795;
v4795 = function setupRequest(request) { var self = this; var translator = self.getTranslator(); var operation = request.operation; var inputShape = request.service.api.operations[operation].input; request._events.validate.unshift(function (req) { req.rawParams = v3.copy(req.params); req.params = translator.translateInput(req.rawParams, inputShape); }); };
const v4796 = {};
v4796.constructor = v4795;
v4795.prototype = v4796;
v4738.setupRequest = v4795;
var v4797;
v4797 = function setupResponse(request) { var self = this; var translator = self.getTranslator(); var outputShape = self.service.api.operations[request.operation].output; request.on(\\"extractData\\", function (response) { response.data = translator.translateOutput(response.data, outputShape); }); var response = request.response; response.nextPage = function (cb) { var resp = this; var req = resp.request; var config; var service = req.service; var operation = req.operation; try {
    config = service.paginationConfig(operation, true);
}
catch (e) {
    resp.error = e;
} if (!resp.hasNextPage()) {
    if (cb)
        cb(resp.error, null);
    else if (resp.error)
        throw resp.error;
    return null;
} var params = v3.copy(req.rawParams); if (!resp.nextPageTokens) {
    return cb ? cb(null, null) : null;
}
else {
    var inputTokens = config.inputToken;
    if (typeof inputTokens === \\"string\\")
        inputTokens = [inputTokens];
    for (var i = 0; i < inputTokens.length; i++) {
        params[inputTokens[i]] = resp.nextPageTokens[i];
    }
    return self[operation](params, cb);
} }; };
const v4798 = {};
v4798.constructor = v4797;
v4797.prototype = v4798;
v4738.setupResponse = v4797;
v4737.prototype = v4738;
v4737.__super__ = v31;
v4483.DocumentClient = v4737;
v2.DynamoDB = v4483;
var v4799;
var v4800 = v299;
var v4801 = v31;
v4799 = function () { if (v4800 !== v4801) {
    return v4800.apply(this, arguments);
} };
const v4802 = Object.create(v309);
v4802.constructor = v4799;
const v4803 = {};
const v4804 = [];
var v4805;
var v4806 = v31;
var v4807 = v4802;
v4805 = function EVENTS_BUBBLE(event) { var baseClass = v4806.getPrototypeOf(v4807); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4808 = {};
v4808.constructor = v4805;
v4805.prototype = v4808;
v4804.push(v4805);
v4803.apiCallAttempt = v4804;
const v4809 = [];
var v4810;
v4810 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4490.getPrototypeOf(v4807); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4811 = {};
v4811.constructor = v4810;
v4810.prototype = v4811;
v4809.push(v4810);
v4803.apiCall = v4809;
v4802._events = v4803;
v4802.MONITOR_EVENTS_BUBBLE = v4805;
v4802.CALL_EVENTS_BUBBLE = v4810;
v4799.prototype = v4802;
v4799.__super__ = v299;
const v4812 = {};
v4812[\\"2012-08-10\\"] = null;
v4799.services = v4812;
const v4813 = [];
v4813.push(\\"2012-08-10\\");
v4799.apiVersions = v4813;
v4799.serviceIdentifier = \\"dynamodbstreams\\";
v2.DynamoDBStreams = v4799;
var v4814;
var v4815 = v299;
var v4816 = v31;
v4814 = function () { if (v4815 !== v4816) {
    return v4815.apply(this, arguments);
} };
const v4817 = Object.create(v309);
v4817.constructor = v4814;
const v4818 = {};
const v4819 = [];
var v4820;
var v4821 = v31;
var v4822 = v4817;
v4820 = function EVENTS_BUBBLE(event) { var baseClass = v4821.getPrototypeOf(v4822); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4823 = {};
v4823.constructor = v4820;
v4820.prototype = v4823;
v4819.push(v4820);
v4818.apiCallAttempt = v4819;
const v4824 = [];
var v4825;
v4825 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4806.getPrototypeOf(v4822); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4826 = {};
v4826.constructor = v4825;
v4825.prototype = v4826;
v4824.push(v4825);
v4818.apiCall = v4824;
v4817._events = v4818;
v4817.MONITOR_EVENTS_BUBBLE = v4820;
v4817.CALL_EVENTS_BUBBLE = v4825;
var v4827;
v4827 = function setupRequestListeners(request) { request.removeListener(\\"extractError\\", v797.EXTRACT_ERROR); request.addListener(\\"extractError\\", this.extractError); if (request.operation === \\"copySnapshot\\") {
    request.onAsync(\\"validate\\", this.buildCopySnapshotPresignedUrl);
} };
const v4828 = {};
v4828.constructor = v4827;
v4827.prototype = v4828;
v4817.setupRequestListeners = v4827;
var v4829;
v4829 = function buildCopySnapshotPresignedUrl(req, done) { if (req.params.PresignedUrl || req._subRequest) {
    return done();
} req.params = v3.copy(req.params); req.params.DestinationRegion = req.service.config.region; var config = v3.copy(req.service.config); delete config.endpoint; config.region = req.params.SourceRegion; var svc = new req.service.constructor(config); var newReq = svc[req.operation](req.params); newReq._subRequest = true; newReq.presign(function (err, url) { if (err)
    done(err);
else {
    req.params.PresignedUrl = url;
    done();
} }); };
const v4830 = {};
v4830.constructor = v4829;
v4829.prototype = v4830;
v4817.buildCopySnapshotPresignedUrl = v4829;
var v4831;
var v4832 = v40;
var v4833 = v40;
v4831 = function extractError(resp) { var httpResponse = resp.httpResponse; var data = new v937.Parser().parse(httpResponse.body.toString() || \\"\\"); if (data.Errors) {
    resp.error = v3.error(new v4832(), { code: data.Errors.Error.Code, message: data.Errors.Error.Message });
}
else {
    resp.error = v3.error(new v4833(), { code: httpResponse.statusCode, message: null });
} resp.error.requestId = data.RequestID || null; };
const v4834 = {};
v4834.constructor = v4831;
v4831.prototype = v4834;
v4817.extractError = v4831;
v4814.prototype = v4817;
v4814.__super__ = v299;
const v4835 = {};
v4835[\\"2013-06-15*\\"] = null;
v4835[\\"2013-10-15*\\"] = null;
v4835[\\"2014-02-01*\\"] = null;
v4835[\\"2014-05-01*\\"] = null;
v4835[\\"2014-06-15*\\"] = null;
v4835[\\"2014-09-01*\\"] = null;
v4835[\\"2014-10-01*\\"] = null;
v4835[\\"2015-03-01*\\"] = null;
v4835[\\"2015-04-15*\\"] = null;
v4835[\\"2015-10-01*\\"] = null;
v4835[\\"2016-04-01*\\"] = null;
v4835[\\"2016-09-15*\\"] = null;
v4835[\\"2016-11-15\\"] = null;
v4814.services = v4835;
const v4836 = [];
v4836.push(\\"2013-06-15*\\", \\"2013-10-15*\\", \\"2014-02-01*\\", \\"2014-05-01*\\", \\"2014-06-15*\\", \\"2014-09-01*\\", \\"2014-10-01*\\", \\"2015-03-01*\\", \\"2015-04-15*\\", \\"2015-10-01*\\", \\"2016-04-01*\\", \\"2016-09-15*\\", \\"2016-11-15\\");
v4814.apiVersions = v4836;
v4814.serviceIdentifier = \\"ec2\\";
v2.EC2 = v4814;
var v4837;
var v4838 = v299;
var v4839 = v31;
v4837 = function () { if (v4838 !== v4839) {
    return v4838.apply(this, arguments);
} };
const v4840 = Object.create(v309);
v4840.constructor = v4837;
const v4841 = {};
const v4842 = [];
var v4843;
var v4844 = v31;
var v4845 = v4840;
v4843 = function EVENTS_BUBBLE(event) { var baseClass = v4844.getPrototypeOf(v4845); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4846 = {};
v4846.constructor = v4843;
v4843.prototype = v4846;
v4842.push(v4843);
v4841.apiCallAttempt = v4842;
const v4847 = [];
var v4848;
v4848 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4821.getPrototypeOf(v4845); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4849 = {};
v4849.constructor = v4848;
v4848.prototype = v4849;
v4847.push(v4848);
v4841.apiCall = v4847;
v4840._events = v4841;
v4840.MONITOR_EVENTS_BUBBLE = v4843;
v4840.CALL_EVENTS_BUBBLE = v4848;
v4837.prototype = v4840;
v4837.__super__ = v299;
const v4850 = {};
v4850[\\"2015-09-21\\"] = null;
v4837.services = v4850;
const v4851 = [];
v4851.push(\\"2015-09-21\\");
v4837.apiVersions = v4851;
v4837.serviceIdentifier = \\"ecr\\";
v2.ECR = v4837;
var v4852;
var v4853 = v299;
var v4854 = v31;
v4852 = function () { if (v4853 !== v4854) {
    return v4853.apply(this, arguments);
} };
const v4855 = Object.create(v309);
v4855.constructor = v4852;
const v4856 = {};
const v4857 = [];
var v4858;
var v4859 = v31;
var v4860 = v4855;
v4858 = function EVENTS_BUBBLE(event) { var baseClass = v4859.getPrototypeOf(v4860); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4861 = {};
v4861.constructor = v4858;
v4858.prototype = v4861;
v4857.push(v4858);
v4856.apiCallAttempt = v4857;
const v4862 = [];
var v4863;
v4863 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4844.getPrototypeOf(v4860); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4864 = {};
v4864.constructor = v4863;
v4863.prototype = v4864;
v4862.push(v4863);
v4856.apiCall = v4862;
v4855._events = v4856;
v4855.MONITOR_EVENTS_BUBBLE = v4858;
v4855.CALL_EVENTS_BUBBLE = v4863;
v4852.prototype = v4855;
v4852.__super__ = v299;
const v4865 = {};
v4865[\\"2014-11-13\\"] = null;
v4852.services = v4865;
const v4866 = [];
v4866.push(\\"2014-11-13\\");
v4852.apiVersions = v4866;
v4852.serviceIdentifier = \\"ecs\\";
v2.ECS = v4852;
var v4867;
var v4868 = v299;
var v4869 = v31;
v4867 = function () { if (v4868 !== v4869) {
    return v4868.apply(this, arguments);
} };
const v4870 = Object.create(v309);
v4870.constructor = v4867;
const v4871 = {};
const v4872 = [];
var v4873;
var v4874 = v31;
var v4875 = v4870;
v4873 = function EVENTS_BUBBLE(event) { var baseClass = v4874.getPrototypeOf(v4875); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4876 = {};
v4876.constructor = v4873;
v4873.prototype = v4876;
v4872.push(v4873);
v4871.apiCallAttempt = v4872;
const v4877 = [];
var v4878;
v4878 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4859.getPrototypeOf(v4875); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4879 = {};
v4879.constructor = v4878;
v4878.prototype = v4879;
v4877.push(v4878);
v4871.apiCall = v4877;
v4870._events = v4871;
v4870.MONITOR_EVENTS_BUBBLE = v4873;
v4870.CALL_EVENTS_BUBBLE = v4878;
v4867.prototype = v4870;
v4867.__super__ = v299;
const v4880 = {};
v4880[\\"2015-02-01\\"] = null;
v4867.services = v4880;
const v4881 = [];
v4881.push(\\"2015-02-01\\");
v4867.apiVersions = v4881;
v4867.serviceIdentifier = \\"efs\\";
v2.EFS = v4867;
var v4882;
var v4883 = v299;
var v4884 = v31;
v4882 = function () { if (v4883 !== v4884) {
    return v4883.apply(this, arguments);
} };
const v4885 = Object.create(v309);
v4885.constructor = v4882;
const v4886 = {};
const v4887 = [];
var v4888;
var v4889 = v31;
var v4890 = v4885;
v4888 = function EVENTS_BUBBLE(event) { var baseClass = v4889.getPrototypeOf(v4890); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4891 = {};
v4891.constructor = v4888;
v4888.prototype = v4891;
v4887.push(v4888);
v4886.apiCallAttempt = v4887;
const v4892 = [];
var v4893;
v4893 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4874.getPrototypeOf(v4890); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4894 = {};
v4894.constructor = v4893;
v4893.prototype = v4894;
v4892.push(v4893);
v4886.apiCall = v4892;
v4885._events = v4886;
v4885.MONITOR_EVENTS_BUBBLE = v4888;
v4885.CALL_EVENTS_BUBBLE = v4893;
v4882.prototype = v4885;
v4882.__super__ = v299;
const v4895 = {};
v4895[\\"2012-11-15*\\"] = null;
v4895[\\"2014-03-24*\\"] = null;
v4895[\\"2014-07-15*\\"] = null;
v4895[\\"2014-09-30*\\"] = null;
v4895[\\"2015-02-02\\"] = null;
v4882.services = v4895;
const v4896 = [];
v4896.push(\\"2012-11-15*\\", \\"2014-03-24*\\", \\"2014-07-15*\\", \\"2014-09-30*\\", \\"2015-02-02\\");
v4882.apiVersions = v4896;
v4882.serviceIdentifier = \\"elasticache\\";
v2.ElastiCache = v4882;
var v4897;
var v4898 = v299;
var v4899 = v31;
v4897 = function () { if (v4898 !== v4899) {
    return v4898.apply(this, arguments);
} };
const v4900 = Object.create(v309);
v4900.constructor = v4897;
const v4901 = {};
const v4902 = [];
var v4903;
var v4904 = v31;
var v4905 = v4900;
v4903 = function EVENTS_BUBBLE(event) { var baseClass = v4904.getPrototypeOf(v4905); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4906 = {};
v4906.constructor = v4903;
v4903.prototype = v4906;
v4902.push(v4903);
v4901.apiCallAttempt = v4902;
const v4907 = [];
var v4908;
v4908 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4889.getPrototypeOf(v4905); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4909 = {};
v4909.constructor = v4908;
v4908.prototype = v4909;
v4907.push(v4908);
v4901.apiCall = v4907;
v4900._events = v4901;
v4900.MONITOR_EVENTS_BUBBLE = v4903;
v4900.CALL_EVENTS_BUBBLE = v4908;
v4897.prototype = v4900;
v4897.__super__ = v299;
const v4910 = {};
v4910[\\"2010-12-01\\"] = null;
v4897.services = v4910;
const v4911 = [];
v4911.push(\\"2010-12-01\\");
v4897.apiVersions = v4911;
v4897.serviceIdentifier = \\"elasticbeanstalk\\";
v2.ElasticBeanstalk = v4897;
var v4912;
var v4913 = v299;
var v4914 = v31;
v4912 = function () { if (v4913 !== v4914) {
    return v4913.apply(this, arguments);
} };
const v4915 = Object.create(v309);
v4915.constructor = v4912;
const v4916 = {};
const v4917 = [];
var v4918;
var v4919 = v31;
var v4920 = v4915;
v4918 = function EVENTS_BUBBLE(event) { var baseClass = v4919.getPrototypeOf(v4920); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4921 = {};
v4921.constructor = v4918;
v4918.prototype = v4921;
v4917.push(v4918);
v4916.apiCallAttempt = v4917;
const v4922 = [];
var v4923;
v4923 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4904.getPrototypeOf(v4920); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4924 = {};
v4924.constructor = v4923;
v4923.prototype = v4924;
v4922.push(v4923);
v4916.apiCall = v4922;
v4915._events = v4916;
v4915.MONITOR_EVENTS_BUBBLE = v4918;
v4915.CALL_EVENTS_BUBBLE = v4923;
v4912.prototype = v4915;
v4912.__super__ = v299;
const v4925 = {};
v4925[\\"2012-06-01\\"] = null;
v4912.services = v4925;
const v4926 = [];
v4926.push(\\"2012-06-01\\");
v4912.apiVersions = v4926;
v4912.serviceIdentifier = \\"elb\\";
v2.ELB = v4912;
var v4927;
var v4928 = v299;
var v4929 = v31;
v4927 = function () { if (v4928 !== v4929) {
    return v4928.apply(this, arguments);
} };
const v4930 = Object.create(v309);
v4930.constructor = v4927;
const v4931 = {};
const v4932 = [];
var v4933;
var v4934 = v31;
var v4935 = v4930;
v4933 = function EVENTS_BUBBLE(event) { var baseClass = v4934.getPrototypeOf(v4935); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4936 = {};
v4936.constructor = v4933;
v4933.prototype = v4936;
v4932.push(v4933);
v4931.apiCallAttempt = v4932;
const v4937 = [];
var v4938;
v4938 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4919.getPrototypeOf(v4935); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4939 = {};
v4939.constructor = v4938;
v4938.prototype = v4939;
v4937.push(v4938);
v4931.apiCall = v4937;
v4930._events = v4931;
v4930.MONITOR_EVENTS_BUBBLE = v4933;
v4930.CALL_EVENTS_BUBBLE = v4938;
v4927.prototype = v4930;
v4927.__super__ = v299;
const v4940 = {};
v4940[\\"2015-12-01\\"] = null;
v4927.services = v4940;
const v4941 = [];
v4941.push(\\"2015-12-01\\");
v4927.apiVersions = v4941;
v4927.serviceIdentifier = \\"elbv2\\";
v2.ELBv2 = v4927;
var v4942;
var v4943 = v299;
var v4944 = v31;
v4942 = function () { if (v4943 !== v4944) {
    return v4943.apply(this, arguments);
} };
const v4945 = Object.create(v309);
v4945.constructor = v4942;
const v4946 = {};
const v4947 = [];
var v4948;
var v4949 = v31;
var v4950 = v4945;
v4948 = function EVENTS_BUBBLE(event) { var baseClass = v4949.getPrototypeOf(v4950); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4951 = {};
v4951.constructor = v4948;
v4948.prototype = v4951;
v4947.push(v4948);
v4946.apiCallAttempt = v4947;
const v4952 = [];
var v4953;
v4953 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4934.getPrototypeOf(v4950); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4954 = {};
v4954.constructor = v4953;
v4953.prototype = v4954;
v4952.push(v4953);
v4946.apiCall = v4952;
v4945._events = v4946;
v4945.MONITOR_EVENTS_BUBBLE = v4948;
v4945.CALL_EVENTS_BUBBLE = v4953;
v4942.prototype = v4945;
v4942.__super__ = v299;
const v4955 = {};
v4955[\\"2009-03-31\\"] = null;
v4942.services = v4955;
const v4956 = [];
v4956.push(\\"2009-03-31\\");
v4942.apiVersions = v4956;
v4942.serviceIdentifier = \\"emr\\";
v2.EMR = v4942;
var v4957;
var v4958 = v299;
var v4959 = v31;
v4957 = function () { if (v4958 !== v4959) {
    return v4958.apply(this, arguments);
} };
const v4960 = Object.create(v309);
v4960.constructor = v4957;
const v4961 = {};
const v4962 = [];
var v4963;
var v4964 = v31;
var v4965 = v4960;
v4963 = function EVENTS_BUBBLE(event) { var baseClass = v4964.getPrototypeOf(v4965); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4966 = {};
v4966.constructor = v4963;
v4963.prototype = v4966;
v4962.push(v4963);
v4961.apiCallAttempt = v4962;
const v4967 = [];
var v4968;
v4968 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4949.getPrototypeOf(v4965); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4969 = {};
v4969.constructor = v4968;
v4968.prototype = v4969;
v4967.push(v4968);
v4961.apiCall = v4967;
v4960._events = v4961;
v4960.MONITOR_EVENTS_BUBBLE = v4963;
v4960.CALL_EVENTS_BUBBLE = v4968;
v4957.prototype = v4960;
v4957.__super__ = v299;
const v4970 = {};
v4970[\\"2015-01-01\\"] = null;
v4957.services = v4970;
const v4971 = [];
v4971.push(\\"2015-01-01\\");
v4957.apiVersions = v4971;
v4957.serviceIdentifier = \\"es\\";
v2.ES = v4957;
var v4972;
var v4973 = v299;
var v4974 = v31;
v4972 = function () { if (v4973 !== v4974) {
    return v4973.apply(this, arguments);
} };
const v4975 = Object.create(v309);
v4975.constructor = v4972;
const v4976 = {};
const v4977 = [];
var v4978;
var v4979 = v31;
var v4980 = v4975;
v4978 = function EVENTS_BUBBLE(event) { var baseClass = v4979.getPrototypeOf(v4980); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4981 = {};
v4981.constructor = v4978;
v4978.prototype = v4981;
v4977.push(v4978);
v4976.apiCallAttempt = v4977;
const v4982 = [];
var v4983;
v4983 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4964.getPrototypeOf(v4980); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4984 = {};
v4984.constructor = v4983;
v4983.prototype = v4984;
v4982.push(v4983);
v4976.apiCall = v4982;
v4975._events = v4976;
v4975.MONITOR_EVENTS_BUBBLE = v4978;
v4975.CALL_EVENTS_BUBBLE = v4983;
v4972.prototype = v4975;
v4972.__super__ = v299;
const v4985 = {};
v4985[\\"2012-09-25\\"] = null;
v4972.services = v4985;
const v4986 = [];
v4986.push(\\"2012-09-25\\");
v4972.apiVersions = v4986;
v4972.serviceIdentifier = \\"elastictranscoder\\";
v2.ElasticTranscoder = v4972;
var v4987;
var v4988 = v299;
var v4989 = v31;
v4987 = function () { if (v4988 !== v4989) {
    return v4988.apply(this, arguments);
} };
const v4990 = Object.create(v309);
v4990.constructor = v4987;
const v4991 = {};
const v4992 = [];
var v4993;
var v4994 = v31;
var v4995 = v4990;
v4993 = function EVENTS_BUBBLE(event) { var baseClass = v4994.getPrototypeOf(v4995); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v4996 = {};
v4996.constructor = v4993;
v4993.prototype = v4996;
v4992.push(v4993);
v4991.apiCallAttempt = v4992;
const v4997 = [];
var v4998;
v4998 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4979.getPrototypeOf(v4995); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v4999 = {};
v4999.constructor = v4998;
v4998.prototype = v4999;
v4997.push(v4998);
v4991.apiCall = v4997;
v4990._events = v4991;
v4990.MONITOR_EVENTS_BUBBLE = v4993;
v4990.CALL_EVENTS_BUBBLE = v4998;
v4987.prototype = v4990;
v4987.__super__ = v299;
const v5000 = {};
v5000[\\"2015-08-04\\"] = null;
v4987.services = v5000;
const v5001 = [];
v5001.push(\\"2015-08-04\\");
v4987.apiVersions = v5001;
v4987.serviceIdentifier = \\"firehose\\";
v2.Firehose = v4987;
var v5002;
var v5003 = v299;
var v5004 = v31;
v5002 = function () { if (v5003 !== v5004) {
    return v5003.apply(this, arguments);
} };
const v5005 = Object.create(v309);
v5005.constructor = v5002;
const v5006 = {};
const v5007 = [];
var v5008;
var v5009 = v31;
var v5010 = v5005;
v5008 = function EVENTS_BUBBLE(event) { var baseClass = v5009.getPrototypeOf(v5010); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5011 = {};
v5011.constructor = v5008;
v5008.prototype = v5011;
v5007.push(v5008);
v5006.apiCallAttempt = v5007;
const v5012 = [];
var v5013;
v5013 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v4994.getPrototypeOf(v5010); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5014 = {};
v5014.constructor = v5013;
v5013.prototype = v5014;
v5012.push(v5013);
v5006.apiCall = v5012;
v5005._events = v5006;
v5005.MONITOR_EVENTS_BUBBLE = v5008;
v5005.CALL_EVENTS_BUBBLE = v5013;
v5002.prototype = v5005;
v5002.__super__ = v299;
const v5015 = {};
v5015[\\"2015-10-01\\"] = null;
v5002.services = v5015;
const v5016 = [];
v5016.push(\\"2015-10-01\\");
v5002.apiVersions = v5016;
v5002.serviceIdentifier = \\"gamelift\\";
v2.GameLift = v5002;
var v5017;
var v5018 = v299;
var v5019 = v31;
v5017 = function () { if (v5018 !== v5019) {
    return v5018.apply(this, arguments);
} };
const v5020 = Object.create(v309);
v5020.constructor = v5017;
const v5021 = {};
const v5022 = [];
var v5023;
var v5024 = v31;
var v5025 = v5020;
v5023 = function EVENTS_BUBBLE(event) { var baseClass = v5024.getPrototypeOf(v5025); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5026 = {};
v5026.constructor = v5023;
v5023.prototype = v5026;
v5022.push(v5023);
v5021.apiCallAttempt = v5022;
const v5027 = [];
var v5028;
v5028 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5009.getPrototypeOf(v5025); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5029 = {};
v5029.constructor = v5028;
v5028.prototype = v5029;
v5027.push(v5028);
v5021.apiCall = v5027;
v5020._events = v5021;
v5020.MONITOR_EVENTS_BUBBLE = v5023;
v5020.CALL_EVENTS_BUBBLE = v5028;
var v5030;
var v5031 = v33;
v5030 = function setupRequestListeners(request) { if (v5031.isArray(request._events.validate)) {
    request._events.validate.unshift(this.validateAccountId);
}
else {
    request.on(\\"validate\\", this.validateAccountId);
} request.removeListener(\\"afterBuild\\", v428.COMPUTE_SHA256); request.on(\\"build\\", this.addGlacierApiVersion); request.on(\\"build\\", this.addTreeHashHeaders); };
const v5032 = {};
v5032.constructor = v5030;
v5030.prototype = v5032;
v5020.setupRequestListeners = v5030;
var v5033;
v5033 = function validateAccountId(request) { if (request.params.accountId !== undefined)
    return; request.params = v3.copy(request.params); request.params.accountId = \\"-\\"; };
const v5034 = {};
v5034.constructor = v5033;
v5033.prototype = v5034;
v5020.validateAccountId = v5033;
var v5035;
v5035 = function addGlacierApiVersion(request) { var version = request.service.api.apiVersion; request.httpRequest.headers[\\"x-amz-glacier-version\\"] = version; };
const v5036 = {};
v5036.constructor = v5035;
v5035.prototype = v5036;
v5020.addGlacierApiVersion = v5035;
var v5037;
v5037 = function addTreeHashHeaders(request) { if (request.params.body === undefined)
    return; var hashes = request.service.computeChecksums(request.params.body); request.httpRequest.headers[\\"X-Amz-Content-Sha256\\"] = hashes.linearHash; if (!request.httpRequest.headers[\\"x-amz-sha256-tree-hash\\"]) {
    request.httpRequest.headers[\\"x-amz-sha256-tree-hash\\"] = hashes.treeHash;
} };
const v5038 = {};
v5038.constructor = v5037;
v5037.prototype = v5038;
v5020.addTreeHashHeaders = v5037;
var v5039;
var v5040 = v787;
v5039 = function computeChecksums(data) { if (!v3.Buffer.isBuffer(data))
    data = v41.toBuffer(data); var mb = 1024 * 1024; var hashes = []; var hash = v91.createHash(\\"sha256\\"); for (var i = 0; i < data.length; i += mb) {
    var chunk = data.slice(i, v5040.min(i + mb, data.length));
    hash.update(chunk);
    hashes.push(v91.sha256(chunk));
} return { linearHash: hash.digest(\\"hex\\"), treeHash: this.buildHashTree(hashes) }; };
const v5041 = {};
v5041.constructor = v5039;
v5039.prototype = v5041;
v5020.computeChecksums = v5039;
var v5042;
v5042 = function buildHashTree(hashes) { while (hashes.length > 1) {
    var tmpHashes = [];
    for (var i = 0; i < hashes.length; i += 2) {
        if (hashes[i + 1]) {
            var tmpHash = v41.alloc(64);
            tmpHash.write(hashes[i], 0, 32, \\"binary\\");
            tmpHash.write(hashes[i + 1], 32, 32, \\"binary\\");
            tmpHashes.push(v91.sha256(tmpHash));
        }
        else {
            tmpHashes.push(hashes[i]);
        }
    }
    hashes = tmpHashes;
} return v91.toHex(hashes[0]); };
const v5043 = {};
v5043.constructor = v5042;
v5042.prototype = v5043;
v5020.buildHashTree = v5042;
v5017.prototype = v5020;
v5017.__super__ = v299;
const v5044 = {};
v5044[\\"2012-06-01\\"] = null;
v5017.services = v5044;
const v5045 = [];
v5045.push(\\"2012-06-01\\");
v5017.apiVersions = v5045;
v5017.serviceIdentifier = \\"glacier\\";
v2.Glacier = v5017;
var v5046;
var v5047 = v299;
var v5048 = v31;
v5046 = function () { if (v5047 !== v5048) {
    return v5047.apply(this, arguments);
} };
const v5049 = Object.create(v309);
v5049.constructor = v5046;
const v5050 = {};
const v5051 = [];
var v5052;
var v5053 = v31;
var v5054 = v5049;
v5052 = function EVENTS_BUBBLE(event) { var baseClass = v5053.getPrototypeOf(v5054); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5055 = {};
v5055.constructor = v5052;
v5052.prototype = v5055;
v5051.push(v5052);
v5050.apiCallAttempt = v5051;
const v5056 = [];
var v5057;
v5057 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5024.getPrototypeOf(v5054); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5058 = {};
v5058.constructor = v5057;
v5057.prototype = v5058;
v5056.push(v5057);
v5050.apiCall = v5056;
v5049._events = v5050;
v5049.MONITOR_EVENTS_BUBBLE = v5052;
v5049.CALL_EVENTS_BUBBLE = v5057;
v5046.prototype = v5049;
v5046.__super__ = v299;
const v5059 = {};
v5059[\\"2016-08-04\\"] = null;
v5046.services = v5059;
const v5060 = [];
v5060.push(\\"2016-08-04\\");
v5046.apiVersions = v5060;
v5046.serviceIdentifier = \\"health\\";
v2.Health = v5046;
var v5061;
var v5062 = v299;
var v5063 = v31;
v5061 = function () { if (v5062 !== v5063) {
    return v5062.apply(this, arguments);
} };
const v5064 = Object.create(v309);
v5064.constructor = v5061;
const v5065 = {};
const v5066 = [];
var v5067;
var v5068 = v31;
var v5069 = v5064;
v5067 = function EVENTS_BUBBLE(event) { var baseClass = v5068.getPrototypeOf(v5069); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5070 = {};
v5070.constructor = v5067;
v5067.prototype = v5070;
v5066.push(v5067);
v5065.apiCallAttempt = v5066;
const v5071 = [];
var v5072;
v5072 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5053.getPrototypeOf(v5069); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5073 = {};
v5073.constructor = v5072;
v5072.prototype = v5073;
v5071.push(v5072);
v5065.apiCall = v5071;
v5064._events = v5065;
v5064.MONITOR_EVENTS_BUBBLE = v5067;
v5064.CALL_EVENTS_BUBBLE = v5072;
v5061.prototype = v5064;
v5061.__super__ = v299;
const v5074 = {};
v5074[\\"2010-05-08\\"] = null;
v5061.services = v5074;
const v5075 = [];
v5075.push(\\"2010-05-08\\");
v5061.apiVersions = v5075;
v5061.serviceIdentifier = \\"iam\\";
v2.IAM = v5061;
var v5076;
var v5077 = v299;
var v5078 = v31;
v5076 = function () { if (v5077 !== v5078) {
    return v5077.apply(this, arguments);
} };
const v5079 = Object.create(v309);
v5079.constructor = v5076;
const v5080 = {};
const v5081 = [];
var v5082;
var v5083 = v31;
var v5084 = v5079;
v5082 = function EVENTS_BUBBLE(event) { var baseClass = v5083.getPrototypeOf(v5084); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5085 = {};
v5085.constructor = v5082;
v5082.prototype = v5085;
v5081.push(v5082);
v5080.apiCallAttempt = v5081;
const v5086 = [];
var v5087;
v5087 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5068.getPrototypeOf(v5084); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5088 = {};
v5088.constructor = v5087;
v5087.prototype = v5088;
v5086.push(v5087);
v5080.apiCall = v5086;
v5079._events = v5080;
v5079.MONITOR_EVENTS_BUBBLE = v5082;
v5079.CALL_EVENTS_BUBBLE = v5087;
v5076.prototype = v5079;
v5076.__super__ = v299;
const v5089 = {};
v5089[\\"2010-06-01\\"] = null;
v5076.services = v5089;
const v5090 = [];
v5090.push(\\"2010-06-01\\");
v5076.apiVersions = v5090;
v5076.serviceIdentifier = \\"importexport\\";
v2.ImportExport = v5076;
var v5091;
var v5092 = v299;
var v5093 = v31;
v5091 = function () { if (v5092 !== v5093) {
    return v5092.apply(this, arguments);
} };
const v5094 = Object.create(v309);
v5094.constructor = v5091;
const v5095 = {};
const v5096 = [];
var v5097;
var v5098 = v31;
var v5099 = v5094;
v5097 = function EVENTS_BUBBLE(event) { var baseClass = v5098.getPrototypeOf(v5099); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5100 = {};
v5100.constructor = v5097;
v5097.prototype = v5100;
v5096.push(v5097);
v5095.apiCallAttempt = v5096;
const v5101 = [];
var v5102;
v5102 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5083.getPrototypeOf(v5099); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5103 = {};
v5103.constructor = v5102;
v5102.prototype = v5103;
v5101.push(v5102);
v5095.apiCall = v5101;
v5094._events = v5095;
v5094.MONITOR_EVENTS_BUBBLE = v5097;
v5094.CALL_EVENTS_BUBBLE = v5102;
v5091.prototype = v5094;
v5091.__super__ = v299;
const v5104 = {};
v5104[\\"2015-08-18*\\"] = null;
v5104[\\"2016-02-16\\"] = null;
v5091.services = v5104;
const v5105 = [];
v5105.push(\\"2015-08-18*\\", \\"2016-02-16\\");
v5091.apiVersions = v5105;
v5091.serviceIdentifier = \\"inspector\\";
v2.Inspector = v5091;
var v5106;
var v5107 = v299;
var v5108 = v31;
v5106 = function () { if (v5107 !== v5108) {
    return v5107.apply(this, arguments);
} };
const v5109 = Object.create(v309);
v5109.constructor = v5106;
const v5110 = {};
const v5111 = [];
var v5112;
var v5113 = v31;
var v5114 = v5109;
v5112 = function EVENTS_BUBBLE(event) { var baseClass = v5113.getPrototypeOf(v5114); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5115 = {};
v5115.constructor = v5112;
v5112.prototype = v5115;
v5111.push(v5112);
v5110.apiCallAttempt = v5111;
const v5116 = [];
var v5117;
v5117 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5098.getPrototypeOf(v5114); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5118 = {};
v5118.constructor = v5117;
v5117.prototype = v5118;
v5116.push(v5117);
v5110.apiCall = v5116;
v5109._events = v5110;
v5109.MONITOR_EVENTS_BUBBLE = v5112;
v5109.CALL_EVENTS_BUBBLE = v5117;
v5106.prototype = v5109;
v5106.__super__ = v299;
const v5119 = {};
v5119[\\"2015-05-28\\"] = null;
v5106.services = v5119;
const v5120 = [];
v5120.push(\\"2015-05-28\\");
v5106.apiVersions = v5120;
v5106.serviceIdentifier = \\"iot\\";
v2.Iot = v5106;
var v5121;
var v5122 = v299;
var v5123 = v31;
v5121 = function () { if (v5122 !== v5123) {
    return v5122.apply(this, arguments);
} };
const v5124 = Object.create(v309);
v5124.constructor = v5121;
const v5125 = {};
const v5126 = [];
var v5127;
var v5128 = v31;
var v5129 = v5124;
v5127 = function EVENTS_BUBBLE(event) { var baseClass = v5128.getPrototypeOf(v5129); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5130 = {};
v5130.constructor = v5127;
v5127.prototype = v5130;
v5126.push(v5127);
v5125.apiCallAttempt = v5126;
const v5131 = [];
var v5132;
v5132 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5113.getPrototypeOf(v5129); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5133 = {};
v5133.constructor = v5132;
v5132.prototype = v5133;
v5131.push(v5132);
v5125.apiCall = v5131;
v5124._events = v5125;
v5124.MONITOR_EVENTS_BUBBLE = v5127;
v5124.CALL_EVENTS_BUBBLE = v5132;
var v5134;
var v5135 = v40;
v5134 = function validateService() { if (!this.config.endpoint || this.config.endpoint.indexOf(\\"{\\") >= 0) {
    var msg = \\"AWS.IotData requires an explicit \\" + \\"\`endpoint' configuration option.\\";
    throw v3.error(new v5135(), { name: \\"InvalidEndpoint\\", message: msg });
} };
const v5136 = {};
v5136.constructor = v5134;
v5134.prototype = v5136;
v5124.validateService = v5134;
var v5137;
const v5139 = [];
v5139.push(\\"deleteThingShadow\\", \\"getThingShadow\\", \\"updateThingShadow\\");
var v5138 = v5139;
v5137 = function setupRequestListeners(request) { request.addListener(\\"validateResponse\\", this.validateResponseBody); if (v5138.indexOf(request.operation) > -1) {
    request.addListener(\\"extractData\\", v3.convertPayloadToString);
} };
const v5140 = {};
v5140.constructor = v5137;
v5137.prototype = v5140;
v5124.setupRequestListeners = v5137;
var v5141;
v5141 = function validateResponseBody(resp) { var body = resp.httpResponse.body.toString() || \\"{}\\"; var bodyCheck = body.trim(); if (!bodyCheck || bodyCheck.charAt(0) !== \\"{\\") {
    resp.httpResponse.body = \\"\\";
} };
const v5142 = {};
v5142.constructor = v5141;
v5141.prototype = v5142;
v5124.validateResponseBody = v5141;
v5121.prototype = v5124;
v5121.__super__ = v299;
const v5143 = {};
v5143[\\"2015-05-28\\"] = null;
v5121.services = v5143;
const v5144 = [];
v5144.push(\\"2015-05-28\\");
v5121.apiVersions = v5144;
v5121.serviceIdentifier = \\"iotdata\\";
v2.IotData = v5121;
var v5145;
var v5146 = v299;
var v5147 = v31;
v5145 = function () { if (v5146 !== v5147) {
    return v5146.apply(this, arguments);
} };
const v5148 = Object.create(v309);
v5148.constructor = v5145;
const v5149 = {};
const v5150 = [];
var v5151;
var v5152 = v31;
var v5153 = v5148;
v5151 = function EVENTS_BUBBLE(event) { var baseClass = v5152.getPrototypeOf(v5153); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5154 = {};
v5154.constructor = v5151;
v5151.prototype = v5154;
v5150.push(v5151);
v5149.apiCallAttempt = v5150;
const v5155 = [];
var v5156;
v5156 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5128.getPrototypeOf(v5153); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5157 = {};
v5157.constructor = v5156;
v5156.prototype = v5157;
v5155.push(v5156);
v5149.apiCall = v5155;
v5148._events = v5149;
v5148.MONITOR_EVENTS_BUBBLE = v5151;
v5148.CALL_EVENTS_BUBBLE = v5156;
v5145.prototype = v5148;
v5145.__super__ = v299;
const v5158 = {};
v5158[\\"2013-12-02\\"] = null;
v5145.services = v5158;
const v5159 = [];
v5159.push(\\"2013-12-02\\");
v5145.apiVersions = v5159;
v5145.serviceIdentifier = \\"kinesis\\";
v2.Kinesis = v5145;
var v5160;
var v5161 = v299;
var v5162 = v31;
v5160 = function () { if (v5161 !== v5162) {
    return v5161.apply(this, arguments);
} };
const v5163 = Object.create(v309);
v5163.constructor = v5160;
const v5164 = {};
const v5165 = [];
var v5166;
var v5167 = v31;
var v5168 = v5163;
v5166 = function EVENTS_BUBBLE(event) { var baseClass = v5167.getPrototypeOf(v5168); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5169 = {};
v5169.constructor = v5166;
v5166.prototype = v5169;
v5165.push(v5166);
v5164.apiCallAttempt = v5165;
const v5170 = [];
var v5171;
v5171 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5152.getPrototypeOf(v5168); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5172 = {};
v5172.constructor = v5171;
v5171.prototype = v5172;
v5170.push(v5171);
v5164.apiCall = v5170;
v5163._events = v5164;
v5163.MONITOR_EVENTS_BUBBLE = v5166;
v5163.CALL_EVENTS_BUBBLE = v5171;
v5160.prototype = v5163;
v5160.__super__ = v299;
const v5173 = {};
v5173[\\"2015-08-14\\"] = null;
v5160.services = v5173;
const v5174 = [];
v5174.push(\\"2015-08-14\\");
v5160.apiVersions = v5174;
v5160.serviceIdentifier = \\"kinesisanalytics\\";
v2.KinesisAnalytics = v5160;
var v5175;
var v5176 = v299;
var v5177 = v31;
v5175 = function () { if (v5176 !== v5177) {
    return v5176.apply(this, arguments);
} };
const v5178 = Object.create(v309);
v5178.constructor = v5175;
const v5179 = {};
const v5180 = [];
var v5181;
var v5182 = v31;
var v5183 = v5178;
v5181 = function EVENTS_BUBBLE(event) { var baseClass = v5182.getPrototypeOf(v5183); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5184 = {};
v5184.constructor = v5181;
v5181.prototype = v5184;
v5180.push(v5181);
v5179.apiCallAttempt = v5180;
const v5185 = [];
var v5186;
v5186 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5167.getPrototypeOf(v5183); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5187 = {};
v5187.constructor = v5186;
v5186.prototype = v5187;
v5185.push(v5186);
v5179.apiCall = v5185;
v5178._events = v5179;
v5178.MONITOR_EVENTS_BUBBLE = v5181;
v5178.CALL_EVENTS_BUBBLE = v5186;
v5175.prototype = v5178;
v5175.__super__ = v299;
const v5188 = {};
v5188[\\"2014-11-01\\"] = null;
v5175.services = v5188;
const v5189 = [];
v5189.push(\\"2014-11-01\\");
v5175.apiVersions = v5189;
v5175.serviceIdentifier = \\"kms\\";
v2.KMS = v5175;
var v5190;
var v5191 = v299;
var v5192 = v31;
v5190 = function () { if (v5191 !== v5192) {
    return v5191.apply(this, arguments);
} };
const v5193 = Object.create(v309);
v5193.constructor = v5190;
const v5194 = {};
const v5195 = [];
var v5196;
var v5197 = v31;
var v5198 = v5193;
v5196 = function EVENTS_BUBBLE(event) { var baseClass = v5197.getPrototypeOf(v5198); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5199 = {};
v5199.constructor = v5196;
v5196.prototype = v5199;
v5195.push(v5196);
v5194.apiCallAttempt = v5195;
const v5200 = [];
var v5201;
v5201 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5182.getPrototypeOf(v5198); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5202 = {};
v5202.constructor = v5201;
v5201.prototype = v5202;
v5200.push(v5201);
v5194.apiCall = v5200;
v5193._events = v5194;
v5193.MONITOR_EVENTS_BUBBLE = v5196;
v5193.CALL_EVENTS_BUBBLE = v5201;
var v5203;
v5203 = function setupRequestListeners(request) { if (request.operation === \\"invoke\\") {
    request.addListener(\\"extractData\\", v3.convertPayloadToString);
} };
const v5204 = {};
v5204.constructor = v5203;
v5203.prototype = v5204;
v5193.setupRequestListeners = v5203;
v5190.prototype = v5193;
v5190.__super__ = v299;
const v5205 = {};
v5205[\\"2014-11-11\\"] = null;
v5205[\\"2015-03-31\\"] = null;
v5190.services = v5205;
const v5206 = [];
v5206.push(\\"2014-11-11\\", \\"2015-03-31\\");
v5190.apiVersions = v5206;
v5190.serviceIdentifier = \\"lambda\\";
v2.Lambda = v5190;
var v5207;
var v5208 = v299;
var v5209 = v31;
v5207 = function () { if (v5208 !== v5209) {
    return v5208.apply(this, arguments);
} };
const v5210 = Object.create(v309);
v5210.constructor = v5207;
const v5211 = {};
const v5212 = [];
var v5213;
var v5214 = v31;
var v5215 = v5210;
v5213 = function EVENTS_BUBBLE(event) { var baseClass = v5214.getPrototypeOf(v5215); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5216 = {};
v5216.constructor = v5213;
v5213.prototype = v5216;
v5212.push(v5213);
v5211.apiCallAttempt = v5212;
const v5217 = [];
var v5218;
v5218 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5197.getPrototypeOf(v5215); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5219 = {};
v5219.constructor = v5218;
v5218.prototype = v5219;
v5217.push(v5218);
v5211.apiCall = v5217;
v5210._events = v5211;
v5210.MONITOR_EVENTS_BUBBLE = v5213;
v5210.CALL_EVENTS_BUBBLE = v5218;
v5207.prototype = v5210;
v5207.__super__ = v299;
const v5220 = {};
v5220[\\"2016-11-28\\"] = null;
v5207.services = v5220;
const v5221 = [];
v5221.push(\\"2016-11-28\\");
v5207.apiVersions = v5221;
v5207.serviceIdentifier = \\"lexruntime\\";
v2.LexRuntime = v5207;
var v5222;
var v5223 = v299;
var v5224 = v31;
v5222 = function () { if (v5223 !== v5224) {
    return v5223.apply(this, arguments);
} };
const v5225 = Object.create(v309);
v5225.constructor = v5222;
const v5226 = {};
const v5227 = [];
var v5228;
var v5229 = v31;
var v5230 = v5225;
v5228 = function EVENTS_BUBBLE(event) { var baseClass = v5229.getPrototypeOf(v5230); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5231 = {};
v5231.constructor = v5228;
v5228.prototype = v5231;
v5227.push(v5228);
v5226.apiCallAttempt = v5227;
const v5232 = [];
var v5233;
v5233 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5214.getPrototypeOf(v5230); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5234 = {};
v5234.constructor = v5233;
v5233.prototype = v5234;
v5232.push(v5233);
v5226.apiCall = v5232;
v5225._events = v5226;
v5225.MONITOR_EVENTS_BUBBLE = v5228;
v5225.CALL_EVENTS_BUBBLE = v5233;
v5222.prototype = v5225;
v5222.__super__ = v299;
const v5235 = {};
v5235[\\"2016-11-28\\"] = null;
v5222.services = v5235;
const v5236 = [];
v5236.push(\\"2016-11-28\\");
v5222.apiVersions = v5236;
v5222.serviceIdentifier = \\"lightsail\\";
v2.Lightsail = v5222;
var v5237;
var v5238 = v299;
var v5239 = v31;
v5237 = function () { if (v5238 !== v5239) {
    return v5238.apply(this, arguments);
} };
const v5240 = Object.create(v309);
v5240.constructor = v5237;
const v5241 = {};
const v5242 = [];
var v5243;
var v5244 = v31;
var v5245 = v5240;
v5243 = function EVENTS_BUBBLE(event) { var baseClass = v5244.getPrototypeOf(v5245); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5246 = {};
v5246.constructor = v5243;
v5243.prototype = v5246;
v5242.push(v5243);
v5241.apiCallAttempt = v5242;
const v5247 = [];
var v5248;
v5248 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5229.getPrototypeOf(v5245); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5249 = {};
v5249.constructor = v5248;
v5248.prototype = v5249;
v5247.push(v5248);
v5241.apiCall = v5247;
v5240._events = v5241;
v5240.MONITOR_EVENTS_BUBBLE = v5243;
v5240.CALL_EVENTS_BUBBLE = v5248;
var v5250;
v5250 = function setupRequestListeners(request) { if (request.operation === \\"predict\\") {
    request.addListener(\\"build\\", this.buildEndpoint);
} };
const v5251 = {};
v5251.constructor = v5250;
v5250.prototype = v5251;
v5240.setupRequestListeners = v5250;
var v5252;
var v5253 = v2;
v5252 = function buildEndpoint(request) { var url = request.params.PredictEndpoint; if (url) {
    request.httpRequest.endpoint = new v5253.Endpoint(url);
} };
const v5254 = {};
v5254.constructor = v5252;
v5252.prototype = v5254;
v5240.buildEndpoint = v5252;
v5237.prototype = v5240;
v5237.__super__ = v299;
const v5255 = {};
v5255[\\"2014-12-12\\"] = null;
v5237.services = v5255;
const v5256 = [];
v5256.push(\\"2014-12-12\\");
v5237.apiVersions = v5256;
v5237.serviceIdentifier = \\"machinelearning\\";
v2.MachineLearning = v5237;
var v5257;
var v5258 = v299;
var v5259 = v31;
v5257 = function () { if (v5258 !== v5259) {
    return v5258.apply(this, arguments);
} };
const v5260 = Object.create(v309);
v5260.constructor = v5257;
const v5261 = {};
const v5262 = [];
var v5263;
var v5264 = v31;
var v5265 = v5260;
v5263 = function EVENTS_BUBBLE(event) { var baseClass = v5264.getPrototypeOf(v5265); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5266 = {};
v5266.constructor = v5263;
v5263.prototype = v5266;
v5262.push(v5263);
v5261.apiCallAttempt = v5262;
const v5267 = [];
var v5268;
v5268 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5244.getPrototypeOf(v5265); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5269 = {};
v5269.constructor = v5268;
v5268.prototype = v5269;
v5267.push(v5268);
v5261.apiCall = v5267;
v5260._events = v5261;
v5260.MONITOR_EVENTS_BUBBLE = v5263;
v5260.CALL_EVENTS_BUBBLE = v5268;
v5257.prototype = v5260;
v5257.__super__ = v299;
const v5270 = {};
v5270[\\"2015-07-01\\"] = null;
v5257.services = v5270;
const v5271 = [];
v5271.push(\\"2015-07-01\\");
v5257.apiVersions = v5271;
v5257.serviceIdentifier = \\"marketplacecommerceanalytics\\";
v2.MarketplaceCommerceAnalytics = v5257;
var v5272;
var v5273 = v299;
var v5274 = v31;
v5272 = function () { if (v5273 !== v5274) {
    return v5273.apply(this, arguments);
} };
const v5275 = Object.create(v309);
v5275.constructor = v5272;
const v5276 = {};
const v5277 = [];
var v5278;
var v5279 = v31;
var v5280 = v5275;
v5278 = function EVENTS_BUBBLE(event) { var baseClass = v5279.getPrototypeOf(v5280); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5281 = {};
v5281.constructor = v5278;
v5278.prototype = v5281;
v5277.push(v5278);
v5276.apiCallAttempt = v5277;
const v5282 = [];
var v5283;
v5283 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5264.getPrototypeOf(v5280); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5284 = {};
v5284.constructor = v5283;
v5283.prototype = v5284;
v5282.push(v5283);
v5276.apiCall = v5282;
v5275._events = v5276;
v5275.MONITOR_EVENTS_BUBBLE = v5278;
v5275.CALL_EVENTS_BUBBLE = v5283;
v5272.prototype = v5275;
v5272.__super__ = v299;
const v5285 = {};
v5285[\\"2016-01-14\\"] = null;
v5272.services = v5285;
const v5286 = [];
v5286.push(\\"2016-01-14\\");
v5272.apiVersions = v5286;
v5272.serviceIdentifier = \\"marketplacemetering\\";
v2.MarketplaceMetering = v5272;
var v5287;
var v5288 = v299;
var v5289 = v31;
v5287 = function () { if (v5288 !== v5289) {
    return v5288.apply(this, arguments);
} };
const v5290 = Object.create(v309);
v5290.constructor = v5287;
const v5291 = {};
const v5292 = [];
var v5293;
var v5294 = v31;
var v5295 = v5290;
v5293 = function EVENTS_BUBBLE(event) { var baseClass = v5294.getPrototypeOf(v5295); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5296 = {};
v5296.constructor = v5293;
v5293.prototype = v5296;
v5292.push(v5293);
v5291.apiCallAttempt = v5292;
const v5297 = [];
var v5298;
v5298 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5279.getPrototypeOf(v5295); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5299 = {};
v5299.constructor = v5298;
v5298.prototype = v5299;
v5297.push(v5298);
v5291.apiCall = v5297;
v5290._events = v5291;
v5290.MONITOR_EVENTS_BUBBLE = v5293;
v5290.CALL_EVENTS_BUBBLE = v5298;
v5287.prototype = v5290;
v5287.__super__ = v299;
const v5300 = {};
v5300[\\"2017-01-17\\"] = null;
v5287.services = v5300;
const v5301 = [];
v5301.push(\\"2017-01-17\\");
v5287.apiVersions = v5301;
v5287.serviceIdentifier = \\"mturk\\";
v2.MTurk = v5287;
var v5302;
var v5303 = v299;
var v5304 = v31;
v5302 = function () { if (v5303 !== v5304) {
    return v5303.apply(this, arguments);
} };
const v5305 = Object.create(v309);
v5305.constructor = v5302;
const v5306 = {};
const v5307 = [];
var v5308;
var v5309 = v31;
var v5310 = v5305;
v5308 = function EVENTS_BUBBLE(event) { var baseClass = v5309.getPrototypeOf(v5310); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5311 = {};
v5311.constructor = v5308;
v5308.prototype = v5311;
v5307.push(v5308);
v5306.apiCallAttempt = v5307;
const v5312 = [];
var v5313;
v5313 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5294.getPrototypeOf(v5310); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5314 = {};
v5314.constructor = v5313;
v5313.prototype = v5314;
v5312.push(v5313);
v5306.apiCall = v5312;
v5305._events = v5306;
v5305.MONITOR_EVENTS_BUBBLE = v5308;
v5305.CALL_EVENTS_BUBBLE = v5313;
v5302.prototype = v5305;
v5302.__super__ = v299;
const v5315 = {};
v5315[\\"2014-06-05\\"] = null;
v5302.services = v5315;
const v5316 = [];
v5316.push(\\"2014-06-05\\");
v5302.apiVersions = v5316;
v5302.serviceIdentifier = \\"mobileanalytics\\";
v2.MobileAnalytics = v5302;
var v5317;
var v5318 = v299;
var v5319 = v31;
v5317 = function () { if (v5318 !== v5319) {
    return v5318.apply(this, arguments);
} };
const v5320 = Object.create(v309);
v5320.constructor = v5317;
const v5321 = {};
const v5322 = [];
var v5323;
var v5324 = v31;
var v5325 = v5320;
v5323 = function EVENTS_BUBBLE(event) { var baseClass = v5324.getPrototypeOf(v5325); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5326 = {};
v5326.constructor = v5323;
v5323.prototype = v5326;
v5322.push(v5323);
v5321.apiCallAttempt = v5322;
const v5327 = [];
var v5328;
v5328 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5309.getPrototypeOf(v5325); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5329 = {};
v5329.constructor = v5328;
v5328.prototype = v5329;
v5327.push(v5328);
v5321.apiCall = v5327;
v5320._events = v5321;
v5320.MONITOR_EVENTS_BUBBLE = v5323;
v5320.CALL_EVENTS_BUBBLE = v5328;
v5317.prototype = v5320;
v5317.__super__ = v299;
const v5330 = {};
v5330[\\"2013-02-18\\"] = null;
v5317.services = v5330;
const v5331 = [];
v5331.push(\\"2013-02-18\\");
v5317.apiVersions = v5331;
v5317.serviceIdentifier = \\"opsworks\\";
v2.OpsWorks = v5317;
var v5332;
var v5333 = v299;
var v5334 = v31;
v5332 = function () { if (v5333 !== v5334) {
    return v5333.apply(this, arguments);
} };
const v5335 = Object.create(v309);
v5335.constructor = v5332;
const v5336 = {};
const v5337 = [];
var v5338;
var v5339 = v31;
var v5340 = v5335;
v5338 = function EVENTS_BUBBLE(event) { var baseClass = v5339.getPrototypeOf(v5340); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5341 = {};
v5341.constructor = v5338;
v5338.prototype = v5341;
v5337.push(v5338);
v5336.apiCallAttempt = v5337;
const v5342 = [];
var v5343;
v5343 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5324.getPrototypeOf(v5340); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5344 = {};
v5344.constructor = v5343;
v5343.prototype = v5344;
v5342.push(v5343);
v5336.apiCall = v5342;
v5335._events = v5336;
v5335.MONITOR_EVENTS_BUBBLE = v5338;
v5335.CALL_EVENTS_BUBBLE = v5343;
v5332.prototype = v5335;
v5332.__super__ = v299;
const v5345 = {};
v5345[\\"2016-11-01\\"] = null;
v5332.services = v5345;
const v5346 = [];
v5346.push(\\"2016-11-01\\");
v5332.apiVersions = v5346;
v5332.serviceIdentifier = \\"opsworkscm\\";
v2.OpsWorksCM = v5332;
var v5347;
var v5348 = v299;
var v5349 = v31;
v5347 = function () { if (v5348 !== v5349) {
    return v5348.apply(this, arguments);
} };
const v5350 = Object.create(v309);
v5350.constructor = v5347;
const v5351 = {};
const v5352 = [];
var v5353;
var v5354 = v31;
var v5355 = v5350;
v5353 = function EVENTS_BUBBLE(event) { var baseClass = v5354.getPrototypeOf(v5355); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5356 = {};
v5356.constructor = v5353;
v5353.prototype = v5356;
v5352.push(v5353);
v5351.apiCallAttempt = v5352;
const v5357 = [];
var v5358;
v5358 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5339.getPrototypeOf(v5355); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5359 = {};
v5359.constructor = v5358;
v5358.prototype = v5359;
v5357.push(v5358);
v5351.apiCall = v5357;
v5350._events = v5351;
v5350.MONITOR_EVENTS_BUBBLE = v5353;
v5350.CALL_EVENTS_BUBBLE = v5358;
v5347.prototype = v5350;
v5347.__super__ = v299;
const v5360 = {};
v5360[\\"2016-11-28\\"] = null;
v5347.services = v5360;
const v5361 = [];
v5361.push(\\"2016-11-28\\");
v5347.apiVersions = v5361;
v5347.serviceIdentifier = \\"organizations\\";
v2.Organizations = v5347;
var v5362;
var v5363 = v299;
var v5364 = v31;
v5362 = function () { if (v5363 !== v5364) {
    return v5363.apply(this, arguments);
} };
const v5365 = Object.create(v309);
v5365.constructor = v5362;
const v5366 = {};
const v5367 = [];
var v5368;
var v5369 = v31;
var v5370 = v5365;
v5368 = function EVENTS_BUBBLE(event) { var baseClass = v5369.getPrototypeOf(v5370); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5371 = {};
v5371.constructor = v5368;
v5368.prototype = v5371;
v5367.push(v5368);
v5366.apiCallAttempt = v5367;
const v5372 = [];
var v5373;
v5373 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5354.getPrototypeOf(v5370); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5374 = {};
v5374.constructor = v5373;
v5373.prototype = v5374;
v5372.push(v5373);
v5366.apiCall = v5372;
v5365._events = v5366;
v5365.MONITOR_EVENTS_BUBBLE = v5368;
v5365.CALL_EVENTS_BUBBLE = v5373;
v5362.prototype = v5365;
v5362.__super__ = v299;
const v5375 = {};
v5375[\\"2016-12-01\\"] = null;
v5362.services = v5375;
const v5376 = [];
v5376.push(\\"2016-12-01\\");
v5362.apiVersions = v5376;
v5362.serviceIdentifier = \\"pinpoint\\";
v2.Pinpoint = v5362;
var v5377;
var v5378 = v299;
var v5379 = v31;
v5377 = function () { if (v5378 !== v5379) {
    return v5378.apply(this, arguments);
} };
const v5380 = Object.create(v309);
v5380.constructor = v5377;
const v5381 = {};
const v5382 = [];
var v5383;
var v5384 = v31;
var v5385 = v5380;
v5383 = function EVENTS_BUBBLE(event) { var baseClass = v5384.getPrototypeOf(v5385); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5386 = {};
v5386.constructor = v5383;
v5383.prototype = v5386;
v5382.push(v5383);
v5381.apiCallAttempt = v5382;
const v5387 = [];
var v5388;
v5388 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5369.getPrototypeOf(v5385); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5389 = {};
v5389.constructor = v5388;
v5388.prototype = v5389;
v5387.push(v5388);
v5381.apiCall = v5387;
v5380._events = v5381;
v5380.MONITOR_EVENTS_BUBBLE = v5383;
v5380.CALL_EVENTS_BUBBLE = v5388;
v5377.prototype = v5380;
v5377.__super__ = v299;
const v5390 = {};
v5390[\\"2016-06-10\\"] = null;
v5377.services = v5390;
const v5391 = [];
v5391.push(\\"2016-06-10\\");
v5377.apiVersions = v5391;
v5377.serviceIdentifier = \\"polly\\";
var v5392;
v5392 = function Signer(options) { options = options || {}; this.options = options; this.service = options.service; this.bindServiceObject(options); this._operations = {}; };
const v5393 = {};
v5393.constructor = v5392;
var v5394;
var v5395 = v2;
v5394 = function bindServiceObject(options) { options = options || {}; if (!this.service) {
    this.service = new v5395.Polly(options);
}
else {
    var config = v3.copy(this.service.config);
    this.service = new this.service.constructor.__super__(config);
    this.service.config.params = v3.merge(this.service.config.params || {}, options.params);
} };
const v5396 = {};
v5396.constructor = v5394;
v5394.prototype = v5396;
v5393.bindServiceObject = v5394;
var v5397;
v5397 = function modifyInputMembers(input) { var modifiedInput = v3.copy(input); modifiedInput.members = v3.copy(input.members); v3.each(input.members, function (name, member) { modifiedInput.members[name] = v3.copy(member); if (!member.location || member.location === \\"body\\") {
    modifiedInput.members[name].location = \\"querystring\\";
    modifiedInput.members[name].locationName = name;
} }); return modifiedInput; };
const v5398 = {};
v5398.constructor = v5397;
v5397.prototype = v5398;
v5393.modifyInputMembers = v5397;
var v5399;
var v5400 = v1977;
v5399 = function convertPostToGet(req) { req.httpRequest.method = \\"GET\\"; var operation = req.service.api.operations[req.operation]; var input = this._operations[req.operation]; if (!input) {
    this._operations[req.operation] = input = this.modifyInputMembers(operation.input);
} var uri = v5400.generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params); req.httpRequest.path = uri; req.httpRequest.body = \\"\\"; delete req.httpRequest.headers[\\"Content-Length\\"]; delete req.httpRequest.headers[\\"Content-Type\\"]; };
const v5401 = {};
v5401.constructor = v5399;
v5399.prototype = v5401;
v5393.convertPostToGet = v5399;
var v5402;
v5402 = function getSynthesizeSpeechUrl(params, expires, callback) { var self = this; var request = this.service.makeRequest(\\"synthesizeSpeech\\", params); request.removeAllListeners(\\"build\\"); request.on(\\"build\\", function (req) { self.convertPostToGet(req); }); return request.presign(expires, callback); };
const v5403 = {};
v5403.constructor = v5402;
v5402.prototype = v5403;
v5393.getSynthesizeSpeechUrl = v5402;
v5392.prototype = v5393;
v5392.__super__ = v31;
v5377.Presigner = v5392;
v2.Polly = v5377;
var v5404;
var v5405 = v299;
var v5406 = v31;
v5404 = function () { if (v5405 !== v5406) {
    return v5405.apply(this, arguments);
} };
const v5407 = Object.create(v309);
v5407.constructor = v5404;
const v5408 = {};
const v5409 = [];
var v5410;
var v5411 = v31;
var v5412 = v5407;
v5410 = function EVENTS_BUBBLE(event) { var baseClass = v5411.getPrototypeOf(v5412); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5413 = {};
v5413.constructor = v5410;
v5410.prototype = v5413;
v5409.push(v5410);
v5408.apiCallAttempt = v5409;
const v5414 = [];
var v5415;
v5415 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5384.getPrototypeOf(v5412); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5416 = {};
v5416.constructor = v5415;
v5415.prototype = v5416;
v5414.push(v5415);
v5408.apiCall = v5414;
v5407._events = v5408;
v5407.MONITOR_EVENTS_BUBBLE = v5410;
v5407.CALL_EVENTS_BUBBLE = v5415;
var v5417;
const v5419 = {};
var v5420;
var v5421 = v5419;
v5420 = function setupRequestListeners(service, request, crossRegionOperations) { if (crossRegionOperations.indexOf(request.operation) !== -1 && request.params.SourceRegion) {
    request.params = v3.copy(request.params);
    if (request.params.PreSignedUrl || request.params.SourceRegion === service.config.region) {
        delete request.params.SourceRegion;
    }
    else {
        var doesParamValidation = !!service.config.paramValidation;
        if (doesParamValidation) {
            request.removeListener(\\"validate\\", v428.VALIDATE_PARAMETERS);
        }
        request.onAsync(\\"validate\\", v5421.buildCrossRegionPresignedUrl);
        if (doesParamValidation) {
            request.addListener(\\"validate\\", v428.VALIDATE_PARAMETERS);
        }
    }
} };
const v5422 = {};
v5422.constructor = v5420;
v5420.prototype = v5422;
v5419.setupRequestListeners = v5420;
var v5423;
v5423 = function buildCrossRegionPresignedUrl(req, done) { var config = v3.copy(req.service.config); config.region = req.params.SourceRegion; delete req.params.SourceRegion; delete config.endpoint; delete config.params; config.signatureVersion = \\"v4\\"; var destinationRegion = req.service.config.region; var svc = new req.service.constructor(config); var newReq = svc[req.operation](v3.copy(req.params)); newReq.on(\\"build\\", function addDestinationRegionParam(request) { var httpRequest = request.httpRequest; httpRequest.params.DestinationRegion = destinationRegion; httpRequest.body = v3.queryParamsToString(httpRequest.params); }); newReq.presign(function (err, url) { if (err)
    done(err);
else {
    req.params.PreSignedUrl = url;
    done();
} }); };
const v5424 = {};
v5424.constructor = v5423;
v5423.prototype = v5424;
v5419.buildCrossRegionPresignedUrl = v5423;
var v5418 = v5419;
const v5426 = [];
v5426.push(\\"copyDBSnapshot\\", \\"createDBInstanceReadReplica\\", \\"createDBCluster\\", \\"copyDBClusterSnapshot\\", \\"startDBInstanceAutomatedBackupsReplication\\");
var v5425 = v5426;
v5417 = function setupRequestListeners(request) { v5418.setupRequestListeners(this, request, v5425); };
const v5427 = {};
v5427.constructor = v5417;
v5417.prototype = v5427;
v5407.setupRequestListeners = v5417;
v5404.prototype = v5407;
v5404.__super__ = v299;
const v5428 = {};
v5428[\\"2013-01-10\\"] = null;
v5428[\\"2013-02-12\\"] = null;
v5428[\\"2013-09-09\\"] = null;
v5428[\\"2014-09-01\\"] = null;
v5428[\\"2014-09-01*\\"] = null;
v5428[\\"2014-10-31\\"] = null;
v5404.services = v5428;
const v5429 = [];
v5429.push(\\"2013-01-10\\", \\"2013-02-12\\", \\"2013-09-09\\", \\"2014-09-01\\", \\"2014-09-01*\\", \\"2014-10-31\\");
v5404.apiVersions = v5429;
v5404.serviceIdentifier = \\"rds\\";
var v5430;
v5430 = function Signer(options) { this.options = options || {}; };
const v5431 = {};
v5431.constructor = v5430;
var v5432;
v5432 = function convertUrlToAuthToken(url) { var protocol = \\"https://\\"; if (url.indexOf(protocol) === 0) {
    return url.substring(protocol.length);
} };
const v5433 = {};
v5433.constructor = v5432;
v5432.prototype = v5433;
v5431.convertUrlToAuthToken = v5432;
var v5434;
var v5435 = v2;
var v5436 = v2;
const v5438 = {};
v5438.signatureVersion = \\"v4\\";
v5438.signingName = \\"rds-db\\";
const v5439 = {};
v5438.operations = v5439;
var v5437 = v5438;
v5434 = function getAuthToken(options, callback) { if (typeof options === \\"function\\" && callback === undefined) {
    callback = options;
    options = {};
} var self = this; var hasCallback = typeof callback === \\"function\\"; options = v3.merge(this.options, options); var optionsValidation = this.validateAuthTokenOptions(options); if (optionsValidation !== true) {
    if (hasCallback) {
        return callback(optionsValidation, null);
    }
    throw optionsValidation;
} var expires = 900; var serviceOptions = { region: options.region, endpoint: new v5435.Endpoint(options.hostname + \\":\\" + options.port), paramValidation: false, signatureVersion: \\"v4\\" }; if (options.credentials) {
    serviceOptions.credentials = options.credentials;
} service = new v5436.Service(serviceOptions); undefined = v5437; var request = undefined(); this.modifyRequestForAuthToken(request, options); if (hasCallback) {
    request.presign(expires, function (err, url) { if (url) {
        url = self.convertUrlToAuthToken(url);
    } callback(err, url); });
}
else {
    var url = request.presign(expires);
    return this.convertUrlToAuthToken(url);
} };
const v5440 = {};
v5440.constructor = v5434;
v5434.prototype = v5440;
v5431.getAuthToken = v5434;
var v5441;
v5441 = function modifyRequestForAuthToken(request, options) { request.on(\\"build\\", request.buildAsGet); var httpRequest = request.httpRequest; httpRequest.body = v3.queryParamsToString({ Action: \\"connect\\", DBUser: options.username }); };
const v5442 = {};
v5442.constructor = v5441;
v5441.prototype = v5442;
v5431.modifyRequestForAuthToken = v5441;
var v5443;
const v5445 = {};
v5445.region = \\"string\\";
v5445.hostname = \\"string\\";
v5445.port = \\"number\\";
v5445.username = \\"string\\";
var v5444 = v5445;
var v5446 = v5445;
var v5447 = v5445;
var v5448 = v5445;
var v5449 = v40;
v5443 = function validateAuthTokenOptions(options) { var message = \\"\\"; options = options || {}; for (var key in v5444) {
    if (!v113.hasOwnProperty.call(v5446, key)) {
        continue;
    }
    if (typeof options[key] !== v5447[key]) {
        message += \\"option '\\" + key + \\"' should have been type '\\" + v5448[key] + \\"', was '\\" + typeof options[key] + \\"'.\\\\n\\";
    }
} if (message.length) {
    return v3.error(new v5449(), { code: \\"InvalidParameter\\", message: message });
} return true; };
const v5450 = {};
v5450.constructor = v5443;
v5443.prototype = v5450;
v5431.validateAuthTokenOptions = v5443;
v5430.prototype = v5431;
v5430.__super__ = v31;
v5404.Signer = v5430;
v2.RDS = v5404;
var v5451;
var v5452 = v299;
var v5453 = v31;
v5451 = function () { if (v5452 !== v5453) {
    return v5452.apply(this, arguments);
} };
const v5454 = Object.create(v309);
v5454.constructor = v5451;
const v5455 = {};
const v5456 = [];
var v5457;
var v5458 = v31;
var v5459 = v5454;
v5457 = function EVENTS_BUBBLE(event) { var baseClass = v5458.getPrototypeOf(v5459); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5460 = {};
v5460.constructor = v5457;
v5457.prototype = v5460;
v5456.push(v5457);
v5455.apiCallAttempt = v5456;
const v5461 = [];
var v5462;
v5462 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5411.getPrototypeOf(v5459); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5463 = {};
v5463.constructor = v5462;
v5462.prototype = v5463;
v5461.push(v5462);
v5455.apiCall = v5461;
v5454._events = v5455;
v5454.MONITOR_EVENTS_BUBBLE = v5457;
v5454.CALL_EVENTS_BUBBLE = v5462;
v5451.prototype = v5454;
v5451.__super__ = v299;
const v5464 = {};
v5464[\\"2012-12-01\\"] = null;
v5451.services = v5464;
const v5465 = [];
v5465.push(\\"2012-12-01\\");
v5451.apiVersions = v5465;
v5451.serviceIdentifier = \\"redshift\\";
v2.Redshift = v5451;
var v5466;
var v5467 = v299;
var v5468 = v31;
v5466 = function () { if (v5467 !== v5468) {
    return v5467.apply(this, arguments);
} };
const v5469 = Object.create(v309);
v5469.constructor = v5466;
const v5470 = {};
const v5471 = [];
var v5472;
var v5473 = v31;
var v5474 = v5469;
v5472 = function EVENTS_BUBBLE(event) { var baseClass = v5473.getPrototypeOf(v5474); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5475 = {};
v5475.constructor = v5472;
v5472.prototype = v5475;
v5471.push(v5472);
v5470.apiCallAttempt = v5471;
const v5476 = [];
var v5477;
v5477 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5458.getPrototypeOf(v5474); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5478 = {};
v5478.constructor = v5477;
v5477.prototype = v5478;
v5476.push(v5477);
v5470.apiCall = v5476;
v5469._events = v5470;
v5469.MONITOR_EVENTS_BUBBLE = v5472;
v5469.CALL_EVENTS_BUBBLE = v5477;
v5466.prototype = v5469;
v5466.__super__ = v299;
const v5479 = {};
v5479[\\"2016-06-27\\"] = null;
v5466.services = v5479;
const v5480 = [];
v5480.push(\\"2016-06-27\\");
v5466.apiVersions = v5480;
v5466.serviceIdentifier = \\"rekognition\\";
v2.Rekognition = v5466;
var v5481;
var v5482 = v299;
var v5483 = v31;
v5481 = function () { if (v5482 !== v5483) {
    return v5482.apply(this, arguments);
} };
const v5484 = Object.create(v309);
v5484.constructor = v5481;
const v5485 = {};
const v5486 = [];
var v5487;
var v5488 = v31;
var v5489 = v5484;
v5487 = function EVENTS_BUBBLE(event) { var baseClass = v5488.getPrototypeOf(v5489); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5490 = {};
v5490.constructor = v5487;
v5487.prototype = v5490;
v5486.push(v5487);
v5485.apiCallAttempt = v5486;
const v5491 = [];
var v5492;
v5492 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5473.getPrototypeOf(v5489); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5493 = {};
v5493.constructor = v5492;
v5492.prototype = v5493;
v5491.push(v5492);
v5485.apiCall = v5491;
v5484._events = v5485;
v5484.MONITOR_EVENTS_BUBBLE = v5487;
v5484.CALL_EVENTS_BUBBLE = v5492;
v5481.prototype = v5484;
v5481.__super__ = v299;
const v5494 = {};
v5494[\\"2017-01-26\\"] = null;
v5481.services = v5494;
const v5495 = [];
v5495.push(\\"2017-01-26\\");
v5481.apiVersions = v5495;
v5481.serviceIdentifier = \\"resourcegroupstaggingapi\\";
v2.ResourceGroupsTaggingAPI = v5481;
var v5496;
var v5497 = v299;
var v5498 = v31;
v5496 = function () { if (v5497 !== v5498) {
    return v5497.apply(this, arguments);
} };
const v5499 = Object.create(v309);
v5499.constructor = v5496;
const v5500 = {};
const v5501 = [];
var v5502;
var v5503 = v31;
var v5504 = v5499;
v5502 = function EVENTS_BUBBLE(event) { var baseClass = v5503.getPrototypeOf(v5504); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5505 = {};
v5505.constructor = v5502;
v5502.prototype = v5505;
v5501.push(v5502);
v5500.apiCallAttempt = v5501;
const v5506 = [];
var v5507;
v5507 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5488.getPrototypeOf(v5504); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5508 = {};
v5508.constructor = v5507;
v5507.prototype = v5508;
v5506.push(v5507);
v5500.apiCall = v5506;
v5499._events = v5500;
v5499.MONITOR_EVENTS_BUBBLE = v5502;
v5499.CALL_EVENTS_BUBBLE = v5507;
var v5509;
v5509 = function setupRequestListeners(request) { request.on(\\"build\\", this.sanitizeUrl); };
const v5510 = {};
v5510.constructor = v5509;
v5509.prototype = v5510;
v5499.setupRequestListeners = v5509;
var v5511;
v5511 = function sanitizeUrl(request) { var path = request.httpRequest.path; request.httpRequest.path = path.replace(/\\\\/%2F\\\\w+%2F/, \\"/\\"); };
const v5512 = {};
v5512.constructor = v5511;
v5511.prototype = v5512;
v5499.sanitizeUrl = v5511;
var v5513;
v5513 = function retryableError(error) { if (error.code === \\"PriorRequestNotComplete\\" && error.statusCode === 400) {
    return true;
}
else {
    var _super = v309.retryableError;
    return _super.call(this, error);
} };
const v5514 = {};
v5514.constructor = v5513;
v5513.prototype = v5514;
v5499.retryableError = v5513;
v5496.prototype = v5499;
v5496.__super__ = v299;
const v5515 = {};
v5515[\\"2013-04-01\\"] = null;
v5496.services = v5515;
const v5516 = [];
v5516.push(\\"2013-04-01\\");
v5496.apiVersions = v5516;
v5496.serviceIdentifier = \\"route53\\";
v2.Route53 = v5496;
var v5517;
var v5518 = v299;
var v5519 = v31;
v5517 = function () { if (v5518 !== v5519) {
    return v5518.apply(this, arguments);
} };
const v5520 = Object.create(v309);
v5520.constructor = v5517;
const v5521 = {};
const v5522 = [];
var v5523;
var v5524 = v31;
var v5525 = v5520;
v5523 = function EVENTS_BUBBLE(event) { var baseClass = v5524.getPrototypeOf(v5525); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5526 = {};
v5526.constructor = v5523;
v5523.prototype = v5526;
v5522.push(v5523);
v5521.apiCallAttempt = v5522;
const v5527 = [];
var v5528;
v5528 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5503.getPrototypeOf(v5525); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5529 = {};
v5529.constructor = v5528;
v5528.prototype = v5529;
v5527.push(v5528);
v5521.apiCall = v5527;
v5520._events = v5521;
v5520.MONITOR_EVENTS_BUBBLE = v5523;
v5520.CALL_EVENTS_BUBBLE = v5528;
v5517.prototype = v5520;
v5517.__super__ = v299;
const v5530 = {};
v5530[\\"2014-05-15\\"] = null;
v5517.services = v5530;
const v5531 = [];
v5531.push(\\"2014-05-15\\");
v5517.apiVersions = v5531;
v5517.serviceIdentifier = \\"route53domains\\";
v2.Route53Domains = v5517;
var v5532;
var v5533 = v299;
var v5534 = v31;
v5532 = function () { if (v5533 !== v5534) {
    return v5533.apply(this, arguments);
} };
const v5535 = Object.create(v309);
v5535.constructor = v5532;
const v5536 = {};
const v5537 = [];
var v5538;
var v5539 = v31;
var v5540 = v5535;
v5538 = function EVENTS_BUBBLE(event) { var baseClass = v5539.getPrototypeOf(v5540); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5541 = {};
v5541.constructor = v5538;
v5538.prototype = v5541;
v5537.push(v5538);
v5536.apiCallAttempt = v5537;
const v5542 = [];
var v5543;
v5543 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5524.getPrototypeOf(v5540); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5544 = {};
v5544.constructor = v5543;
v5543.prototype = v5544;
v5542.push(v5543);
v5536.apiCall = v5542;
v5535._events = v5536;
v5535.MONITOR_EVENTS_BUBBLE = v5538;
v5535.CALL_EVENTS_BUBBLE = v5543;
var v5545;
v5545 = function getSignatureVersion(request) { var defaultApiVersion = this.api.signatureVersion; var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null; var regionDefinedVersion = this.config.signatureVersion; var isPresigned = request ? request.isPresigned() : false; if (userDefinedVersion) {
    userDefinedVersion = userDefinedVersion === \\"v2\\" ? \\"s3\\" : userDefinedVersion;
    return userDefinedVersion;
} if (isPresigned !== true) {
    defaultApiVersion = \\"v4\\";
}
else if (regionDefinedVersion) {
    defaultApiVersion = regionDefinedVersion;
} return defaultApiVersion; };
const v5546 = {};
v5546.constructor = v5545;
v5545.prototype = v5546;
v5535.getSignatureVersion = v5545;
var v5547;
var v5548 = \\"s3-object-lambda\\";
v5547 = function getSigningName(req) { if (req && req.operation === \\"writeGetObjectResponse\\") {
    return v5548;
} var _super = v309.getSigningName; return (req && req._parsedArn && req._parsedArn.service) ? req._parsedArn.service : _super.call(this); };
const v5549 = {};
v5549.constructor = v5547;
v5547.prototype = v5549;
v5535.getSigningName = v5547;
var v5550;
v5550 = function getSignerClass(request) { var signatureVersion = this.getSignatureVersion(request); return v450.RequestSigner.getVersion(signatureVersion); };
const v5551 = {};
v5551.constructor = v5550;
v5550.prototype = v5551;
v5535.getSignerClass = v5550;
var v5552;
var v5553 = v40;
v5552 = function validateService() { var msg; var messages = []; if (!this.config.region)
    this.config.region = \\"us-east-1\\"; if (!this.config.endpoint && this.config.s3BucketEndpoint) {
    messages.push(\\"An endpoint must be provided when configuring \\" + \\"\`s3BucketEndpoint\` to true.\\");
} if (messages.length === 1) {
    msg = messages[0];
}
else if (messages.length > 1) {
    msg = \\"Multiple configuration errors:\\\\n\\" + messages.join(\\"\\\\n\\");
} if (msg) {
    throw v3.error(new v5553(), { name: \\"InvalidEndpoint\\", message: msg });
} };
const v5554 = {};
v5554.constructor = v5552;
v5552.prototype = v5554;
v5535.validateService = v5552;
var v5555;
v5555 = function shouldDisableBodySigning(request) { var signerClass = this.getSignerClass(); if (this.config.s3DisableBodySigning === true && signerClass === v450.V4 && request.httpRequest.endpoint.protocol === \\"https:\\") {
    return true;
} return false; };
const v5556 = {};
v5556.constructor = v5555;
v5555.prototype = v5556;
v5535.shouldDisableBodySigning = v5555;
var v5557;
const v5559 = {};
var v5560;
v5560 = function isArnInParam(req, paramName) { var inputShape = (req.service.api.operations[req.operation] || {}).input || {}; var inputMembers = inputShape.members || {}; if (!req.params[paramName] || !inputMembers[paramName])
    return false; return v2654.validate(req.params[paramName]); };
const v5561 = {};
v5561.constructor = v5560;
v5560.prototype = v5561;
v5559.isArnInParam = v5560;
var v5562;
var v5563 = v40;
v5562 = function validateArnService(req) { var parsedArn = req._parsedArn; if (parsedArn.service !== \\"s3\\" && parsedArn.service !== \\"s3-outposts\\" && parsedArn.service !== \\"s3-object-lambda\\") {
    throw v3.error(new v5563(), { code: \\"InvalidARN\\", message: \\"expect 's3' or 's3-outposts' or 's3-object-lambda' in ARN service component\\" });
} };
const v5564 = {};
v5564.constructor = v5562;
v5562.prototype = v5564;
v5559.validateArnService = v5562;
var v5565;
var v5566 = v40;
v5565 = function validateArnAccount(req) { var parsedArn = req._parsedArn; if (!/[0-9]{12}/.exec(parsedArn.accountId)) {
    throw v3.error(new v5566(), { code: \\"InvalidARN\\", message: \\"ARN accountID does not match regex \\\\\\"[0-9]{12}\\\\\\"\\" });
} };
const v5567 = {};
v5567.constructor = v5565;
v5565.prototype = v5567;
v5559.validateArnAccount = v5565;
var v5568;
var v5569 = v5559;
var v5570 = v40;
v5568 = function validateS3AccessPointArn(req) { var parsedArn = req._parsedArn; var delimiter = parsedArn.resource[\\"accesspoint\\".length]; if (parsedArn.resource.split(delimiter).length !== 2) {
    throw v3.error(new v5566(), { code: \\"InvalidARN\\", message: \\"Access Point ARN should have one resource accesspoint/{accesspointName}\\" });
} var accessPoint = parsedArn.resource.split(delimiter)[1]; var accessPointPrefix = accessPoint + \\"-\\" + parsedArn.accountId; if (!v5569.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\\\./)) {
    throw v3.error(new v5570(), { code: \\"InvalidARN\\", message: \\"Access point resource in ARN is not DNS compatible. Got \\" + accessPoint });
} req._parsedArn.accessPoint = accessPoint; };
const v5571 = {};
v5571.constructor = v5568;
v5568.prototype = v5571;
v5559.validateS3AccessPointArn = v5568;
var v5572;
var v5573 = v40;
var v5574 = v373;
var v5575 = v40;
v5572 = function validateOutpostsArn(req) { var parsedArn = req._parsedArn; if (parsedArn.resource.indexOf(\\"outpost:\\") !== 0 && parsedArn.resource.indexOf(\\"outpost/\\") !== 0) {
    throw v3.error(new v5573(), { code: \\"InvalidARN\\", message: \\"ARN resource should begin with 'outpost/'\\" });
} var delimiter = parsedArn.resource[\\"outpost\\".length]; var outpostId = parsedArn.resource.split(delimiter)[1]; var dnsHostRegex = new v5574(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/); if (!dnsHostRegex.test(outpostId)) {
    throw v3.error(new v5575(), { code: \\"InvalidARN\\", message: \\"Outpost resource in ARN is not DNS compatible. Got \\" + outpostId });
} req._parsedArn.outpostId = outpostId; };
const v5576 = {};
v5576.constructor = v5572;
v5572.prototype = v5576;
v5559.validateOutpostsArn = v5572;
var v5577;
var v5578 = v40;
var v5579 = v5559;
var v5580 = v40;
v5577 = function validateOutpostsAccessPointArn(req) { var parsedArn = req._parsedArn; var delimiter = parsedArn.resource[\\"outpost\\".length]; if (parsedArn.resource.split(delimiter).length !== 4) {
    throw v3.error(new v5578(), { code: \\"InvalidARN\\", message: \\"Outposts ARN should have two resources outpost/{outpostId}/accesspoint/{accesspointName}\\" });
} var accessPoint = parsedArn.resource.split(delimiter)[3]; var accessPointPrefix = accessPoint + \\"-\\" + parsedArn.accountId; if (!v5579.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\\\./)) {
    throw v3.error(new v5580(), { code: \\"InvalidARN\\", message: \\"Access point resource in ARN is not DNS compatible. Got \\" + accessPoint });
} req._parsedArn.accessPoint = accessPoint; };
const v5581 = {};
v5581.constructor = v5577;
v5577.prototype = v5581;
v5559.validateOutpostsAccessPointArn = v5577;
var v5582;
var v5583 = v40;
var v5584 = v40;
var v5585 = v40;
var v5586 = v313;
var v5587 = v313;
var v5588 = v40;
var v5589 = v40;
var v5590 = v40;
v5582 = function validateArnRegion(req, options) { if (options === undefined) {
    options = {};
} var useArnRegion = v5579.loadUseArnRegionConfig(req); var regionFromArn = req._parsedArn.region; var clientRegion = req.service.config.region; var useFipsEndpoint = req.service.config.useFipsEndpoint; var allowFipsEndpoint = options.allowFipsEndpoint || false; if (!regionFromArn) {
    var message = \\"ARN region is empty\\";
    if (req._parsedArn.service === \\"s3\\") {
        message = message + \\"\\\\nYou may want to use multi-regional ARN. The feature is not supported in current SDK. \\" + \\"You should consider switching to V3(https://github.com/aws/aws-sdk-js-v3).\\";
    }
    throw v3.error(new v5583(), { code: \\"InvalidARN\\", message: message });
} if (useFipsEndpoint && !allowFipsEndpoint) {
    throw v3.error(new v5584(), { code: \\"InvalidConfiguration\\", message: \\"ARN endpoint is not compatible with FIPS region\\" });
} if (regionFromArn.indexOf(\\"fips\\") >= 0) {
    throw v3.error(new v5585(), { code: \\"InvalidConfiguration\\", message: \\"FIPS region not allowed in ARN\\" });
} if (!useArnRegion && regionFromArn !== clientRegion) {
    throw v3.error(new v5585(), { code: \\"InvalidConfiguration\\", message: \\"Configured region conflicts with access point region\\" });
}
else if (useArnRegion && v5586.getEndpointSuffix(regionFromArn) !== v5587.getEndpointSuffix(clientRegion)) {
    throw v3.error(new v5588(), { code: \\"InvalidConfiguration\\", message: \\"Configured region and access point region not in same partition\\" });
} if (req.service.config.useAccelerateEndpoint) {
    throw v3.error(new v5589(), { code: \\"InvalidConfiguration\\", message: \\"useAccelerateEndpoint config is not supported with access point ARN\\" });
} if (req._parsedArn.service === \\"s3-outposts\\" && req.service.config.useDualstackEndpoint) {
    throw v3.error(new v5590(), { code: \\"InvalidConfiguration\\", message: \\"Dualstack is not supported with outposts access point ARN\\" });
} };
const v5591 = {};
v5591.constructor = v5582;
v5582.prototype = v5591;
v5559.validateArnRegion = v5582;
var v5592;
var v5593 = v8;
var v5594 = v8;
var v5595 = v8;
v5592 = function loadUseArnRegionConfig(req) { var envName = \\"AWS_S3_USE_ARN_REGION\\"; var configName = \\"s3_use_arn_region\\"; var useArnRegion = true; var originalConfig = req.service._originalConfig || {}; if (req.service.config.s3UseArnRegion !== undefined) {
    return req.service.config.s3UseArnRegion;
}
else if (originalConfig.s3UseArnRegion !== undefined) {
    useArnRegion = originalConfig.s3UseArnRegion === true;
}
else if (v3.isNode()) {
    if (v5593.env[envName]) {
        var value = v5594.env[envName].trim().toLowerCase();
        if ([\\"false\\", \\"true\\"].indexOf(value) < 0) {
            throw v3.error(new v5588(), { code: \\"InvalidConfiguration\\", message: envName + \\" only accepts true or false. Got \\" + v5595.env[envName], retryable: false });
        }
        useArnRegion = value === \\"true\\";
    }
    else {
        var profiles = {};
        var profile = {};
        try {
            profiles = v3.getProfilesFromSharedConfig(v200);
            profile = profiles[v5595.env.AWS_PROFILE || \\"default\\"];
        }
        catch (e) { }
        if (profile[configName]) {
            if ([\\"false\\", \\"true\\"].indexOf(profile[configName].trim().toLowerCase()) < 0) {
                throw v3.error(new v5589(), { code: \\"InvalidConfiguration\\", message: configName + \\" only accepts true or false. Got \\" + profile[configName], retryable: false });
            }
            useArnRegion = profile[configName].trim().toLowerCase() === \\"true\\";
        }
    }
} req.service.config.s3UseArnRegion = useArnRegion; return useArnRegion; };
const v5596 = {};
v5596.constructor = v5592;
v5592.prototype = v5596;
v5559.loadUseArnRegionConfig = v5592;
var v5597;
var v5598 = v40;
v5597 = function validatePopulateUriFromArn(req) { if (req.service._originalConfig && req.service._originalConfig.endpoint) {
    throw v3.error(new v5598(), { code: \\"InvalidConfiguration\\", message: \\"Custom endpoint is not compatible with access point ARN\\" });
} if (req.service.config.s3ForcePathStyle) {
    throw v3.error(new v5598(), { code: \\"InvalidConfiguration\\", message: \\"Cannot construct path-style endpoint with access point\\" });
} };
const v5599 = {};
v5599.constructor = v5597;
v5597.prototype = v5599;
v5559.validatePopulateUriFromArn = v5597;
var v5600;
var v5601 = v373;
var v5602 = v373;
v5600 = function dnsCompatibleBucketName(bucketName) { var b = bucketName; var domain = new v5601(/^[a-z0-9][a-z0-9\\\\.\\\\-]{1,61}[a-z0-9]$/); var ipAddress = new v5602(/(\\\\d+\\\\.){3}\\\\d+/); var dots = new v5602(/\\\\.\\\\./); return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false; };
const v5603 = {};
v5603.constructor = v5600;
v5600.prototype = v5603;
v5559.dnsCompatibleBucketName = v5600;
var v5558 = v5559;
var v5604 = v5559;
var v5605 = v5559;
var v5606 = v5559;
var v5607 = v5559;
var v5608 = v5559;
var v5609 = v5559;
v5557 = function setupRequestListeners(request) { var prependListener = true; request.addListener(\\"validate\\", this.validateScheme); request.addListener(\\"validate\\", this.validateBucketName, prependListener); request.addListener(\\"validate\\", this.optInUsEast1RegionalEndpoint, prependListener); request.removeListener(\\"validate\\", v428.VALIDATE_REGION); request.addListener(\\"build\\", this.addContentType); request.addListener(\\"build\\", this.computeContentMd5); request.addListener(\\"build\\", this.computeSseCustomerKeyMd5); request.addListener(\\"build\\", this.populateURI); request.addListener(\\"afterBuild\\", this.addExpect100Continue); request.addListener(\\"extractError\\", this.extractError); request.addListener(\\"extractData\\", v3.hoistPayloadMember); request.addListener(\\"extractData\\", this.extractData); request.addListener(\\"extractData\\", this.extractErrorFrom200Response); request.addListener(\\"beforePresign\\", this.prepareSignedUrl); if (this.shouldDisableBodySigning(request)) {
    request.removeListener(\\"afterBuild\\", v428.COMPUTE_SHA256);
    request.addListener(\\"afterBuild\\", this.disableBodySigning);
} if (request.operation !== \\"createBucket\\" && v5558.isArnInParam(request, \\"Bucket\\")) {
    request._parsedArn = v2654.parse(request.params.Bucket);
    request.removeListener(\\"validate\\", this.validateBucketName);
    request.removeListener(\\"build\\", this.populateURI);
    if (request._parsedArn.service === \\"s3\\") {
        request.addListener(\\"validate\\", v5604.validateS3AccessPointArn);
        request.addListener(\\"validate\\", this.validateArnResourceType);
        request.addListener(\\"validate\\", this.validateArnRegion);
    }
    else if (request._parsedArn.service === \\"s3-outposts\\") {
        request.addListener(\\"validate\\", v5605.validateOutpostsAccessPointArn);
        request.addListener(\\"validate\\", v5606.validateOutpostsArn);
        request.addListener(\\"validate\\", v5607.validateArnRegion);
    }
    request.addListener(\\"validate\\", v5608.validateArnAccount);
    request.addListener(\\"validate\\", v5608.validateArnService);
    request.addListener(\\"build\\", this.populateUriFromAccessPointArn);
    request.addListener(\\"build\\", v5609.validatePopulateUriFromArn);
    return;
} request.addListener(\\"validate\\", this.validateBucketEndpoint); request.addListener(\\"validate\\", this.correctBucketRegionFromCache); request.onAsync(\\"extractError\\", this.requestBucketRegion); if (v3.isBrowser()) {
    request.onAsync(\\"retry\\", this.reqRegionForNetworkingError);
} };
const v5610 = {};
v5610.constructor = v5557;
v5557.prototype = v5610;
v5535.setupRequestListeners = v5557;
var v5611;
var v5612 = v40;
v5611 = function (req) { var params = req.params, scheme = req.httpRequest.endpoint.protocol, sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey; if (sensitive && scheme !== \\"https:\\") {
    var msg = \\"Cannot send SSE keys over HTTP. Set 'sslEnabled'\\" + \\"to 'true' in your configuration\\";
    throw v3.error(new v5612(), { code: \\"ConfigError\\", message: msg });
} };
const v5613 = {};
v5613.constructor = v5611;
v5611.prototype = v5613;
v5535.validateScheme = v5611;
var v5614;
var v5615 = v40;
v5614 = function (req) { if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {
    var msg = \\"Cannot send requests to root API with \`s3BucketEndpoint\` set.\\";
    throw v3.error(new v5615(), { code: \\"ConfigError\\", message: msg });
} };
const v5616 = {};
v5616.constructor = v5614;
v5614.prototype = v5616;
v5535.validateBucketEndpoint = v5614;
var v5617;
var v5618 = v5559;
v5617 = function validateArnRegion(req) { v5618.validateArnRegion(req, { allowFipsEndpoint: true }); };
const v5619 = {};
v5619.constructor = v5617;
v5617.prototype = v5619;
v5535.validateArnRegion = v5617;
var v5620;
var v5621 = v40;
v5620 = function validateArnResourceType(req) { var resource = req._parsedArn.resource; if (resource.indexOf(\\"accesspoint:\\") !== 0 && resource.indexOf(\\"accesspoint/\\") !== 0) {
    throw v3.error(new v5621(), { code: \\"InvalidARN\\", message: \\"ARN resource should begin with 'accesspoint/'\\" });
} };
const v5622 = {};
v5622.constructor = v5620;
v5620.prototype = v5622;
v5535.validateArnResourceType = v5620;
var v5623;
var v5624 = v40;
v5623 = function validateBucketName(req) { var service = req.service; var signatureVersion = service.getSignatureVersion(req); var bucket = req.params && req.params.Bucket; var key = req.params && req.params.Key; var slashIndex = bucket && bucket.indexOf(\\"/\\"); if (bucket && slashIndex >= 0) {
    if (typeof key === \\"string\\" && slashIndex > 0) {
        req.params = v3.copy(req.params);
        var prefix = bucket.substr(slashIndex + 1) || \\"\\";
        req.params.Key = prefix + \\"/\\" + key;
        req.params.Bucket = bucket.substr(0, slashIndex);
    }
    else if (signatureVersion === \\"v4\\") {
        var msg = \\"Bucket names cannot contain forward slashes. Bucket: \\" + bucket;
        throw v3.error(new v5624(), { code: \\"InvalidBucket\\", message: msg });
    }
} };
const v5625 = {};
v5625.constructor = v5623;
v5623.prototype = v5625;
v5535.validateBucketName = v5623;
var v5626;
v5626 = function isValidAccelerateOperation(operation) { var invalidOperations = [\\"createBucket\\", \\"deleteBucket\\", \\"listBuckets\\"]; return invalidOperations.indexOf(operation) === -1; };
const v5627 = {};
v5627.constructor = v5626;
v5626.prototype = v5627;
v5535.isValidAccelerateOperation = v5626;
var v5628;
var v5629 = v2560;
var v5630 = undefined;
v5628 = function optInUsEast1RegionalEndpoint(req) { var service = req.service; var config = service.config; config.s3UsEast1RegionalEndpoint = v5629(service._originalConfig, { env: \\"AWS_S3_US_EAST_1_REGIONAL_ENDPOINT\\", sharedConfig: \\"s3_us_east_1_regional_endpoint\\", clientConfig: \\"s3UsEast1RegionalEndpoint\\" }); if (!(service._originalConfig || {}).endpoint && req.httpRequest.region === \\"us-east-1\\" && config.s3UsEast1RegionalEndpoint === \\"regional\\" && req.httpRequest.endpoint.hostname.indexOf(\\"s3.amazonaws.com\\") >= 0) {
    var insertPoint = config.endpoint.indexOf(\\".amazonaws.com\\");
    regionalEndpoint = config.endpoint.substring(0, insertPoint) + \\".us-east-1\\" + config.endpoint.substring(insertPoint);
    req.httpRequest.updateEndpoint(v5630);
} };
const v5631 = {};
v5631.constructor = v5628;
v5628.prototype = v5631;
v5535.optInUsEast1RegionalEndpoint = v5628;
var v5632;
v5632 = function populateURI(req) { var httpRequest = req.httpRequest; var b = req.params.Bucket; var service = req.service; var endpoint = httpRequest.endpoint; if (b) {
    if (!service.pathStyleBucketName(b)) {
        if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {
            if (service.config.useDualstackEndpoint) {
                endpoint.hostname = b + \\".s3-accelerate.dualstack.amazonaws.com\\";
            }
            else {
                endpoint.hostname = b + \\".s3-accelerate.amazonaws.com\\";
            }
        }
        else if (!service.config.s3BucketEndpoint) {
            endpoint.hostname = b + \\".\\" + endpoint.hostname;
        }
        var port = endpoint.port;
        if (port !== 80 && port !== 443) {
            endpoint.host = endpoint.hostname + \\":\\" + endpoint.port;
        }
        else {
            endpoint.host = endpoint.hostname;
        }
        httpRequest.virtualHostedBucket = b;
        service.removeVirtualHostedBucketFromPath(req);
    }
} };
const v5633 = {};
v5633.constructor = v5632;
v5632.prototype = v5633;
v5535.populateURI = v5632;
var v5634;
var v5635 = v373;
v5634 = function removeVirtualHostedBucketFromPath(req) { var httpRequest = req.httpRequest; var bucket = httpRequest.virtualHostedBucket; if (bucket && httpRequest.path) {
    if (req.params && req.params.Key) {
        var encodedS3Key = \\"/\\" + v3.uriEscapePath(req.params.Key);
        if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === \\"?\\")) {
            return;
        }
    }
    httpRequest.path = httpRequest.path.replace(new v5635(\\"/\\" + bucket), \\"\\");
    if (httpRequest.path[0] !== \\"/\\") {
        httpRequest.path = \\"/\\" + httpRequest.path;
    }
} };
const v5636 = {};
v5636.constructor = v5634;
v5634.prototype = v5636;
v5535.removeVirtualHostedBucketFromPath = v5634;
var v5637;
var v5638 = v313;
var v5639 = v373;
v5637 = function populateUriFromAccessPointArn(req) { var accessPointArn = req._parsedArn; var isOutpostArn = accessPointArn.service === \\"s3-outposts\\"; var isObjectLambdaArn = accessPointArn.service === \\"s3-object-lambda\\"; var outpostsSuffix = isOutpostArn ? \\".\\" + accessPointArn.outpostId : \\"\\"; var serviceName = isOutpostArn ? \\"s3-outposts\\" : \\"s3-accesspoint\\"; var fipsSuffix = !isOutpostArn && req.service.config.useFipsEndpoint ? \\"-fips\\" : \\"\\"; var dualStackSuffix = !isOutpostArn && req.service.config.useDualstackEndpoint ? \\".dualstack\\" : \\"\\"; var endpoint = req.httpRequest.endpoint; var dnsSuffix = v5638.getEndpointSuffix(accessPointArn.region); var useArnRegion = req.service.config.s3UseArnRegion; endpoint.hostname = [accessPointArn.accessPoint + \\"-\\" + accessPointArn.accountId + outpostsSuffix, serviceName + fipsSuffix + dualStackSuffix, useArnRegion ? accessPointArn.region : req.service.config.region, dnsSuffix].join(\\".\\"); if (isObjectLambdaArn) {
    var serviceName = \\"s3-object-lambda\\";
    var accesspointName = accessPointArn.resource.split(\\"/\\")[1];
    var fipsSuffix = req.service.config.useFipsEndpoint ? \\"-fips\\" : \\"\\";
    endpoint.hostname = [accesspointName + \\"-\\" + accessPointArn.accountId, serviceName + fipsSuffix, useArnRegion ? accessPointArn.region : req.service.config.region, dnsSuffix].join(\\".\\");
} endpoint.host = endpoint.hostname; var encodedArn = v3.uriEscape(req.params.Bucket); var path = req.httpRequest.path; req.httpRequest.path = path.replace(new v5639(\\"/\\" + encodedArn), \\"\\"); if (req.httpRequest.path[0] !== \\"/\\") {
    req.httpRequest.path = \\"/\\" + req.httpRequest.path;
} req.httpRequest.region = accessPointArn.region; };
const v5640 = {};
v5640.constructor = v5637;
v5637.prototype = v5640;
v5535.populateUriFromAccessPointArn = v5637;
var v5641;
v5641 = function addExpect100Continue(req) { var len = req.httpRequest.headers[\\"Content-Length\\"]; if (v3.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof v3.stream.Stream)) {
    req.httpRequest.headers[\\"Expect\\"] = \\"100-continue\\";
} };
const v5642 = {};
v5642.constructor = v5641;
v5641.prototype = v5642;
v5535.addExpect100Continue = v5641;
var v5643;
v5643 = function addContentType(req) { var httpRequest = req.httpRequest; if (httpRequest.method === \\"GET\\" || httpRequest.method === \\"HEAD\\") {
    delete httpRequest.headers[\\"Content-Type\\"];
    return;
} if (!httpRequest.headers[\\"Content-Type\\"]) {
    httpRequest.headers[\\"Content-Type\\"] = \\"application/octet-stream\\";
} var contentType = httpRequest.headers[\\"Content-Type\\"]; if (v3.isBrowser()) {
    if (typeof httpRequest.body === \\"string\\" && !contentType.match(/;\\\\s*charset=/)) {
        var charset = \\"; charset=UTF-8\\";
        httpRequest.headers[\\"Content-Type\\"] += charset;
    }
    else {
        var replaceFn = function (_, prefix, charsetName) { return prefix + charsetName.toUpperCase(); };
        httpRequest.headers[\\"Content-Type\\"] = contentType.replace(/(;\\\\s*charset=)(.+)$/, replaceFn);
    }
} };
const v5644 = {};
v5644.constructor = v5643;
v5643.prototype = v5644;
v5535.addContentType = v5643;
var v5645;
v5645 = function willComputeChecksums(req) { var rules = req.service.api.operations[req.operation].input.members; var body = req.httpRequest.body; var needsContentMD5 = req.service.config.computeChecksums && rules.ContentMD5 && !req.params.ContentMD5 && body && (v3.Buffer.isBuffer(req.httpRequest.body) || typeof req.httpRequest.body === \\"string\\"); if (needsContentMD5 && req.service.shouldDisableBodySigning(req) && !req.isPresigned()) {
    return true;
} if (needsContentMD5 && this.getSignatureVersion(req) === \\"s3\\" && req.isPresigned()) {
    return true;
} return false; };
const v5646 = {};
v5646.constructor = v5645;
v5645.prototype = v5646;
v5535.willComputeChecksums = v5645;
var v5647;
v5647 = function computeContentMd5(req) { if (req.service.willComputeChecksums(req)) {
    var md5 = v91.md5(req.httpRequest.body, \\"base64\\");
    req.httpRequest.headers[\\"Content-MD5\\"] = md5;
} };
const v5648 = {};
v5648.constructor = v5647;
v5647.prototype = v5648;
v5535.computeContentMd5 = v5647;
var v5649;
v5649 = function computeSseCustomerKeyMd5(req) { var keys = { SSECustomerKey: \\"x-amz-server-side-encryption-customer-key-MD5\\", CopySourceSSECustomerKey: \\"x-amz-copy-source-server-side-encryption-customer-key-MD5\\" }; v3.each(keys, function (key, header) { if (req.params[key]) {
    var value = v91.md5(req.params[key], \\"base64\\");
    req.httpRequest.headers[header] = value;
} }); };
const v5650 = {};
v5650.constructor = v5649;
v5649.prototype = v5650;
v5535.computeSseCustomerKeyMd5 = v5649;
var v5651;
var v5652 = v5559;
v5651 = function pathStyleBucketName(bucketName) { if (this.config.s3ForcePathStyle)
    return true; if (this.config.s3BucketEndpoint)
    return false; if (v5652.dnsCompatibleBucketName(bucketName)) {
    return (this.config.sslEnabled && bucketName.match(/\\\\./)) ? true : false;
}
else {
    return true;
} };
const v5653 = {};
v5653.constructor = v5651;
v5651.prototype = v5653;
v5535.pathStyleBucketName = v5651;
var v5654;
const v5656 = {};
v5656.completeMultipartUpload = true;
v5656.copyObject = true;
v5656.uploadPartCopy = true;
var v5655 = v5656;
var v5657 = v40;
v5654 = function extractErrorFrom200Response(resp) { if (!v5655[resp.request.operation])
    return; var httpResponse = resp.httpResponse; if (httpResponse.body && httpResponse.body.toString().match(\\"<Error>\\")) {
    resp.data = null;
    var service = this.service ? this.service : this;
    service.extractError(resp);
    throw resp.error;
}
else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\\\\w_]/)) {
    resp.data = null;
    throw v3.error(new v5657(), { code: \\"InternalError\\", message: \\"S3 aborted request\\" });
} };
const v5658 = {};
v5658.constructor = v5654;
v5654.prototype = v5658;
v5535.extractErrorFrom200Response = v5654;
var v5659;
var v5660 = v5656;
const v5662 = [];
v5662.push(\\"AuthorizationHeaderMalformed\\", \\"BadRequest\\", \\"PermanentRedirect\\", 301);
var v5661 = v5662;
v5659 = function retryableError(error, request) { if (v5660[request.operation] && error.statusCode === 200) {
    return true;
}
else if (request._requestRegionForBucket && request.service.bucketRegionCache[request._requestRegionForBucket]) {
    return false;
}
else if (error && error.code === \\"RequestTimeout\\") {
    return true;
}
else if (error && v5661.indexOf(error.code) != -1 && error.region && error.region != request.httpRequest.region) {
    request.httpRequest.region = error.region;
    if (error.statusCode === 301) {
        request.service.updateReqBucketRegion(request);
    }
    return true;
}
else {
    var _super = v309.retryableError;
    return _super.call(this, error, request);
} };
const v5663 = {};
v5663.constructor = v5659;
v5659.prototype = v5663;
v5535.retryableError = v5659;
var v5664;
var v5665 = v2;
v5664 = function updateReqBucketRegion(request, region) { var httpRequest = request.httpRequest; if (typeof region === \\"string\\" && region.length) {
    httpRequest.region = region;
} if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\\\.amazonaws\\\\.com$/)) {
    return;
} var service = request.service; var s3Config = service.config; var s3BucketEndpoint = s3Config.s3BucketEndpoint; if (s3BucketEndpoint) {
    delete s3Config.s3BucketEndpoint;
} var newConfig = v3.copy(s3Config); delete newConfig.endpoint; newConfig.region = httpRequest.region; httpRequest.endpoint = (new v5665.S3(newConfig)).endpoint; service.populateURI(request); s3Config.s3BucketEndpoint = s3BucketEndpoint; httpRequest.headers.Host = httpRequest.endpoint.host; if (request._asm.currentState === \\"validate\\") {
    request.removeListener(\\"build\\", service.populateURI);
    request.addListener(\\"build\\", service.removeVirtualHostedBucketFromPath);
} };
const v5666 = {};
v5666.constructor = v5664;
v5664.prototype = v5666;
v5535.updateReqBucketRegion = v5664;
var v5667;
v5667 = function extractData(resp) { var req = resp.request; if (req.operation === \\"getBucketLocation\\") {
    var match = resp.httpResponse.body.toString().match(/>(.+)<\\\\/Location/);
    delete resp.data[\\"_\\"];
    if (match) {
        resp.data.LocationConstraint = match[1];
    }
    else {
        resp.data.LocationConstraint = \\"\\";
    }
} var bucket = req.params.Bucket || null; if (req.operation === \\"deleteBucket\\" && typeof bucket === \\"string\\" && !resp.error) {
    req.service.clearBucketRegionCache(bucket);
}
else {
    var headers = resp.httpResponse.headers || {};
    var region = headers[\\"x-amz-bucket-region\\"] || null;
    if (!region && req.operation === \\"createBucket\\" && !resp.error) {
        var createBucketConfiguration = req.params.CreateBucketConfiguration;
        if (!createBucketConfiguration) {
            region = \\"us-east-1\\";
        }
        else if (createBucketConfiguration.LocationConstraint === \\"EU\\") {
            region = \\"eu-west-1\\";
        }
        else {
            region = createBucketConfiguration.LocationConstraint;
        }
    }
    if (region) {
        if (bucket && region !== req.service.bucketRegionCache[bucket]) {
            req.service.bucketRegionCache[bucket] = region;
        }
    }
} req.service.extractRequestIds(resp); };
const v5668 = {};
v5668.constructor = v5667;
v5667.prototype = v5668;
v5535.extractData = v5667;
var v5669;
var v5670 = v40;
v5669 = function extractError(resp) { var codes = { 304: \\"NotModified\\", 403: \\"Forbidden\\", 400: \\"BadRequest\\", 404: \\"NotFound\\" }; var req = resp.request; var code = resp.httpResponse.statusCode; var body = resp.httpResponse.body || \\"\\"; var headers = resp.httpResponse.headers || {}; var region = headers[\\"x-amz-bucket-region\\"] || null; var bucket = req.params.Bucket || null; var bucketRegionCache = req.service.bucketRegionCache; if (region && bucket && region !== bucketRegionCache[bucket]) {
    bucketRegionCache[bucket] = region;
} var cachedRegion; if (codes[code] && body.length === 0) {
    if (bucket && !region) {
        cachedRegion = bucketRegionCache[bucket] || null;
        if (cachedRegion !== req.httpRequest.region) {
            region = cachedRegion;
        }
    }
    resp.error = v3.error(new v5670(), { code: codes[code], message: null, region: region });
}
else {
    var data = new v937.Parser().parse(body.toString());
    if (data.Region && !region) {
        region = data.Region;
        if (bucket && region !== bucketRegionCache[bucket]) {
            bucketRegionCache[bucket] = region;
        }
    }
    else if (bucket && !region && !data.Region) {
        cachedRegion = bucketRegionCache[bucket] || null;
        if (cachedRegion !== req.httpRequest.region) {
            region = cachedRegion;
        }
    }
    resp.error = v3.error(new v5621(), { code: data.Code || code, message: data.Message || null, region: region });
} req.service.extractRequestIds(resp); };
const v5671 = {};
v5671.constructor = v5669;
v5669.prototype = v5671;
v5535.extractError = v5669;
var v5672;
var v5673 = v5662;
v5672 = function requestBucketRegion(resp, done) { var error = resp.error; var req = resp.request; var bucket = req.params.Bucket || null; if (!error || !bucket || error.region || req.operation === \\"listObjects\\" || (v3.isNode() && req.operation === \\"headBucket\\") || (error.statusCode === 400 && req.operation !== \\"headObject\\") || v5673.indexOf(error.code) === -1) {
    return done();
} var reqOperation = v3.isNode() ? \\"headBucket\\" : \\"listObjects\\"; var reqParams = { Bucket: bucket }; if (reqOperation === \\"listObjects\\")
    reqParams.MaxKeys = 0; var regionReq = req.service[reqOperation](reqParams); regionReq._requestRegionForBucket = bucket; regionReq.send(function () { var region = req.service.bucketRegionCache[bucket] || null; error.region = region; done(); }); };
const v5674 = {};
v5674.constructor = v5672;
v5672.prototype = v5674;
v5535.requestBucketRegion = v5672;
var v5675;
var v5676 = v5559;
v5675 = function reqRegionForNetworkingError(resp, done) { if (!v3.isBrowser()) {
    return done();
} var error = resp.error; var request = resp.request; var bucket = request.params.Bucket; if (!error || error.code !== \\"NetworkingError\\" || !bucket || request.httpRequest.region === \\"us-east-1\\") {
    return done();
} var service = request.service; var bucketRegionCache = service.bucketRegionCache; var cachedRegion = bucketRegionCache[bucket] || null; if (cachedRegion && cachedRegion !== request.httpRequest.region) {
    service.updateReqBucketRegion(request, cachedRegion);
    done();
}
else if (!v5676.dnsCompatibleBucketName(bucket)) {
    service.updateReqBucketRegion(request, \\"us-east-1\\");
    if (bucketRegionCache[bucket] !== \\"us-east-1\\") {
        bucketRegionCache[bucket] = \\"us-east-1\\";
    }
    done();
}
else if (request.httpRequest.virtualHostedBucket) {
    var getRegionReq = service.listObjects({ Bucket: bucket, MaxKeys: 0 });
    service.updateReqBucketRegion(getRegionReq, \\"us-east-1\\");
    getRegionReq._requestRegionForBucket = bucket;
    getRegionReq.send(function () { var region = service.bucketRegionCache[bucket] || null; if (region && region !== request.httpRequest.region) {
        service.updateReqBucketRegion(request, region);
    } done(); });
}
else {
    done();
} };
const v5677 = {};
v5677.constructor = v5675;
v5675.prototype = v5677;
v5535.reqRegionForNetworkingError = v5675;
const v5678 = {};
v5535.bucketRegionCache = v5678;
var v5679;
var v5680 = v31;
v5679 = function (buckets) { var bucketRegionCache = this.bucketRegionCache; if (!buckets) {
    buckets = v5680.keys(bucketRegionCache);
}
else if (typeof buckets === \\"string\\") {
    buckets = [buckets];
} for (var i = 0; i < buckets.length; i++) {
    delete bucketRegionCache[buckets[i]];
} return bucketRegionCache; };
const v5681 = {};
v5681.constructor = v5679;
v5679.prototype = v5681;
v5535.clearBucketRegionCache = v5679;
var v5682;
v5682 = function correctBucketRegionFromCache(req) { var bucket = req.params.Bucket || null; if (bucket) {
    var service = req.service;
    var requestRegion = req.httpRequest.region;
    var cachedRegion = service.bucketRegionCache[bucket];
    if (cachedRegion && cachedRegion !== requestRegion) {
        service.updateReqBucketRegion(req, cachedRegion);
    }
} };
const v5683 = {};
v5683.constructor = v5682;
v5682.prototype = v5683;
v5535.correctBucketRegionFromCache = v5682;
var v5684;
v5684 = function extractRequestIds(resp) { var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers[\\"x-amz-id-2\\"] : null; var cfId = resp.httpResponse.headers ? resp.httpResponse.headers[\\"x-amz-cf-id\\"] : null; resp.extendedRequestId = extendedRequestId; resp.cfId = cfId; if (resp.error) {
    resp.error.requestId = resp.requestId || null;
    resp.error.extendedRequestId = extendedRequestId;
    resp.error.cfId = cfId;
} };
const v5685 = {};
v5685.constructor = v5684;
v5684.prototype = v5685;
v5535.extractRequestIds = v5684;
var v5686;
var v5687 = v40;
v5686 = function getSignedUrl(operation, params, callback) { params = v3.copy(params || {}); var expires = params.Expires || 900; if (typeof expires !== \\"number\\") {
    throw v3.error(new v5687(), { code: \\"InvalidParameterException\\", message: \\"The expiration must be a number, received \\" + typeof expires });
} delete params.Expires; var request = this.makeRequest(operation, params); if (callback) {
    v3.defer(function () { request.presign(expires, callback); });
}
else {
    return request.presign(expires, callback);
} };
const v5688 = {};
v5688.constructor = v5686;
v5686.prototype = v5688;
v5535.getSignedUrl = v5686;
var v5689;
v5689 = function createPresignedPost(params, callback) { if (typeof params === \\"function\\" && callback === undefined) {
    callback = params;
    params = null;
} params = v3.copy(params || {}); var boundParams = this.config.params || {}; var bucket = params.Bucket || boundParams.Bucket, self = this, config = this.config, endpoint = v3.copy(this.endpoint); if (!config.s3BucketEndpoint) {
    endpoint.pathname = \\"/\\" + bucket;
} function finalizePost() { return { url: v3.urlFormat(endpoint), fields: self.preparePostFields(config.credentials, config.region, bucket, params.Fields, params.Conditions, params.Expires) }; } if (callback) {
    config.getCredentials(function (err) { if (err) {
        callback(err);
    }
    else {
        try {
            callback(null, finalizePost());
        }
        catch (err) {
            callback(err);
        }
    } });
}
else {
    return finalizePost();
} };
const v5690 = {};
v5690.constructor = v5689;
v5689.prototype = v5690;
v5535.createPresignedPost = v5689;
var v5691;
var v5692 = v510;
var v5693 = v77;
v5691 = function preparePostFields(credentials, region, bucket, fields, conditions, expiresInSeconds) { var now = this.getSkewCorrectedDate(); if (!credentials || !region || !bucket) {
    throw new v5670(\\"Unable to create a POST object policy without a bucket,\\" + \\" region, and credentials\\");
} fields = v3.copy(fields || {}); conditions = (conditions || []).slice(0); expiresInSeconds = expiresInSeconds || 3600; var signingDate = v73.iso8601(now).replace(/[:\\\\-]|\\\\.\\\\d{3}/g, \\"\\"); var shortDate = signingDate.substr(0, 8); var scope = v5692.createScope(shortDate, region, \\"s3\\"); var credential = credentials.accessKeyId + \\"/\\" + scope; fields[\\"bucket\\"] = bucket; fields[\\"X-Amz-Algorithm\\"] = \\"AWS4-HMAC-SHA256\\"; fields[\\"X-Amz-Credential\\"] = credential; fields[\\"X-Amz-Date\\"] = signingDate; if (credentials.sessionToken) {
    fields[\\"X-Amz-Security-Token\\"] = credentials.sessionToken;
} for (var field in fields) {
    if (fields.hasOwnProperty(field)) {
        var condition = {};
        condition[field] = fields[field];
        conditions.push(condition);
    }
} fields.Policy = this.preparePostPolicy(new v5693(now.valueOf() + expiresInSeconds * 1000), conditions); fields[\\"X-Amz-Signature\\"] = v91.hmac(v5692.getSigningKey(credentials, shortDate, region, \\"s3\\", true), fields.Policy, \\"hex\\"); return fields; };
const v5694 = {};
v5694.constructor = v5691;
v5691.prototype = v5694;
v5535.preparePostFields = v5691;
var v5695;
var v5696 = v163;
v5695 = function preparePostPolicy(expiration, conditions) { return v37.encode(v5696.stringify({ expiration: v73.iso8601(expiration), conditions: conditions })); };
const v5697 = {};
v5697.constructor = v5695;
v5695.prototype = v5697;
v5535.preparePostPolicy = v5695;
var v5698;
v5698 = function prepareSignedUrl(request) { request.addListener(\\"validate\\", request.service.noPresignedContentLength); request.removeListener(\\"build\\", request.service.addContentType); if (!request.params.Body) {
    request.removeListener(\\"build\\", request.service.computeContentMd5);
}
else {
    request.addListener(\\"afterBuild\\", v428.COMPUTE_SHA256);
} };
const v5699 = {};
v5699.constructor = v5698;
v5698.prototype = v5699;
v5535.prepareSignedUrl = v5698;
var v5700;
v5700 = function disableBodySigning(request) { var headers = request.httpRequest.headers; if (!v113.hasOwnProperty.call(headers, \\"presigned-expires\\")) {
    headers[\\"X-Amz-Content-Sha256\\"] = \\"UNSIGNED-PAYLOAD\\";
} };
const v5701 = {};
v5701.constructor = v5700;
v5700.prototype = v5701;
v5535.disableBodySigning = v5700;
var v5702;
v5702 = function noPresignedContentLength(request) { if (request.params.ContentLength !== undefined) {
    throw v3.error(new v5670(), { code: \\"UnexpectedParameter\\", message: \\"ContentLength is not supported in pre-signed URLs.\\" });
} };
const v5703 = {};
v5703.constructor = v5702;
v5702.prototype = v5703;
v5535.noPresignedContentLength = v5702;
var v5704;
v5704 = function createBucket(params, callback) { if (typeof params === \\"function\\" || !params) {
    callback = callback || params;
    params = {};
} var hostname = this.endpoint.hostname; var copiedParams = v3.copy(params); if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {
    copiedParams.CreateBucketConfiguration = { LocationConstraint: this.config.region };
} return this.makeRequest(\\"createBucket\\", copiedParams, callback); };
const v5705 = {};
v5705.constructor = v5704;
v5704.prototype = v5705;
v5535.createBucket = v5704;
var v5706;
var v5707 = \\"s3-object-lambda\\";
var v5708 = v2;
v5706 = function writeGetObjectResponse(params, callback) { var request = this.makeRequest(\\"writeGetObjectResponse\\", v3.copy(params), callback); var hostname = this.endpoint.hostname; if (hostname.indexOf(this.config.region) !== -1) {
    hostname = hostname.replace(\\"s3.\\", v5707 + \\".\\");
}
else {
    hostname = hostname.replace(\\"s3.\\", v5707 + \\".\\" + this.config.region + \\".\\");
} request.httpRequest.endpoint = new v5708.Endpoint(hostname, this.config); return request; };
const v5709 = {};
v5709.constructor = v5706;
v5706.prototype = v5709;
v5535.writeGetObjectResponse = v5706;
var v5710;
v5710 = function upload(params, options, callback) { if (typeof options === \\"function\\" && callback === undefined) {
    callback = options;
    options = null;
} options = options || {}; options = v3.merge(options || {}, { service: this, params: params }); var uploader = new v5708.S3.ManagedUpload(options); if (typeof callback === \\"function\\")
    uploader.send(callback); return uploader; };
const v5711 = {};
v5711.constructor = v5710;
v5710.prototype = v5711;
v5535.upload = v5710;
var v5712;
var v5713 = v244;
var v5714 = \\"getSignedUrl\\";
v5712 = function promise() { var self = this; var args = v71.slice.call(arguments); return new v5713(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[v5714].apply(self, args); }); };
const v5715 = {};
v5715.constructor = v5712;
v5712.prototype = v5715;
v5535.getSignedUrlPromise = v5712;
v5532.prototype = v5535;
v5532.__super__ = v299;
const v5716 = {};
v5716[\\"2006-03-01\\"] = null;
v5532.services = v5716;
const v5717 = [];
v5717.push(\\"2006-03-01\\");
v5532.apiVersions = v5717;
v5532.serviceIdentifier = \\"s3\\";
var v5718;
var v5719 = v2;
var v5720 = v40;
v5718 = function ManagedUpload(options) { var self = this; v5719.SequentialExecutor.call(self); self.body = null; self.sliceFn = null; self.callback = null; self.parts = {}; self.completeInfo = []; self.fillQueue = function () { self.callback(new v5720(\\"Unsupported body payload \\" + typeof self.body)); }; self.configure(options); };
const v5721 = {};
v5721.constructor = v5718;
var v5722;
var v5723 = v33;
var v5724 = v40;
var v5725 = v40;
v5722 = function configure(options) { options = options || {}; this.partSize = this.minPartSize; if (options.queueSize)
    this.queueSize = options.queueSize; if (options.partSize)
    this.partSize = options.partSize; if (options.leavePartsOnError)
    this.leavePartsOnError = true; if (options.tags) {
    if (!v5723.isArray(options.tags)) {
        throw new v5724(\\"Tags must be specified as an array; \\" + typeof options.tags + \\" provided.\\");
    }
    this.tags = options.tags;
} if (this.partSize < this.minPartSize) {
    throw new v5725(\\"partSize must be greater than \\" + this.minPartSize);
} this.service = options.service; this.bindServiceObject(options.params); this.validateBody(); this.adjustTotalBytes(); };
const v5726 = {};
v5726.constructor = v5722;
v5722.prototype = v5726;
v5721.configure = v5722;
v5721.leavePartsOnError = false;
v5721.queueSize = 4;
v5721.partSize = null;
v5721.minPartSize = 5242880;
v5721.maxTotalParts = 10000;
var v5727;
v5727 = function (callback) { var self = this; self.failed = false; self.callback = callback || function (err) { if (err)
    throw err; }; var runFill = true; if (self.sliceFn) {
    self.fillQueue = self.fillBuffer;
}
else if (v3.isNode()) {
    var Stream = v3.stream.Stream;
    if (self.body instanceof Stream) {
        runFill = false;
        self.fillQueue = self.fillStream;
        self.partBuffers = [];
        self.body.on(\\"error\\", function (err) { self.cleanup(err); }).on(\\"readable\\", function () { self.fillQueue(); }).on(\\"end\\", function () { self.isDoneChunking = true; self.numParts = self.totalPartNumbers; self.fillQueue.call(self); if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {
            self.finishMultiPart();
        } });
    }
} if (runFill)
    self.fillQueue.call(self); };
const v5728 = {};
v5728.constructor = v5727;
v5727.prototype = v5728;
v5721.send = v5727;
var v5729;
var v5730 = v40;
v5729 = function () { var self = this; if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {
    self.singlePart.abort();
}
else {
    self.cleanup(v3.error(new v5730(\\"Request aborted by user\\"), { code: \\"RequestAbortedError\\", retryable: false }));
} };
const v5731 = {};
v5731.constructor = v5729;
v5729.prototype = v5731;
v5721.abort = v5729;
var v5732;
var v5733 = v40;
v5732 = function validateBody() { var self = this; self.body = self.service.config.params.Body; if (typeof self.body === \\"string\\") {
    self.body = v41.toBuffer(self.body);
}
else if (!self.body) {
    throw new v5733(\\"params.Body is required\\");
} self.sliceFn = v3.arraySliceFn(self.body); };
const v5734 = {};
v5734.constructor = v5732;
v5732.prototype = v5734;
v5721.validateBody = v5732;
var v5735;
var v5736 = v2;
var v5737 = v31;
v5735 = function bindServiceObject(params) { params = params || {}; var self = this; if (!self.service) {
    self.service = new v5736.S3({ params: params });
}
else {
    var service = self.service;
    var config = v3.copy(service.config);
    config.signatureVersion = service.getSignatureVersion();
    self.service = new service.constructor.__super__(config);
    self.service.config.params = v3.merge(self.service.config.params || {}, params);
    v5737.defineProperty(self.service, \\"_originalConfig\\", { get: function () { return service._originalConfig; }, enumerable: false, configurable: true });
} };
const v5738 = {};
v5738.constructor = v5735;
v5735.prototype = v5738;
v5721.bindServiceObject = v5735;
var v5739;
var v5740 = v56;
var v5741 = v787;
v5739 = function adjustTotalBytes() { var self = this; try {
    self.totalBytes = v5740(self.body);
}
catch (e) { } if (self.totalBytes) {
    var newPartSize = v5741.ceil(self.totalBytes / self.maxTotalParts);
    if (newPartSize > self.partSize)
        self.partSize = newPartSize;
}
else {
    self.totalBytes = undefined;
} };
const v5742 = {};
v5742.constructor = v5739;
v5739.prototype = v5742;
v5721.adjustTotalBytes = v5739;
v5721.isDoneChunking = false;
v5721.partPos = 0;
v5721.totalChunkedBytes = 0;
v5721.totalUploadedBytes = 0;
v5721.totalBytes = undefined;
v5721.numParts = 0;
v5721.totalPartNumbers = 0;
v5721.activeParts = 0;
v5721.doneParts = 0;
v5721.parts = null;
v5721.completeInfo = null;
v5721.failed = false;
v5721.multipartReq = null;
v5721.partBuffers = null;
v5721.partBufferLength = 0;
var v5743;
var v5744 = v56;
v5743 = function fillBuffer() { var self = this; var bodyLen = v5744(self.body); if (bodyLen === 0) {
    self.isDoneChunking = true;
    self.numParts = 1;
    self.nextChunk(self.body);
    return;
} while (self.activeParts < self.queueSize && self.partPos < bodyLen) {
    var endPos = v5741.min(self.partPos + self.partSize, bodyLen);
    var buf = self.sliceFn.call(self.body, self.partPos, endPos);
    self.partPos += self.partSize;
    if (v5740(buf) < self.partSize || self.partPos === bodyLen) {
        self.isDoneChunking = true;
        self.numParts = self.totalPartNumbers + 1;
    }
    self.nextChunk(buf);
} };
const v5745 = {};
v5745.constructor = v5743;
v5743.prototype = v5745;
v5721.fillBuffer = v5743;
var v5746;
var v5747 = v1816;
var v5748 = v1816;
var v5749 = undefined;
v5746 = function fillStream() { var self = this; if (self.activeParts >= self.queueSize)
    return; var buf = self.body.read(self.partSize - self.partBufferLength) || self.body.read(); if (buf) {
    self.partBuffers.push(buf);
    self.partBufferLength += buf.length;
    self.totalChunkedBytes += buf.length;
} if (self.partBufferLength >= self.partSize) {
    var pbuf = self.partBuffers.length === 1 ? self.partBuffers[0] : v5747.concat(self.partBuffers);
    self.partBuffers = [];
    self.partBufferLength = 0;
    if (pbuf.length > self.partSize) {
        var rest = pbuf.slice(self.partSize);
        self.partBuffers.push(rest);
        self.partBufferLength += rest.length;
        pbuf = pbuf.slice(0, self.partSize);
    }
    self.nextChunk(pbuf);
} if (self.isDoneChunking && !self.isDoneSending) {
    pbuf = self.partBuffers.length === 1 ? self.partBuffers[0] : v5748.concat(self.partBuffers);
    self.partBuffers = [];
    self.partBufferLength = 0;
    self.totalBytes = self.totalChunkedBytes;
    self.isDoneSending = true;
    if (self.numParts === 0 || undefined > 0) {
        self.numParts++;
        self.nextChunk(v5749);
    }
} self.body.read(0); };
const v5750 = {};
v5750.constructor = v5746;
v5746.prototype = v5750;
v5721.fillStream = v5746;
var v5751;
v5751 = function nextChunk(chunk) { var self = this; if (self.failed)
    return null; var partNumber = ++self.totalPartNumbers; if (self.isDoneChunking && partNumber === 1) {
    var params = { Body: chunk };
    if (this.tags) {
        params.Tagging = this.getTaggingHeader();
    }
    var req = self.service.putObject(params);
    req._managedUpload = self;
    req.on(\\"httpUploadProgress\\", self.progress).send(self.finishSinglePart);
    self.singlePart = req;
    return null;
}
else if (self.service.config.params.ContentMD5) {
    var err = v3.error(new v5733(\\"The Content-MD5 you specified is invalid for multi-part uploads.\\"), { code: \\"InvalidDigest\\", retryable: false });
    self.cleanup(err);
    return null;
} if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {
    return null;
} self.activeParts++; if (!self.service.config.params.UploadId) {
    if (!self.multipartReq) {
        self.multipartReq = self.service.createMultipartUpload();
        self.multipartReq.on(\\"success\\", function (resp) { self.service.config.params.UploadId = resp.data.UploadId; self.multipartReq = null; });
        self.queueChunks(chunk, partNumber);
        self.multipartReq.on(\\"error\\", function (err) { self.cleanup(err); });
        self.multipartReq.send();
    }
    else {
        self.queueChunks(chunk, partNumber);
    }
}
else {
    self.uploadPart(chunk, partNumber);
} };
const v5752 = {};
v5752.constructor = v5751;
v5751.prototype = v5752;
v5721.nextChunk = v5751;
var v5753;
v5753 = function getTaggingHeader() { var kvPairStrings = []; for (var i = 0; i < this.tags.length; i++) {
    kvPairStrings.push(v3.uriEscape(this.tags[i].Key) + \\"=\\" + v3.uriEscape(this.tags[i].Value));
} return kvPairStrings.join(\\"&\\"); };
const v5754 = {};
v5754.constructor = v5753;
v5753.prototype = v5754;
v5721.getTaggingHeader = v5753;
var v5755;
var v5756 = v40;
v5755 = function uploadPart(chunk, partNumber) { var self = this; var partParams = { Body: chunk, ContentLength: v55.byteLength(chunk), PartNumber: partNumber }; var partInfo = { ETag: null, PartNumber: partNumber }; self.completeInfo[partNumber] = partInfo; var req = self.service.uploadPart(partParams); self.parts[partNumber] = req; req._lastUploadedBytes = 0; req._managedUpload = self; req.on(\\"httpUploadProgress\\", self.progress); req.send(function (err, data) { delete self.parts[partParams.PartNumber]; self.activeParts--; if (!err && (!data || !data.ETag)) {
    var message = \\"No access to ETag property on response.\\";
    if (v3.isBrowser()) {
        message += \\" Check CORS configuration to expose ETag header.\\";
    }
    err = v3.error(new v5756(message), { code: \\"ETagMissing\\", retryable: false });
} if (err)
    return self.cleanup(err); if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null)
    return null; partInfo.ETag = data.ETag; self.doneParts++; if (self.isDoneChunking && self.doneParts === self.totalPartNumbers) {
    self.finishMultiPart();
}
else {
    self.fillQueue.call(self);
} }); };
const v5757 = {};
v5757.constructor = v5755;
v5755.prototype = v5757;
v5721.uploadPart = v5755;
var v5758;
v5758 = function queueChunks(chunk, partNumber) { var self = this; self.multipartReq.on(\\"success\\", function () { self.uploadPart(chunk, partNumber); }); };
const v5759 = {};
v5759.constructor = v5758;
v5758.prototype = v5759;
v5721.queueChunks = v5758;
var v5760;
v5760 = function cleanup(err) { var self = this; if (self.failed)
    return; if (typeof self.body.removeAllListeners === \\"function\\" && typeof self.body.resume === \\"function\\") {
    self.body.removeAllListeners(\\"readable\\");
    self.body.removeAllListeners(\\"end\\");
    self.body.resume();
} if (self.multipartReq) {
    self.multipartReq.removeAllListeners(\\"success\\");
    self.multipartReq.removeAllListeners(\\"error\\");
    self.multipartReq.removeAllListeners(\\"complete\\");
    delete self.multipartReq;
} if (self.service.config.params.UploadId && !self.leavePartsOnError) {
    self.service.abortMultipartUpload().send();
}
else if (self.leavePartsOnError) {
    self.isDoneChunking = false;
} v3.each(self.parts, function (partNumber, part) { part.removeAllListeners(\\"complete\\"); part.abort(); }); self.activeParts = 0; self.partPos = 0; self.numParts = 0; self.totalPartNumbers = 0; self.parts = {}; self.failed = true; self.callback(err); };
const v5761 = {};
v5761.constructor = v5760;
v5760.prototype = v5761;
v5721.cleanup = v5760;
var v5762;
var v5763 = v33;
var v5764 = v136;
v5762 = function finishMultiPart() { var self = this; var completeParams = { MultipartUpload: { Parts: self.completeInfo.slice(1) } }; self.service.completeMultipartUpload(completeParams, function (err, data) { if (err) {
    return self.cleanup(err);
} if (data && typeof data.Location === \\"string\\") {
    data.Location = data.Location.replace(/%2F/g, \\"/\\");
} if (v5763.isArray(self.tags)) {
    for (var i = 0; i < self.tags.length; i++) {
        self.tags[i].Value = v5764(self.tags[i].Value);
    }
    self.service.putObjectTagging({ Tagging: { TagSet: self.tags } }, function (e, d) { if (e) {
        self.callback(e);
    }
    else {
        self.callback(e, data);
    } });
}
else {
    self.callback(err, data);
} }); };
const v5765 = {};
v5765.constructor = v5762;
v5762.prototype = v5765;
v5721.finishMultiPart = v5762;
var v5766;
v5766 = function finishSinglePart(err, data) { var upload = this.request._managedUpload; var httpReq = this.request.httpRequest; var endpoint = httpReq.endpoint; if (err)
    return upload.callback(err); data.Location = [endpoint.protocol, \\"//\\", endpoint.host, httpReq.path].join(\\"\\"); data.key = this.request.params.Key; data.Key = this.request.params.Key; data.Bucket = this.request.params.Bucket; upload.callback(err, data); };
const v5767 = {};
v5767.constructor = v5766;
v5766.prototype = v5767;
v5721.finishSinglePart = v5766;
var v5768;
v5768 = function progress(info) { var upload = this._managedUpload; if (this.operation === \\"putObject\\") {
    info.part = 1;
    info.key = this.params.Key;
}
else {
    upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;
    this._lastUploadedBytes = info.loaded;
    info = { loaded: upload.totalUploadedBytes, total: upload.totalBytes, part: this.params.PartNumber, key: this.params.Key };
} upload.emit(\\"httpUploadProgress\\", [info]); };
const v5769 = {};
v5769.constructor = v5768;
v5768.prototype = v5769;
v5721.progress = v5768;
v5721.listeners = v403;
v5721.on = v405;
v5721.onAsync = v407;
v5721.removeListener = v409;
v5721.removeAllListeners = v411;
v5721.emit = v413;
v5721.callListeners = v415;
v5721.addListeners = v418;
v5721.addNamedListener = v420;
v5721.addNamedAsyncListener = v422;
v5721.addNamedListeners = v424;
v5721.addListener = v405;
var v5770;
var v5771 = v244;
var v5772 = \\"send\\";
v5770 = function promise() { var self = this; var args = v71.slice.call(arguments); return new v5771(function (resolve, reject) { args.push(function (err, data) { if (err) {
    reject(err);
}
else {
    resolve(data);
} }); self[v5772].apply(self, args); }); };
const v5773 = {};
v5773.constructor = v5770;
v5770.prototype = v5773;
v5721.promise = v5770;
v5718.prototype = v5721;
v5718.__super__ = v31;
var v5774;
v5774 = function addPromisesToClass(PromiseDependency) { this.prototype.promise = v3.promisifyMethod(\\"send\\", PromiseDependency); };
const v5775 = {};
v5775.constructor = v5774;
v5774.prototype = v5775;
v5718.addPromisesToClass = v5774;
var v5776;
v5776 = function deletePromisesFromClass() { delete this.prototype.promise; };
const v5777 = {};
v5777.constructor = v5776;
v5776.prototype = v5777;
v5718.deletePromisesFromClass = v5776;
v5532.ManagedUpload = v5718;
var v5778;
v5778 = function addPromisesToClass(PromiseDependency) { this.prototype.getSignedUrlPromise = v3.promisifyMethod(\\"getSignedUrl\\", PromiseDependency); };
const v5779 = {};
v5779.constructor = v5778;
v5778.prototype = v5779;
v5532.addPromisesToClass = v5778;
var v5780;
v5780 = function deletePromisesFromClass() { delete this.prototype.getSignedUrlPromise; };
const v5781 = {};
v5781.constructor = v5780;
v5780.prototype = v5781;
v5532.deletePromisesFromClass = v5780;
v2.S3 = v5532;
var v5782;
var v5783 = v299;
var v5784 = v31;
v5782 = function () { if (v5783 !== v5784) {
    return v5783.apply(this, arguments);
} };
const v5785 = Object.create(v309);
v5785.constructor = v5782;
const v5786 = {};
const v5787 = [];
var v5788;
var v5789 = v31;
var v5790 = v5785;
v5788 = function EVENTS_BUBBLE(event) { var baseClass = v5789.getPrototypeOf(v5790); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5791 = {};
v5791.constructor = v5788;
v5788.prototype = v5791;
v5787.push(v5788);
v5786.apiCallAttempt = v5787;
const v5792 = [];
var v5793;
v5793 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5539.getPrototypeOf(v5790); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5794 = {};
v5794.constructor = v5793;
v5793.prototype = v5794;
v5792.push(v5793);
v5786.apiCall = v5792;
v5785._events = v5786;
v5785.MONITOR_EVENTS_BUBBLE = v5788;
v5785.CALL_EVENTS_BUBBLE = v5793;
var v5795;
var v5796 = v5559;
var v5797 = v5559;
var v5798 = v5559;
var v5799 = v5559;
var v5800 = v5559;
var v5801 = v5559;
var v5802 = v5559;
v5795 = function setupRequestListeners(request) { request.addListener(\\"extractError\\", this.extractHostId); request.addListener(\\"extractData\\", this.extractHostId); request.addListener(\\"validate\\", this.validateAccountId); var isArnInBucket = v5796.isArnInParam(request, \\"Bucket\\"); var isArnInName = v5797.isArnInParam(request, \\"Name\\"); if (isArnInBucket) {
    request._parsedArn = v2654.parse(request.params[\\"Bucket\\"]);
    request.addListener(\\"validate\\", this.validateOutpostsBucketArn);
    request.addListener(\\"validate\\", v5798.validateOutpostsArn);
    request.addListener(\\"afterBuild\\", this.addOutpostIdHeader);
}
else if (isArnInName) {
    request._parsedArn = v2654.parse(request.params[\\"Name\\"]);
    request.addListener(\\"validate\\", v5799.validateOutpostsAccessPointArn);
    request.addListener(\\"validate\\", v5800.validateOutpostsArn);
    request.addListener(\\"afterBuild\\", this.addOutpostIdHeader);
} if (isArnInBucket || isArnInName) {
    request.addListener(\\"validate\\", this.validateArnRegion);
    request.addListener(\\"validate\\", this.validateArnAccountWithParams, true);
    request.addListener(\\"validate\\", v5801.validateArnAccount);
    request.addListener(\\"validate\\", v5799.validateArnService);
    request.addListener(\\"build\\", this.populateParamFromArn, true);
    request.addListener(\\"build\\", this.populateUriFromArn);
    request.addListener(\\"build\\", v5802.validatePopulateUriFromArn);
} if (request.params.OutpostId && (request.operation === \\"createBucket\\" || request.operation === \\"listRegionalBuckets\\")) {
    request.addListener(\\"build\\", this.populateEndpointForOutpostId);
} };
const v5803 = {};
v5803.constructor = v5795;
v5795.prototype = v5803;
v5785.setupRequestListeners = v5795;
var v5804;
v5804 = function addOutpostIdHeader(req) { req.httpRequest.headers[\\"x-amz-outpost-id\\"] = req._parsedArn.outpostId; };
const v5805 = {};
v5805.constructor = v5804;
v5804.prototype = v5805;
v5785.addOutpostIdHeader = v5804;
var v5806;
var v5807 = v40;
var v5808 = v5559;
var v5809 = v40;
v5806 = function validateOutpostsBucketArn(req) { var parsedArn = req._parsedArn; var delimiter = parsedArn.resource[\\"outpost\\".length]; if (parsedArn.resource.split(delimiter).length !== 4) {
    throw v3.error(new v5807(), { code: \\"InvalidARN\\", message: \\"Bucket ARN should have two resources outpost/{outpostId}/bucket/{accesspointName}\\" });
} var bucket = parsedArn.resource.split(delimiter)[3]; if (!v5808.dnsCompatibleBucketName(bucket) || bucket.match(/\\\\./)) {
    throw v3.error(new v5809(), { code: \\"InvalidARN\\", message: \\"Bucket ARN is not DNS compatible. Got \\" + bucket });
} req._parsedArn.bucket = bucket; };
const v5810 = {};
v5810.constructor = v5806;
v5806.prototype = v5810;
v5785.validateOutpostsBucketArn = v5806;
var v5811;
var v5812 = v5559;
v5811 = function populateParamFromArn(req) { var parsedArn = req._parsedArn; if (v5812.isArnInParam(req, \\"Bucket\\")) {
    req.params.Bucket = parsedArn.bucket;
}
else if (v5812.isArnInParam(req, \\"Name\\")) {
    req.params.Name = parsedArn.accessPoint;
} };
const v5813 = {};
v5813.constructor = v5811;
v5811.prototype = v5813;
v5785.populateParamFromArn = v5811;
var v5814;
v5814 = function populateUriFromArn(req) { var parsedArn = req._parsedArn; var endpoint = req.httpRequest.endpoint; var useArnRegion = req.service.config.s3UseArnRegion; var useFipsEndpoint = req.service.config.useFipsEndpoint; endpoint.hostname = [\\"s3-outposts\\" + (useFipsEndpoint ? \\"-fips\\" : \\"\\"), useArnRegion ? parsedArn.region : req.service.config.region, \\"amazonaws.com\\"].join(\\".\\"); endpoint.host = endpoint.hostname; };
const v5815 = {};
v5815.constructor = v5814;
v5814.prototype = v5815;
v5785.populateUriFromArn = v5814;
var v5816;
v5816 = function populateEndpointForOutpostId(req) { var endpoint = req.httpRequest.endpoint; var useFipsEndpoint = req.service.config.useFipsEndpoint; endpoint.hostname = [\\"s3-outposts\\" + (useFipsEndpoint ? \\"-fips\\" : \\"\\"), req.service.config.region, \\"amazonaws.com\\"].join(\\".\\"); endpoint.host = endpoint.hostname; };
const v5817 = {};
v5817.constructor = v5816;
v5816.prototype = v5817;
v5785.populateEndpointForOutpostId = v5816;
var v5818;
v5818 = function (response) { var hostId = response.httpResponse.headers ? response.httpResponse.headers[\\"x-amz-id-2\\"] : null; response.extendedRequestId = hostId; if (response.error) {
    response.error.extendedRequestId = hostId;
} };
const v5819 = {};
v5819.constructor = v5818;
v5818.prototype = v5819;
v5785.extractHostId = v5818;
var v5820;
var v5821 = v5559;
v5820 = function validateArnRegion(req) { v5821.validateArnRegion(req, { allowFipsEndpoint: true }); };
const v5822 = {};
v5822.constructor = v5820;
v5820.prototype = v5822;
v5785.validateArnRegion = v5820;
var v5823;
var v5824 = v40;
v5823 = function validateArnAccountWithParams(req) { var params = req.params; var inputModel = req.service.api.operations[req.operation].input; if (inputModel.members.AccountId) {
    var parsedArn = req._parsedArn;
    if (parsedArn.accountId) {
        if (params.AccountId) {
            if (params.AccountId !== parsedArn.accountId) {
                throw v3.error(new v5824(), { code: \\"ValidationError\\", message: \\"AccountId in ARN and request params should be same.\\" });
            }
        }
        else {
            params.AccountId = parsedArn.accountId;
        }
    }
} };
const v5825 = {};
v5825.constructor = v5823;
v5823.prototype = v5825;
v5785.validateArnAccountWithParams = v5823;
var v5826;
var v5827 = v40;
var v5828 = v40;
var v5829 = v40;
v5826 = function (request) { var params = request.params; if (!v113.hasOwnProperty.call(params, \\"AccountId\\"))
    return; var accountId = params.AccountId; if (typeof accountId !== \\"string\\") {
    throw v3.error(new v5827(), { code: \\"ValidationError\\", message: \\"AccountId must be a string.\\" });
} if (accountId.length < 1 || accountId.length > 63) {
    throw v3.error(new v5828(), { code: \\"ValidationError\\", message: \\"AccountId length should be between 1 to 63 characters, inclusive.\\" });
} var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9]$/; if (!hostPattern.test(accountId)) {
    throw v3.error(new v5829(), { code: \\"ValidationError\\", message: \\"AccountId should be hostname compatible. AccountId: \\" + accountId });
} };
const v5830 = {};
v5830.constructor = v5826;
v5826.prototype = v5830;
v5785.validateAccountId = v5826;
var v5831;
v5831 = function getSigningName(req) { var _super = v309.getSigningName; if (req && req._parsedArn && req._parsedArn.service) {
    return req._parsedArn.service;
}
else if (req.params.OutpostId && (req.operation === \\"createBucket\\" || req.operation === \\"listRegionalBuckets\\")) {
    return \\"s3-outposts\\";
}
else {
    return _super.call(this, req);
} };
const v5832 = {};
v5832.constructor = v5831;
v5831.prototype = v5832;
v5785.getSigningName = v5831;
v5782.prototype = v5785;
v5782.__super__ = v299;
const v5833 = {};
v5833[\\"2018-08-20\\"] = null;
v5782.services = v5833;
const v5834 = [];
v5834.push(\\"2018-08-20\\");
v5782.apiVersions = v5834;
v5782.serviceIdentifier = \\"s3control\\";
v2.S3Control = v5782;
var v5835;
var v5836 = v299;
var v5837 = v31;
v5835 = function () { if (v5836 !== v5837) {
    return v5836.apply(this, arguments);
} };
const v5838 = Object.create(v309);
v5838.constructor = v5835;
const v5839 = {};
const v5840 = [];
var v5841;
var v5842 = v31;
var v5843 = v5838;
v5841 = function EVENTS_BUBBLE(event) { var baseClass = v5842.getPrototypeOf(v5843); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5844 = {};
v5844.constructor = v5841;
v5841.prototype = v5844;
v5840.push(v5841);
v5839.apiCallAttempt = v5840;
const v5845 = [];
var v5846;
v5846 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5789.getPrototypeOf(v5843); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5847 = {};
v5847.constructor = v5846;
v5846.prototype = v5847;
v5845.push(v5846);
v5839.apiCall = v5845;
v5838._events = v5839;
v5838.MONITOR_EVENTS_BUBBLE = v5841;
v5838.CALL_EVENTS_BUBBLE = v5846;
v5835.prototype = v5838;
v5835.__super__ = v299;
const v5848 = {};
v5848[\\"2015-12-10\\"] = null;
v5835.services = v5848;
const v5849 = [];
v5849.push(\\"2015-12-10\\");
v5835.apiVersions = v5849;
v5835.serviceIdentifier = \\"servicecatalog\\";
v2.ServiceCatalog = v5835;
var v5850;
var v5851 = v299;
var v5852 = v31;
v5850 = function () { if (v5851 !== v5852) {
    return v5851.apply(this, arguments);
} };
const v5853 = Object.create(v309);
v5853.constructor = v5850;
const v5854 = {};
const v5855 = [];
var v5856;
var v5857 = v31;
var v5858 = v5853;
v5856 = function EVENTS_BUBBLE(event) { var baseClass = v5857.getPrototypeOf(v5858); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5859 = {};
v5859.constructor = v5856;
v5856.prototype = v5859;
v5855.push(v5856);
v5854.apiCallAttempt = v5855;
const v5860 = [];
var v5861;
v5861 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5842.getPrototypeOf(v5858); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5862 = {};
v5862.constructor = v5861;
v5861.prototype = v5862;
v5860.push(v5861);
v5854.apiCall = v5860;
v5853._events = v5854;
v5853.MONITOR_EVENTS_BUBBLE = v5856;
v5853.CALL_EVENTS_BUBBLE = v5861;
v5850.prototype = v5853;
v5850.__super__ = v299;
const v5863 = {};
v5863[\\"2010-12-01\\"] = null;
v5850.services = v5863;
const v5864 = [];
v5864.push(\\"2010-12-01\\");
v5850.apiVersions = v5864;
v5850.serviceIdentifier = \\"ses\\";
v2.SES = v5850;
var v5865;
var v5866 = v299;
var v5867 = v31;
v5865 = function () { if (v5866 !== v5867) {
    return v5866.apply(this, arguments);
} };
const v5868 = Object.create(v309);
v5868.constructor = v5865;
const v5869 = {};
const v5870 = [];
var v5871;
var v5872 = v31;
var v5873 = v5868;
v5871 = function EVENTS_BUBBLE(event) { var baseClass = v5872.getPrototypeOf(v5873); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5874 = {};
v5874.constructor = v5871;
v5871.prototype = v5874;
v5870.push(v5871);
v5869.apiCallAttempt = v5870;
const v5875 = [];
var v5876;
v5876 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5857.getPrototypeOf(v5873); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5877 = {};
v5877.constructor = v5876;
v5876.prototype = v5877;
v5875.push(v5876);
v5869.apiCall = v5875;
v5868._events = v5869;
v5868.MONITOR_EVENTS_BUBBLE = v5871;
v5868.CALL_EVENTS_BUBBLE = v5876;
v5865.prototype = v5868;
v5865.__super__ = v299;
const v5878 = {};
v5878[\\"2016-06-02\\"] = null;
v5865.services = v5878;
const v5879 = [];
v5879.push(\\"2016-06-02\\");
v5865.apiVersions = v5879;
v5865.serviceIdentifier = \\"shield\\";
v2.Shield = v5865;
var v5880;
var v5881 = v299;
var v5882 = v31;
v5880 = function () { if (v5881 !== v5882) {
    return v5881.apply(this, arguments);
} };
const v5883 = Object.create(v309);
v5883.constructor = v5880;
const v5884 = {};
const v5885 = [];
var v5886;
var v5887 = v31;
var v5888 = v5883;
v5886 = function EVENTS_BUBBLE(event) { var baseClass = v5887.getPrototypeOf(v5888); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5889 = {};
v5889.constructor = v5886;
v5886.prototype = v5889;
v5885.push(v5886);
v5884.apiCallAttempt = v5885;
const v5890 = [];
var v5891;
v5891 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5872.getPrototypeOf(v5888); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5892 = {};
v5892.constructor = v5891;
v5891.prototype = v5892;
v5890.push(v5891);
v5884.apiCall = v5890;
v5883._events = v5884;
v5883.MONITOR_EVENTS_BUBBLE = v5886;
v5883.CALL_EVENTS_BUBBLE = v5891;
v5880.prototype = v5883;
v5880.__super__ = v299;
const v5893 = {};
v5893[\\"2009-04-15\\"] = null;
v5880.services = v5893;
const v5894 = [];
v5894.push(\\"2009-04-15\\");
v5880.apiVersions = v5894;
v5880.serviceIdentifier = \\"simpledb\\";
v2.SimpleDB = v5880;
var v5895;
var v5896 = v299;
var v5897 = v31;
v5895 = function () { if (v5896 !== v5897) {
    return v5896.apply(this, arguments);
} };
const v5898 = Object.create(v309);
v5898.constructor = v5895;
const v5899 = {};
const v5900 = [];
var v5901;
var v5902 = v31;
var v5903 = v5898;
v5901 = function EVENTS_BUBBLE(event) { var baseClass = v5902.getPrototypeOf(v5903); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5904 = {};
v5904.constructor = v5901;
v5901.prototype = v5904;
v5900.push(v5901);
v5899.apiCallAttempt = v5900;
const v5905 = [];
var v5906;
v5906 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5887.getPrototypeOf(v5903); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5907 = {};
v5907.constructor = v5906;
v5906.prototype = v5907;
v5905.push(v5906);
v5899.apiCall = v5905;
v5898._events = v5899;
v5898.MONITOR_EVENTS_BUBBLE = v5901;
v5898.CALL_EVENTS_BUBBLE = v5906;
v5895.prototype = v5898;
v5895.__super__ = v299;
const v5908 = {};
v5908[\\"2016-10-24\\"] = null;
v5895.services = v5908;
const v5909 = [];
v5909.push(\\"2016-10-24\\");
v5895.apiVersions = v5909;
v5895.serviceIdentifier = \\"sms\\";
v2.SMS = v5895;
var v5910;
var v5911 = v299;
var v5912 = v31;
v5910 = function () { if (v5911 !== v5912) {
    return v5911.apply(this, arguments);
} };
const v5913 = Object.create(v309);
v5913.constructor = v5910;
const v5914 = {};
const v5915 = [];
var v5916;
var v5917 = v31;
var v5918 = v5913;
v5916 = function EVENTS_BUBBLE(event) { var baseClass = v5917.getPrototypeOf(v5918); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5919 = {};
v5919.constructor = v5916;
v5916.prototype = v5919;
v5915.push(v5916);
v5914.apiCallAttempt = v5915;
const v5920 = [];
var v5921;
v5921 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5902.getPrototypeOf(v5918); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5922 = {};
v5922.constructor = v5921;
v5921.prototype = v5922;
v5920.push(v5921);
v5914.apiCall = v5920;
v5913._events = v5914;
v5913.MONITOR_EVENTS_BUBBLE = v5916;
v5913.CALL_EVENTS_BUBBLE = v5921;
v5910.prototype = v5913;
v5910.__super__ = v299;
const v5923 = {};
v5923[\\"2016-06-30\\"] = null;
v5910.services = v5923;
const v5924 = [];
v5924.push(\\"2016-06-30\\");
v5910.apiVersions = v5924;
v5910.serviceIdentifier = \\"snowball\\";
v2.Snowball = v5910;
var v5925;
var v5926 = v299;
var v5927 = v31;
v5925 = function () { if (v5926 !== v5927) {
    return v5926.apply(this, arguments);
} };
const v5928 = Object.create(v309);
v5928.constructor = v5925;
const v5929 = {};
const v5930 = [];
var v5931;
var v5932 = v31;
var v5933 = v5928;
v5931 = function EVENTS_BUBBLE(event) { var baseClass = v5932.getPrototypeOf(v5933); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5934 = {};
v5934.constructor = v5931;
v5931.prototype = v5934;
v5930.push(v5931);
v5929.apiCallAttempt = v5930;
const v5935 = [];
var v5936;
v5936 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5917.getPrototypeOf(v5933); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5937 = {};
v5937.constructor = v5936;
v5936.prototype = v5937;
v5935.push(v5936);
v5929.apiCall = v5935;
v5928._events = v5929;
v5928.MONITOR_EVENTS_BUBBLE = v5931;
v5928.CALL_EVENTS_BUBBLE = v5936;
v5925.prototype = v5928;
v5925.__super__ = v299;
const v5938 = {};
v5938[\\"2010-03-31\\"] = null;
v5925.services = v5938;
const v5939 = [];
v5939.push(\\"2010-03-31\\");
v5925.apiVersions = v5939;
v5925.serviceIdentifier = \\"sns\\";
v2.SNS = v5925;
var v5940;
var v5941 = v299;
var v5942 = v31;
v5940 = function () { if (v5941 !== v5942) {
    return v5941.apply(this, arguments);
} };
const v5943 = Object.create(v309);
v5943.constructor = v5940;
const v5944 = {};
const v5945 = [];
var v5946;
var v5947 = v31;
var v5948 = v5943;
v5946 = function EVENTS_BUBBLE(event) { var baseClass = v5947.getPrototypeOf(v5948); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5949 = {};
v5949.constructor = v5946;
v5946.prototype = v5949;
v5945.push(v5946);
v5944.apiCallAttempt = v5945;
const v5950 = [];
var v5951;
v5951 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5932.getPrototypeOf(v5948); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5952 = {};
v5952.constructor = v5951;
v5951.prototype = v5952;
v5950.push(v5951);
v5944.apiCall = v5950;
v5943._events = v5944;
v5943.MONITOR_EVENTS_BUBBLE = v5946;
v5943.CALL_EVENTS_BUBBLE = v5951;
var v5953;
v5953 = function setupRequestListeners(request) { request.addListener(\\"build\\", this.buildEndpoint); if (request.service.config.computeChecksums) {
    if (request.operation === \\"sendMessage\\") {
        request.addListener(\\"extractData\\", this.verifySendMessageChecksum);
    }
    else if (request.operation === \\"sendMessageBatch\\") {
        request.addListener(\\"extractData\\", this.verifySendMessageBatchChecksum);
    }
    else if (request.operation === \\"receiveMessage\\") {
        request.addListener(\\"extractData\\", this.verifyReceiveMessageChecksum);
    }
} };
const v5954 = {};
v5954.constructor = v5953;
v5953.prototype = v5954;
v5943.setupRequestListeners = v5953;
var v5955;
v5955 = function verifySendMessageChecksum(response) { if (!response.data)
    return; var md5 = response.data.MD5OfMessageBody; var body = this.params.MessageBody; var calculatedMd5 = this.service.calculateChecksum(body); if (calculatedMd5 !== md5) {
    var msg = \\"Got \\\\\\"\\" + response.data.MD5OfMessageBody + \\"\\\\\\", expecting \\\\\\"\\" + calculatedMd5 + \\"\\\\\\".\\";
    this.service.throwInvalidChecksumError(response, [response.data.MessageId], msg);
} };
const v5956 = {};
v5956.constructor = v5955;
v5955.prototype = v5956;
v5943.verifySendMessageChecksum = v5955;
var v5957;
v5957 = function verifySendMessageBatchChecksum(response) { if (!response.data)
    return; var service = this.service; var entries = {}; var errors = []; var messageIds = []; v3.arrayEach(response.data.Successful, function (entry) { entries[entry.Id] = entry; }); v3.arrayEach(this.params.Entries, function (entry) { if (entries[entry.Id]) {
    var md5 = entries[entry.Id].MD5OfMessageBody;
    var body = entry.MessageBody;
    if (!service.isChecksumValid(md5, body)) {
        errors.push(entry.Id);
        messageIds.push(entries[entry.Id].MessageId);
    }
} }); if (errors.length > 0) {
    service.throwInvalidChecksumError(response, messageIds, \\"Invalid messages: \\" + errors.join(\\", \\"));
} };
const v5958 = {};
v5958.constructor = v5957;
v5957.prototype = v5958;
v5943.verifySendMessageBatchChecksum = v5957;
var v5959;
v5959 = function verifyReceiveMessageChecksum(response) { if (!response.data)
    return; var service = this.service; var messageIds = []; v3.arrayEach(response.data.Messages, function (message) { var md5 = message.MD5OfBody; var body = message.Body; if (!service.isChecksumValid(md5, body)) {
    messageIds.push(message.MessageId);
} }); if (messageIds.length > 0) {
    service.throwInvalidChecksumError(response, messageIds, \\"Invalid messages: \\" + messageIds.join(\\", \\"));
} };
const v5960 = {};
v5960.constructor = v5959;
v5959.prototype = v5960;
v5943.verifyReceiveMessageChecksum = v5959;
var v5961;
var v5962 = v40;
v5961 = function throwInvalidChecksumError(response, ids, message) { response.error = v3.error(new v5962(), { retryable: true, code: \\"InvalidChecksum\\", messageIds: ids, message: response.request.operation + \\" returned an invalid MD5 response. \\" + message }); };
const v5963 = {};
v5963.constructor = v5961;
v5961.prototype = v5963;
v5943.throwInvalidChecksumError = v5961;
var v5964;
v5964 = function isChecksumValid(checksum, data) { return this.calculateChecksum(data) === checksum; };
const v5965 = {};
v5965.constructor = v5964;
v5964.prototype = v5965;
v5943.isChecksumValid = v5964;
var v5966;
v5966 = function calculateChecksum(data) { return v91.md5(data, \\"hex\\"); };
const v5967 = {};
v5967.constructor = v5966;
v5966.prototype = v5967;
v5943.calculateChecksum = v5966;
var v5968;
var v5969 = v2;
v5968 = function buildEndpoint(request) { var url = request.httpRequest.params.QueueUrl; if (url) {
    request.httpRequest.endpoint = new v5969.Endpoint(url);
    var matches = request.httpRequest.endpoint.host.match(/^sqs\\\\.(.+?)\\\\./);
    if (matches)
        request.httpRequest.region = matches[1];
} };
const v5970 = {};
v5970.constructor = v5968;
v5968.prototype = v5970;
v5943.buildEndpoint = v5968;
v5940.prototype = v5943;
v5940.__super__ = v299;
const v5971 = {};
v5971[\\"2012-11-05\\"] = null;
v5940.services = v5971;
const v5972 = [];
v5972.push(\\"2012-11-05\\");
v5940.apiVersions = v5972;
v5940.serviceIdentifier = \\"sqs\\";
v2.SQS = v5940;
var v5973;
var v5974 = v299;
var v5975 = v31;
v5973 = function () { if (v5974 !== v5975) {
    return v5974.apply(this, arguments);
} };
const v5976 = Object.create(v309);
v5976.constructor = v5973;
const v5977 = {};
const v5978 = [];
var v5979;
var v5980 = v31;
var v5981 = v5976;
v5979 = function EVENTS_BUBBLE(event) { var baseClass = v5980.getPrototypeOf(v5981); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5982 = {};
v5982.constructor = v5979;
v5979.prototype = v5982;
v5978.push(v5979);
v5977.apiCallAttempt = v5978;
const v5983 = [];
var v5984;
v5984 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5947.getPrototypeOf(v5981); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v5985 = {};
v5985.constructor = v5984;
v5984.prototype = v5985;
v5983.push(v5984);
v5977.apiCall = v5983;
v5976._events = v5977;
v5976.MONITOR_EVENTS_BUBBLE = v5979;
v5976.CALL_EVENTS_BUBBLE = v5984;
v5973.prototype = v5976;
v5973.__super__ = v299;
const v5986 = {};
v5986[\\"2014-11-06\\"] = null;
v5973.services = v5986;
const v5987 = [];
v5987.push(\\"2014-11-06\\");
v5973.apiVersions = v5987;
v5973.serviceIdentifier = \\"ssm\\";
v2.SSM = v5973;
var v5988;
var v5989 = v299;
var v5990 = v31;
v5988 = function () { if (v5989 !== v5990) {
    return v5989.apply(this, arguments);
} };
const v5991 = Object.create(v309);
v5991.constructor = v5988;
const v5992 = {};
const v5993 = [];
var v5994;
var v5995 = v31;
var v5996 = v5991;
v5994 = function EVENTS_BUBBLE(event) { var baseClass = v5995.getPrototypeOf(v5996); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v5997 = {};
v5997.constructor = v5994;
v5994.prototype = v5997;
v5993.push(v5994);
v5992.apiCallAttempt = v5993;
const v5998 = [];
var v5999;
v5999 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5980.getPrototypeOf(v5996); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6000 = {};
v6000.constructor = v5999;
v5999.prototype = v6000;
v5998.push(v5999);
v5992.apiCall = v5998;
v5991._events = v5992;
v5991.MONITOR_EVENTS_BUBBLE = v5994;
v5991.CALL_EVENTS_BUBBLE = v5999;
v5988.prototype = v5991;
v5988.__super__ = v299;
const v6001 = {};
v6001[\\"2013-06-30\\"] = null;
v5988.services = v6001;
const v6002 = [];
v6002.push(\\"2013-06-30\\");
v5988.apiVersions = v6002;
v5988.serviceIdentifier = \\"storagegateway\\";
v2.StorageGateway = v5988;
var v6003;
var v6004 = v299;
var v6005 = v31;
v6003 = function () { if (v6004 !== v6005) {
    return v6004.apply(this, arguments);
} };
const v6006 = Object.create(v309);
v6006.constructor = v6003;
const v6007 = {};
const v6008 = [];
var v6009;
var v6010 = v31;
var v6011 = v6006;
v6009 = function EVENTS_BUBBLE(event) { var baseClass = v6010.getPrototypeOf(v6011); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6012 = {};
v6012.constructor = v6009;
v6009.prototype = v6012;
v6008.push(v6009);
v6007.apiCallAttempt = v6008;
const v6013 = [];
var v6014;
v6014 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v5995.getPrototypeOf(v6011); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6015 = {};
v6015.constructor = v6014;
v6014.prototype = v6015;
v6013.push(v6014);
v6007.apiCall = v6013;
v6006._events = v6007;
v6006.MONITOR_EVENTS_BUBBLE = v6009;
v6006.CALL_EVENTS_BUBBLE = v6014;
v6003.prototype = v6006;
v6003.__super__ = v299;
const v6016 = {};
v6016[\\"2016-11-23\\"] = null;
v6003.services = v6016;
const v6017 = [];
v6017.push(\\"2016-11-23\\");
v6003.apiVersions = v6017;
v6003.serviceIdentifier = \\"stepfunctions\\";
v2.StepFunctions = v6003;
var v6018;
var v6019 = v299;
var v6020 = v31;
v6018 = function () { if (v6019 !== v6020) {
    return v6019.apply(this, arguments);
} };
const v6021 = Object.create(v309);
v6021.constructor = v6018;
const v6022 = {};
const v6023 = [];
var v6024;
var v6025 = v31;
var v6026 = v6021;
v6024 = function EVENTS_BUBBLE(event) { var baseClass = v6025.getPrototypeOf(v6026); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6027 = {};
v6027.constructor = v6024;
v6024.prototype = v6027;
v6023.push(v6024);
v6022.apiCallAttempt = v6023;
const v6028 = [];
var v6029;
v6029 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6010.getPrototypeOf(v6026); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6030 = {};
v6030.constructor = v6029;
v6029.prototype = v6030;
v6028.push(v6029);
v6022.apiCall = v6028;
v6021._events = v6022;
v6021.MONITOR_EVENTS_BUBBLE = v6024;
v6021.CALL_EVENTS_BUBBLE = v6029;
v6018.prototype = v6021;
v6018.__super__ = v299;
const v6031 = {};
v6031[\\"2013-04-15\\"] = null;
v6018.services = v6031;
const v6032 = [];
v6032.push(\\"2013-04-15\\");
v6018.apiVersions = v6032;
v6018.serviceIdentifier = \\"support\\";
v2.Support = v6018;
var v6033;
var v6034 = v299;
var v6035 = v31;
v6033 = function () { if (v6034 !== v6035) {
    return v6034.apply(this, arguments);
} };
const v6036 = Object.create(v309);
v6036.constructor = v6033;
const v6037 = {};
const v6038 = [];
var v6039;
var v6040 = v31;
var v6041 = v6036;
v6039 = function EVENTS_BUBBLE(event) { var baseClass = v6040.getPrototypeOf(v6041); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6042 = {};
v6042.constructor = v6039;
v6039.prototype = v6042;
v6038.push(v6039);
v6037.apiCallAttempt = v6038;
const v6043 = [];
var v6044;
v6044 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6025.getPrototypeOf(v6041); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6045 = {};
v6045.constructor = v6044;
v6044.prototype = v6045;
v6043.push(v6044);
v6037.apiCall = v6043;
v6036._events = v6037;
v6036.MONITOR_EVENTS_BUBBLE = v6039;
v6036.CALL_EVENTS_BUBBLE = v6044;
v6033.prototype = v6036;
v6033.__super__ = v299;
const v6046 = {};
v6046[\\"2012-01-25\\"] = null;
v6033.services = v6046;
const v6047 = [];
v6047.push(\\"2012-01-25\\");
v6033.apiVersions = v6047;
v6033.serviceIdentifier = \\"swf\\";
v2.SWF = v6033;
v2.SimpleWorkflow = v6033;
var v6048;
var v6049 = v299;
var v6050 = v31;
v6048 = function () { if (v6049 !== v6050) {
    return v6049.apply(this, arguments);
} };
const v6051 = Object.create(v309);
v6051.constructor = v6048;
const v6052 = {};
const v6053 = [];
var v6054;
var v6055 = v31;
var v6056 = v6051;
v6054 = function EVENTS_BUBBLE(event) { var baseClass = v6055.getPrototypeOf(v6056); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6057 = {};
v6057.constructor = v6054;
v6054.prototype = v6057;
v6053.push(v6054);
v6052.apiCallAttempt = v6053;
const v6058 = [];
var v6059;
v6059 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6040.getPrototypeOf(v6056); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6060 = {};
v6060.constructor = v6059;
v6059.prototype = v6060;
v6058.push(v6059);
v6052.apiCall = v6058;
v6051._events = v6052;
v6051.MONITOR_EVENTS_BUBBLE = v6054;
v6051.CALL_EVENTS_BUBBLE = v6059;
v6048.prototype = v6051;
v6048.__super__ = v299;
const v6061 = {};
v6061[\\"2016-04-12\\"] = null;
v6048.services = v6061;
const v6062 = [];
v6062.push(\\"2016-04-12\\");
v6048.apiVersions = v6062;
v6048.serviceIdentifier = \\"xray\\";
v2.XRay = v6048;
var v6063;
var v6064 = v299;
var v6065 = v31;
v6063 = function () { if (v6064 !== v6065) {
    return v6064.apply(this, arguments);
} };
const v6066 = Object.create(v309);
v6066.constructor = v6063;
const v6067 = {};
const v6068 = [];
var v6069;
var v6070 = v31;
var v6071 = v6066;
v6069 = function EVENTS_BUBBLE(event) { var baseClass = v6070.getPrototypeOf(v6071); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6072 = {};
v6072.constructor = v6069;
v6069.prototype = v6072;
v6068.push(v6069);
v6067.apiCallAttempt = v6068;
const v6073 = [];
var v6074;
v6074 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6055.getPrototypeOf(v6071); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6075 = {};
v6075.constructor = v6074;
v6074.prototype = v6075;
v6073.push(v6074);
v6067.apiCall = v6073;
v6066._events = v6067;
v6066.MONITOR_EVENTS_BUBBLE = v6069;
v6066.CALL_EVENTS_BUBBLE = v6074;
v6063.prototype = v6066;
v6063.__super__ = v299;
const v6076 = {};
v6076[\\"2015-08-24\\"] = null;
v6063.services = v6076;
const v6077 = [];
v6077.push(\\"2015-08-24\\");
v6063.apiVersions = v6077;
v6063.serviceIdentifier = \\"waf\\";
v2.WAF = v6063;
var v6078;
var v6079 = v299;
var v6080 = v31;
v6078 = function () { if (v6079 !== v6080) {
    return v6079.apply(this, arguments);
} };
const v6081 = Object.create(v309);
v6081.constructor = v6078;
const v6082 = {};
const v6083 = [];
var v6084;
var v6085 = v31;
var v6086 = v6081;
v6084 = function EVENTS_BUBBLE(event) { var baseClass = v6085.getPrototypeOf(v6086); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6087 = {};
v6087.constructor = v6084;
v6084.prototype = v6087;
v6083.push(v6084);
v6082.apiCallAttempt = v6083;
const v6088 = [];
var v6089;
v6089 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6070.getPrototypeOf(v6086); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6090 = {};
v6090.constructor = v6089;
v6089.prototype = v6090;
v6088.push(v6089);
v6082.apiCall = v6088;
v6081._events = v6082;
v6081.MONITOR_EVENTS_BUBBLE = v6084;
v6081.CALL_EVENTS_BUBBLE = v6089;
v6078.prototype = v6081;
v6078.__super__ = v299;
const v6091 = {};
v6091[\\"2016-11-28\\"] = null;
v6078.services = v6091;
const v6092 = [];
v6092.push(\\"2016-11-28\\");
v6078.apiVersions = v6092;
v6078.serviceIdentifier = \\"wafregional\\";
v2.WAFRegional = v6078;
var v6093;
var v6094 = v299;
var v6095 = v31;
v6093 = function () { if (v6094 !== v6095) {
    return v6094.apply(this, arguments);
} };
const v6096 = Object.create(v309);
v6096.constructor = v6093;
const v6097 = {};
const v6098 = [];
var v6099;
var v6100 = v31;
var v6101 = v6096;
v6099 = function EVENTS_BUBBLE(event) { var baseClass = v6100.getPrototypeOf(v6101); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6102 = {};
v6102.constructor = v6099;
v6099.prototype = v6102;
v6098.push(v6099);
v6097.apiCallAttempt = v6098;
const v6103 = [];
var v6104;
v6104 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6085.getPrototypeOf(v6101); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6105 = {};
v6105.constructor = v6104;
v6104.prototype = v6105;
v6103.push(v6104);
v6097.apiCall = v6103;
v6096._events = v6097;
v6096.MONITOR_EVENTS_BUBBLE = v6099;
v6096.CALL_EVENTS_BUBBLE = v6104;
v6093.prototype = v6096;
v6093.__super__ = v299;
const v6106 = {};
v6106[\\"2016-05-01\\"] = null;
v6093.services = v6106;
const v6107 = [];
v6107.push(\\"2016-05-01\\");
v6093.apiVersions = v6107;
v6093.serviceIdentifier = \\"workdocs\\";
v2.WorkDocs = v6093;
var v6108;
var v6109 = v299;
var v6110 = v31;
v6108 = function () { if (v6109 !== v6110) {
    return v6109.apply(this, arguments);
} };
const v6111 = Object.create(v309);
v6111.constructor = v6108;
const v6112 = {};
const v6113 = [];
var v6114;
var v6115 = v31;
var v6116 = v6111;
v6114 = function EVENTS_BUBBLE(event) { var baseClass = v6115.getPrototypeOf(v6116); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6117 = {};
v6117.constructor = v6114;
v6114.prototype = v6117;
v6113.push(v6114);
v6112.apiCallAttempt = v6113;
const v6118 = [];
var v6119;
v6119 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6100.getPrototypeOf(v6116); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6120 = {};
v6120.constructor = v6119;
v6119.prototype = v6120;
v6118.push(v6119);
v6112.apiCall = v6118;
v6111._events = v6112;
v6111.MONITOR_EVENTS_BUBBLE = v6114;
v6111.CALL_EVENTS_BUBBLE = v6119;
v6108.prototype = v6111;
v6108.__super__ = v299;
const v6121 = {};
v6121[\\"2015-04-08\\"] = null;
v6108.services = v6121;
const v6122 = [];
v6122.push(\\"2015-04-08\\");
v6108.apiVersions = v6122;
v6108.serviceIdentifier = \\"workspaces\\";
v2.WorkSpaces = v6108;
var v6123;
var v6124 = v299;
var v6125 = v31;
v6123 = function () { if (v6124 !== v6125) {
    return v6124.apply(this, arguments);
} };
const v6126 = Object.create(v309);
v6126.constructor = v6123;
const v6127 = {};
const v6128 = [];
var v6129;
var v6130 = v31;
var v6131 = v6126;
v6129 = function EVENTS_BUBBLE(event) { var baseClass = v6130.getPrototypeOf(v6131); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6132 = {};
v6132.constructor = v6129;
v6129.prototype = v6132;
v6128.push(v6129);
v6127.apiCallAttempt = v6128;
const v6133 = [];
var v6134;
v6134 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6115.getPrototypeOf(v6131); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6135 = {};
v6135.constructor = v6134;
v6134.prototype = v6135;
v6133.push(v6134);
v6127.apiCall = v6133;
v6126._events = v6127;
v6126.MONITOR_EVENTS_BUBBLE = v6129;
v6126.CALL_EVENTS_BUBBLE = v6134;
v6123.prototype = v6126;
v6123.__super__ = v299;
const v6136 = {};
v6136[\\"2017-04-19\\"] = null;
v6123.services = v6136;
const v6137 = [];
v6137.push(\\"2017-04-19\\");
v6123.apiVersions = v6137;
v6123.serviceIdentifier = \\"codestar\\";
v2.CodeStar = v6123;
var v6138;
var v6139 = v299;
var v6140 = v31;
v6138 = function () { if (v6139 !== v6140) {
    return v6139.apply(this, arguments);
} };
const v6141 = Object.create(v309);
v6141.constructor = v6138;
const v6142 = {};
const v6143 = [];
var v6144;
var v6145 = v31;
var v6146 = v6141;
v6144 = function EVENTS_BUBBLE(event) { var baseClass = v6145.getPrototypeOf(v6146); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6147 = {};
v6147.constructor = v6144;
v6144.prototype = v6147;
v6143.push(v6144);
v6142.apiCallAttempt = v6143;
const v6148 = [];
var v6149;
v6149 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6130.getPrototypeOf(v6146); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6150 = {};
v6150.constructor = v6149;
v6149.prototype = v6150;
v6148.push(v6149);
v6142.apiCall = v6148;
v6141._events = v6142;
v6141.MONITOR_EVENTS_BUBBLE = v6144;
v6141.CALL_EVENTS_BUBBLE = v6149;
v6138.prototype = v6141;
v6138.__super__ = v299;
const v6151 = {};
v6151[\\"2017-04-19\\"] = null;
v6138.services = v6151;
const v6152 = [];
v6152.push(\\"2017-04-19\\");
v6138.apiVersions = v6152;
v6138.serviceIdentifier = \\"lexmodelbuildingservice\\";
v2.LexModelBuildingService = v6138;
var v6153;
var v6154 = v299;
var v6155 = v31;
v6153 = function () { if (v6154 !== v6155) {
    return v6154.apply(this, arguments);
} };
const v6156 = Object.create(v309);
v6156.constructor = v6153;
const v6157 = {};
const v6158 = [];
var v6159;
var v6160 = v31;
var v6161 = v6156;
v6159 = function EVENTS_BUBBLE(event) { var baseClass = v6160.getPrototypeOf(v6161); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6162 = {};
v6162.constructor = v6159;
v6159.prototype = v6162;
v6158.push(v6159);
v6157.apiCallAttempt = v6158;
const v6163 = [];
var v6164;
v6164 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6145.getPrototypeOf(v6161); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6165 = {};
v6165.constructor = v6164;
v6164.prototype = v6165;
v6163.push(v6164);
v6157.apiCall = v6163;
v6156._events = v6157;
v6156.MONITOR_EVENTS_BUBBLE = v6159;
v6156.CALL_EVENTS_BUBBLE = v6164;
v6153.prototype = v6156;
v6153.__super__ = v299;
const v6166 = {};
v6166[\\"2017-01-11\\"] = null;
v6153.services = v6166;
const v6167 = [];
v6167.push(\\"2017-01-11\\");
v6153.apiVersions = v6167;
v6153.serviceIdentifier = \\"marketplaceentitlementservice\\";
v2.MarketplaceEntitlementService = v6153;
var v6168;
var v6169 = v299;
var v6170 = v31;
v6168 = function () { if (v6169 !== v6170) {
    return v6169.apply(this, arguments);
} };
const v6171 = Object.create(v309);
v6171.constructor = v6168;
const v6172 = {};
const v6173 = [];
var v6174;
var v6175 = v31;
var v6176 = v6171;
v6174 = function EVENTS_BUBBLE(event) { var baseClass = v6175.getPrototypeOf(v6176); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6177 = {};
v6177.constructor = v6174;
v6174.prototype = v6177;
v6173.push(v6174);
v6172.apiCallAttempt = v6173;
const v6178 = [];
var v6179;
v6179 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6160.getPrototypeOf(v6176); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6180 = {};
v6180.constructor = v6179;
v6179.prototype = v6180;
v6178.push(v6179);
v6172.apiCall = v6178;
v6171._events = v6172;
v6171.MONITOR_EVENTS_BUBBLE = v6174;
v6171.CALL_EVENTS_BUBBLE = v6179;
v6168.prototype = v6171;
v6168.__super__ = v299;
const v6181 = {};
v6181[\\"2017-05-18\\"] = null;
v6168.services = v6181;
const v6182 = [];
v6182.push(\\"2017-05-18\\");
v6168.apiVersions = v6182;
v6168.serviceIdentifier = \\"athena\\";
v2.Athena = v6168;
var v6183;
var v6184 = v299;
var v6185 = v31;
v6183 = function () { if (v6184 !== v6185) {
    return v6184.apply(this, arguments);
} };
const v6186 = Object.create(v309);
v6186.constructor = v6183;
const v6187 = {};
const v6188 = [];
var v6189;
var v6190 = v31;
var v6191 = v6186;
v6189 = function EVENTS_BUBBLE(event) { var baseClass = v6190.getPrototypeOf(v6191); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6192 = {};
v6192.constructor = v6189;
v6189.prototype = v6192;
v6188.push(v6189);
v6187.apiCallAttempt = v6188;
const v6193 = [];
var v6194;
v6194 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6175.getPrototypeOf(v6191); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6195 = {};
v6195.constructor = v6194;
v6194.prototype = v6195;
v6193.push(v6194);
v6187.apiCall = v6193;
v6186._events = v6187;
v6186.MONITOR_EVENTS_BUBBLE = v6189;
v6186.CALL_EVENTS_BUBBLE = v6194;
v6183.prototype = v6186;
v6183.__super__ = v299;
const v6196 = {};
v6196[\\"2017-06-07\\"] = null;
v6183.services = v6196;
const v6197 = [];
v6197.push(\\"2017-06-07\\");
v6183.apiVersions = v6197;
v6183.serviceIdentifier = \\"greengrass\\";
v2.Greengrass = v6183;
var v6198;
var v6199 = v299;
var v6200 = v31;
v6198 = function () { if (v6199 !== v6200) {
    return v6199.apply(this, arguments);
} };
const v6201 = Object.create(v309);
v6201.constructor = v6198;
const v6202 = {};
const v6203 = [];
var v6204;
var v6205 = v31;
var v6206 = v6201;
v6204 = function EVENTS_BUBBLE(event) { var baseClass = v6205.getPrototypeOf(v6206); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6207 = {};
v6207.constructor = v6204;
v6204.prototype = v6207;
v6203.push(v6204);
v6202.apiCallAttempt = v6203;
const v6208 = [];
var v6209;
v6209 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6190.getPrototypeOf(v6206); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6210 = {};
v6210.constructor = v6209;
v6209.prototype = v6210;
v6208.push(v6209);
v6202.apiCall = v6208;
v6201._events = v6202;
v6201.MONITOR_EVENTS_BUBBLE = v6204;
v6201.CALL_EVENTS_BUBBLE = v6209;
v6198.prototype = v6201;
v6198.__super__ = v299;
const v6211 = {};
v6211[\\"2017-04-19\\"] = null;
v6198.services = v6211;
const v6212 = [];
v6212.push(\\"2017-04-19\\");
v6198.apiVersions = v6212;
v6198.serviceIdentifier = \\"dax\\";
v2.DAX = v6198;
var v6213;
var v6214 = v299;
var v6215 = v31;
v6213 = function () { if (v6214 !== v6215) {
    return v6214.apply(this, arguments);
} };
const v6216 = Object.create(v309);
v6216.constructor = v6213;
const v6217 = {};
const v6218 = [];
var v6219;
var v6220 = v31;
var v6221 = v6216;
v6219 = function EVENTS_BUBBLE(event) { var baseClass = v6220.getPrototypeOf(v6221); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6222 = {};
v6222.constructor = v6219;
v6219.prototype = v6222;
v6218.push(v6219);
v6217.apiCallAttempt = v6218;
const v6223 = [];
var v6224;
v6224 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6205.getPrototypeOf(v6221); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6225 = {};
v6225.constructor = v6224;
v6224.prototype = v6225;
v6223.push(v6224);
v6217.apiCall = v6223;
v6216._events = v6217;
v6216.MONITOR_EVENTS_BUBBLE = v6219;
v6216.CALL_EVENTS_BUBBLE = v6224;
v6213.prototype = v6216;
v6213.__super__ = v299;
const v6226 = {};
v6226[\\"2017-05-31\\"] = null;
v6213.services = v6226;
const v6227 = [];
v6227.push(\\"2017-05-31\\");
v6213.apiVersions = v6227;
v6213.serviceIdentifier = \\"migrationhub\\";
v2.MigrationHub = v6213;
var v6228;
var v6229 = v299;
var v6230 = v31;
v6228 = function () { if (v6229 !== v6230) {
    return v6229.apply(this, arguments);
} };
const v6231 = Object.create(v309);
v6231.constructor = v6228;
const v6232 = {};
const v6233 = [];
var v6234;
var v6235 = v31;
var v6236 = v6231;
v6234 = function EVENTS_BUBBLE(event) { var baseClass = v6235.getPrototypeOf(v6236); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6237 = {};
v6237.constructor = v6234;
v6234.prototype = v6237;
v6233.push(v6234);
v6232.apiCallAttempt = v6233;
const v6238 = [];
var v6239;
v6239 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6220.getPrototypeOf(v6236); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6240 = {};
v6240.constructor = v6239;
v6239.prototype = v6240;
v6238.push(v6239);
v6232.apiCall = v6238;
v6231._events = v6232;
v6231.MONITOR_EVENTS_BUBBLE = v6234;
v6231.CALL_EVENTS_BUBBLE = v6239;
v6228.prototype = v6231;
v6228.__super__ = v299;
const v6241 = {};
v6241[\\"2017-04-28\\"] = null;
v6228.services = v6241;
const v6242 = [];
v6242.push(\\"2017-04-28\\");
v6228.apiVersions = v6242;
v6228.serviceIdentifier = \\"cloudhsmv2\\";
v2.CloudHSMV2 = v6228;
var v6243;
var v6244 = v299;
var v6245 = v31;
v6243 = function () { if (v6244 !== v6245) {
    return v6244.apply(this, arguments);
} };
const v6246 = Object.create(v309);
v6246.constructor = v6243;
const v6247 = {};
const v6248 = [];
var v6249;
var v6250 = v31;
var v6251 = v6246;
v6249 = function EVENTS_BUBBLE(event) { var baseClass = v6250.getPrototypeOf(v6251); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6252 = {};
v6252.constructor = v6249;
v6249.prototype = v6252;
v6248.push(v6249);
v6247.apiCallAttempt = v6248;
const v6253 = [];
var v6254;
v6254 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6235.getPrototypeOf(v6251); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6255 = {};
v6255.constructor = v6254;
v6254.prototype = v6255;
v6253.push(v6254);
v6247.apiCall = v6253;
v6246._events = v6247;
v6246.MONITOR_EVENTS_BUBBLE = v6249;
v6246.CALL_EVENTS_BUBBLE = v6254;
v6243.prototype = v6246;
v6243.__super__ = v299;
const v6256 = {};
v6256[\\"2017-03-31\\"] = null;
v6243.services = v6256;
const v6257 = [];
v6257.push(\\"2017-03-31\\");
v6243.apiVersions = v6257;
v6243.serviceIdentifier = \\"glue\\";
v2.Glue = v6243;
var v6258;
var v6259 = v299;
var v6260 = v31;
v6258 = function () { if (v6259 !== v6260) {
    return v6259.apply(this, arguments);
} };
const v6261 = Object.create(v309);
v6261.constructor = v6258;
const v6262 = {};
const v6263 = [];
var v6264;
var v6265 = v31;
var v6266 = v6261;
v6264 = function EVENTS_BUBBLE(event) { var baseClass = v6265.getPrototypeOf(v6266); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6267 = {};
v6267.constructor = v6264;
v6264.prototype = v6267;
v6263.push(v6264);
v6262.apiCallAttempt = v6263;
const v6268 = [];
var v6269;
v6269 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6250.getPrototypeOf(v6266); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6270 = {};
v6270.constructor = v6269;
v6269.prototype = v6270;
v6268.push(v6269);
v6262.apiCall = v6268;
v6261._events = v6262;
v6261.MONITOR_EVENTS_BUBBLE = v6264;
v6261.CALL_EVENTS_BUBBLE = v6269;
v6258.prototype = v6261;
v6258.__super__ = v299;
const v6271 = {};
v6271[\\"2017-07-01\\"] = null;
v6258.services = v6271;
const v6272 = [];
v6272.push(\\"2017-07-01\\");
v6258.apiVersions = v6272;
v6258.serviceIdentifier = \\"mobile\\";
v2.Mobile = v6258;
var v6273;
var v6274 = v299;
var v6275 = v31;
v6273 = function () { if (v6274 !== v6275) {
    return v6274.apply(this, arguments);
} };
const v6276 = Object.create(v309);
v6276.constructor = v6273;
const v6277 = {};
const v6278 = [];
var v6279;
var v6280 = v31;
var v6281 = v6276;
v6279 = function EVENTS_BUBBLE(event) { var baseClass = v6280.getPrototypeOf(v6281); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6282 = {};
v6282.constructor = v6279;
v6279.prototype = v6282;
v6278.push(v6279);
v6277.apiCallAttempt = v6278;
const v6283 = [];
var v6284;
v6284 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6265.getPrototypeOf(v6281); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6285 = {};
v6285.constructor = v6284;
v6284.prototype = v6285;
v6283.push(v6284);
v6277.apiCall = v6283;
v6276._events = v6277;
v6276.MONITOR_EVENTS_BUBBLE = v6279;
v6276.CALL_EVENTS_BUBBLE = v6284;
v6273.prototype = v6276;
v6273.__super__ = v299;
const v6286 = {};
v6286[\\"2017-10-15\\"] = null;
v6273.services = v6286;
const v6287 = [];
v6287.push(\\"2017-10-15\\");
v6273.apiVersions = v6287;
v6273.serviceIdentifier = \\"pricing\\";
v2.Pricing = v6273;
var v6288;
var v6289 = v299;
var v6290 = v31;
v6288 = function () { if (v6289 !== v6290) {
    return v6289.apply(this, arguments);
} };
const v6291 = Object.create(v309);
v6291.constructor = v6288;
const v6292 = {};
const v6293 = [];
var v6294;
var v6295 = v31;
var v6296 = v6291;
v6294 = function EVENTS_BUBBLE(event) { var baseClass = v6295.getPrototypeOf(v6296); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6297 = {};
v6297.constructor = v6294;
v6294.prototype = v6297;
v6293.push(v6294);
v6292.apiCallAttempt = v6293;
const v6298 = [];
var v6299;
v6299 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6280.getPrototypeOf(v6296); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6300 = {};
v6300.constructor = v6299;
v6299.prototype = v6300;
v6298.push(v6299);
v6292.apiCall = v6298;
v6291._events = v6292;
v6291.MONITOR_EVENTS_BUBBLE = v6294;
v6291.CALL_EVENTS_BUBBLE = v6299;
v6288.prototype = v6291;
v6288.__super__ = v299;
const v6301 = {};
v6301[\\"2017-10-25\\"] = null;
v6288.services = v6301;
const v6302 = [];
v6302.push(\\"2017-10-25\\");
v6288.apiVersions = v6302;
v6288.serviceIdentifier = \\"costexplorer\\";
v2.CostExplorer = v6288;
var v6303;
var v6304 = v299;
var v6305 = v31;
v6303 = function () { if (v6304 !== v6305) {
    return v6304.apply(this, arguments);
} };
const v6306 = Object.create(v309);
v6306.constructor = v6303;
const v6307 = {};
const v6308 = [];
var v6309;
var v6310 = v31;
var v6311 = v6306;
v6309 = function EVENTS_BUBBLE(event) { var baseClass = v6310.getPrototypeOf(v6311); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6312 = {};
v6312.constructor = v6309;
v6309.prototype = v6312;
v6308.push(v6309);
v6307.apiCallAttempt = v6308;
const v6313 = [];
var v6314;
v6314 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6295.getPrototypeOf(v6311); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6315 = {};
v6315.constructor = v6314;
v6314.prototype = v6315;
v6313.push(v6314);
v6307.apiCall = v6313;
v6306._events = v6307;
v6306.MONITOR_EVENTS_BUBBLE = v6309;
v6306.CALL_EVENTS_BUBBLE = v6314;
v6303.prototype = v6306;
v6303.__super__ = v299;
const v6316 = {};
v6316[\\"2017-08-29\\"] = null;
v6303.services = v6316;
const v6317 = [];
v6317.push(\\"2017-08-29\\");
v6303.apiVersions = v6317;
v6303.serviceIdentifier = \\"mediaconvert\\";
v2.MediaConvert = v6303;
var v6318;
var v6319 = v299;
var v6320 = v31;
v6318 = function () { if (v6319 !== v6320) {
    return v6319.apply(this, arguments);
} };
const v6321 = Object.create(v309);
v6321.constructor = v6318;
const v6322 = {};
const v6323 = [];
var v6324;
var v6325 = v31;
var v6326 = v6321;
v6324 = function EVENTS_BUBBLE(event) { var baseClass = v6325.getPrototypeOf(v6326); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6327 = {};
v6327.constructor = v6324;
v6324.prototype = v6327;
v6323.push(v6324);
v6322.apiCallAttempt = v6323;
const v6328 = [];
var v6329;
v6329 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6310.getPrototypeOf(v6326); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6330 = {};
v6330.constructor = v6329;
v6329.prototype = v6330;
v6328.push(v6329);
v6322.apiCall = v6328;
v6321._events = v6322;
v6321.MONITOR_EVENTS_BUBBLE = v6324;
v6321.CALL_EVENTS_BUBBLE = v6329;
v6318.prototype = v6321;
v6318.__super__ = v299;
const v6331 = {};
v6331[\\"2017-10-14\\"] = null;
v6318.services = v6331;
const v6332 = [];
v6332.push(\\"2017-10-14\\");
v6318.apiVersions = v6332;
v6318.serviceIdentifier = \\"medialive\\";
v2.MediaLive = v6318;
var v6333;
var v6334 = v299;
var v6335 = v31;
v6333 = function () { if (v6334 !== v6335) {
    return v6334.apply(this, arguments);
} };
const v6336 = Object.create(v309);
v6336.constructor = v6333;
const v6337 = {};
const v6338 = [];
var v6339;
var v6340 = v31;
var v6341 = v6336;
v6339 = function EVENTS_BUBBLE(event) { var baseClass = v6340.getPrototypeOf(v6341); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6342 = {};
v6342.constructor = v6339;
v6339.prototype = v6342;
v6338.push(v6339);
v6337.apiCallAttempt = v6338;
const v6343 = [];
var v6344;
v6344 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6325.getPrototypeOf(v6341); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6345 = {};
v6345.constructor = v6344;
v6344.prototype = v6345;
v6343.push(v6344);
v6337.apiCall = v6343;
v6336._events = v6337;
v6336.MONITOR_EVENTS_BUBBLE = v6339;
v6336.CALL_EVENTS_BUBBLE = v6344;
v6333.prototype = v6336;
v6333.__super__ = v299;
const v6346 = {};
v6346[\\"2017-10-12\\"] = null;
v6333.services = v6346;
const v6347 = [];
v6347.push(\\"2017-10-12\\");
v6333.apiVersions = v6347;
v6333.serviceIdentifier = \\"mediapackage\\";
v2.MediaPackage = v6333;
var v6348;
var v6349 = v299;
var v6350 = v31;
v6348 = function () { if (v6349 !== v6350) {
    return v6349.apply(this, arguments);
} };
const v6351 = Object.create(v309);
v6351.constructor = v6348;
const v6352 = {};
const v6353 = [];
var v6354;
var v6355 = v31;
var v6356 = v6351;
v6354 = function EVENTS_BUBBLE(event) { var baseClass = v6355.getPrototypeOf(v6356); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6357 = {};
v6357.constructor = v6354;
v6354.prototype = v6357;
v6353.push(v6354);
v6352.apiCallAttempt = v6353;
const v6358 = [];
var v6359;
v6359 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6340.getPrototypeOf(v6356); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6360 = {};
v6360.constructor = v6359;
v6359.prototype = v6360;
v6358.push(v6359);
v6352.apiCall = v6358;
v6351._events = v6352;
v6351.MONITOR_EVENTS_BUBBLE = v6354;
v6351.CALL_EVENTS_BUBBLE = v6359;
v6348.prototype = v6351;
v6348.__super__ = v299;
const v6361 = {};
v6361[\\"2017-09-01\\"] = null;
v6348.services = v6361;
const v6362 = [];
v6362.push(\\"2017-09-01\\");
v6348.apiVersions = v6362;
v6348.serviceIdentifier = \\"mediastore\\";
v2.MediaStore = v6348;
var v6363;
var v6364 = v299;
var v6365 = v31;
v6363 = function () { if (v6364 !== v6365) {
    return v6364.apply(this, arguments);
} };
const v6366 = Object.create(v309);
v6366.constructor = v6363;
const v6367 = {};
const v6368 = [];
var v6369;
var v6370 = v31;
var v6371 = v6366;
v6369 = function EVENTS_BUBBLE(event) { var baseClass = v6370.getPrototypeOf(v6371); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6372 = {};
v6372.constructor = v6369;
v6369.prototype = v6372;
v6368.push(v6369);
v6367.apiCallAttempt = v6368;
const v6373 = [];
var v6374;
v6374 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6355.getPrototypeOf(v6371); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6375 = {};
v6375.constructor = v6374;
v6374.prototype = v6375;
v6373.push(v6374);
v6367.apiCall = v6373;
v6366._events = v6367;
v6366.MONITOR_EVENTS_BUBBLE = v6369;
v6366.CALL_EVENTS_BUBBLE = v6374;
v6363.prototype = v6366;
v6363.__super__ = v299;
const v6376 = {};
v6376[\\"2017-09-01\\"] = null;
v6363.services = v6376;
const v6377 = [];
v6377.push(\\"2017-09-01\\");
v6363.apiVersions = v6377;
v6363.serviceIdentifier = \\"mediastoredata\\";
v2.MediaStoreData = v6363;
var v6378;
var v6379 = v299;
var v6380 = v31;
v6378 = function () { if (v6379 !== v6380) {
    return v6379.apply(this, arguments);
} };
const v6381 = Object.create(v309);
v6381.constructor = v6378;
const v6382 = {};
const v6383 = [];
var v6384;
var v6385 = v31;
var v6386 = v6381;
v6384 = function EVENTS_BUBBLE(event) { var baseClass = v6385.getPrototypeOf(v6386); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6387 = {};
v6387.constructor = v6384;
v6384.prototype = v6387;
v6383.push(v6384);
v6382.apiCallAttempt = v6383;
const v6388 = [];
var v6389;
v6389 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6370.getPrototypeOf(v6386); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6390 = {};
v6390.constructor = v6389;
v6389.prototype = v6390;
v6388.push(v6389);
v6382.apiCall = v6388;
v6381._events = v6382;
v6381.MONITOR_EVENTS_BUBBLE = v6384;
v6381.CALL_EVENTS_BUBBLE = v6389;
v6378.prototype = v6381;
v6378.__super__ = v299;
const v6391 = {};
v6391[\\"2017-07-25\\"] = null;
v6378.services = v6391;
const v6392 = [];
v6392.push(\\"2017-07-25\\");
v6378.apiVersions = v6392;
v6378.serviceIdentifier = \\"appsync\\";
v2.AppSync = v6378;
var v6393;
var v6394 = v299;
var v6395 = v31;
v6393 = function () { if (v6394 !== v6395) {
    return v6394.apply(this, arguments);
} };
const v6396 = Object.create(v309);
v6396.constructor = v6393;
const v6397 = {};
const v6398 = [];
var v6399;
var v6400 = v31;
var v6401 = v6396;
v6399 = function EVENTS_BUBBLE(event) { var baseClass = v6400.getPrototypeOf(v6401); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6402 = {};
v6402.constructor = v6399;
v6399.prototype = v6402;
v6398.push(v6399);
v6397.apiCallAttempt = v6398;
const v6403 = [];
var v6404;
v6404 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6385.getPrototypeOf(v6401); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6405 = {};
v6405.constructor = v6404;
v6404.prototype = v6405;
v6403.push(v6404);
v6397.apiCall = v6403;
v6396._events = v6397;
v6396.MONITOR_EVENTS_BUBBLE = v6399;
v6396.CALL_EVENTS_BUBBLE = v6404;
v6393.prototype = v6396;
v6393.__super__ = v299;
const v6406 = {};
v6406[\\"2017-11-28\\"] = null;
v6393.services = v6406;
const v6407 = [];
v6407.push(\\"2017-11-28\\");
v6393.apiVersions = v6407;
v6393.serviceIdentifier = \\"guardduty\\";
v2.GuardDuty = v6393;
var v6408;
var v6409 = v299;
var v6410 = v31;
v6408 = function () { if (v6409 !== v6410) {
    return v6409.apply(this, arguments);
} };
const v6411 = Object.create(v309);
v6411.constructor = v6408;
const v6412 = {};
const v6413 = [];
var v6414;
var v6415 = v31;
var v6416 = v6411;
v6414 = function EVENTS_BUBBLE(event) { var baseClass = v6415.getPrototypeOf(v6416); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6417 = {};
v6417.constructor = v6414;
v6414.prototype = v6417;
v6413.push(v6414);
v6412.apiCallAttempt = v6413;
const v6418 = [];
var v6419;
v6419 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6400.getPrototypeOf(v6416); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6420 = {};
v6420.constructor = v6419;
v6419.prototype = v6420;
v6418.push(v6419);
v6412.apiCall = v6418;
v6411._events = v6412;
v6411.MONITOR_EVENTS_BUBBLE = v6414;
v6411.CALL_EVENTS_BUBBLE = v6419;
v6408.prototype = v6411;
v6408.__super__ = v299;
const v6421 = {};
v6421[\\"2017-11-27\\"] = null;
v6408.services = v6421;
const v6422 = [];
v6422.push(\\"2017-11-27\\");
v6408.apiVersions = v6422;
v6408.serviceIdentifier = \\"mq\\";
v2.MQ = v6408;
var v6423;
var v6424 = v299;
var v6425 = v31;
v6423 = function () { if (v6424 !== v6425) {
    return v6424.apply(this, arguments);
} };
const v6426 = Object.create(v309);
v6426.constructor = v6423;
const v6427 = {};
const v6428 = [];
var v6429;
var v6430 = v31;
var v6431 = v6426;
v6429 = function EVENTS_BUBBLE(event) { var baseClass = v6430.getPrototypeOf(v6431); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6432 = {};
v6432.constructor = v6429;
v6429.prototype = v6432;
v6428.push(v6429);
v6427.apiCallAttempt = v6428;
const v6433 = [];
var v6434;
v6434 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6415.getPrototypeOf(v6431); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6435 = {};
v6435.constructor = v6434;
v6434.prototype = v6435;
v6433.push(v6434);
v6427.apiCall = v6433;
v6426._events = v6427;
v6426.MONITOR_EVENTS_BUBBLE = v6429;
v6426.CALL_EVENTS_BUBBLE = v6434;
v6423.prototype = v6426;
v6423.__super__ = v299;
const v6436 = {};
v6436[\\"2017-11-27\\"] = null;
v6423.services = v6436;
const v6437 = [];
v6437.push(\\"2017-11-27\\");
v6423.apiVersions = v6437;
v6423.serviceIdentifier = \\"comprehend\\";
v2.Comprehend = v6423;
var v6438;
var v6439 = v299;
var v6440 = v31;
v6438 = function () { if (v6439 !== v6440) {
    return v6439.apply(this, arguments);
} };
const v6441 = Object.create(v309);
v6441.constructor = v6438;
const v6442 = {};
const v6443 = [];
var v6444;
var v6445 = v31;
var v6446 = v6441;
v6444 = function EVENTS_BUBBLE(event) { var baseClass = v6445.getPrototypeOf(v6446); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6447 = {};
v6447.constructor = v6444;
v6444.prototype = v6447;
v6443.push(v6444);
v6442.apiCallAttempt = v6443;
const v6448 = [];
var v6449;
v6449 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6430.getPrototypeOf(v6446); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6450 = {};
v6450.constructor = v6449;
v6449.prototype = v6450;
v6448.push(v6449);
v6442.apiCall = v6448;
v6441._events = v6442;
v6441.MONITOR_EVENTS_BUBBLE = v6444;
v6441.CALL_EVENTS_BUBBLE = v6449;
v6438.prototype = v6441;
v6438.__super__ = v299;
const v6451 = {};
v6451[\\"2017-09-29\\"] = null;
v6438.services = v6451;
const v6452 = [];
v6452.push(\\"2017-09-29\\");
v6438.apiVersions = v6452;
v6438.serviceIdentifier = \\"iotjobsdataplane\\";
v2.IoTJobsDataPlane = v6438;
var v6453;
var v6454 = v299;
var v6455 = v31;
v6453 = function () { if (v6454 !== v6455) {
    return v6454.apply(this, arguments);
} };
const v6456 = Object.create(v309);
v6456.constructor = v6453;
const v6457 = {};
const v6458 = [];
var v6459;
var v6460 = v31;
var v6461 = v6456;
v6459 = function EVENTS_BUBBLE(event) { var baseClass = v6460.getPrototypeOf(v6461); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6462 = {};
v6462.constructor = v6459;
v6459.prototype = v6462;
v6458.push(v6459);
v6457.apiCallAttempt = v6458;
const v6463 = [];
var v6464;
v6464 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6445.getPrototypeOf(v6461); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6465 = {};
v6465.constructor = v6464;
v6464.prototype = v6465;
v6463.push(v6464);
v6457.apiCall = v6463;
v6456._events = v6457;
v6456.MONITOR_EVENTS_BUBBLE = v6459;
v6456.CALL_EVENTS_BUBBLE = v6464;
v6453.prototype = v6456;
v6453.__super__ = v299;
const v6466 = {};
v6466[\\"2017-09-30\\"] = null;
v6453.services = v6466;
const v6467 = [];
v6467.push(\\"2017-09-30\\");
v6453.apiVersions = v6467;
v6453.serviceIdentifier = \\"kinesisvideoarchivedmedia\\";
v2.KinesisVideoArchivedMedia = v6453;
var v6468;
var v6469 = v299;
var v6470 = v31;
v6468 = function () { if (v6469 !== v6470) {
    return v6469.apply(this, arguments);
} };
const v6471 = Object.create(v309);
v6471.constructor = v6468;
const v6472 = {};
const v6473 = [];
var v6474;
var v6475 = v31;
var v6476 = v6471;
v6474 = function EVENTS_BUBBLE(event) { var baseClass = v6475.getPrototypeOf(v6476); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6477 = {};
v6477.constructor = v6474;
v6474.prototype = v6477;
v6473.push(v6474);
v6472.apiCallAttempt = v6473;
const v6478 = [];
var v6479;
v6479 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6460.getPrototypeOf(v6476); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6480 = {};
v6480.constructor = v6479;
v6479.prototype = v6480;
v6478.push(v6479);
v6472.apiCall = v6478;
v6471._events = v6472;
v6471.MONITOR_EVENTS_BUBBLE = v6474;
v6471.CALL_EVENTS_BUBBLE = v6479;
v6468.prototype = v6471;
v6468.__super__ = v299;
const v6481 = {};
v6481[\\"2017-09-30\\"] = null;
v6468.services = v6481;
const v6482 = [];
v6482.push(\\"2017-09-30\\");
v6468.apiVersions = v6482;
v6468.serviceIdentifier = \\"kinesisvideomedia\\";
v2.KinesisVideoMedia = v6468;
var v6483;
var v6484 = v299;
var v6485 = v31;
v6483 = function () { if (v6484 !== v6485) {
    return v6484.apply(this, arguments);
} };
const v6486 = Object.create(v309);
v6486.constructor = v6483;
const v6487 = {};
const v6488 = [];
var v6489;
var v6490 = v31;
var v6491 = v6486;
v6489 = function EVENTS_BUBBLE(event) { var baseClass = v6490.getPrototypeOf(v6491); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6492 = {};
v6492.constructor = v6489;
v6489.prototype = v6492;
v6488.push(v6489);
v6487.apiCallAttempt = v6488;
const v6493 = [];
var v6494;
v6494 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6475.getPrototypeOf(v6491); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6495 = {};
v6495.constructor = v6494;
v6494.prototype = v6495;
v6493.push(v6494);
v6487.apiCall = v6493;
v6486._events = v6487;
v6486.MONITOR_EVENTS_BUBBLE = v6489;
v6486.CALL_EVENTS_BUBBLE = v6494;
v6483.prototype = v6486;
v6483.__super__ = v299;
const v6496 = {};
v6496[\\"2017-09-30\\"] = null;
v6483.services = v6496;
const v6497 = [];
v6497.push(\\"2017-09-30\\");
v6483.apiVersions = v6497;
v6483.serviceIdentifier = \\"kinesisvideo\\";
v2.KinesisVideo = v6483;
var v6498;
var v6499 = v299;
var v6500 = v31;
v6498 = function () { if (v6499 !== v6500) {
    return v6499.apply(this, arguments);
} };
const v6501 = Object.create(v309);
v6501.constructor = v6498;
const v6502 = {};
const v6503 = [];
var v6504;
var v6505 = v31;
var v6506 = v6501;
v6504 = function EVENTS_BUBBLE(event) { var baseClass = v6505.getPrototypeOf(v6506); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6507 = {};
v6507.constructor = v6504;
v6504.prototype = v6507;
v6503.push(v6504);
v6502.apiCallAttempt = v6503;
const v6508 = [];
var v6509;
v6509 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6490.getPrototypeOf(v6506); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6510 = {};
v6510.constructor = v6509;
v6509.prototype = v6510;
v6508.push(v6509);
v6502.apiCall = v6508;
v6501._events = v6502;
v6501.MONITOR_EVENTS_BUBBLE = v6504;
v6501.CALL_EVENTS_BUBBLE = v6509;
v6498.prototype = v6501;
v6498.__super__ = v299;
const v6511 = {};
v6511[\\"2017-05-13\\"] = null;
v6498.services = v6511;
const v6512 = [];
v6512.push(\\"2017-05-13\\");
v6498.apiVersions = v6512;
v6498.serviceIdentifier = \\"sagemakerruntime\\";
v2.SageMakerRuntime = v6498;
var v6513;
var v6514 = v299;
var v6515 = v31;
v6513 = function () { if (v6514 !== v6515) {
    return v6514.apply(this, arguments);
} };
const v6516 = Object.create(v309);
v6516.constructor = v6513;
const v6517 = {};
const v6518 = [];
var v6519;
var v6520 = v31;
var v6521 = v6516;
v6519 = function EVENTS_BUBBLE(event) { var baseClass = v6520.getPrototypeOf(v6521); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6522 = {};
v6522.constructor = v6519;
v6519.prototype = v6522;
v6518.push(v6519);
v6517.apiCallAttempt = v6518;
const v6523 = [];
var v6524;
v6524 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6505.getPrototypeOf(v6521); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6525 = {};
v6525.constructor = v6524;
v6524.prototype = v6525;
v6523.push(v6524);
v6517.apiCall = v6523;
v6516._events = v6517;
v6516.MONITOR_EVENTS_BUBBLE = v6519;
v6516.CALL_EVENTS_BUBBLE = v6524;
v6513.prototype = v6516;
v6513.__super__ = v299;
const v6526 = {};
v6526[\\"2017-07-24\\"] = null;
v6513.services = v6526;
const v6527 = [];
v6527.push(\\"2017-07-24\\");
v6513.apiVersions = v6527;
v6513.serviceIdentifier = \\"sagemaker\\";
v2.SageMaker = v6513;
var v6528;
var v6529 = v299;
var v6530 = v31;
v6528 = function () { if (v6529 !== v6530) {
    return v6529.apply(this, arguments);
} };
const v6531 = Object.create(v309);
v6531.constructor = v6528;
const v6532 = {};
const v6533 = [];
var v6534;
var v6535 = v31;
var v6536 = v6531;
v6534 = function EVENTS_BUBBLE(event) { var baseClass = v6535.getPrototypeOf(v6536); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6537 = {};
v6537.constructor = v6534;
v6534.prototype = v6537;
v6533.push(v6534);
v6532.apiCallAttempt = v6533;
const v6538 = [];
var v6539;
v6539 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6520.getPrototypeOf(v6536); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6540 = {};
v6540.constructor = v6539;
v6539.prototype = v6540;
v6538.push(v6539);
v6532.apiCall = v6538;
v6531._events = v6532;
v6531.MONITOR_EVENTS_BUBBLE = v6534;
v6531.CALL_EVENTS_BUBBLE = v6539;
v6528.prototype = v6531;
v6528.__super__ = v299;
const v6541 = {};
v6541[\\"2017-07-01\\"] = null;
v6528.services = v6541;
const v6542 = [];
v6542.push(\\"2017-07-01\\");
v6528.apiVersions = v6542;
v6528.serviceIdentifier = \\"translate\\";
v2.Translate = v6528;
var v6543;
var v6544 = v299;
var v6545 = v31;
v6543 = function () { if (v6544 !== v6545) {
    return v6544.apply(this, arguments);
} };
const v6546 = Object.create(v309);
v6546.constructor = v6543;
const v6547 = {};
const v6548 = [];
var v6549;
var v6550 = v31;
var v6551 = v6546;
v6549 = function EVENTS_BUBBLE(event) { var baseClass = v6550.getPrototypeOf(v6551); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6552 = {};
v6552.constructor = v6549;
v6549.prototype = v6552;
v6548.push(v6549);
v6547.apiCallAttempt = v6548;
const v6553 = [];
var v6554;
v6554 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6535.getPrototypeOf(v6551); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6555 = {};
v6555.constructor = v6554;
v6554.prototype = v6555;
v6553.push(v6554);
v6547.apiCall = v6553;
v6546._events = v6547;
v6546.MONITOR_EVENTS_BUBBLE = v6549;
v6546.CALL_EVENTS_BUBBLE = v6554;
v6543.prototype = v6546;
v6543.__super__ = v299;
const v6556 = {};
v6556[\\"2017-11-27\\"] = null;
v6543.services = v6556;
const v6557 = [];
v6557.push(\\"2017-11-27\\");
v6543.apiVersions = v6557;
v6543.serviceIdentifier = \\"resourcegroups\\";
v2.ResourceGroups = v6543;
var v6558;
var v6559 = v299;
var v6560 = v31;
v6558 = function () { if (v6559 !== v6560) {
    return v6559.apply(this, arguments);
} };
const v6561 = Object.create(v309);
v6561.constructor = v6558;
const v6562 = {};
const v6563 = [];
var v6564;
var v6565 = v31;
var v6566 = v6561;
v6564 = function EVENTS_BUBBLE(event) { var baseClass = v6565.getPrototypeOf(v6566); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6567 = {};
v6567.constructor = v6564;
v6564.prototype = v6567;
v6563.push(v6564);
v6562.apiCallAttempt = v6563;
const v6568 = [];
var v6569;
v6569 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6550.getPrototypeOf(v6566); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6570 = {};
v6570.constructor = v6569;
v6569.prototype = v6570;
v6568.push(v6569);
v6562.apiCall = v6568;
v6561._events = v6562;
v6561.MONITOR_EVENTS_BUBBLE = v6564;
v6561.CALL_EVENTS_BUBBLE = v6569;
v6558.prototype = v6561;
v6558.__super__ = v299;
const v6571 = {};
v6571[\\"2017-11-09\\"] = null;
v6558.services = v6571;
const v6572 = [];
v6572.push(\\"2017-11-09\\");
v6558.apiVersions = v6572;
v6558.serviceIdentifier = \\"alexaforbusiness\\";
v2.AlexaForBusiness = v6558;
var v6573;
var v6574 = v299;
var v6575 = v31;
v6573 = function () { if (v6574 !== v6575) {
    return v6574.apply(this, arguments);
} };
const v6576 = Object.create(v309);
v6576.constructor = v6573;
const v6577 = {};
const v6578 = [];
var v6579;
var v6580 = v31;
var v6581 = v6576;
v6579 = function EVENTS_BUBBLE(event) { var baseClass = v6580.getPrototypeOf(v6581); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6582 = {};
v6582.constructor = v6579;
v6579.prototype = v6582;
v6578.push(v6579);
v6577.apiCallAttempt = v6578;
const v6583 = [];
var v6584;
v6584 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6565.getPrototypeOf(v6581); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6585 = {};
v6585.constructor = v6584;
v6584.prototype = v6585;
v6583.push(v6584);
v6577.apiCall = v6583;
v6576._events = v6577;
v6576.MONITOR_EVENTS_BUBBLE = v6579;
v6576.CALL_EVENTS_BUBBLE = v6584;
v6573.prototype = v6576;
v6573.__super__ = v299;
const v6586 = {};
v6586[\\"2017-09-23\\"] = null;
v6573.services = v6586;
const v6587 = [];
v6587.push(\\"2017-09-23\\");
v6573.apiVersions = v6587;
v6573.serviceIdentifier = \\"cloud9\\";
v2.Cloud9 = v6573;
var v6588;
var v6589 = v299;
var v6590 = v31;
v6588 = function () { if (v6589 !== v6590) {
    return v6589.apply(this, arguments);
} };
const v6591 = Object.create(v309);
v6591.constructor = v6588;
const v6592 = {};
const v6593 = [];
var v6594;
var v6595 = v31;
var v6596 = v6591;
v6594 = function EVENTS_BUBBLE(event) { var baseClass = v6595.getPrototypeOf(v6596); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6597 = {};
v6597.constructor = v6594;
v6594.prototype = v6597;
v6593.push(v6594);
v6592.apiCallAttempt = v6593;
const v6598 = [];
var v6599;
v6599 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6580.getPrototypeOf(v6596); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6600 = {};
v6600.constructor = v6599;
v6599.prototype = v6600;
v6598.push(v6599);
v6592.apiCall = v6598;
v6591._events = v6592;
v6591.MONITOR_EVENTS_BUBBLE = v6594;
v6591.CALL_EVENTS_BUBBLE = v6599;
v6588.prototype = v6591;
v6588.__super__ = v299;
const v6601 = {};
v6601[\\"2017-09-08\\"] = null;
v6588.services = v6601;
const v6602 = [];
v6602.push(\\"2017-09-08\\");
v6588.apiVersions = v6602;
v6588.serviceIdentifier = \\"serverlessapplicationrepository\\";
v2.ServerlessApplicationRepository = v6588;
var v6603;
var v6604 = v299;
var v6605 = v31;
v6603 = function () { if (v6604 !== v6605) {
    return v6604.apply(this, arguments);
} };
const v6606 = Object.create(v309);
v6606.constructor = v6603;
const v6607 = {};
const v6608 = [];
var v6609;
var v6610 = v31;
var v6611 = v6606;
v6609 = function EVENTS_BUBBLE(event) { var baseClass = v6610.getPrototypeOf(v6611); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6612 = {};
v6612.constructor = v6609;
v6609.prototype = v6612;
v6608.push(v6609);
v6607.apiCallAttempt = v6608;
const v6613 = [];
var v6614;
v6614 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6595.getPrototypeOf(v6611); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6615 = {};
v6615.constructor = v6614;
v6614.prototype = v6615;
v6613.push(v6614);
v6607.apiCall = v6613;
v6606._events = v6607;
v6606.MONITOR_EVENTS_BUBBLE = v6609;
v6606.CALL_EVENTS_BUBBLE = v6614;
v6603.prototype = v6606;
v6603.__super__ = v299;
const v6616 = {};
v6616[\\"2017-03-14\\"] = null;
v6603.services = v6616;
const v6617 = [];
v6617.push(\\"2017-03-14\\");
v6603.apiVersions = v6617;
v6603.serviceIdentifier = \\"servicediscovery\\";
v2.ServiceDiscovery = v6603;
var v6618;
var v6619 = v299;
var v6620 = v31;
v6618 = function () { if (v6619 !== v6620) {
    return v6619.apply(this, arguments);
} };
const v6621 = Object.create(v309);
v6621.constructor = v6618;
const v6622 = {};
const v6623 = [];
var v6624;
var v6625 = v31;
var v6626 = v6621;
v6624 = function EVENTS_BUBBLE(event) { var baseClass = v6625.getPrototypeOf(v6626); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6627 = {};
v6627.constructor = v6624;
v6624.prototype = v6627;
v6623.push(v6624);
v6622.apiCallAttempt = v6623;
const v6628 = [];
var v6629;
v6629 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6610.getPrototypeOf(v6626); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6630 = {};
v6630.constructor = v6629;
v6629.prototype = v6630;
v6628.push(v6629);
v6622.apiCall = v6628;
v6621._events = v6622;
v6621.MONITOR_EVENTS_BUBBLE = v6624;
v6621.CALL_EVENTS_BUBBLE = v6629;
v6618.prototype = v6621;
v6618.__super__ = v299;
const v6631 = {};
v6631[\\"2017-10-01\\"] = null;
v6618.services = v6631;
const v6632 = [];
v6632.push(\\"2017-10-01\\");
v6618.apiVersions = v6632;
v6618.serviceIdentifier = \\"workmail\\";
v2.WorkMail = v6618;
var v6633;
var v6634 = v299;
var v6635 = v31;
v6633 = function () { if (v6634 !== v6635) {
    return v6634.apply(this, arguments);
} };
const v6636 = Object.create(v309);
v6636.constructor = v6633;
const v6637 = {};
const v6638 = [];
var v6639;
var v6640 = v31;
var v6641 = v6636;
v6639 = function EVENTS_BUBBLE(event) { var baseClass = v6640.getPrototypeOf(v6641); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6642 = {};
v6642.constructor = v6639;
v6639.prototype = v6642;
v6638.push(v6639);
v6637.apiCallAttempt = v6638;
const v6643 = [];
var v6644;
v6644 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6625.getPrototypeOf(v6641); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6645 = {};
v6645.constructor = v6644;
v6644.prototype = v6645;
v6643.push(v6644);
v6637.apiCall = v6643;
v6636._events = v6637;
v6636.MONITOR_EVENTS_BUBBLE = v6639;
v6636.CALL_EVENTS_BUBBLE = v6644;
v6633.prototype = v6636;
v6633.__super__ = v299;
const v6646 = {};
v6646[\\"2018-01-06\\"] = null;
v6633.services = v6646;
const v6647 = [];
v6647.push(\\"2018-01-06\\");
v6633.apiVersions = v6647;
v6633.serviceIdentifier = \\"autoscalingplans\\";
v2.AutoScalingPlans = v6633;
var v6648;
var v6649 = v299;
var v6650 = v31;
v6648 = function () { if (v6649 !== v6650) {
    return v6649.apply(this, arguments);
} };
const v6651 = Object.create(v309);
v6651.constructor = v6648;
const v6652 = {};
const v6653 = [];
var v6654;
var v6655 = v31;
var v6656 = v6651;
v6654 = function EVENTS_BUBBLE(event) { var baseClass = v6655.getPrototypeOf(v6656); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6657 = {};
v6657.constructor = v6654;
v6654.prototype = v6657;
v6653.push(v6654);
v6652.apiCallAttempt = v6653;
const v6658 = [];
var v6659;
v6659 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6640.getPrototypeOf(v6656); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6660 = {};
v6660.constructor = v6659;
v6659.prototype = v6660;
v6658.push(v6659);
v6652.apiCall = v6658;
v6651._events = v6652;
v6651.MONITOR_EVENTS_BUBBLE = v6654;
v6651.CALL_EVENTS_BUBBLE = v6659;
v6648.prototype = v6651;
v6648.__super__ = v299;
const v6661 = {};
v6661[\\"2017-10-26\\"] = null;
v6648.services = v6661;
const v6662 = [];
v6662.push(\\"2017-10-26\\");
v6648.apiVersions = v6662;
v6648.serviceIdentifier = \\"transcribeservice\\";
v2.TranscribeService = v6648;
var v6663;
var v6664 = v299;
var v6665 = v31;
v6663 = function () { if (v6664 !== v6665) {
    return v6664.apply(this, arguments);
} };
const v6666 = Object.create(v309);
v6666.constructor = v6663;
const v6667 = {};
const v6668 = [];
var v6669;
var v6670 = v31;
var v6671 = v6666;
v6669 = function EVENTS_BUBBLE(event) { var baseClass = v6670.getPrototypeOf(v6671); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6672 = {};
v6672.constructor = v6669;
v6669.prototype = v6672;
v6668.push(v6669);
v6667.apiCallAttempt = v6668;
const v6673 = [];
var v6674;
v6674 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6655.getPrototypeOf(v6671); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6675 = {};
v6675.constructor = v6674;
v6674.prototype = v6675;
v6673.push(v6674);
v6667.apiCall = v6673;
v6666._events = v6667;
v6666.MONITOR_EVENTS_BUBBLE = v6669;
v6666.CALL_EVENTS_BUBBLE = v6674;
v6663.prototype = v6666;
v6663.__super__ = v299;
const v6676 = {};
v6676[\\"2017-08-08\\"] = null;
v6663.services = v6676;
const v6677 = [];
v6677.push(\\"2017-08-08\\");
v6663.apiVersions = v6677;
v6663.serviceIdentifier = \\"connect\\";
v2.Connect = v6663;
var v6678;
var v6679 = v299;
var v6680 = v31;
v6678 = function () { if (v6679 !== v6680) {
    return v6679.apply(this, arguments);
} };
const v6681 = Object.create(v309);
v6681.constructor = v6678;
const v6682 = {};
const v6683 = [];
var v6684;
var v6685 = v31;
var v6686 = v6681;
v6684 = function EVENTS_BUBBLE(event) { var baseClass = v6685.getPrototypeOf(v6686); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6687 = {};
v6687.constructor = v6684;
v6684.prototype = v6687;
v6683.push(v6684);
v6682.apiCallAttempt = v6683;
const v6688 = [];
var v6689;
v6689 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6670.getPrototypeOf(v6686); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6690 = {};
v6690.constructor = v6689;
v6689.prototype = v6690;
v6688.push(v6689);
v6682.apiCall = v6688;
v6681._events = v6682;
v6681.MONITOR_EVENTS_BUBBLE = v6684;
v6681.CALL_EVENTS_BUBBLE = v6689;
v6678.prototype = v6681;
v6678.__super__ = v299;
const v6691 = {};
v6691[\\"2017-08-22\\"] = null;
v6678.services = v6691;
const v6692 = [];
v6692.push(\\"2017-08-22\\");
v6678.apiVersions = v6692;
v6678.serviceIdentifier = \\"acmpca\\";
v2.ACMPCA = v6678;
var v6693;
var v6694 = v299;
var v6695 = v31;
v6693 = function () { if (v6694 !== v6695) {
    return v6694.apply(this, arguments);
} };
const v6696 = Object.create(v309);
v6696.constructor = v6693;
const v6697 = {};
const v6698 = [];
var v6699;
var v6700 = v31;
var v6701 = v6696;
v6699 = function EVENTS_BUBBLE(event) { var baseClass = v6700.getPrototypeOf(v6701); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6702 = {};
v6702.constructor = v6699;
v6699.prototype = v6702;
v6698.push(v6699);
v6697.apiCallAttempt = v6698;
const v6703 = [];
var v6704;
v6704 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6685.getPrototypeOf(v6701); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6705 = {};
v6705.constructor = v6704;
v6704.prototype = v6705;
v6703.push(v6704);
v6697.apiCall = v6703;
v6696._events = v6697;
v6696.MONITOR_EVENTS_BUBBLE = v6699;
v6696.CALL_EVENTS_BUBBLE = v6704;
v6693.prototype = v6696;
v6693.__super__ = v299;
const v6706 = {};
v6706[\\"2018-01-01\\"] = null;
v6693.services = v6706;
const v6707 = [];
v6707.push(\\"2018-01-01\\");
v6693.apiVersions = v6707;
v6693.serviceIdentifier = \\"fms\\";
v2.FMS = v6693;
var v6708;
var v6709 = v299;
var v6710 = v31;
v6708 = function () { if (v6709 !== v6710) {
    return v6709.apply(this, arguments);
} };
const v6711 = Object.create(v309);
v6711.constructor = v6708;
const v6712 = {};
const v6713 = [];
var v6714;
var v6715 = v31;
var v6716 = v6711;
v6714 = function EVENTS_BUBBLE(event) { var baseClass = v6715.getPrototypeOf(v6716); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6717 = {};
v6717.constructor = v6714;
v6714.prototype = v6717;
v6713.push(v6714);
v6712.apiCallAttempt = v6713;
const v6718 = [];
var v6719;
v6719 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6700.getPrototypeOf(v6716); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6720 = {};
v6720.constructor = v6719;
v6719.prototype = v6720;
v6718.push(v6719);
v6712.apiCall = v6718;
v6711._events = v6712;
v6711.MONITOR_EVENTS_BUBBLE = v6714;
v6711.CALL_EVENTS_BUBBLE = v6719;
v6708.prototype = v6711;
v6708.__super__ = v299;
const v6721 = {};
v6721[\\"2017-10-17\\"] = null;
v6708.services = v6721;
const v6722 = [];
v6722.push(\\"2017-10-17\\");
v6708.apiVersions = v6722;
v6708.serviceIdentifier = \\"secretsmanager\\";
v2.SecretsManager = v6708;
var v6723;
var v6724 = v299;
var v6725 = v31;
v6723 = function () { if (v6724 !== v6725) {
    return v6724.apply(this, arguments);
} };
const v6726 = Object.create(v309);
v6726.constructor = v6723;
const v6727 = {};
const v6728 = [];
var v6729;
var v6730 = v31;
var v6731 = v6726;
v6729 = function EVENTS_BUBBLE(event) { var baseClass = v6730.getPrototypeOf(v6731); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6732 = {};
v6732.constructor = v6729;
v6729.prototype = v6732;
v6728.push(v6729);
v6727.apiCallAttempt = v6728;
const v6733 = [];
var v6734;
v6734 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6715.getPrototypeOf(v6731); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6735 = {};
v6735.constructor = v6734;
v6734.prototype = v6735;
v6733.push(v6734);
v6727.apiCall = v6733;
v6726._events = v6727;
v6726.MONITOR_EVENTS_BUBBLE = v6729;
v6726.CALL_EVENTS_BUBBLE = v6734;
v6723.prototype = v6726;
v6723.__super__ = v299;
const v6736 = {};
v6736[\\"2017-11-27\\"] = null;
v6723.services = v6736;
const v6737 = [];
v6737.push(\\"2017-11-27\\");
v6723.apiVersions = v6737;
v6723.serviceIdentifier = \\"iotanalytics\\";
v2.IoTAnalytics = v6723;
var v6738;
var v6739 = v299;
var v6740 = v31;
v6738 = function () { if (v6739 !== v6740) {
    return v6739.apply(this, arguments);
} };
const v6741 = Object.create(v309);
v6741.constructor = v6738;
const v6742 = {};
const v6743 = [];
var v6744;
var v6745 = v31;
var v6746 = v6741;
v6744 = function EVENTS_BUBBLE(event) { var baseClass = v6745.getPrototypeOf(v6746); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6747 = {};
v6747.constructor = v6744;
v6744.prototype = v6747;
v6743.push(v6744);
v6742.apiCallAttempt = v6743;
const v6748 = [];
var v6749;
v6749 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6730.getPrototypeOf(v6746); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6750 = {};
v6750.constructor = v6749;
v6749.prototype = v6750;
v6748.push(v6749);
v6742.apiCall = v6748;
v6741._events = v6742;
v6741.MONITOR_EVENTS_BUBBLE = v6744;
v6741.CALL_EVENTS_BUBBLE = v6749;
v6738.prototype = v6741;
v6738.__super__ = v299;
const v6751 = {};
v6751[\\"2018-05-14\\"] = null;
v6738.services = v6751;
const v6752 = [];
v6752.push(\\"2018-05-14\\");
v6738.apiVersions = v6752;
v6738.serviceIdentifier = \\"iot1clickdevicesservice\\";
v2.IoT1ClickDevicesService = v6738;
var v6753;
var v6754 = v299;
var v6755 = v31;
v6753 = function () { if (v6754 !== v6755) {
    return v6754.apply(this, arguments);
} };
const v6756 = Object.create(v309);
v6756.constructor = v6753;
const v6757 = {};
const v6758 = [];
var v6759;
var v6760 = v31;
var v6761 = v6756;
v6759 = function EVENTS_BUBBLE(event) { var baseClass = v6760.getPrototypeOf(v6761); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6762 = {};
v6762.constructor = v6759;
v6759.prototype = v6762;
v6758.push(v6759);
v6757.apiCallAttempt = v6758;
const v6763 = [];
var v6764;
v6764 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6745.getPrototypeOf(v6761); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6765 = {};
v6765.constructor = v6764;
v6764.prototype = v6765;
v6763.push(v6764);
v6757.apiCall = v6763;
v6756._events = v6757;
v6756.MONITOR_EVENTS_BUBBLE = v6759;
v6756.CALL_EVENTS_BUBBLE = v6764;
v6753.prototype = v6756;
v6753.__super__ = v299;
const v6766 = {};
v6766[\\"2018-05-14\\"] = null;
v6753.services = v6766;
const v6767 = [];
v6767.push(\\"2018-05-14\\");
v6753.apiVersions = v6767;
v6753.serviceIdentifier = \\"iot1clickprojects\\";
v2.IoT1ClickProjects = v6753;
var v6768;
var v6769 = v299;
var v6770 = v31;
v6768 = function () { if (v6769 !== v6770) {
    return v6769.apply(this, arguments);
} };
const v6771 = Object.create(v309);
v6771.constructor = v6768;
const v6772 = {};
const v6773 = [];
var v6774;
var v6775 = v31;
var v6776 = v6771;
v6774 = function EVENTS_BUBBLE(event) { var baseClass = v6775.getPrototypeOf(v6776); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6777 = {};
v6777.constructor = v6774;
v6774.prototype = v6777;
v6773.push(v6774);
v6772.apiCallAttempt = v6773;
const v6778 = [];
var v6779;
v6779 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6760.getPrototypeOf(v6776); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6780 = {};
v6780.constructor = v6779;
v6779.prototype = v6780;
v6778.push(v6779);
v6772.apiCall = v6778;
v6771._events = v6772;
v6771.MONITOR_EVENTS_BUBBLE = v6774;
v6771.CALL_EVENTS_BUBBLE = v6779;
v6768.prototype = v6771;
v6768.__super__ = v299;
const v6781 = {};
v6781[\\"2018-02-27\\"] = null;
v6768.services = v6781;
const v6782 = [];
v6782.push(\\"2018-02-27\\");
v6768.apiVersions = v6782;
v6768.serviceIdentifier = \\"pi\\";
v2.PI = v6768;
var v6783;
var v6784 = v299;
var v6785 = v31;
v6783 = function () { if (v6784 !== v6785) {
    return v6784.apply(this, arguments);
} };
const v6786 = Object.create(v309);
v6786.constructor = v6783;
const v6787 = {};
const v6788 = [];
var v6789;
var v6790 = v31;
var v6791 = v6786;
v6789 = function EVENTS_BUBBLE(event) { var baseClass = v6790.getPrototypeOf(v6791); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6792 = {};
v6792.constructor = v6789;
v6789.prototype = v6792;
v6788.push(v6789);
v6787.apiCallAttempt = v6788;
const v6793 = [];
var v6794;
v6794 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6775.getPrototypeOf(v6791); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6795 = {};
v6795.constructor = v6794;
v6794.prototype = v6795;
v6793.push(v6794);
v6787.apiCall = v6793;
v6786._events = v6787;
v6786.MONITOR_EVENTS_BUBBLE = v6789;
v6786.CALL_EVENTS_BUBBLE = v6794;
var v6796;
const v6798 = [];
v6798.push(\\"createDBCluster\\", \\"copyDBClusterSnapshot\\");
var v6797 = v6798;
var v6799 = v5419;
var v6800 = v6798;
v6796 = function setupRequestListeners(request) { if (v6797.indexOf(request.operation) !== -1 && this.config.params && this.config.params.SourceRegion && request.params && !request.params.SourceRegion) {
    request.params.SourceRegion = this.config.params.SourceRegion;
} v6799.setupRequestListeners(this, request, v6800); };
const v6801 = {};
v6801.constructor = v6796;
v6796.prototype = v6801;
v6786.setupRequestListeners = v6796;
v6783.prototype = v6786;
v6783.__super__ = v299;
const v6802 = {};
v6802[\\"2014-10-31\\"] = null;
v6783.services = v6802;
const v6803 = [];
v6803.push(\\"2014-10-31\\");
v6783.apiVersions = v6803;
v6783.serviceIdentifier = \\"neptune\\";
v2.Neptune = v6783;
var v6804;
var v6805 = v299;
var v6806 = v31;
v6804 = function () { if (v6805 !== v6806) {
    return v6805.apply(this, arguments);
} };
const v6807 = Object.create(v309);
v6807.constructor = v6804;
const v6808 = {};
const v6809 = [];
var v6810;
var v6811 = v31;
var v6812 = v6807;
v6810 = function EVENTS_BUBBLE(event) { var baseClass = v6811.getPrototypeOf(v6812); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6813 = {};
v6813.constructor = v6810;
v6810.prototype = v6813;
v6809.push(v6810);
v6808.apiCallAttempt = v6809;
const v6814 = [];
var v6815;
v6815 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6790.getPrototypeOf(v6812); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6816 = {};
v6816.constructor = v6815;
v6815.prototype = v6816;
v6814.push(v6815);
v6808.apiCall = v6814;
v6807._events = v6808;
v6807.MONITOR_EVENTS_BUBBLE = v6810;
v6807.CALL_EVENTS_BUBBLE = v6815;
v6804.prototype = v6807;
v6804.__super__ = v299;
const v6817 = {};
v6817[\\"2018-04-23\\"] = null;
v6804.services = v6817;
const v6818 = [];
v6818.push(\\"2018-04-23\\");
v6804.apiVersions = v6818;
v6804.serviceIdentifier = \\"mediatailor\\";
v2.MediaTailor = v6804;
var v6819;
var v6820 = v299;
var v6821 = v31;
v6819 = function () { if (v6820 !== v6821) {
    return v6820.apply(this, arguments);
} };
const v6822 = Object.create(v309);
v6822.constructor = v6819;
const v6823 = {};
const v6824 = [];
var v6825;
var v6826 = v31;
var v6827 = v6822;
v6825 = function EVENTS_BUBBLE(event) { var baseClass = v6826.getPrototypeOf(v6827); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6828 = {};
v6828.constructor = v6825;
v6825.prototype = v6828;
v6824.push(v6825);
v6823.apiCallAttempt = v6824;
const v6829 = [];
var v6830;
v6830 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6811.getPrototypeOf(v6827); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6831 = {};
v6831.constructor = v6830;
v6830.prototype = v6831;
v6829.push(v6830);
v6823.apiCall = v6829;
v6822._events = v6823;
v6822.MONITOR_EVENTS_BUBBLE = v6825;
v6822.CALL_EVENTS_BUBBLE = v6830;
v6819.prototype = v6822;
v6819.__super__ = v299;
const v6832 = {};
v6832[\\"2017-11-01\\"] = null;
v6819.services = v6832;
const v6833 = [];
v6833.push(\\"2017-11-01\\");
v6819.apiVersions = v6833;
v6819.serviceIdentifier = \\"eks\\";
v2.EKS = v6819;
var v6834;
var v6835 = v299;
var v6836 = v31;
v6834 = function () { if (v6835 !== v6836) {
    return v6835.apply(this, arguments);
} };
const v6837 = Object.create(v309);
v6837.constructor = v6834;
const v6838 = {};
const v6839 = [];
var v6840;
var v6841 = v31;
var v6842 = v6837;
v6840 = function EVENTS_BUBBLE(event) { var baseClass = v6841.getPrototypeOf(v6842); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6843 = {};
v6843.constructor = v6840;
v6840.prototype = v6843;
v6839.push(v6840);
v6838.apiCallAttempt = v6839;
const v6844 = [];
var v6845;
v6845 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6826.getPrototypeOf(v6842); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6846 = {};
v6846.constructor = v6845;
v6845.prototype = v6846;
v6844.push(v6845);
v6838.apiCall = v6844;
v6837._events = v6838;
v6837.MONITOR_EVENTS_BUBBLE = v6840;
v6837.CALL_EVENTS_BUBBLE = v6845;
v6834.prototype = v6837;
v6834.__super__ = v299;
const v6847 = {};
v6847[\\"2017-12-19\\"] = null;
v6834.services = v6847;
const v6848 = [];
v6848.push(\\"2017-12-19\\");
v6834.apiVersions = v6848;
v6834.serviceIdentifier = \\"macie\\";
v2.Macie = v6834;
var v6849;
var v6850 = v299;
var v6851 = v31;
v6849 = function () { if (v6850 !== v6851) {
    return v6850.apply(this, arguments);
} };
const v6852 = Object.create(v309);
v6852.constructor = v6849;
const v6853 = {};
const v6854 = [];
var v6855;
var v6856 = v31;
var v6857 = v6852;
v6855 = function EVENTS_BUBBLE(event) { var baseClass = v6856.getPrototypeOf(v6857); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6858 = {};
v6858.constructor = v6855;
v6855.prototype = v6858;
v6854.push(v6855);
v6853.apiCallAttempt = v6854;
const v6859 = [];
var v6860;
v6860 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6841.getPrototypeOf(v6857); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6861 = {};
v6861.constructor = v6860;
v6860.prototype = v6861;
v6859.push(v6860);
v6853.apiCall = v6859;
v6852._events = v6853;
v6852.MONITOR_EVENTS_BUBBLE = v6855;
v6852.CALL_EVENTS_BUBBLE = v6860;
v6849.prototype = v6852;
v6849.__super__ = v299;
const v6862 = {};
v6862[\\"2018-01-12\\"] = null;
v6849.services = v6862;
const v6863 = [];
v6863.push(\\"2018-01-12\\");
v6849.apiVersions = v6863;
v6849.serviceIdentifier = \\"dlm\\";
v2.DLM = v6849;
var v6864;
var v6865 = v299;
var v6866 = v31;
v6864 = function () { if (v6865 !== v6866) {
    return v6865.apply(this, arguments);
} };
const v6867 = Object.create(v309);
v6867.constructor = v6864;
const v6868 = {};
const v6869 = [];
var v6870;
var v6871 = v31;
var v6872 = v6867;
v6870 = function EVENTS_BUBBLE(event) { var baseClass = v6871.getPrototypeOf(v6872); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6873 = {};
v6873.constructor = v6870;
v6870.prototype = v6873;
v6869.push(v6870);
v6868.apiCallAttempt = v6869;
const v6874 = [];
var v6875;
v6875 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6856.getPrototypeOf(v6872); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6876 = {};
v6876.constructor = v6875;
v6875.prototype = v6876;
v6874.push(v6875);
v6868.apiCall = v6874;
v6867._events = v6868;
v6867.MONITOR_EVENTS_BUBBLE = v6870;
v6867.CALL_EVENTS_BUBBLE = v6875;
v6864.prototype = v6867;
v6864.__super__ = v299;
const v6877 = {};
v6877[\\"2017-08-25\\"] = null;
v6864.services = v6877;
const v6878 = [];
v6878.push(\\"2017-08-25\\");
v6864.apiVersions = v6878;
v6864.serviceIdentifier = \\"signer\\";
v2.Signer = v6864;
var v6879;
var v6880 = v299;
var v6881 = v31;
v6879 = function () { if (v6880 !== v6881) {
    return v6880.apply(this, arguments);
} };
const v6882 = Object.create(v309);
v6882.constructor = v6879;
const v6883 = {};
const v6884 = [];
var v6885;
var v6886 = v31;
var v6887 = v6882;
v6885 = function EVENTS_BUBBLE(event) { var baseClass = v6886.getPrototypeOf(v6887); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6888 = {};
v6888.constructor = v6885;
v6885.prototype = v6888;
v6884.push(v6885);
v6883.apiCallAttempt = v6884;
const v6889 = [];
var v6890;
v6890 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6871.getPrototypeOf(v6887); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6891 = {};
v6891.constructor = v6890;
v6890.prototype = v6891;
v6889.push(v6890);
v6883.apiCall = v6889;
v6882._events = v6883;
v6882.MONITOR_EVENTS_BUBBLE = v6885;
v6882.CALL_EVENTS_BUBBLE = v6890;
v6879.prototype = v6882;
v6879.__super__ = v299;
const v6892 = {};
v6892[\\"2018-05-01\\"] = null;
v6879.services = v6892;
const v6893 = [];
v6893.push(\\"2018-05-01\\");
v6879.apiVersions = v6893;
v6879.serviceIdentifier = \\"chime\\";
v2.Chime = v6879;
var v6894;
var v6895 = v299;
var v6896 = v31;
v6894 = function () { if (v6895 !== v6896) {
    return v6895.apply(this, arguments);
} };
const v6897 = Object.create(v309);
v6897.constructor = v6894;
const v6898 = {};
const v6899 = [];
var v6900;
var v6901 = v31;
var v6902 = v6897;
v6900 = function EVENTS_BUBBLE(event) { var baseClass = v6901.getPrototypeOf(v6902); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6903 = {};
v6903.constructor = v6900;
v6900.prototype = v6903;
v6899.push(v6900);
v6898.apiCallAttempt = v6899;
const v6904 = [];
var v6905;
v6905 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6886.getPrototypeOf(v6902); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6906 = {};
v6906.constructor = v6905;
v6905.prototype = v6906;
v6904.push(v6905);
v6898.apiCall = v6904;
v6897._events = v6898;
v6897.MONITOR_EVENTS_BUBBLE = v6900;
v6897.CALL_EVENTS_BUBBLE = v6905;
v6894.prototype = v6897;
v6894.__super__ = v299;
const v6907 = {};
v6907[\\"2018-07-26\\"] = null;
v6894.services = v6907;
const v6908 = [];
v6908.push(\\"2018-07-26\\");
v6894.apiVersions = v6908;
v6894.serviceIdentifier = \\"pinpointemail\\";
v2.PinpointEmail = v6894;
var v6909;
var v6910 = v299;
var v6911 = v31;
v6909 = function () { if (v6910 !== v6911) {
    return v6910.apply(this, arguments);
} };
const v6912 = Object.create(v309);
v6912.constructor = v6909;
const v6913 = {};
const v6914 = [];
var v6915;
var v6916 = v31;
var v6917 = v6912;
v6915 = function EVENTS_BUBBLE(event) { var baseClass = v6916.getPrototypeOf(v6917); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6918 = {};
v6918.constructor = v6915;
v6915.prototype = v6918;
v6914.push(v6915);
v6913.apiCallAttempt = v6914;
const v6919 = [];
var v6920;
v6920 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6901.getPrototypeOf(v6917); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6921 = {};
v6921.constructor = v6920;
v6920.prototype = v6921;
v6919.push(v6920);
v6913.apiCall = v6919;
v6912._events = v6913;
v6912.MONITOR_EVENTS_BUBBLE = v6915;
v6912.CALL_EVENTS_BUBBLE = v6920;
v6909.prototype = v6912;
v6909.__super__ = v299;
const v6922 = {};
v6922[\\"2018-01-04\\"] = null;
v6909.services = v6922;
const v6923 = [];
v6923.push(\\"2018-01-04\\");
v6909.apiVersions = v6923;
v6909.serviceIdentifier = \\"ram\\";
v2.RAM = v6909;
var v6924;
var v6925 = v299;
var v6926 = v31;
v6924 = function () { if (v6925 !== v6926) {
    return v6925.apply(this, arguments);
} };
const v6927 = Object.create(v309);
v6927.constructor = v6924;
const v6928 = {};
const v6929 = [];
var v6930;
var v6931 = v31;
var v6932 = v6927;
v6930 = function EVENTS_BUBBLE(event) { var baseClass = v6931.getPrototypeOf(v6932); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6933 = {};
v6933.constructor = v6930;
v6930.prototype = v6933;
v6929.push(v6930);
v6928.apiCallAttempt = v6929;
const v6934 = [];
var v6935;
v6935 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6916.getPrototypeOf(v6932); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6936 = {};
v6936.constructor = v6935;
v6935.prototype = v6936;
v6934.push(v6935);
v6928.apiCall = v6934;
v6927._events = v6928;
v6927.MONITOR_EVENTS_BUBBLE = v6930;
v6927.CALL_EVENTS_BUBBLE = v6935;
v6924.prototype = v6927;
v6924.__super__ = v299;
const v6937 = {};
v6937[\\"2018-04-01\\"] = null;
v6924.services = v6937;
const v6938 = [];
v6938.push(\\"2018-04-01\\");
v6924.apiVersions = v6938;
v6924.serviceIdentifier = \\"route53resolver\\";
v2.Route53Resolver = v6924;
var v6939;
var v6940 = v299;
var v6941 = v31;
v6939 = function () { if (v6940 !== v6941) {
    return v6940.apply(this, arguments);
} };
const v6942 = Object.create(v309);
v6942.constructor = v6939;
const v6943 = {};
const v6944 = [];
var v6945;
var v6946 = v31;
var v6947 = v6942;
v6945 = function EVENTS_BUBBLE(event) { var baseClass = v6946.getPrototypeOf(v6947); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6948 = {};
v6948.constructor = v6945;
v6945.prototype = v6948;
v6944.push(v6945);
v6943.apiCallAttempt = v6944;
const v6949 = [];
var v6950;
v6950 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6931.getPrototypeOf(v6947); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6951 = {};
v6951.constructor = v6950;
v6950.prototype = v6951;
v6949.push(v6950);
v6943.apiCall = v6949;
v6942._events = v6943;
v6942.MONITOR_EVENTS_BUBBLE = v6945;
v6942.CALL_EVENTS_BUBBLE = v6950;
v6939.prototype = v6942;
v6939.__super__ = v299;
const v6952 = {};
v6952[\\"2018-09-05\\"] = null;
v6939.services = v6952;
const v6953 = [];
v6953.push(\\"2018-09-05\\");
v6939.apiVersions = v6953;
v6939.serviceIdentifier = \\"pinpointsmsvoice\\";
v2.PinpointSMSVoice = v6939;
var v6954;
var v6955 = v299;
var v6956 = v31;
v6954 = function () { if (v6955 !== v6956) {
    return v6955.apply(this, arguments);
} };
const v6957 = Object.create(v309);
v6957.constructor = v6954;
const v6958 = {};
const v6959 = [];
var v6960;
var v6961 = v31;
var v6962 = v6957;
v6960 = function EVENTS_BUBBLE(event) { var baseClass = v6961.getPrototypeOf(v6962); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6963 = {};
v6963.constructor = v6960;
v6960.prototype = v6963;
v6959.push(v6960);
v6958.apiCallAttempt = v6959;
const v6964 = [];
var v6965;
v6965 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6946.getPrototypeOf(v6962); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6966 = {};
v6966.constructor = v6965;
v6965.prototype = v6966;
v6964.push(v6965);
v6958.apiCall = v6964;
v6957._events = v6958;
v6957.MONITOR_EVENTS_BUBBLE = v6960;
v6957.CALL_EVENTS_BUBBLE = v6965;
v6954.prototype = v6957;
v6954.__super__ = v299;
const v6967 = {};
v6967[\\"2018-04-01\\"] = null;
v6954.services = v6967;
const v6968 = [];
v6968.push(\\"2018-04-01\\");
v6954.apiVersions = v6968;
v6954.serviceIdentifier = \\"quicksight\\";
v2.QuickSight = v6954;
var v6969;
var v6970 = v299;
var v6971 = v31;
v6969 = function () { if (v6970 !== v6971) {
    return v6970.apply(this, arguments);
} };
const v6972 = Object.create(v309);
v6972.constructor = v6969;
const v6973 = {};
const v6974 = [];
var v6975;
var v6976 = v31;
var v6977 = v6972;
v6975 = function EVENTS_BUBBLE(event) { var baseClass = v6976.getPrototypeOf(v6977); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6978 = {};
v6978.constructor = v6975;
v6975.prototype = v6978;
v6974.push(v6975);
v6973.apiCallAttempt = v6974;
const v6979 = [];
var v6980;
v6980 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6961.getPrototypeOf(v6977); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6981 = {};
v6981.constructor = v6980;
v6980.prototype = v6981;
v6979.push(v6980);
v6973.apiCall = v6979;
v6972._events = v6973;
v6972.MONITOR_EVENTS_BUBBLE = v6975;
v6972.CALL_EVENTS_BUBBLE = v6980;
var v6982;
v6982 = function retryableError(error) { if (error.code === \\"BadRequestException\\" && error.message && error.message.match(/^Communications link failure/) && error.statusCode === 400) {
    return true;
}
else {
    var _super = v309.retryableError;
    return _super.call(this, error);
} };
const v6983 = {};
v6983.constructor = v6982;
v6982.prototype = v6983;
v6972.retryableError = v6982;
v6969.prototype = v6972;
v6969.__super__ = v299;
const v6984 = {};
v6984[\\"2018-08-01\\"] = null;
v6969.services = v6984;
const v6985 = [];
v6985.push(\\"2018-08-01\\");
v6969.apiVersions = v6985;
v6969.serviceIdentifier = \\"rdsdataservice\\";
v2.RDSDataService = v6969;
var v6986;
var v6987 = v299;
var v6988 = v31;
v6986 = function () { if (v6987 !== v6988) {
    return v6987.apply(this, arguments);
} };
const v6989 = Object.create(v309);
v6989.constructor = v6986;
const v6990 = {};
const v6991 = [];
var v6992;
var v6993 = v31;
var v6994 = v6989;
v6992 = function EVENTS_BUBBLE(event) { var baseClass = v6993.getPrototypeOf(v6994); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v6995 = {};
v6995.constructor = v6992;
v6992.prototype = v6995;
v6991.push(v6992);
v6990.apiCallAttempt = v6991;
const v6996 = [];
var v6997;
v6997 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6976.getPrototypeOf(v6994); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v6998 = {};
v6998.constructor = v6997;
v6997.prototype = v6998;
v6996.push(v6997);
v6990.apiCall = v6996;
v6989._events = v6990;
v6989.MONITOR_EVENTS_BUBBLE = v6992;
v6989.CALL_EVENTS_BUBBLE = v6997;
v6986.prototype = v6989;
v6986.__super__ = v299;
const v6999 = {};
v6999[\\"2017-07-25\\"] = null;
v6986.services = v6999;
const v7000 = [];
v7000.push(\\"2017-07-25\\");
v6986.apiVersions = v7000;
v6986.serviceIdentifier = \\"amplify\\";
v2.Amplify = v6986;
var v7001;
var v7002 = v299;
var v7003 = v31;
v7001 = function () { if (v7002 !== v7003) {
    return v7002.apply(this, arguments);
} };
const v7004 = Object.create(v309);
v7004.constructor = v7001;
const v7005 = {};
const v7006 = [];
var v7007;
var v7008 = v31;
var v7009 = v7004;
v7007 = function EVENTS_BUBBLE(event) { var baseClass = v7008.getPrototypeOf(v7009); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7010 = {};
v7010.constructor = v7007;
v7007.prototype = v7010;
v7006.push(v7007);
v7005.apiCallAttempt = v7006;
const v7011 = [];
var v7012;
v7012 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v6993.getPrototypeOf(v7009); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7013 = {};
v7013.constructor = v7012;
v7012.prototype = v7013;
v7011.push(v7012);
v7005.apiCall = v7011;
v7004._events = v7005;
v7004.MONITOR_EVENTS_BUBBLE = v7007;
v7004.CALL_EVENTS_BUBBLE = v7012;
v7001.prototype = v7004;
v7001.__super__ = v299;
const v7014 = {};
v7014[\\"2018-11-09\\"] = null;
v7001.services = v7014;
const v7015 = [];
v7015.push(\\"2018-11-09\\");
v7001.apiVersions = v7015;
v7001.serviceIdentifier = \\"datasync\\";
v2.DataSync = v7001;
var v7016;
var v7017 = v299;
var v7018 = v31;
v7016 = function () { if (v7017 !== v7018) {
    return v7017.apply(this, arguments);
} };
const v7019 = Object.create(v309);
v7019.constructor = v7016;
const v7020 = {};
const v7021 = [];
var v7022;
var v7023 = v31;
var v7024 = v7019;
v7022 = function EVENTS_BUBBLE(event) { var baseClass = v7023.getPrototypeOf(v7024); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7025 = {};
v7025.constructor = v7022;
v7022.prototype = v7025;
v7021.push(v7022);
v7020.apiCallAttempt = v7021;
const v7026 = [];
var v7027;
v7027 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7008.getPrototypeOf(v7024); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7028 = {};
v7028.constructor = v7027;
v7027.prototype = v7028;
v7026.push(v7027);
v7020.apiCall = v7026;
v7019._events = v7020;
v7019.MONITOR_EVENTS_BUBBLE = v7022;
v7019.CALL_EVENTS_BUBBLE = v7027;
v7016.prototype = v7019;
v7016.__super__ = v299;
const v7029 = {};
v7029[\\"2018-06-29\\"] = null;
v7016.services = v7029;
const v7030 = [];
v7030.push(\\"2018-06-29\\");
v7016.apiVersions = v7030;
v7016.serviceIdentifier = \\"robomaker\\";
v2.RoboMaker = v7016;
var v7031;
var v7032 = v299;
var v7033 = v31;
v7031 = function () { if (v7032 !== v7033) {
    return v7032.apply(this, arguments);
} };
const v7034 = Object.create(v309);
v7034.constructor = v7031;
const v7035 = {};
const v7036 = [];
var v7037;
var v7038 = v31;
var v7039 = v7034;
v7037 = function EVENTS_BUBBLE(event) { var baseClass = v7038.getPrototypeOf(v7039); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7040 = {};
v7040.constructor = v7037;
v7037.prototype = v7040;
v7036.push(v7037);
v7035.apiCallAttempt = v7036;
const v7041 = [];
var v7042;
v7042 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7023.getPrototypeOf(v7039); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7043 = {};
v7043.constructor = v7042;
v7042.prototype = v7043;
v7041.push(v7042);
v7035.apiCall = v7041;
v7034._events = v7035;
v7034.MONITOR_EVENTS_BUBBLE = v7037;
v7034.CALL_EVENTS_BUBBLE = v7042;
v7031.prototype = v7034;
v7031.__super__ = v299;
const v7044 = {};
v7044[\\"2018-11-05\\"] = null;
v7031.services = v7044;
const v7045 = [];
v7045.push(\\"2018-11-05\\");
v7031.apiVersions = v7045;
v7031.serviceIdentifier = \\"transfer\\";
v2.Transfer = v7031;
var v7046;
var v7047 = v299;
var v7048 = v31;
v7046 = function () { if (v7047 !== v7048) {
    return v7047.apply(this, arguments);
} };
const v7049 = Object.create(v309);
v7049.constructor = v7046;
const v7050 = {};
const v7051 = [];
var v7052;
var v7053 = v31;
var v7054 = v7049;
v7052 = function EVENTS_BUBBLE(event) { var baseClass = v7053.getPrototypeOf(v7054); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7055 = {};
v7055.constructor = v7052;
v7052.prototype = v7055;
v7051.push(v7052);
v7050.apiCallAttempt = v7051;
const v7056 = [];
var v7057;
v7057 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7038.getPrototypeOf(v7054); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7058 = {};
v7058.constructor = v7057;
v7057.prototype = v7058;
v7056.push(v7057);
v7050.apiCall = v7056;
v7049._events = v7050;
v7049.MONITOR_EVENTS_BUBBLE = v7052;
v7049.CALL_EVENTS_BUBBLE = v7057;
v7046.prototype = v7049;
v7046.__super__ = v299;
const v7059 = {};
v7059[\\"2018-08-08\\"] = null;
v7046.services = v7059;
const v7060 = [];
v7060.push(\\"2018-08-08\\");
v7046.apiVersions = v7060;
v7046.serviceIdentifier = \\"globalaccelerator\\";
v2.GlobalAccelerator = v7046;
var v7061;
var v7062 = v299;
var v7063 = v31;
v7061 = function () { if (v7062 !== v7063) {
    return v7062.apply(this, arguments);
} };
const v7064 = Object.create(v309);
v7064.constructor = v7061;
const v7065 = {};
const v7066 = [];
var v7067;
var v7068 = v31;
var v7069 = v7064;
v7067 = function EVENTS_BUBBLE(event) { var baseClass = v7068.getPrototypeOf(v7069); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7070 = {};
v7070.constructor = v7067;
v7067.prototype = v7070;
v7066.push(v7067);
v7065.apiCallAttempt = v7066;
const v7071 = [];
var v7072;
v7072 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7053.getPrototypeOf(v7069); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7073 = {};
v7073.constructor = v7072;
v7072.prototype = v7073;
v7071.push(v7072);
v7065.apiCall = v7071;
v7064._events = v7065;
v7064.MONITOR_EVENTS_BUBBLE = v7067;
v7064.CALL_EVENTS_BUBBLE = v7072;
v7061.prototype = v7064;
v7061.__super__ = v299;
const v7074 = {};
v7074[\\"2018-10-30\\"] = null;
v7061.services = v7074;
const v7075 = [];
v7075.push(\\"2018-10-30\\");
v7061.apiVersions = v7075;
v7061.serviceIdentifier = \\"comprehendmedical\\";
v2.ComprehendMedical = v7061;
var v7076;
var v7077 = v299;
var v7078 = v31;
v7076 = function () { if (v7077 !== v7078) {
    return v7077.apply(this, arguments);
} };
const v7079 = Object.create(v309);
v7079.constructor = v7076;
const v7080 = {};
const v7081 = [];
var v7082;
var v7083 = v31;
var v7084 = v7079;
v7082 = function EVENTS_BUBBLE(event) { var baseClass = v7083.getPrototypeOf(v7084); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7085 = {};
v7085.constructor = v7082;
v7082.prototype = v7085;
v7081.push(v7082);
v7080.apiCallAttempt = v7081;
const v7086 = [];
var v7087;
v7087 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7068.getPrototypeOf(v7084); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7088 = {};
v7088.constructor = v7087;
v7087.prototype = v7088;
v7086.push(v7087);
v7080.apiCall = v7086;
v7079._events = v7080;
v7079.MONITOR_EVENTS_BUBBLE = v7082;
v7079.CALL_EVENTS_BUBBLE = v7087;
v7076.prototype = v7079;
v7076.__super__ = v299;
const v7089 = {};
v7089[\\"2018-05-23\\"] = null;
v7076.services = v7089;
const v7090 = [];
v7090.push(\\"2018-05-23\\");
v7076.apiVersions = v7090;
v7076.serviceIdentifier = \\"kinesisanalyticsv2\\";
v2.KinesisAnalyticsV2 = v7076;
var v7091;
var v7092 = v299;
var v7093 = v31;
v7091 = function () { if (v7092 !== v7093) {
    return v7092.apply(this, arguments);
} };
const v7094 = Object.create(v309);
v7094.constructor = v7091;
const v7095 = {};
const v7096 = [];
var v7097;
var v7098 = v31;
var v7099 = v7094;
v7097 = function EVENTS_BUBBLE(event) { var baseClass = v7098.getPrototypeOf(v7099); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7100 = {};
v7100.constructor = v7097;
v7097.prototype = v7100;
v7096.push(v7097);
v7095.apiCallAttempt = v7096;
const v7101 = [];
var v7102;
v7102 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7083.getPrototypeOf(v7099); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7103 = {};
v7103.constructor = v7102;
v7102.prototype = v7103;
v7101.push(v7102);
v7095.apiCall = v7101;
v7094._events = v7095;
v7094.MONITOR_EVENTS_BUBBLE = v7097;
v7094.CALL_EVENTS_BUBBLE = v7102;
v7091.prototype = v7094;
v7091.__super__ = v299;
const v7104 = {};
v7104[\\"2018-11-14\\"] = null;
v7091.services = v7104;
const v7105 = [];
v7105.push(\\"2018-11-14\\");
v7091.apiVersions = v7105;
v7091.serviceIdentifier = \\"mediaconnect\\";
v2.MediaConnect = v7091;
var v7106;
var v7107 = v299;
var v7108 = v31;
v7106 = function () { if (v7107 !== v7108) {
    return v7107.apply(this, arguments);
} };
const v7109 = Object.create(v309);
v7109.constructor = v7106;
const v7110 = {};
const v7111 = [];
var v7112;
var v7113 = v31;
var v7114 = v7109;
v7112 = function EVENTS_BUBBLE(event) { var baseClass = v7113.getPrototypeOf(v7114); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7115 = {};
v7115.constructor = v7112;
v7112.prototype = v7115;
v7111.push(v7112);
v7110.apiCallAttempt = v7111;
const v7116 = [];
var v7117;
v7117 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7098.getPrototypeOf(v7114); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7118 = {};
v7118.constructor = v7117;
v7117.prototype = v7118;
v7116.push(v7117);
v7110.apiCall = v7116;
v7109._events = v7110;
v7109.MONITOR_EVENTS_BUBBLE = v7112;
v7109.CALL_EVENTS_BUBBLE = v7117;
v7106.prototype = v7109;
v7106.__super__ = v299;
const v7119 = {};
v7119[\\"2018-03-01\\"] = null;
v7106.services = v7119;
const v7120 = [];
v7120.push(\\"2018-03-01\\");
v7106.apiVersions = v7120;
v7106.serviceIdentifier = \\"fsx\\";
v2.FSx = v7106;
var v7121;
var v7122 = v299;
var v7123 = v31;
v7121 = function () { if (v7122 !== v7123) {
    return v7122.apply(this, arguments);
} };
const v7124 = Object.create(v309);
v7124.constructor = v7121;
const v7125 = {};
const v7126 = [];
var v7127;
var v7128 = v31;
var v7129 = v7124;
v7127 = function EVENTS_BUBBLE(event) { var baseClass = v7128.getPrototypeOf(v7129); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7130 = {};
v7130.constructor = v7127;
v7127.prototype = v7130;
v7126.push(v7127);
v7125.apiCallAttempt = v7126;
const v7131 = [];
var v7132;
v7132 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7113.getPrototypeOf(v7129); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7133 = {};
v7133.constructor = v7132;
v7132.prototype = v7133;
v7131.push(v7132);
v7125.apiCall = v7131;
v7124._events = v7125;
v7124.MONITOR_EVENTS_BUBBLE = v7127;
v7124.CALL_EVENTS_BUBBLE = v7132;
v7121.prototype = v7124;
v7121.__super__ = v299;
const v7134 = {};
v7134[\\"2018-10-26\\"] = null;
v7121.services = v7134;
const v7135 = [];
v7135.push(\\"2018-10-26\\");
v7121.apiVersions = v7135;
v7121.serviceIdentifier = \\"securityhub\\";
v2.SecurityHub = v7121;
var v7136;
var v7137 = v299;
var v7138 = v31;
v7136 = function () { if (v7137 !== v7138) {
    return v7137.apply(this, arguments);
} };
const v7139 = Object.create(v309);
v7139.constructor = v7136;
const v7140 = {};
const v7141 = [];
var v7142;
var v7143 = v31;
var v7144 = v7139;
v7142 = function EVENTS_BUBBLE(event) { var baseClass = v7143.getPrototypeOf(v7144); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7145 = {};
v7145.constructor = v7142;
v7142.prototype = v7145;
v7141.push(v7142);
v7140.apiCallAttempt = v7141;
const v7146 = [];
var v7147;
v7147 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7128.getPrototypeOf(v7144); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7148 = {};
v7148.constructor = v7147;
v7147.prototype = v7148;
v7146.push(v7147);
v7140.apiCall = v7146;
v7139._events = v7140;
v7139.MONITOR_EVENTS_BUBBLE = v7142;
v7139.CALL_EVENTS_BUBBLE = v7147;
v7136.prototype = v7139;
v7136.__super__ = v299;
const v7149 = {};
v7149[\\"2018-10-01\\"] = null;
v7149[\\"2018-10-01*\\"] = null;
v7149[\\"2019-01-25\\"] = null;
v7136.services = v7149;
const v7150 = [];
v7150.push(\\"2018-10-01\\", \\"2018-10-01*\\", \\"2019-01-25\\");
v7136.apiVersions = v7150;
v7136.serviceIdentifier = \\"appmesh\\";
v2.AppMesh = v7136;
var v7151;
var v7152 = v299;
var v7153 = v31;
v7151 = function () { if (v7152 !== v7153) {
    return v7152.apply(this, arguments);
} };
const v7154 = Object.create(v309);
v7154.constructor = v7151;
const v7155 = {};
const v7156 = [];
var v7157;
var v7158 = v31;
var v7159 = v7154;
v7157 = function EVENTS_BUBBLE(event) { var baseClass = v7158.getPrototypeOf(v7159); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7160 = {};
v7160.constructor = v7157;
v7157.prototype = v7160;
v7156.push(v7157);
v7155.apiCallAttempt = v7156;
const v7161 = [];
var v7162;
v7162 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7143.getPrototypeOf(v7159); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7163 = {};
v7163.constructor = v7162;
v7162.prototype = v7163;
v7161.push(v7162);
v7155.apiCall = v7161;
v7154._events = v7155;
v7154.MONITOR_EVENTS_BUBBLE = v7157;
v7154.CALL_EVENTS_BUBBLE = v7162;
v7151.prototype = v7154;
v7151.__super__ = v299;
const v7164 = {};
v7164[\\"2018-08-01\\"] = null;
v7151.services = v7164;
const v7165 = [];
v7165.push(\\"2018-08-01\\");
v7151.apiVersions = v7165;
v7151.serviceIdentifier = \\"licensemanager\\";
v2.LicenseManager = v7151;
var v7166;
var v7167 = v299;
var v7168 = v31;
v7166 = function () { if (v7167 !== v7168) {
    return v7167.apply(this, arguments);
} };
const v7169 = Object.create(v309);
v7169.constructor = v7166;
const v7170 = {};
const v7171 = [];
var v7172;
var v7173 = v31;
var v7174 = v7169;
v7172 = function EVENTS_BUBBLE(event) { var baseClass = v7173.getPrototypeOf(v7174); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7175 = {};
v7175.constructor = v7172;
v7172.prototype = v7175;
v7171.push(v7172);
v7170.apiCallAttempt = v7171;
const v7176 = [];
var v7177;
v7177 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7158.getPrototypeOf(v7174); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7178 = {};
v7178.constructor = v7177;
v7177.prototype = v7178;
v7176.push(v7177);
v7170.apiCall = v7176;
v7169._events = v7170;
v7169.MONITOR_EVENTS_BUBBLE = v7172;
v7169.CALL_EVENTS_BUBBLE = v7177;
v7166.prototype = v7169;
v7166.__super__ = v299;
const v7179 = {};
v7179[\\"2018-11-14\\"] = null;
v7166.services = v7179;
const v7180 = [];
v7180.push(\\"2018-11-14\\");
v7166.apiVersions = v7180;
v7166.serviceIdentifier = \\"kafka\\";
v2.Kafka = v7166;
var v7181;
var v7182 = v299;
var v7183 = v31;
v7181 = function () { if (v7182 !== v7183) {
    return v7182.apply(this, arguments);
} };
const v7184 = Object.create(v309);
v7184.constructor = v7181;
const v7185 = {};
const v7186 = [];
var v7187;
var v7188 = v31;
var v7189 = v7184;
v7187 = function EVENTS_BUBBLE(event) { var baseClass = v7188.getPrototypeOf(v7189); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7190 = {};
v7190.constructor = v7187;
v7187.prototype = v7190;
v7186.push(v7187);
v7185.apiCallAttempt = v7186;
const v7191 = [];
var v7192;
v7192 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7173.getPrototypeOf(v7189); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7193 = {};
v7193.constructor = v7192;
v7192.prototype = v7193;
v7191.push(v7192);
v7185.apiCall = v7191;
v7184._events = v7185;
v7184.MONITOR_EVENTS_BUBBLE = v7187;
v7184.CALL_EVENTS_BUBBLE = v7192;
v7181.prototype = v7184;
v7181.__super__ = v299;
const v7194 = {};
v7194[\\"2018-11-29\\"] = null;
v7181.services = v7194;
const v7195 = [];
v7195.push(\\"2018-11-29\\");
v7181.apiVersions = v7195;
v7181.serviceIdentifier = \\"apigatewaymanagementapi\\";
v2.ApiGatewayManagementApi = v7181;
var v7196;
var v7197 = v299;
var v7198 = v31;
v7196 = function () { if (v7197 !== v7198) {
    return v7197.apply(this, arguments);
} };
const v7199 = Object.create(v309);
v7199.constructor = v7196;
const v7200 = {};
const v7201 = [];
var v7202;
var v7203 = v31;
var v7204 = v7199;
v7202 = function EVENTS_BUBBLE(event) { var baseClass = v7203.getPrototypeOf(v7204); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7205 = {};
v7205.constructor = v7202;
v7202.prototype = v7205;
v7201.push(v7202);
v7200.apiCallAttempt = v7201;
const v7206 = [];
var v7207;
v7207 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7188.getPrototypeOf(v7204); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7208 = {};
v7208.constructor = v7207;
v7207.prototype = v7208;
v7206.push(v7207);
v7200.apiCall = v7206;
v7199._events = v7200;
v7199.MONITOR_EVENTS_BUBBLE = v7202;
v7199.CALL_EVENTS_BUBBLE = v7207;
v7196.prototype = v7199;
v7196.__super__ = v299;
const v7209 = {};
v7209[\\"2018-11-29\\"] = null;
v7196.services = v7209;
const v7210 = [];
v7210.push(\\"2018-11-29\\");
v7196.apiVersions = v7210;
v7196.serviceIdentifier = \\"apigatewayv2\\";
v2.ApiGatewayV2 = v7196;
var v7211;
var v7212 = v299;
var v7213 = v31;
v7211 = function () { if (v7212 !== v7213) {
    return v7212.apply(this, arguments);
} };
const v7214 = Object.create(v309);
v7214.constructor = v7211;
const v7215 = {};
const v7216 = [];
var v7217;
var v7218 = v31;
var v7219 = v7214;
v7217 = function EVENTS_BUBBLE(event) { var baseClass = v7218.getPrototypeOf(v7219); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7220 = {};
v7220.constructor = v7217;
v7217.prototype = v7220;
v7216.push(v7217);
v7215.apiCallAttempt = v7216;
const v7221 = [];
var v7222;
v7222 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7203.getPrototypeOf(v7219); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7223 = {};
v7223.constructor = v7222;
v7222.prototype = v7223;
v7221.push(v7222);
v7215.apiCall = v7221;
v7214._events = v7215;
v7214.MONITOR_EVENTS_BUBBLE = v7217;
v7214.CALL_EVENTS_BUBBLE = v7222;
var v7224;
const v7226 = [];
v7226.push(\\"createDBCluster\\", \\"copyDBClusterSnapshot\\");
var v7225 = v7226;
var v7227 = v5419;
var v7228 = v7226;
v7224 = function setupRequestListeners(request) { if (v7225.indexOf(request.operation) !== -1 && this.config.params && this.config.params.SourceRegion && request.params && !request.params.SourceRegion) {
    request.params.SourceRegion = this.config.params.SourceRegion;
} v7227.setupRequestListeners(this, request, v7228); };
const v7229 = {};
v7229.constructor = v7224;
v7224.prototype = v7229;
v7214.setupRequestListeners = v7224;
v7211.prototype = v7214;
v7211.__super__ = v299;
const v7230 = {};
v7230[\\"2014-10-31\\"] = null;
v7211.services = v7230;
const v7231 = [];
v7231.push(\\"2014-10-31\\");
v7211.apiVersions = v7231;
v7211.serviceIdentifier = \\"docdb\\";
v2.DocDB = v7211;
var v7232;
var v7233 = v299;
var v7234 = v31;
v7232 = function () { if (v7233 !== v7234) {
    return v7233.apply(this, arguments);
} };
const v7235 = Object.create(v309);
v7235.constructor = v7232;
const v7236 = {};
const v7237 = [];
var v7238;
var v7239 = v31;
var v7240 = v7235;
v7238 = function EVENTS_BUBBLE(event) { var baseClass = v7239.getPrototypeOf(v7240); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7241 = {};
v7241.constructor = v7238;
v7238.prototype = v7241;
v7237.push(v7238);
v7236.apiCallAttempt = v7237;
const v7242 = [];
var v7243;
v7243 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7218.getPrototypeOf(v7240); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7244 = {};
v7244.constructor = v7243;
v7243.prototype = v7244;
v7242.push(v7243);
v7236.apiCall = v7242;
v7235._events = v7236;
v7235.MONITOR_EVENTS_BUBBLE = v7238;
v7235.CALL_EVENTS_BUBBLE = v7243;
v7232.prototype = v7235;
v7232.__super__ = v299;
const v7245 = {};
v7245[\\"2018-11-15\\"] = null;
v7232.services = v7245;
const v7246 = [];
v7246.push(\\"2018-11-15\\");
v7232.apiVersions = v7246;
v7232.serviceIdentifier = \\"backup\\";
v2.Backup = v7232;
var v7247;
var v7248 = v299;
var v7249 = v31;
v7247 = function () { if (v7248 !== v7249) {
    return v7248.apply(this, arguments);
} };
const v7250 = Object.create(v309);
v7250.constructor = v7247;
const v7251 = {};
const v7252 = [];
var v7253;
var v7254 = v31;
var v7255 = v7250;
v7253 = function EVENTS_BUBBLE(event) { var baseClass = v7254.getPrototypeOf(v7255); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7256 = {};
v7256.constructor = v7253;
v7253.prototype = v7256;
v7252.push(v7253);
v7251.apiCallAttempt = v7252;
const v7257 = [];
var v7258;
v7258 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7239.getPrototypeOf(v7255); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7259 = {};
v7259.constructor = v7258;
v7258.prototype = v7259;
v7257.push(v7258);
v7251.apiCall = v7257;
v7250._events = v7251;
v7250.MONITOR_EVENTS_BUBBLE = v7253;
v7250.CALL_EVENTS_BUBBLE = v7258;
v7247.prototype = v7250;
v7247.__super__ = v299;
const v7260 = {};
v7260[\\"2018-09-25\\"] = null;
v7247.services = v7260;
const v7261 = [];
v7261.push(\\"2018-09-25\\");
v7247.apiVersions = v7261;
v7247.serviceIdentifier = \\"worklink\\";
v2.WorkLink = v7247;
var v7262;
var v7263 = v299;
var v7264 = v31;
v7262 = function () { if (v7263 !== v7264) {
    return v7263.apply(this, arguments);
} };
const v7265 = Object.create(v309);
v7265.constructor = v7262;
const v7266 = {};
const v7267 = [];
var v7268;
var v7269 = v31;
var v7270 = v7265;
v7268 = function EVENTS_BUBBLE(event) { var baseClass = v7269.getPrototypeOf(v7270); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7271 = {};
v7271.constructor = v7268;
v7268.prototype = v7271;
v7267.push(v7268);
v7266.apiCallAttempt = v7267;
const v7272 = [];
var v7273;
v7273 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7254.getPrototypeOf(v7270); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7274 = {};
v7274.constructor = v7273;
v7273.prototype = v7274;
v7272.push(v7273);
v7266.apiCall = v7272;
v7265._events = v7266;
v7265.MONITOR_EVENTS_BUBBLE = v7268;
v7265.CALL_EVENTS_BUBBLE = v7273;
v7262.prototype = v7265;
v7262.__super__ = v299;
const v7275 = {};
v7275[\\"2018-06-27\\"] = null;
v7262.services = v7275;
const v7276 = [];
v7276.push(\\"2018-06-27\\");
v7262.apiVersions = v7276;
v7262.serviceIdentifier = \\"textract\\";
v2.Textract = v7262;
var v7277;
var v7278 = v299;
var v7279 = v31;
v7277 = function () { if (v7278 !== v7279) {
    return v7278.apply(this, arguments);
} };
const v7280 = Object.create(v309);
v7280.constructor = v7277;
const v7281 = {};
const v7282 = [];
var v7283;
var v7284 = v31;
var v7285 = v7280;
v7283 = function EVENTS_BUBBLE(event) { var baseClass = v7284.getPrototypeOf(v7285); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7286 = {};
v7286.constructor = v7283;
v7283.prototype = v7286;
v7282.push(v7283);
v7281.apiCallAttempt = v7282;
const v7287 = [];
var v7288;
v7288 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7269.getPrototypeOf(v7285); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7289 = {};
v7289.constructor = v7288;
v7288.prototype = v7289;
v7287.push(v7288);
v7281.apiCall = v7287;
v7280._events = v7281;
v7280.MONITOR_EVENTS_BUBBLE = v7283;
v7280.CALL_EVENTS_BUBBLE = v7288;
v7277.prototype = v7280;
v7277.__super__ = v299;
const v7290 = {};
v7290[\\"2018-09-24\\"] = null;
v7277.services = v7290;
const v7291 = [];
v7291.push(\\"2018-09-24\\");
v7277.apiVersions = v7291;
v7277.serviceIdentifier = \\"managedblockchain\\";
v2.ManagedBlockchain = v7277;
var v7292;
var v7293 = v299;
var v7294 = v31;
v7292 = function () { if (v7293 !== v7294) {
    return v7293.apply(this, arguments);
} };
const v7295 = Object.create(v309);
v7295.constructor = v7292;
const v7296 = {};
const v7297 = [];
var v7298;
var v7299 = v31;
var v7300 = v7295;
v7298 = function EVENTS_BUBBLE(event) { var baseClass = v7299.getPrototypeOf(v7300); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7301 = {};
v7301.constructor = v7298;
v7298.prototype = v7301;
v7297.push(v7298);
v7296.apiCallAttempt = v7297;
const v7302 = [];
var v7303;
v7303 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7284.getPrototypeOf(v7300); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7304 = {};
v7304.constructor = v7303;
v7303.prototype = v7304;
v7302.push(v7303);
v7296.apiCall = v7302;
v7295._events = v7296;
v7295.MONITOR_EVENTS_BUBBLE = v7298;
v7295.CALL_EVENTS_BUBBLE = v7303;
v7292.prototype = v7295;
v7292.__super__ = v299;
const v7305 = {};
v7305[\\"2018-11-07\\"] = null;
v7292.services = v7305;
const v7306 = [];
v7306.push(\\"2018-11-07\\");
v7292.apiVersions = v7306;
v7292.serviceIdentifier = \\"mediapackagevod\\";
v2.MediaPackageVod = v7292;
var v7307;
var v7308 = v299;
var v7309 = v31;
v7307 = function () { if (v7308 !== v7309) {
    return v7308.apply(this, arguments);
} };
const v7310 = Object.create(v309);
v7310.constructor = v7307;
const v7311 = {};
const v7312 = [];
var v7313;
var v7314 = v31;
var v7315 = v7310;
v7313 = function EVENTS_BUBBLE(event) { var baseClass = v7314.getPrototypeOf(v7315); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7316 = {};
v7316.constructor = v7313;
v7313.prototype = v7316;
v7312.push(v7313);
v7311.apiCallAttempt = v7312;
const v7317 = [];
var v7318;
v7318 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7299.getPrototypeOf(v7315); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7319 = {};
v7319.constructor = v7318;
v7318.prototype = v7319;
v7317.push(v7318);
v7311.apiCall = v7317;
v7310._events = v7311;
v7310.MONITOR_EVENTS_BUBBLE = v7313;
v7310.CALL_EVENTS_BUBBLE = v7318;
v7307.prototype = v7310;
v7307.__super__ = v299;
const v7320 = {};
v7320[\\"2019-05-23\\"] = null;
v7307.services = v7320;
const v7321 = [];
v7321.push(\\"2019-05-23\\");
v7307.apiVersions = v7321;
v7307.serviceIdentifier = \\"groundstation\\";
v2.GroundStation = v7307;
var v7322;
var v7323 = v299;
var v7324 = v31;
v7322 = function () { if (v7323 !== v7324) {
    return v7323.apply(this, arguments);
} };
const v7325 = Object.create(v309);
v7325.constructor = v7322;
const v7326 = {};
const v7327 = [];
var v7328;
var v7329 = v31;
var v7330 = v7325;
v7328 = function EVENTS_BUBBLE(event) { var baseClass = v7329.getPrototypeOf(v7330); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7331 = {};
v7331.constructor = v7328;
v7328.prototype = v7331;
v7327.push(v7328);
v7326.apiCallAttempt = v7327;
const v7332 = [];
var v7333;
v7333 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7314.getPrototypeOf(v7330); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7334 = {};
v7334.constructor = v7333;
v7333.prototype = v7334;
v7332.push(v7333);
v7326.apiCall = v7332;
v7325._events = v7326;
v7325.MONITOR_EVENTS_BUBBLE = v7328;
v7325.CALL_EVENTS_BUBBLE = v7333;
v7322.prototype = v7325;
v7322.__super__ = v299;
const v7335 = {};
v7335[\\"2018-09-06\\"] = null;
v7322.services = v7335;
const v7336 = [];
v7336.push(\\"2018-09-06\\");
v7322.apiVersions = v7336;
v7322.serviceIdentifier = \\"iotthingsgraph\\";
v2.IoTThingsGraph = v7322;
var v7337;
var v7338 = v299;
var v7339 = v31;
v7337 = function () { if (v7338 !== v7339) {
    return v7338.apply(this, arguments);
} };
const v7340 = Object.create(v309);
v7340.constructor = v7337;
const v7341 = {};
const v7342 = [];
var v7343;
var v7344 = v31;
var v7345 = v7340;
v7343 = function EVENTS_BUBBLE(event) { var baseClass = v7344.getPrototypeOf(v7345); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7346 = {};
v7346.constructor = v7343;
v7343.prototype = v7346;
v7342.push(v7343);
v7341.apiCallAttempt = v7342;
const v7347 = [];
var v7348;
v7348 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7329.getPrototypeOf(v7345); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7349 = {};
v7349.constructor = v7348;
v7348.prototype = v7349;
v7347.push(v7348);
v7341.apiCall = v7347;
v7340._events = v7341;
v7340.MONITOR_EVENTS_BUBBLE = v7343;
v7340.CALL_EVENTS_BUBBLE = v7348;
v7337.prototype = v7340;
v7337.__super__ = v299;
const v7350 = {};
v7350[\\"2018-07-27\\"] = null;
v7337.services = v7350;
const v7351 = [];
v7351.push(\\"2018-07-27\\");
v7337.apiVersions = v7351;
v7337.serviceIdentifier = \\"iotevents\\";
v2.IoTEvents = v7337;
var v7352;
var v7353 = v299;
var v7354 = v31;
v7352 = function () { if (v7353 !== v7354) {
    return v7353.apply(this, arguments);
} };
const v7355 = Object.create(v309);
v7355.constructor = v7352;
const v7356 = {};
const v7357 = [];
var v7358;
var v7359 = v31;
var v7360 = v7355;
v7358 = function EVENTS_BUBBLE(event) { var baseClass = v7359.getPrototypeOf(v7360); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7361 = {};
v7361.constructor = v7358;
v7358.prototype = v7361;
v7357.push(v7358);
v7356.apiCallAttempt = v7357;
const v7362 = [];
var v7363;
v7363 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7344.getPrototypeOf(v7360); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7364 = {};
v7364.constructor = v7363;
v7363.prototype = v7364;
v7362.push(v7363);
v7356.apiCall = v7362;
v7355._events = v7356;
v7355.MONITOR_EVENTS_BUBBLE = v7358;
v7355.CALL_EVENTS_BUBBLE = v7363;
v7352.prototype = v7355;
v7352.__super__ = v299;
const v7365 = {};
v7365[\\"2018-10-23\\"] = null;
v7352.services = v7365;
const v7366 = [];
v7366.push(\\"2018-10-23\\");
v7352.apiVersions = v7366;
v7352.serviceIdentifier = \\"ioteventsdata\\";
v2.IoTEventsData = v7352;
var v7367;
var v7368 = v299;
var v7369 = v31;
v7367 = function () { if (v7368 !== v7369) {
    return v7368.apply(this, arguments);
} };
const v7370 = Object.create(v309);
v7370.constructor = v7367;
const v7371 = {};
const v7372 = [];
var v7373;
var v7374 = v31;
var v7375 = v7370;
v7373 = function EVENTS_BUBBLE(event) { var baseClass = v7374.getPrototypeOf(v7375); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7376 = {};
v7376.constructor = v7373;
v7373.prototype = v7376;
v7372.push(v7373);
v7371.apiCallAttempt = v7372;
const v7377 = [];
var v7378;
v7378 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7359.getPrototypeOf(v7375); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7379 = {};
v7379.constructor = v7378;
v7378.prototype = v7379;
v7377.push(v7378);
v7371.apiCall = v7377;
v7370._events = v7371;
v7370.MONITOR_EVENTS_BUBBLE = v7373;
v7370.CALL_EVENTS_BUBBLE = v7378;
v7367.prototype = v7370;
v7367.__super__ = v299;
const v7380 = {};
v7380[\\"2018-05-22\\"] = null;
v7367.services = v7380;
const v7381 = [];
v7381.push(\\"2018-05-22\\");
v7367.apiVersions = v7381;
v7367.serviceIdentifier = \\"personalize\\";
v2.Personalize = v7367;
var v7382;
var v7383 = v299;
var v7384 = v31;
v7382 = function () { if (v7383 !== v7384) {
    return v7383.apply(this, arguments);
} };
const v7385 = Object.create(v309);
v7385.constructor = v7382;
const v7386 = {};
const v7387 = [];
var v7388;
var v7389 = v31;
var v7390 = v7385;
v7388 = function EVENTS_BUBBLE(event) { var baseClass = v7389.getPrototypeOf(v7390); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7391 = {};
v7391.constructor = v7388;
v7388.prototype = v7391;
v7387.push(v7388);
v7386.apiCallAttempt = v7387;
const v7392 = [];
var v7393;
v7393 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7374.getPrototypeOf(v7390); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7394 = {};
v7394.constructor = v7393;
v7393.prototype = v7394;
v7392.push(v7393);
v7386.apiCall = v7392;
v7385._events = v7386;
v7385.MONITOR_EVENTS_BUBBLE = v7388;
v7385.CALL_EVENTS_BUBBLE = v7393;
v7382.prototype = v7385;
v7382.__super__ = v299;
const v7395 = {};
v7395[\\"2018-03-22\\"] = null;
v7382.services = v7395;
const v7396 = [];
v7396.push(\\"2018-03-22\\");
v7382.apiVersions = v7396;
v7382.serviceIdentifier = \\"personalizeevents\\";
v2.PersonalizeEvents = v7382;
var v7397;
var v7398 = v299;
var v7399 = v31;
v7397 = function () { if (v7398 !== v7399) {
    return v7398.apply(this, arguments);
} };
const v7400 = Object.create(v309);
v7400.constructor = v7397;
const v7401 = {};
const v7402 = [];
var v7403;
var v7404 = v31;
var v7405 = v7400;
v7403 = function EVENTS_BUBBLE(event) { var baseClass = v7404.getPrototypeOf(v7405); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7406 = {};
v7406.constructor = v7403;
v7403.prototype = v7406;
v7402.push(v7403);
v7401.apiCallAttempt = v7402;
const v7407 = [];
var v7408;
v7408 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7389.getPrototypeOf(v7405); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7409 = {};
v7409.constructor = v7408;
v7408.prototype = v7409;
v7407.push(v7408);
v7401.apiCall = v7407;
v7400._events = v7401;
v7400.MONITOR_EVENTS_BUBBLE = v7403;
v7400.CALL_EVENTS_BUBBLE = v7408;
v7397.prototype = v7400;
v7397.__super__ = v299;
const v7410 = {};
v7410[\\"2018-05-22\\"] = null;
v7397.services = v7410;
const v7411 = [];
v7411.push(\\"2018-05-22\\");
v7397.apiVersions = v7411;
v7397.serviceIdentifier = \\"personalizeruntime\\";
v2.PersonalizeRuntime = v7397;
var v7412;
var v7413 = v299;
var v7414 = v31;
v7412 = function () { if (v7413 !== v7414) {
    return v7413.apply(this, arguments);
} };
const v7415 = Object.create(v309);
v7415.constructor = v7412;
const v7416 = {};
const v7417 = [];
var v7418;
var v7419 = v31;
var v7420 = v7415;
v7418 = function EVENTS_BUBBLE(event) { var baseClass = v7419.getPrototypeOf(v7420); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7421 = {};
v7421.constructor = v7418;
v7418.prototype = v7421;
v7417.push(v7418);
v7416.apiCallAttempt = v7417;
const v7422 = [];
var v7423;
v7423 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7404.getPrototypeOf(v7420); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7424 = {};
v7424.constructor = v7423;
v7423.prototype = v7424;
v7422.push(v7423);
v7416.apiCall = v7422;
v7415._events = v7416;
v7415.MONITOR_EVENTS_BUBBLE = v7418;
v7415.CALL_EVENTS_BUBBLE = v7423;
v7412.prototype = v7415;
v7412.__super__ = v299;
const v7425 = {};
v7425[\\"2018-11-25\\"] = null;
v7412.services = v7425;
const v7426 = [];
v7426.push(\\"2018-11-25\\");
v7412.apiVersions = v7426;
v7412.serviceIdentifier = \\"applicationinsights\\";
v2.ApplicationInsights = v7412;
var v7427;
var v7428 = v299;
var v7429 = v31;
v7427 = function () { if (v7428 !== v7429) {
    return v7428.apply(this, arguments);
} };
const v7430 = Object.create(v309);
v7430.constructor = v7427;
const v7431 = {};
const v7432 = [];
var v7433;
var v7434 = v31;
var v7435 = v7430;
v7433 = function EVENTS_BUBBLE(event) { var baseClass = v7434.getPrototypeOf(v7435); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7436 = {};
v7436.constructor = v7433;
v7433.prototype = v7436;
v7432.push(v7433);
v7431.apiCallAttempt = v7432;
const v7437 = [];
var v7438;
v7438 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7419.getPrototypeOf(v7435); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7439 = {};
v7439.constructor = v7438;
v7438.prototype = v7439;
v7437.push(v7438);
v7431.apiCall = v7437;
v7430._events = v7431;
v7430.MONITOR_EVENTS_BUBBLE = v7433;
v7430.CALL_EVENTS_BUBBLE = v7438;
v7427.prototype = v7430;
v7427.__super__ = v299;
const v7440 = {};
v7440[\\"2019-06-24\\"] = null;
v7427.services = v7440;
const v7441 = [];
v7441.push(\\"2019-06-24\\");
v7427.apiVersions = v7441;
v7427.serviceIdentifier = \\"servicequotas\\";
v2.ServiceQuotas = v7427;
var v7442;
var v7443 = v299;
var v7444 = v31;
v7442 = function () { if (v7443 !== v7444) {
    return v7443.apply(this, arguments);
} };
const v7445 = Object.create(v309);
v7445.constructor = v7442;
const v7446 = {};
const v7447 = [];
var v7448;
var v7449 = v31;
var v7450 = v7445;
v7448 = function EVENTS_BUBBLE(event) { var baseClass = v7449.getPrototypeOf(v7450); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7451 = {};
v7451.constructor = v7448;
v7448.prototype = v7451;
v7447.push(v7448);
v7446.apiCallAttempt = v7447;
const v7452 = [];
var v7453;
v7453 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7434.getPrototypeOf(v7450); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7454 = {};
v7454.constructor = v7453;
v7453.prototype = v7454;
v7452.push(v7453);
v7446.apiCall = v7452;
v7445._events = v7446;
v7445.MONITOR_EVENTS_BUBBLE = v7448;
v7445.CALL_EVENTS_BUBBLE = v7453;
v7442.prototype = v7445;
v7442.__super__ = v299;
const v7455 = {};
v7455[\\"2018-04-02\\"] = null;
v7442.services = v7455;
const v7456 = [];
v7456.push(\\"2018-04-02\\");
v7442.apiVersions = v7456;
v7442.serviceIdentifier = \\"ec2instanceconnect\\";
v2.EC2InstanceConnect = v7442;
var v7457;
var v7458 = v299;
var v7459 = v31;
v7457 = function () { if (v7458 !== v7459) {
    return v7458.apply(this, arguments);
} };
const v7460 = Object.create(v309);
v7460.constructor = v7457;
const v7461 = {};
const v7462 = [];
var v7463;
var v7464 = v31;
var v7465 = v7460;
v7463 = function EVENTS_BUBBLE(event) { var baseClass = v7464.getPrototypeOf(v7465); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7466 = {};
v7466.constructor = v7463;
v7463.prototype = v7466;
v7462.push(v7463);
v7461.apiCallAttempt = v7462;
const v7467 = [];
var v7468;
v7468 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7449.getPrototypeOf(v7465); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7469 = {};
v7469.constructor = v7468;
v7468.prototype = v7469;
v7467.push(v7468);
v7461.apiCall = v7467;
v7460._events = v7461;
v7460.MONITOR_EVENTS_BUBBLE = v7463;
v7460.CALL_EVENTS_BUBBLE = v7468;
var v7470;
var v7471 = v40;
v7470 = function setupRequestListeners(request) { if (request.operation === \\"putEvents\\") {
    var params = request.params || {};
    if (params.EndpointId !== undefined) {
        throw new v3.error(new v7471(), { code: \\"InvalidParameter\\", message: \\"EndpointId is not supported in current SDK.\\\\n\\" + \\"You should consider switching to V3(https://github.com/aws/aws-sdk-js-v3).\\" });
    }
} };
const v7472 = {};
v7472.constructor = v7470;
v7470.prototype = v7472;
v7460.setupRequestListeners = v7470;
v7457.prototype = v7460;
v7457.__super__ = v299;
const v7473 = {};
v7473[\\"2015-10-07\\"] = null;
v7457.services = v7473;
const v7474 = [];
v7474.push(\\"2015-10-07\\");
v7457.apiVersions = v7474;
v7457.serviceIdentifier = \\"eventbridge\\";
v2.EventBridge = v7457;
var v7475;
var v7476 = v299;
var v7477 = v31;
v7475 = function () { if (v7476 !== v7477) {
    return v7476.apply(this, arguments);
} };
const v7478 = Object.create(v309);
v7478.constructor = v7475;
const v7479 = {};
const v7480 = [];
var v7481;
var v7482 = v31;
var v7483 = v7478;
v7481 = function EVENTS_BUBBLE(event) { var baseClass = v7482.getPrototypeOf(v7483); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7484 = {};
v7484.constructor = v7481;
v7481.prototype = v7484;
v7480.push(v7481);
v7479.apiCallAttempt = v7480;
const v7485 = [];
var v7486;
v7486 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7464.getPrototypeOf(v7483); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7487 = {};
v7487.constructor = v7486;
v7486.prototype = v7487;
v7485.push(v7486);
v7479.apiCall = v7485;
v7478._events = v7479;
v7478.MONITOR_EVENTS_BUBBLE = v7481;
v7478.CALL_EVENTS_BUBBLE = v7486;
v7475.prototype = v7478;
v7475.__super__ = v299;
const v7488 = {};
v7488[\\"2017-03-31\\"] = null;
v7475.services = v7488;
const v7489 = [];
v7489.push(\\"2017-03-31\\");
v7475.apiVersions = v7489;
v7475.serviceIdentifier = \\"lakeformation\\";
v2.LakeFormation = v7475;
var v7490;
var v7491 = v299;
var v7492 = v31;
v7490 = function () { if (v7491 !== v7492) {
    return v7491.apply(this, arguments);
} };
const v7493 = Object.create(v309);
v7493.constructor = v7490;
const v7494 = {};
const v7495 = [];
var v7496;
var v7497 = v31;
var v7498 = v7493;
v7496 = function EVENTS_BUBBLE(event) { var baseClass = v7497.getPrototypeOf(v7498); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7499 = {};
v7499.constructor = v7496;
v7496.prototype = v7499;
v7495.push(v7496);
v7494.apiCallAttempt = v7495;
const v7500 = [];
var v7501;
v7501 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7482.getPrototypeOf(v7498); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7502 = {};
v7502.constructor = v7501;
v7501.prototype = v7502;
v7500.push(v7501);
v7494.apiCall = v7500;
v7493._events = v7494;
v7493.MONITOR_EVENTS_BUBBLE = v7496;
v7493.CALL_EVENTS_BUBBLE = v7501;
v7490.prototype = v7493;
v7490.__super__ = v299;
const v7503 = {};
v7503[\\"2018-06-26\\"] = null;
v7490.services = v7503;
const v7504 = [];
v7504.push(\\"2018-06-26\\");
v7490.apiVersions = v7504;
v7490.serviceIdentifier = \\"forecastservice\\";
v2.ForecastService = v7490;
var v7505;
var v7506 = v299;
var v7507 = v31;
v7505 = function () { if (v7506 !== v7507) {
    return v7506.apply(this, arguments);
} };
const v7508 = Object.create(v309);
v7508.constructor = v7505;
const v7509 = {};
const v7510 = [];
var v7511;
var v7512 = v31;
var v7513 = v7508;
v7511 = function EVENTS_BUBBLE(event) { var baseClass = v7512.getPrototypeOf(v7513); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7514 = {};
v7514.constructor = v7511;
v7511.prototype = v7514;
v7510.push(v7511);
v7509.apiCallAttempt = v7510;
const v7515 = [];
var v7516;
v7516 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7497.getPrototypeOf(v7513); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7517 = {};
v7517.constructor = v7516;
v7516.prototype = v7517;
v7515.push(v7516);
v7509.apiCall = v7515;
v7508._events = v7509;
v7508.MONITOR_EVENTS_BUBBLE = v7511;
v7508.CALL_EVENTS_BUBBLE = v7516;
v7505.prototype = v7508;
v7505.__super__ = v299;
const v7518 = {};
v7518[\\"2018-06-26\\"] = null;
v7505.services = v7518;
const v7519 = [];
v7519.push(\\"2018-06-26\\");
v7505.apiVersions = v7519;
v7505.serviceIdentifier = \\"forecastqueryservice\\";
v2.ForecastQueryService = v7505;
var v7520;
var v7521 = v299;
var v7522 = v31;
v7520 = function () { if (v7521 !== v7522) {
    return v7521.apply(this, arguments);
} };
const v7523 = Object.create(v309);
v7523.constructor = v7520;
const v7524 = {};
const v7525 = [];
var v7526;
var v7527 = v31;
var v7528 = v7523;
v7526 = function EVENTS_BUBBLE(event) { var baseClass = v7527.getPrototypeOf(v7528); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7529 = {};
v7529.constructor = v7526;
v7526.prototype = v7529;
v7525.push(v7526);
v7524.apiCallAttempt = v7525;
const v7530 = [];
var v7531;
v7531 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7512.getPrototypeOf(v7528); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7532 = {};
v7532.constructor = v7531;
v7531.prototype = v7532;
v7530.push(v7531);
v7524.apiCall = v7530;
v7523._events = v7524;
v7523.MONITOR_EVENTS_BUBBLE = v7526;
v7523.CALL_EVENTS_BUBBLE = v7531;
v7520.prototype = v7523;
v7520.__super__ = v299;
const v7533 = {};
v7533[\\"2019-01-02\\"] = null;
v7520.services = v7533;
const v7534 = [];
v7534.push(\\"2019-01-02\\");
v7520.apiVersions = v7534;
v7520.serviceIdentifier = \\"qldb\\";
v2.QLDB = v7520;
var v7535;
var v7536 = v299;
var v7537 = v31;
v7535 = function () { if (v7536 !== v7537) {
    return v7536.apply(this, arguments);
} };
const v7538 = Object.create(v309);
v7538.constructor = v7535;
const v7539 = {};
const v7540 = [];
var v7541;
var v7542 = v31;
var v7543 = v7538;
v7541 = function EVENTS_BUBBLE(event) { var baseClass = v7542.getPrototypeOf(v7543); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7544 = {};
v7544.constructor = v7541;
v7541.prototype = v7544;
v7540.push(v7541);
v7539.apiCallAttempt = v7540;
const v7545 = [];
var v7546;
v7546 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7527.getPrototypeOf(v7543); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7547 = {};
v7547.constructor = v7546;
v7546.prototype = v7547;
v7545.push(v7546);
v7539.apiCall = v7545;
v7538._events = v7539;
v7538.MONITOR_EVENTS_BUBBLE = v7541;
v7538.CALL_EVENTS_BUBBLE = v7546;
v7535.prototype = v7538;
v7535.__super__ = v299;
const v7548 = {};
v7548[\\"2019-07-11\\"] = null;
v7535.services = v7548;
const v7549 = [];
v7549.push(\\"2019-07-11\\");
v7535.apiVersions = v7549;
v7535.serviceIdentifier = \\"qldbsession\\";
v2.QLDBSession = v7535;
var v7550;
var v7551 = v299;
var v7552 = v31;
v7550 = function () { if (v7551 !== v7552) {
    return v7551.apply(this, arguments);
} };
const v7553 = Object.create(v309);
v7553.constructor = v7550;
const v7554 = {};
const v7555 = [];
var v7556;
var v7557 = v31;
var v7558 = v7553;
v7556 = function EVENTS_BUBBLE(event) { var baseClass = v7557.getPrototypeOf(v7558); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7559 = {};
v7559.constructor = v7556;
v7556.prototype = v7559;
v7555.push(v7556);
v7554.apiCallAttempt = v7555;
const v7560 = [];
var v7561;
v7561 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7542.getPrototypeOf(v7558); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7562 = {};
v7562.constructor = v7561;
v7561.prototype = v7562;
v7560.push(v7561);
v7554.apiCall = v7560;
v7553._events = v7554;
v7553.MONITOR_EVENTS_BUBBLE = v7556;
v7553.CALL_EVENTS_BUBBLE = v7561;
v7550.prototype = v7553;
v7550.__super__ = v299;
const v7563 = {};
v7563[\\"2019-05-01\\"] = null;
v7550.services = v7563;
const v7564 = [];
v7564.push(\\"2019-05-01\\");
v7550.apiVersions = v7564;
v7550.serviceIdentifier = \\"workmailmessageflow\\";
v2.WorkMailMessageFlow = v7550;
var v7565;
var v7566 = v299;
var v7567 = v31;
v7565 = function () { if (v7566 !== v7567) {
    return v7566.apply(this, arguments);
} };
const v7568 = Object.create(v309);
v7568.constructor = v7565;
const v7569 = {};
const v7570 = [];
var v7571;
var v7572 = v31;
var v7573 = v7568;
v7571 = function EVENTS_BUBBLE(event) { var baseClass = v7572.getPrototypeOf(v7573); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7574 = {};
v7574.constructor = v7571;
v7571.prototype = v7574;
v7570.push(v7571);
v7569.apiCallAttempt = v7570;
const v7575 = [];
var v7576;
v7576 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7557.getPrototypeOf(v7573); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7577 = {};
v7577.constructor = v7576;
v7576.prototype = v7577;
v7575.push(v7576);
v7569.apiCall = v7575;
v7568._events = v7569;
v7568.MONITOR_EVENTS_BUBBLE = v7571;
v7568.CALL_EVENTS_BUBBLE = v7576;
v7565.prototype = v7568;
v7565.__super__ = v299;
const v7578 = {};
v7578[\\"2019-10-15\\"] = null;
v7565.services = v7578;
const v7579 = [];
v7579.push(\\"2019-10-15\\");
v7565.apiVersions = v7579;
v7565.serviceIdentifier = \\"codestarnotifications\\";
v2.CodeStarNotifications = v7565;
var v7580;
var v7581 = v299;
var v7582 = v31;
v7580 = function () { if (v7581 !== v7582) {
    return v7581.apply(this, arguments);
} };
const v7583 = Object.create(v309);
v7583.constructor = v7580;
const v7584 = {};
const v7585 = [];
var v7586;
var v7587 = v31;
var v7588 = v7583;
v7586 = function EVENTS_BUBBLE(event) { var baseClass = v7587.getPrototypeOf(v7588); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7589 = {};
v7589.constructor = v7586;
v7586.prototype = v7589;
v7585.push(v7586);
v7584.apiCallAttempt = v7585;
const v7590 = [];
var v7591;
v7591 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7572.getPrototypeOf(v7588); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7592 = {};
v7592.constructor = v7591;
v7591.prototype = v7592;
v7590.push(v7591);
v7584.apiCall = v7590;
v7583._events = v7584;
v7583.MONITOR_EVENTS_BUBBLE = v7586;
v7583.CALL_EVENTS_BUBBLE = v7591;
v7580.prototype = v7583;
v7580.__super__ = v299;
const v7593 = {};
v7593[\\"2019-06-28\\"] = null;
v7580.services = v7593;
const v7594 = [];
v7594.push(\\"2019-06-28\\");
v7580.apiVersions = v7594;
v7580.serviceIdentifier = \\"savingsplans\\";
v2.SavingsPlans = v7580;
var v7595;
var v7596 = v299;
var v7597 = v31;
v7595 = function () { if (v7596 !== v7597) {
    return v7596.apply(this, arguments);
} };
const v7598 = Object.create(v309);
v7598.constructor = v7595;
const v7599 = {};
const v7600 = [];
var v7601;
var v7602 = v31;
var v7603 = v7598;
v7601 = function EVENTS_BUBBLE(event) { var baseClass = v7602.getPrototypeOf(v7603); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7604 = {};
v7604.constructor = v7601;
v7601.prototype = v7604;
v7600.push(v7601);
v7599.apiCallAttempt = v7600;
const v7605 = [];
var v7606;
v7606 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7587.getPrototypeOf(v7603); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7607 = {};
v7607.constructor = v7606;
v7606.prototype = v7607;
v7605.push(v7606);
v7599.apiCall = v7605;
v7598._events = v7599;
v7598.MONITOR_EVENTS_BUBBLE = v7601;
v7598.CALL_EVENTS_BUBBLE = v7606;
v7595.prototype = v7598;
v7595.__super__ = v299;
const v7608 = {};
v7608[\\"2019-06-10\\"] = null;
v7595.services = v7608;
const v7609 = [];
v7609.push(\\"2019-06-10\\");
v7595.apiVersions = v7609;
v7595.serviceIdentifier = \\"sso\\";
v2.SSO = v7595;
var v7610;
var v7611 = v299;
var v7612 = v31;
v7610 = function () { if (v7611 !== v7612) {
    return v7611.apply(this, arguments);
} };
const v7613 = Object.create(v309);
v7613.constructor = v7610;
const v7614 = {};
const v7615 = [];
var v7616;
var v7617 = v31;
var v7618 = v7613;
v7616 = function EVENTS_BUBBLE(event) { var baseClass = v7617.getPrototypeOf(v7618); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7619 = {};
v7619.constructor = v7616;
v7616.prototype = v7619;
v7615.push(v7616);
v7614.apiCallAttempt = v7615;
const v7620 = [];
var v7621;
v7621 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7602.getPrototypeOf(v7618); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7622 = {};
v7622.constructor = v7621;
v7621.prototype = v7622;
v7620.push(v7621);
v7614.apiCall = v7620;
v7613._events = v7614;
v7613.MONITOR_EVENTS_BUBBLE = v7616;
v7613.CALL_EVENTS_BUBBLE = v7621;
v7610.prototype = v7613;
v7610.__super__ = v299;
const v7623 = {};
v7623[\\"2019-06-10\\"] = null;
v7610.services = v7623;
const v7624 = [];
v7624.push(\\"2019-06-10\\");
v7610.apiVersions = v7624;
v7610.serviceIdentifier = \\"ssooidc\\";
v2.SSOOIDC = v7610;
var v7625;
var v7626 = v299;
var v7627 = v31;
v7625 = function () { if (v7626 !== v7627) {
    return v7626.apply(this, arguments);
} };
const v7628 = Object.create(v309);
v7628.constructor = v7625;
const v7629 = {};
const v7630 = [];
var v7631;
var v7632 = v31;
var v7633 = v7628;
v7631 = function EVENTS_BUBBLE(event) { var baseClass = v7632.getPrototypeOf(v7633); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7634 = {};
v7634.constructor = v7631;
v7631.prototype = v7634;
v7630.push(v7631);
v7629.apiCallAttempt = v7630;
const v7635 = [];
var v7636;
v7636 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7617.getPrototypeOf(v7633); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7637 = {};
v7637.constructor = v7636;
v7636.prototype = v7637;
v7635.push(v7636);
v7629.apiCall = v7635;
v7628._events = v7629;
v7628.MONITOR_EVENTS_BUBBLE = v7631;
v7628.CALL_EVENTS_BUBBLE = v7636;
v7625.prototype = v7628;
v7625.__super__ = v299;
const v7638 = {};
v7638[\\"2018-09-17\\"] = null;
v7625.services = v7638;
const v7639 = [];
v7639.push(\\"2018-09-17\\");
v7625.apiVersions = v7639;
v7625.serviceIdentifier = \\"marketplacecatalog\\";
v2.MarketplaceCatalog = v7625;
var v7640;
var v7641 = v299;
var v7642 = v31;
v7640 = function () { if (v7641 !== v7642) {
    return v7641.apply(this, arguments);
} };
const v7643 = Object.create(v309);
v7643.constructor = v7640;
const v7644 = {};
const v7645 = [];
var v7646;
var v7647 = v31;
var v7648 = v7643;
v7646 = function EVENTS_BUBBLE(event) { var baseClass = v7647.getPrototypeOf(v7648); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7649 = {};
v7649.constructor = v7646;
v7646.prototype = v7649;
v7645.push(v7646);
v7644.apiCallAttempt = v7645;
const v7650 = [];
var v7651;
v7651 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7632.getPrototypeOf(v7648); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7652 = {};
v7652.constructor = v7651;
v7651.prototype = v7652;
v7650.push(v7651);
v7644.apiCall = v7650;
v7643._events = v7644;
v7643.MONITOR_EVENTS_BUBBLE = v7646;
v7643.CALL_EVENTS_BUBBLE = v7651;
v7640.prototype = v7643;
v7640.__super__ = v299;
const v7653 = {};
v7653[\\"2017-07-25\\"] = null;
v7640.services = v7653;
const v7654 = [];
v7654.push(\\"2017-07-25\\");
v7640.apiVersions = v7654;
v7640.serviceIdentifier = \\"dataexchange\\";
v2.DataExchange = v7640;
var v7655;
var v7656 = v299;
var v7657 = v31;
v7655 = function () { if (v7656 !== v7657) {
    return v7656.apply(this, arguments);
} };
const v7658 = Object.create(v309);
v7658.constructor = v7655;
const v7659 = {};
const v7660 = [];
var v7661;
var v7662 = v31;
var v7663 = v7658;
v7661 = function EVENTS_BUBBLE(event) { var baseClass = v7662.getPrototypeOf(v7663); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7664 = {};
v7664.constructor = v7661;
v7661.prototype = v7664;
v7660.push(v7661);
v7659.apiCallAttempt = v7660;
const v7665 = [];
var v7666;
v7666 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7647.getPrototypeOf(v7663); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7667 = {};
v7667.constructor = v7666;
v7666.prototype = v7667;
v7665.push(v7666);
v7659.apiCall = v7665;
v7658._events = v7659;
v7658.MONITOR_EVENTS_BUBBLE = v7661;
v7658.CALL_EVENTS_BUBBLE = v7666;
v7655.prototype = v7658;
v7655.__super__ = v299;
const v7668 = {};
v7668[\\"2019-09-27\\"] = null;
v7655.services = v7668;
const v7669 = [];
v7669.push(\\"2019-09-27\\");
v7655.apiVersions = v7669;
v7655.serviceIdentifier = \\"sesv2\\";
v2.SESV2 = v7655;
var v7670;
var v7671 = v299;
var v7672 = v31;
v7670 = function () { if (v7671 !== v7672) {
    return v7671.apply(this, arguments);
} };
const v7673 = Object.create(v309);
v7673.constructor = v7670;
const v7674 = {};
const v7675 = [];
var v7676;
var v7677 = v31;
var v7678 = v7673;
v7676 = function EVENTS_BUBBLE(event) { var baseClass = v7677.getPrototypeOf(v7678); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7679 = {};
v7679.constructor = v7676;
v7676.prototype = v7679;
v7675.push(v7676);
v7674.apiCallAttempt = v7675;
const v7680 = [];
var v7681;
v7681 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7662.getPrototypeOf(v7678); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7682 = {};
v7682.constructor = v7681;
v7681.prototype = v7682;
v7680.push(v7681);
v7674.apiCall = v7680;
v7673._events = v7674;
v7673.MONITOR_EVENTS_BUBBLE = v7676;
v7673.CALL_EVENTS_BUBBLE = v7681;
v7670.prototype = v7673;
v7670.__super__ = v299;
const v7683 = {};
v7683[\\"2019-06-30\\"] = null;
v7670.services = v7683;
const v7684 = [];
v7684.push(\\"2019-06-30\\");
v7670.apiVersions = v7684;
v7670.serviceIdentifier = \\"migrationhubconfig\\";
v2.MigrationHubConfig = v7670;
var v7685;
var v7686 = v299;
var v7687 = v31;
v7685 = function () { if (v7686 !== v7687) {
    return v7686.apply(this, arguments);
} };
const v7688 = Object.create(v309);
v7688.constructor = v7685;
const v7689 = {};
const v7690 = [];
var v7691;
var v7692 = v31;
var v7693 = v7688;
v7691 = function EVENTS_BUBBLE(event) { var baseClass = v7692.getPrototypeOf(v7693); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7694 = {};
v7694.constructor = v7691;
v7691.prototype = v7694;
v7690.push(v7691);
v7689.apiCallAttempt = v7690;
const v7695 = [];
var v7696;
v7696 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7677.getPrototypeOf(v7693); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7697 = {};
v7697.constructor = v7696;
v7696.prototype = v7697;
v7695.push(v7696);
v7689.apiCall = v7695;
v7688._events = v7689;
v7688.MONITOR_EVENTS_BUBBLE = v7691;
v7688.CALL_EVENTS_BUBBLE = v7696;
v7685.prototype = v7688;
v7685.__super__ = v299;
const v7698 = {};
v7698[\\"2018-09-07\\"] = null;
v7685.services = v7698;
const v7699 = [];
v7699.push(\\"2018-09-07\\");
v7685.apiVersions = v7699;
v7685.serviceIdentifier = \\"connectparticipant\\";
v2.ConnectParticipant = v7685;
var v7700;
var v7701 = v299;
var v7702 = v31;
v7700 = function () { if (v7701 !== v7702) {
    return v7701.apply(this, arguments);
} };
const v7703 = Object.create(v309);
v7703.constructor = v7700;
const v7704 = {};
const v7705 = [];
var v7706;
var v7707 = v31;
var v7708 = v7703;
v7706 = function EVENTS_BUBBLE(event) { var baseClass = v7707.getPrototypeOf(v7708); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7709 = {};
v7709.constructor = v7706;
v7706.prototype = v7709;
v7705.push(v7706);
v7704.apiCallAttempt = v7705;
const v7710 = [];
var v7711;
v7711 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7692.getPrototypeOf(v7708); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7712 = {};
v7712.constructor = v7711;
v7711.prototype = v7712;
v7710.push(v7711);
v7704.apiCall = v7710;
v7703._events = v7704;
v7703.MONITOR_EVENTS_BUBBLE = v7706;
v7703.CALL_EVENTS_BUBBLE = v7711;
v7700.prototype = v7703;
v7700.__super__ = v299;
const v7713 = {};
v7713[\\"2019-10-09\\"] = null;
v7700.services = v7713;
const v7714 = [];
v7714.push(\\"2019-10-09\\");
v7700.apiVersions = v7714;
v7700.serviceIdentifier = \\"appconfig\\";
v2.AppConfig = v7700;
var v7715;
var v7716 = v299;
var v7717 = v31;
v7715 = function () { if (v7716 !== v7717) {
    return v7716.apply(this, arguments);
} };
const v7718 = Object.create(v309);
v7718.constructor = v7715;
const v7719 = {};
const v7720 = [];
var v7721;
var v7722 = v31;
var v7723 = v7718;
v7721 = function EVENTS_BUBBLE(event) { var baseClass = v7722.getPrototypeOf(v7723); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7724 = {};
v7724.constructor = v7721;
v7721.prototype = v7724;
v7720.push(v7721);
v7719.apiCallAttempt = v7720;
const v7725 = [];
var v7726;
v7726 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7707.getPrototypeOf(v7723); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7727 = {};
v7727.constructor = v7726;
v7726.prototype = v7727;
v7725.push(v7726);
v7719.apiCall = v7725;
v7718._events = v7719;
v7718.MONITOR_EVENTS_BUBBLE = v7721;
v7718.CALL_EVENTS_BUBBLE = v7726;
v7715.prototype = v7718;
v7715.__super__ = v299;
const v7728 = {};
v7728[\\"2018-10-05\\"] = null;
v7715.services = v7728;
const v7729 = [];
v7729.push(\\"2018-10-05\\");
v7715.apiVersions = v7729;
v7715.serviceIdentifier = \\"iotsecuretunneling\\";
v2.IoTSecureTunneling = v7715;
var v7730;
var v7731 = v299;
var v7732 = v31;
v7730 = function () { if (v7731 !== v7732) {
    return v7731.apply(this, arguments);
} };
const v7733 = Object.create(v309);
v7733.constructor = v7730;
const v7734 = {};
const v7735 = [];
var v7736;
var v7737 = v31;
var v7738 = v7733;
v7736 = function EVENTS_BUBBLE(event) { var baseClass = v7737.getPrototypeOf(v7738); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7739 = {};
v7739.constructor = v7736;
v7736.prototype = v7739;
v7735.push(v7736);
v7734.apiCallAttempt = v7735;
const v7740 = [];
var v7741;
v7741 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7722.getPrototypeOf(v7738); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7742 = {};
v7742.constructor = v7741;
v7741.prototype = v7742;
v7740.push(v7741);
v7734.apiCall = v7740;
v7733._events = v7734;
v7733.MONITOR_EVENTS_BUBBLE = v7736;
v7733.CALL_EVENTS_BUBBLE = v7741;
v7730.prototype = v7733;
v7730.__super__ = v299;
const v7743 = {};
v7743[\\"2019-07-29\\"] = null;
v7730.services = v7743;
const v7744 = [];
v7744.push(\\"2019-07-29\\");
v7730.apiVersions = v7744;
v7730.serviceIdentifier = \\"wafv2\\";
v2.WAFV2 = v7730;
var v7745;
var v7746 = v299;
var v7747 = v31;
v7745 = function () { if (v7746 !== v7747) {
    return v7746.apply(this, arguments);
} };
const v7748 = Object.create(v309);
v7748.constructor = v7745;
const v7749 = {};
const v7750 = [];
var v7751;
var v7752 = v31;
var v7753 = v7748;
v7751 = function EVENTS_BUBBLE(event) { var baseClass = v7752.getPrototypeOf(v7753); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7754 = {};
v7754.constructor = v7751;
v7751.prototype = v7754;
v7750.push(v7751);
v7749.apiCallAttempt = v7750;
const v7755 = [];
var v7756;
v7756 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7737.getPrototypeOf(v7753); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7757 = {};
v7757.constructor = v7756;
v7756.prototype = v7757;
v7755.push(v7756);
v7749.apiCall = v7755;
v7748._events = v7749;
v7748.MONITOR_EVENTS_BUBBLE = v7751;
v7748.CALL_EVENTS_BUBBLE = v7756;
v7745.prototype = v7748;
v7745.__super__ = v299;
const v7758 = {};
v7758[\\"2017-07-25\\"] = null;
v7745.services = v7758;
const v7759 = [];
v7759.push(\\"2017-07-25\\");
v7745.apiVersions = v7759;
v7745.serviceIdentifier = \\"elasticinference\\";
v2.ElasticInference = v7745;
var v7760;
var v7761 = v299;
var v7762 = v31;
v7760 = function () { if (v7761 !== v7762) {
    return v7761.apply(this, arguments);
} };
const v7763 = Object.create(v309);
v7763.constructor = v7760;
const v7764 = {};
const v7765 = [];
var v7766;
var v7767 = v31;
var v7768 = v7763;
v7766 = function EVENTS_BUBBLE(event) { var baseClass = v7767.getPrototypeOf(v7768); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7769 = {};
v7769.constructor = v7766;
v7766.prototype = v7769;
v7765.push(v7766);
v7764.apiCallAttempt = v7765;
const v7770 = [];
var v7771;
v7771 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7752.getPrototypeOf(v7768); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7772 = {};
v7772.constructor = v7771;
v7771.prototype = v7772;
v7770.push(v7771);
v7764.apiCall = v7770;
v7763._events = v7764;
v7763.MONITOR_EVENTS_BUBBLE = v7766;
v7763.CALL_EVENTS_BUBBLE = v7771;
v7760.prototype = v7763;
v7760.__super__ = v299;
const v7773 = {};
v7773[\\"2019-12-02\\"] = null;
v7760.services = v7773;
const v7774 = [];
v7774.push(\\"2019-12-02\\");
v7760.apiVersions = v7774;
v7760.serviceIdentifier = \\"imagebuilder\\";
v2.Imagebuilder = v7760;
var v7775;
var v7776 = v299;
var v7777 = v31;
v7775 = function () { if (v7776 !== v7777) {
    return v7776.apply(this, arguments);
} };
const v7778 = Object.create(v309);
v7778.constructor = v7775;
const v7779 = {};
const v7780 = [];
var v7781;
var v7782 = v31;
var v7783 = v7778;
v7781 = function EVENTS_BUBBLE(event) { var baseClass = v7782.getPrototypeOf(v7783); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7784 = {};
v7784.constructor = v7781;
v7781.prototype = v7784;
v7780.push(v7781);
v7779.apiCallAttempt = v7780;
const v7785 = [];
var v7786;
v7786 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7767.getPrototypeOf(v7783); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7787 = {};
v7787.constructor = v7786;
v7786.prototype = v7787;
v7785.push(v7786);
v7779.apiCall = v7785;
v7778._events = v7779;
v7778.MONITOR_EVENTS_BUBBLE = v7781;
v7778.CALL_EVENTS_BUBBLE = v7786;
v7775.prototype = v7778;
v7775.__super__ = v299;
const v7788 = {};
v7788[\\"2019-12-02\\"] = null;
v7775.services = v7788;
const v7789 = [];
v7789.push(\\"2019-12-02\\");
v7775.apiVersions = v7789;
v7775.serviceIdentifier = \\"schemas\\";
v2.Schemas = v7775;
var v7790;
var v7791 = v299;
var v7792 = v31;
v7790 = function () { if (v7791 !== v7792) {
    return v7791.apply(this, arguments);
} };
const v7793 = Object.create(v309);
v7793.constructor = v7790;
const v7794 = {};
const v7795 = [];
var v7796;
var v7797 = v31;
var v7798 = v7793;
v7796 = function EVENTS_BUBBLE(event) { var baseClass = v7797.getPrototypeOf(v7798); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7799 = {};
v7799.constructor = v7796;
v7796.prototype = v7799;
v7795.push(v7796);
v7794.apiCallAttempt = v7795;
const v7800 = [];
var v7801;
v7801 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7782.getPrototypeOf(v7798); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7802 = {};
v7802.constructor = v7801;
v7801.prototype = v7802;
v7800.push(v7801);
v7794.apiCall = v7800;
v7793._events = v7794;
v7793.MONITOR_EVENTS_BUBBLE = v7796;
v7793.CALL_EVENTS_BUBBLE = v7801;
v7790.prototype = v7793;
v7790.__super__ = v299;
const v7803 = {};
v7803[\\"2019-11-01\\"] = null;
v7790.services = v7803;
const v7804 = [];
v7804.push(\\"2019-11-01\\");
v7790.apiVersions = v7804;
v7790.serviceIdentifier = \\"accessanalyzer\\";
v2.AccessAnalyzer = v7790;
var v7805;
var v7806 = v299;
var v7807 = v31;
v7805 = function () { if (v7806 !== v7807) {
    return v7806.apply(this, arguments);
} };
const v7808 = Object.create(v309);
v7808.constructor = v7805;
const v7809 = {};
const v7810 = [];
var v7811;
var v7812 = v31;
var v7813 = v7808;
v7811 = function EVENTS_BUBBLE(event) { var baseClass = v7812.getPrototypeOf(v7813); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7814 = {};
v7814.constructor = v7811;
v7811.prototype = v7814;
v7810.push(v7811);
v7809.apiCallAttempt = v7810;
const v7815 = [];
var v7816;
v7816 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7797.getPrototypeOf(v7813); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7817 = {};
v7817.constructor = v7816;
v7816.prototype = v7817;
v7815.push(v7816);
v7809.apiCall = v7815;
v7808._events = v7809;
v7808.MONITOR_EVENTS_BUBBLE = v7811;
v7808.CALL_EVENTS_BUBBLE = v7816;
v7805.prototype = v7808;
v7805.__super__ = v299;
const v7818 = {};
v7818[\\"2019-09-19\\"] = null;
v7805.services = v7818;
const v7819 = [];
v7819.push(\\"2019-09-19\\");
v7805.apiVersions = v7819;
v7805.serviceIdentifier = \\"codegurureviewer\\";
v2.CodeGuruReviewer = v7805;
var v7820;
var v7821 = v299;
var v7822 = v31;
v7820 = function () { if (v7821 !== v7822) {
    return v7821.apply(this, arguments);
} };
const v7823 = Object.create(v309);
v7823.constructor = v7820;
const v7824 = {};
const v7825 = [];
var v7826;
var v7827 = v31;
var v7828 = v7823;
v7826 = function EVENTS_BUBBLE(event) { var baseClass = v7827.getPrototypeOf(v7828); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7829 = {};
v7829.constructor = v7826;
v7826.prototype = v7829;
v7825.push(v7826);
v7824.apiCallAttempt = v7825;
const v7830 = [];
var v7831;
v7831 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7812.getPrototypeOf(v7828); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7832 = {};
v7832.constructor = v7831;
v7831.prototype = v7832;
v7830.push(v7831);
v7824.apiCall = v7830;
v7823._events = v7824;
v7823.MONITOR_EVENTS_BUBBLE = v7826;
v7823.CALL_EVENTS_BUBBLE = v7831;
v7820.prototype = v7823;
v7820.__super__ = v299;
const v7833 = {};
v7833[\\"2019-07-18\\"] = null;
v7820.services = v7833;
const v7834 = [];
v7834.push(\\"2019-07-18\\");
v7820.apiVersions = v7834;
v7820.serviceIdentifier = \\"codeguruprofiler\\";
v2.CodeGuruProfiler = v7820;
var v7835;
var v7836 = v299;
var v7837 = v31;
v7835 = function () { if (v7836 !== v7837) {
    return v7836.apply(this, arguments);
} };
const v7838 = Object.create(v309);
v7838.constructor = v7835;
const v7839 = {};
const v7840 = [];
var v7841;
var v7842 = v31;
var v7843 = v7838;
v7841 = function EVENTS_BUBBLE(event) { var baseClass = v7842.getPrototypeOf(v7843); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7844 = {};
v7844.constructor = v7841;
v7841.prototype = v7844;
v7840.push(v7841);
v7839.apiCallAttempt = v7840;
const v7845 = [];
var v7846;
v7846 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7827.getPrototypeOf(v7843); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7847 = {};
v7847.constructor = v7846;
v7846.prototype = v7847;
v7845.push(v7846);
v7839.apiCall = v7845;
v7838._events = v7839;
v7838.MONITOR_EVENTS_BUBBLE = v7841;
v7838.CALL_EVENTS_BUBBLE = v7846;
v7835.prototype = v7838;
v7835.__super__ = v299;
const v7848 = {};
v7848[\\"2019-11-01\\"] = null;
v7835.services = v7848;
const v7849 = [];
v7849.push(\\"2019-11-01\\");
v7835.apiVersions = v7849;
v7835.serviceIdentifier = \\"computeoptimizer\\";
v2.ComputeOptimizer = v7835;
var v7850;
var v7851 = v299;
var v7852 = v31;
v7850 = function () { if (v7851 !== v7852) {
    return v7851.apply(this, arguments);
} };
const v7853 = Object.create(v309);
v7853.constructor = v7850;
const v7854 = {};
const v7855 = [];
var v7856;
var v7857 = v31;
var v7858 = v7853;
v7856 = function EVENTS_BUBBLE(event) { var baseClass = v7857.getPrototypeOf(v7858); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7859 = {};
v7859.constructor = v7856;
v7856.prototype = v7859;
v7855.push(v7856);
v7854.apiCallAttempt = v7855;
const v7860 = [];
var v7861;
v7861 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7842.getPrototypeOf(v7858); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7862 = {};
v7862.constructor = v7861;
v7861.prototype = v7862;
v7860.push(v7861);
v7854.apiCall = v7860;
v7853._events = v7854;
v7853.MONITOR_EVENTS_BUBBLE = v7856;
v7853.CALL_EVENTS_BUBBLE = v7861;
v7850.prototype = v7853;
v7850.__super__ = v299;
const v7863 = {};
v7863[\\"2019-11-15\\"] = null;
v7850.services = v7863;
const v7864 = [];
v7864.push(\\"2019-11-15\\");
v7850.apiVersions = v7864;
v7850.serviceIdentifier = \\"frauddetector\\";
v2.FraudDetector = v7850;
var v7865;
var v7866 = v299;
var v7867 = v31;
v7865 = function () { if (v7866 !== v7867) {
    return v7866.apply(this, arguments);
} };
const v7868 = Object.create(v309);
v7868.constructor = v7865;
const v7869 = {};
const v7870 = [];
var v7871;
var v7872 = v31;
var v7873 = v7868;
v7871 = function EVENTS_BUBBLE(event) { var baseClass = v7872.getPrototypeOf(v7873); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7874 = {};
v7874.constructor = v7871;
v7871.prototype = v7874;
v7870.push(v7871);
v7869.apiCallAttempt = v7870;
const v7875 = [];
var v7876;
v7876 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7857.getPrototypeOf(v7873); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7877 = {};
v7877.constructor = v7876;
v7876.prototype = v7877;
v7875.push(v7876);
v7869.apiCall = v7875;
v7868._events = v7869;
v7868.MONITOR_EVENTS_BUBBLE = v7871;
v7868.CALL_EVENTS_BUBBLE = v7876;
v7865.prototype = v7868;
v7865.__super__ = v299;
const v7878 = {};
v7878[\\"2019-02-03\\"] = null;
v7865.services = v7878;
const v7879 = [];
v7879.push(\\"2019-02-03\\");
v7865.apiVersions = v7879;
v7865.serviceIdentifier = \\"kendra\\";
v2.Kendra = v7865;
var v7880;
var v7881 = v299;
var v7882 = v31;
v7880 = function () { if (v7881 !== v7882) {
    return v7881.apply(this, arguments);
} };
const v7883 = Object.create(v309);
v7883.constructor = v7880;
const v7884 = {};
const v7885 = [];
var v7886;
var v7887 = v31;
var v7888 = v7883;
v7886 = function EVENTS_BUBBLE(event) { var baseClass = v7887.getPrototypeOf(v7888); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7889 = {};
v7889.constructor = v7886;
v7886.prototype = v7889;
v7885.push(v7886);
v7884.apiCallAttempt = v7885;
const v7890 = [];
var v7891;
v7891 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7872.getPrototypeOf(v7888); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7892 = {};
v7892.constructor = v7891;
v7891.prototype = v7892;
v7890.push(v7891);
v7884.apiCall = v7890;
v7883._events = v7884;
v7883.MONITOR_EVENTS_BUBBLE = v7886;
v7883.CALL_EVENTS_BUBBLE = v7891;
v7880.prototype = v7883;
v7880.__super__ = v299;
const v7893 = {};
v7893[\\"2019-07-05\\"] = null;
v7880.services = v7893;
const v7894 = [];
v7894.push(\\"2019-07-05\\");
v7880.apiVersions = v7894;
v7880.serviceIdentifier = \\"networkmanager\\";
v2.NetworkManager = v7880;
var v7895;
var v7896 = v299;
var v7897 = v31;
v7895 = function () { if (v7896 !== v7897) {
    return v7896.apply(this, arguments);
} };
const v7898 = Object.create(v309);
v7898.constructor = v7895;
const v7899 = {};
const v7900 = [];
var v7901;
var v7902 = v31;
var v7903 = v7898;
v7901 = function EVENTS_BUBBLE(event) { var baseClass = v7902.getPrototypeOf(v7903); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7904 = {};
v7904.constructor = v7901;
v7901.prototype = v7904;
v7900.push(v7901);
v7899.apiCallAttempt = v7900;
const v7905 = [];
var v7906;
v7906 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7887.getPrototypeOf(v7903); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7907 = {};
v7907.constructor = v7906;
v7906.prototype = v7907;
v7905.push(v7906);
v7899.apiCall = v7905;
v7898._events = v7899;
v7898.MONITOR_EVENTS_BUBBLE = v7901;
v7898.CALL_EVENTS_BUBBLE = v7906;
v7895.prototype = v7898;
v7895.__super__ = v299;
const v7908 = {};
v7908[\\"2019-12-03\\"] = null;
v7895.services = v7908;
const v7909 = [];
v7909.push(\\"2019-12-03\\");
v7895.apiVersions = v7909;
v7895.serviceIdentifier = \\"outposts\\";
v2.Outposts = v7895;
var v7910;
var v7911 = v299;
var v7912 = v31;
v7910 = function () { if (v7911 !== v7912) {
    return v7911.apply(this, arguments);
} };
const v7913 = Object.create(v309);
v7913.constructor = v7910;
const v7914 = {};
const v7915 = [];
var v7916;
var v7917 = v31;
var v7918 = v7913;
v7916 = function EVENTS_BUBBLE(event) { var baseClass = v7917.getPrototypeOf(v7918); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7919 = {};
v7919.constructor = v7916;
v7916.prototype = v7919;
v7915.push(v7916);
v7914.apiCallAttempt = v7915;
const v7920 = [];
var v7921;
v7921 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7902.getPrototypeOf(v7918); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7922 = {};
v7922.constructor = v7921;
v7921.prototype = v7922;
v7920.push(v7921);
v7914.apiCall = v7920;
v7913._events = v7914;
v7913.MONITOR_EVENTS_BUBBLE = v7916;
v7913.CALL_EVENTS_BUBBLE = v7921;
v7910.prototype = v7913;
v7910.__super__ = v299;
const v7923 = {};
v7923[\\"2019-11-07\\"] = null;
v7910.services = v7923;
const v7924 = [];
v7924.push(\\"2019-11-07\\");
v7910.apiVersions = v7924;
v7910.serviceIdentifier = \\"augmentedairuntime\\";
v2.AugmentedAIRuntime = v7910;
var v7925;
var v7926 = v299;
var v7927 = v31;
v7925 = function () { if (v7926 !== v7927) {
    return v7926.apply(this, arguments);
} };
const v7928 = Object.create(v309);
v7928.constructor = v7925;
const v7929 = {};
const v7930 = [];
var v7931;
var v7932 = v31;
var v7933 = v7928;
v7931 = function EVENTS_BUBBLE(event) { var baseClass = v7932.getPrototypeOf(v7933); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7934 = {};
v7934.constructor = v7931;
v7931.prototype = v7934;
v7930.push(v7931);
v7929.apiCallAttempt = v7930;
const v7935 = [];
var v7936;
v7936 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7917.getPrototypeOf(v7933); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7937 = {};
v7937.constructor = v7936;
v7936.prototype = v7937;
v7935.push(v7936);
v7929.apiCall = v7935;
v7928._events = v7929;
v7928.MONITOR_EVENTS_BUBBLE = v7931;
v7928.CALL_EVENTS_BUBBLE = v7936;
v7925.prototype = v7928;
v7925.__super__ = v299;
const v7938 = {};
v7938[\\"2019-11-02\\"] = null;
v7925.services = v7938;
const v7939 = [];
v7939.push(\\"2019-11-02\\");
v7925.apiVersions = v7939;
v7925.serviceIdentifier = \\"ebs\\";
v2.EBS = v7925;
var v7940;
var v7941 = v299;
var v7942 = v31;
v7940 = function () { if (v7941 !== v7942) {
    return v7941.apply(this, arguments);
} };
const v7943 = Object.create(v309);
v7943.constructor = v7940;
const v7944 = {};
const v7945 = [];
var v7946;
var v7947 = v31;
var v7948 = v7943;
v7946 = function EVENTS_BUBBLE(event) { var baseClass = v7947.getPrototypeOf(v7948); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7949 = {};
v7949.constructor = v7946;
v7946.prototype = v7949;
v7945.push(v7946);
v7944.apiCallAttempt = v7945;
const v7950 = [];
var v7951;
v7951 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7932.getPrototypeOf(v7948); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7952 = {};
v7952.constructor = v7951;
v7951.prototype = v7952;
v7950.push(v7951);
v7944.apiCall = v7950;
v7943._events = v7944;
v7943.MONITOR_EVENTS_BUBBLE = v7946;
v7943.CALL_EVENTS_BUBBLE = v7951;
v7940.prototype = v7943;
v7940.__super__ = v299;
const v7953 = {};
v7953[\\"2019-12-04\\"] = null;
v7940.services = v7953;
const v7954 = [];
v7954.push(\\"2019-12-04\\");
v7940.apiVersions = v7954;
v7940.serviceIdentifier = \\"kinesisvideosignalingchannels\\";
v2.KinesisVideoSignalingChannels = v7940;
var v7955;
var v7956 = v299;
var v7957 = v31;
v7955 = function () { if (v7956 !== v7957) {
    return v7956.apply(this, arguments);
} };
const v7958 = Object.create(v309);
v7958.constructor = v7955;
const v7959 = {};
const v7960 = [];
var v7961;
var v7962 = v31;
var v7963 = v7958;
v7961 = function EVENTS_BUBBLE(event) { var baseClass = v7962.getPrototypeOf(v7963); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7964 = {};
v7964.constructor = v7961;
v7961.prototype = v7964;
v7960.push(v7961);
v7959.apiCallAttempt = v7960;
const v7965 = [];
var v7966;
v7966 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7947.getPrototypeOf(v7963); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7967 = {};
v7967.constructor = v7966;
v7966.prototype = v7967;
v7965.push(v7966);
v7959.apiCall = v7965;
v7958._events = v7959;
v7958.MONITOR_EVENTS_BUBBLE = v7961;
v7958.CALL_EVENTS_BUBBLE = v7966;
v7955.prototype = v7958;
v7955.__super__ = v299;
const v7968 = {};
v7968[\\"2018-10-26\\"] = null;
v7955.services = v7968;
const v7969 = [];
v7969.push(\\"2018-10-26\\");
v7955.apiVersions = v7969;
v7955.serviceIdentifier = \\"detective\\";
v2.Detective = v7955;
var v7970;
var v7971 = v299;
var v7972 = v31;
v7970 = function () { if (v7971 !== v7972) {
    return v7971.apply(this, arguments);
} };
const v7973 = Object.create(v309);
v7973.constructor = v7970;
const v7974 = {};
const v7975 = [];
var v7976;
var v7977 = v31;
var v7978 = v7973;
v7976 = function EVENTS_BUBBLE(event) { var baseClass = v7977.getPrototypeOf(v7978); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7979 = {};
v7979.constructor = v7976;
v7976.prototype = v7979;
v7975.push(v7976);
v7974.apiCallAttempt = v7975;
const v7980 = [];
var v7981;
v7981 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7962.getPrototypeOf(v7978); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7982 = {};
v7982.constructor = v7981;
v7981.prototype = v7982;
v7980.push(v7981);
v7974.apiCall = v7980;
v7973._events = v7974;
v7973.MONITOR_EVENTS_BUBBLE = v7976;
v7973.CALL_EVENTS_BUBBLE = v7981;
v7970.prototype = v7973;
v7970.__super__ = v299;
const v7983 = {};
v7983[\\"2019-12-01\\"] = null;
v7970.services = v7983;
const v7984 = [];
v7984.push(\\"2019-12-01\\");
v7970.apiVersions = v7984;
v7970.serviceIdentifier = \\"codestarconnections\\";
v2.CodeStarconnections = v7970;
var v7985;
var v7986 = v299;
var v7987 = v31;
v7985 = function () { if (v7986 !== v7987) {
    return v7986.apply(this, arguments);
} };
const v7988 = Object.create(v309);
v7988.constructor = v7985;
const v7989 = {};
const v7990 = [];
var v7991;
var v7992 = v31;
var v7993 = v7988;
v7991 = function EVENTS_BUBBLE(event) { var baseClass = v7992.getPrototypeOf(v7993); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v7994 = {};
v7994.constructor = v7991;
v7991.prototype = v7994;
v7990.push(v7991);
v7989.apiCallAttempt = v7990;
const v7995 = [];
var v7996;
v7996 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7977.getPrototypeOf(v7993); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v7997 = {};
v7997.constructor = v7996;
v7996.prototype = v7997;
v7995.push(v7996);
v7989.apiCall = v7995;
v7988._events = v7989;
v7988.MONITOR_EVENTS_BUBBLE = v7991;
v7988.CALL_EVENTS_BUBBLE = v7996;
v7985.prototype = v7988;
v7985.__super__ = v299;
const v7998 = {};
v7998[\\"2017-10-11\\"] = null;
v7985.services = v7998;
const v7999 = [];
v7999.push(\\"2017-10-11\\");
v7985.apiVersions = v7999;
v7985.serviceIdentifier = \\"synthetics\\";
v2.Synthetics = v7985;
var v8000;
var v8001 = v299;
var v8002 = v31;
v8000 = function () { if (v8001 !== v8002) {
    return v8001.apply(this, arguments);
} };
const v8003 = Object.create(v309);
v8003.constructor = v8000;
const v8004 = {};
const v8005 = [];
var v8006;
var v8007 = v31;
var v8008 = v8003;
v8006 = function EVENTS_BUBBLE(event) { var baseClass = v8007.getPrototypeOf(v8008); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8009 = {};
v8009.constructor = v8006;
v8006.prototype = v8009;
v8005.push(v8006);
v8004.apiCallAttempt = v8005;
const v8010 = [];
var v8011;
v8011 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v7992.getPrototypeOf(v8008); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8012 = {};
v8012.constructor = v8011;
v8011.prototype = v8012;
v8010.push(v8011);
v8004.apiCall = v8010;
v8003._events = v8004;
v8003.MONITOR_EVENTS_BUBBLE = v8006;
v8003.CALL_EVENTS_BUBBLE = v8011;
v8000.prototype = v8003;
v8000.__super__ = v299;
const v8013 = {};
v8013[\\"2019-12-02\\"] = null;
v8000.services = v8013;
const v8014 = [];
v8014.push(\\"2019-12-02\\");
v8000.apiVersions = v8014;
v8000.serviceIdentifier = \\"iotsitewise\\";
v2.IoTSiteWise = v8000;
var v8015;
var v8016 = v299;
var v8017 = v31;
v8015 = function () { if (v8016 !== v8017) {
    return v8016.apply(this, arguments);
} };
const v8018 = Object.create(v309);
v8018.constructor = v8015;
const v8019 = {};
const v8020 = [];
var v8021;
var v8022 = v31;
var v8023 = v8018;
v8021 = function EVENTS_BUBBLE(event) { var baseClass = v8022.getPrototypeOf(v8023); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8024 = {};
v8024.constructor = v8021;
v8021.prototype = v8024;
v8020.push(v8021);
v8019.apiCallAttempt = v8020;
const v8025 = [];
var v8026;
v8026 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8007.getPrototypeOf(v8023); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8027 = {};
v8027.constructor = v8026;
v8026.prototype = v8027;
v8025.push(v8026);
v8019.apiCall = v8025;
v8018._events = v8019;
v8018.MONITOR_EVENTS_BUBBLE = v8021;
v8018.CALL_EVENTS_BUBBLE = v8026;
v8015.prototype = v8018;
v8015.__super__ = v299;
const v8028 = {};
v8028[\\"2020-01-01\\"] = null;
v8015.services = v8028;
const v8029 = [];
v8029.push(\\"2020-01-01\\");
v8015.apiVersions = v8029;
v8015.serviceIdentifier = \\"macie2\\";
v2.Macie2 = v8015;
var v8030;
var v8031 = v299;
var v8032 = v31;
v8030 = function () { if (v8031 !== v8032) {
    return v8031.apply(this, arguments);
} };
const v8033 = Object.create(v309);
v8033.constructor = v8030;
const v8034 = {};
const v8035 = [];
var v8036;
var v8037 = v31;
var v8038 = v8033;
v8036 = function EVENTS_BUBBLE(event) { var baseClass = v8037.getPrototypeOf(v8038); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8039 = {};
v8039.constructor = v8036;
v8036.prototype = v8039;
v8035.push(v8036);
v8034.apiCallAttempt = v8035;
const v8040 = [];
var v8041;
v8041 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8022.getPrototypeOf(v8038); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8042 = {};
v8042.constructor = v8041;
v8041.prototype = v8042;
v8040.push(v8041);
v8034.apiCall = v8040;
v8033._events = v8034;
v8033.MONITOR_EVENTS_BUBBLE = v8036;
v8033.CALL_EVENTS_BUBBLE = v8041;
v8030.prototype = v8033;
v8030.__super__ = v299;
const v8043 = {};
v8043[\\"2018-09-22\\"] = null;
v8030.services = v8043;
const v8044 = [];
v8044.push(\\"2018-09-22\\");
v8030.apiVersions = v8044;
v8030.serviceIdentifier = \\"codeartifact\\";
v2.CodeArtifact = v8030;
var v8045;
var v8046 = v299;
var v8047 = v31;
v8045 = function () { if (v8046 !== v8047) {
    return v8046.apply(this, arguments);
} };
const v8048 = Object.create(v309);
v8048.constructor = v8045;
const v8049 = {};
const v8050 = [];
var v8051;
var v8052 = v31;
var v8053 = v8048;
v8051 = function EVENTS_BUBBLE(event) { var baseClass = v8052.getPrototypeOf(v8053); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8054 = {};
v8054.constructor = v8051;
v8051.prototype = v8054;
v8050.push(v8051);
v8049.apiCallAttempt = v8050;
const v8055 = [];
var v8056;
v8056 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8037.getPrototypeOf(v8053); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8057 = {};
v8057.constructor = v8056;
v8056.prototype = v8057;
v8055.push(v8056);
v8049.apiCall = v8055;
v8048._events = v8049;
v8048.MONITOR_EVENTS_BUBBLE = v8051;
v8048.CALL_EVENTS_BUBBLE = v8056;
v8045.prototype = v8048;
v8045.__super__ = v299;
const v8058 = {};
v8058[\\"2020-03-01\\"] = null;
v8045.services = v8058;
const v8059 = [];
v8059.push(\\"2020-03-01\\");
v8045.apiVersions = v8059;
v8045.serviceIdentifier = \\"honeycode\\";
v2.Honeycode = v8045;
var v8060;
var v8061 = v299;
var v8062 = v31;
v8060 = function () { if (v8061 !== v8062) {
    return v8061.apply(this, arguments);
} };
const v8063 = Object.create(v309);
v8063.constructor = v8060;
const v8064 = {};
const v8065 = [];
var v8066;
var v8067 = v31;
var v8068 = v8063;
v8066 = function EVENTS_BUBBLE(event) { var baseClass = v8067.getPrototypeOf(v8068); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8069 = {};
v8069.constructor = v8066;
v8066.prototype = v8069;
v8065.push(v8066);
v8064.apiCallAttempt = v8065;
const v8070 = [];
var v8071;
v8071 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8052.getPrototypeOf(v8068); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8072 = {};
v8072.constructor = v8071;
v8071.prototype = v8072;
v8070.push(v8071);
v8064.apiCall = v8070;
v8063._events = v8064;
v8063.MONITOR_EVENTS_BUBBLE = v8066;
v8063.CALL_EVENTS_BUBBLE = v8071;
v8060.prototype = v8063;
v8060.__super__ = v299;
const v8073 = {};
v8073[\\"2020-07-14\\"] = null;
v8060.services = v8073;
const v8074 = [];
v8074.push(\\"2020-07-14\\");
v8060.apiVersions = v8074;
v8060.serviceIdentifier = \\"ivs\\";
v2.IVS = v8060;
var v8075;
var v8076 = v299;
var v8077 = v31;
v8075 = function () { if (v8076 !== v8077) {
    return v8076.apply(this, arguments);
} };
const v8078 = Object.create(v309);
v8078.constructor = v8075;
const v8079 = {};
const v8080 = [];
var v8081;
var v8082 = v31;
var v8083 = v8078;
v8081 = function EVENTS_BUBBLE(event) { var baseClass = v8082.getPrototypeOf(v8083); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8084 = {};
v8084.constructor = v8081;
v8081.prototype = v8084;
v8080.push(v8081);
v8079.apiCallAttempt = v8080;
const v8085 = [];
var v8086;
v8086 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8067.getPrototypeOf(v8083); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8087 = {};
v8087.constructor = v8086;
v8086.prototype = v8087;
v8085.push(v8086);
v8079.apiCall = v8085;
v8078._events = v8079;
v8078.MONITOR_EVENTS_BUBBLE = v8081;
v8078.CALL_EVENTS_BUBBLE = v8086;
v8075.prototype = v8078;
v8075.__super__ = v299;
const v8088 = {};
v8088[\\"2019-09-01\\"] = null;
v8075.services = v8088;
const v8089 = [];
v8089.push(\\"2019-09-01\\");
v8075.apiVersions = v8089;
v8075.serviceIdentifier = \\"braket\\";
v2.Braket = v8075;
var v8090;
var v8091 = v299;
var v8092 = v31;
v8090 = function () { if (v8091 !== v8092) {
    return v8091.apply(this, arguments);
} };
const v8093 = Object.create(v309);
v8093.constructor = v8090;
const v8094 = {};
const v8095 = [];
var v8096;
var v8097 = v31;
var v8098 = v8093;
v8096 = function EVENTS_BUBBLE(event) { var baseClass = v8097.getPrototypeOf(v8098); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8099 = {};
v8099.constructor = v8096;
v8096.prototype = v8099;
v8095.push(v8096);
v8094.apiCallAttempt = v8095;
const v8100 = [];
var v8101;
v8101 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8082.getPrototypeOf(v8098); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8102 = {};
v8102.constructor = v8101;
v8101.prototype = v8102;
v8100.push(v8101);
v8094.apiCall = v8100;
v8093._events = v8094;
v8093.MONITOR_EVENTS_BUBBLE = v8096;
v8093.CALL_EVENTS_BUBBLE = v8101;
v8090.prototype = v8093;
v8090.__super__ = v299;
const v8103 = {};
v8103[\\"2020-06-15\\"] = null;
v8090.services = v8103;
const v8104 = [];
v8104.push(\\"2020-06-15\\");
v8090.apiVersions = v8104;
v8090.serviceIdentifier = \\"identitystore\\";
v2.IdentityStore = v8090;
var v8105;
var v8106 = v299;
var v8107 = v31;
v8105 = function () { if (v8106 !== v8107) {
    return v8106.apply(this, arguments);
} };
const v8108 = Object.create(v309);
v8108.constructor = v8105;
const v8109 = {};
const v8110 = [];
var v8111;
var v8112 = v31;
var v8113 = v8108;
v8111 = function EVENTS_BUBBLE(event) { var baseClass = v8112.getPrototypeOf(v8113); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8114 = {};
v8114.constructor = v8111;
v8111.prototype = v8114;
v8110.push(v8111);
v8109.apiCallAttempt = v8110;
const v8115 = [];
var v8116;
v8116 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8097.getPrototypeOf(v8113); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8117 = {};
v8117.constructor = v8116;
v8116.prototype = v8117;
v8115.push(v8116);
v8109.apiCall = v8115;
v8108._events = v8109;
v8108.MONITOR_EVENTS_BUBBLE = v8111;
v8108.CALL_EVENTS_BUBBLE = v8116;
v8105.prototype = v8108;
v8105.__super__ = v299;
const v8118 = {};
v8118[\\"2020-08-23\\"] = null;
v8105.services = v8118;
const v8119 = [];
v8119.push(\\"2020-08-23\\");
v8105.apiVersions = v8119;
v8105.serviceIdentifier = \\"appflow\\";
v2.Appflow = v8105;
var v8120;
var v8121 = v299;
var v8122 = v31;
v8120 = function () { if (v8121 !== v8122) {
    return v8121.apply(this, arguments);
} };
const v8123 = Object.create(v309);
v8123.constructor = v8120;
const v8124 = {};
const v8125 = [];
var v8126;
var v8127 = v31;
var v8128 = v8123;
v8126 = function EVENTS_BUBBLE(event) { var baseClass = v8127.getPrototypeOf(v8128); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8129 = {};
v8129.constructor = v8126;
v8126.prototype = v8129;
v8125.push(v8126);
v8124.apiCallAttempt = v8125;
const v8130 = [];
var v8131;
v8131 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8112.getPrototypeOf(v8128); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8132 = {};
v8132.constructor = v8131;
v8131.prototype = v8132;
v8130.push(v8131);
v8124.apiCall = v8130;
v8123._events = v8124;
v8123.MONITOR_EVENTS_BUBBLE = v8126;
v8123.CALL_EVENTS_BUBBLE = v8131;
v8120.prototype = v8123;
v8120.__super__ = v299;
const v8133 = {};
v8133[\\"2019-12-20\\"] = null;
v8120.services = v8133;
const v8134 = [];
v8134.push(\\"2019-12-20\\");
v8120.apiVersions = v8134;
v8120.serviceIdentifier = \\"redshiftdata\\";
v2.RedshiftData = v8120;
var v8135;
var v8136 = v299;
var v8137 = v31;
v8135 = function () { if (v8136 !== v8137) {
    return v8136.apply(this, arguments);
} };
const v8138 = Object.create(v309);
v8138.constructor = v8135;
const v8139 = {};
const v8140 = [];
var v8141;
var v8142 = v31;
var v8143 = v8138;
v8141 = function EVENTS_BUBBLE(event) { var baseClass = v8142.getPrototypeOf(v8143); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8144 = {};
v8144.constructor = v8141;
v8141.prototype = v8144;
v8140.push(v8141);
v8139.apiCallAttempt = v8140;
const v8145 = [];
var v8146;
v8146 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8127.getPrototypeOf(v8143); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8147 = {};
v8147.constructor = v8146;
v8146.prototype = v8147;
v8145.push(v8146);
v8139.apiCall = v8145;
v8138._events = v8139;
v8138.MONITOR_EVENTS_BUBBLE = v8141;
v8138.CALL_EVENTS_BUBBLE = v8146;
v8135.prototype = v8138;
v8135.__super__ = v299;
const v8148 = {};
v8148[\\"2020-07-20\\"] = null;
v8135.services = v8148;
const v8149 = [];
v8149.push(\\"2020-07-20\\");
v8135.apiVersions = v8149;
v8135.serviceIdentifier = \\"ssoadmin\\";
v2.SSOAdmin = v8135;
var v8150;
var v8151 = v299;
var v8152 = v31;
v8150 = function () { if (v8151 !== v8152) {
    return v8151.apply(this, arguments);
} };
const v8153 = Object.create(v309);
v8153.constructor = v8150;
const v8154 = {};
const v8155 = [];
var v8156;
var v8157 = v31;
var v8158 = v8153;
v8156 = function EVENTS_BUBBLE(event) { var baseClass = v8157.getPrototypeOf(v8158); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8159 = {};
v8159.constructor = v8156;
v8156.prototype = v8159;
v8155.push(v8156);
v8154.apiCallAttempt = v8155;
const v8160 = [];
var v8161;
v8161 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8142.getPrototypeOf(v8158); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8162 = {};
v8162.constructor = v8161;
v8161.prototype = v8162;
v8160.push(v8161);
v8154.apiCall = v8160;
v8153._events = v8154;
v8153.MONITOR_EVENTS_BUBBLE = v8156;
v8153.CALL_EVENTS_BUBBLE = v8161;
v8150.prototype = v8153;
v8150.__super__ = v299;
const v8163 = {};
v8163[\\"2018-11-01\\"] = null;
v8150.services = v8163;
const v8164 = [];
v8164.push(\\"2018-11-01\\");
v8150.apiVersions = v8164;
v8150.serviceIdentifier = \\"timestreamquery\\";
v2.TimestreamQuery = v8150;
var v8165;
var v8166 = v299;
var v8167 = v31;
v8165 = function () { if (v8166 !== v8167) {
    return v8166.apply(this, arguments);
} };
const v8168 = Object.create(v309);
v8168.constructor = v8165;
const v8169 = {};
const v8170 = [];
var v8171;
var v8172 = v31;
var v8173 = v8168;
v8171 = function EVENTS_BUBBLE(event) { var baseClass = v8172.getPrototypeOf(v8173); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8174 = {};
v8174.constructor = v8171;
v8171.prototype = v8174;
v8170.push(v8171);
v8169.apiCallAttempt = v8170;
const v8175 = [];
var v8176;
v8176 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8157.getPrototypeOf(v8173); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8177 = {};
v8177.constructor = v8176;
v8176.prototype = v8177;
v8175.push(v8176);
v8169.apiCall = v8175;
v8168._events = v8169;
v8168.MONITOR_EVENTS_BUBBLE = v8171;
v8168.CALL_EVENTS_BUBBLE = v8176;
v8165.prototype = v8168;
v8165.__super__ = v299;
const v8178 = {};
v8178[\\"2018-11-01\\"] = null;
v8165.services = v8178;
const v8179 = [];
v8179.push(\\"2018-11-01\\");
v8165.apiVersions = v8179;
v8165.serviceIdentifier = \\"timestreamwrite\\";
v2.TimestreamWrite = v8165;
var v8180;
var v8181 = v299;
var v8182 = v31;
v8180 = function () { if (v8181 !== v8182) {
    return v8181.apply(this, arguments);
} };
const v8183 = Object.create(v309);
v8183.constructor = v8180;
const v8184 = {};
const v8185 = [];
var v8186;
var v8187 = v31;
var v8188 = v8183;
v8186 = function EVENTS_BUBBLE(event) { var baseClass = v8187.getPrototypeOf(v8188); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8189 = {};
v8189.constructor = v8186;
v8186.prototype = v8189;
v8185.push(v8186);
v8184.apiCallAttempt = v8185;
const v8190 = [];
var v8191;
v8191 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8172.getPrototypeOf(v8188); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8192 = {};
v8192.constructor = v8191;
v8191.prototype = v8192;
v8190.push(v8191);
v8184.apiCall = v8190;
v8183._events = v8184;
v8183.MONITOR_EVENTS_BUBBLE = v8186;
v8183.CALL_EVENTS_BUBBLE = v8191;
v8180.prototype = v8183;
v8180.__super__ = v299;
const v8193 = {};
v8193[\\"2017-07-25\\"] = null;
v8180.services = v8193;
const v8194 = [];
v8194.push(\\"2017-07-25\\");
v8180.apiVersions = v8194;
v8180.serviceIdentifier = \\"s3outposts\\";
v2.S3Outposts = v8180;
var v8195;
var v8196 = v299;
var v8197 = v31;
v8195 = function () { if (v8196 !== v8197) {
    return v8196.apply(this, arguments);
} };
const v8198 = Object.create(v309);
v8198.constructor = v8195;
const v8199 = {};
const v8200 = [];
var v8201;
var v8202 = v31;
var v8203 = v8198;
v8201 = function EVENTS_BUBBLE(event) { var baseClass = v8202.getPrototypeOf(v8203); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8204 = {};
v8204.constructor = v8201;
v8201.prototype = v8204;
v8200.push(v8201);
v8199.apiCallAttempt = v8200;
const v8205 = [];
var v8206;
v8206 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8187.getPrototypeOf(v8203); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8207 = {};
v8207.constructor = v8206;
v8206.prototype = v8207;
v8205.push(v8206);
v8199.apiCall = v8205;
v8198._events = v8199;
v8198.MONITOR_EVENTS_BUBBLE = v8201;
v8198.CALL_EVENTS_BUBBLE = v8206;
v8195.prototype = v8198;
v8195.__super__ = v299;
const v8208 = {};
v8208[\\"2017-07-25\\"] = null;
v8195.services = v8208;
const v8209 = [];
v8209.push(\\"2017-07-25\\");
v8195.apiVersions = v8209;
v8195.serviceIdentifier = \\"databrew\\";
v2.DataBrew = v8195;
var v8210;
var v8211 = v299;
var v8212 = v31;
v8210 = function () { if (v8211 !== v8212) {
    return v8211.apply(this, arguments);
} };
const v8213 = Object.create(v309);
v8213.constructor = v8210;
const v8214 = {};
const v8215 = [];
var v8216;
var v8217 = v31;
var v8218 = v8213;
v8216 = function EVENTS_BUBBLE(event) { var baseClass = v8217.getPrototypeOf(v8218); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8219 = {};
v8219.constructor = v8216;
v8216.prototype = v8219;
v8215.push(v8216);
v8214.apiCallAttempt = v8215;
const v8220 = [];
var v8221;
v8221 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8202.getPrototypeOf(v8218); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8222 = {};
v8222.constructor = v8221;
v8221.prototype = v8222;
v8220.push(v8221);
v8214.apiCall = v8220;
v8213._events = v8214;
v8213.MONITOR_EVENTS_BUBBLE = v8216;
v8213.CALL_EVENTS_BUBBLE = v8221;
v8210.prototype = v8213;
v8210.__super__ = v299;
const v8223 = {};
v8223[\\"2020-06-24\\"] = null;
v8210.services = v8223;
const v8224 = [];
v8224.push(\\"2020-06-24\\");
v8210.apiVersions = v8224;
v8210.serviceIdentifier = \\"servicecatalogappregistry\\";
v2.ServiceCatalogAppRegistry = v8210;
var v8225;
var v8226 = v299;
var v8227 = v31;
v8225 = function () { if (v8226 !== v8227) {
    return v8226.apply(this, arguments);
} };
const v8228 = Object.create(v309);
v8228.constructor = v8225;
const v8229 = {};
const v8230 = [];
var v8231;
var v8232 = v31;
var v8233 = v8228;
v8231 = function EVENTS_BUBBLE(event) { var baseClass = v8232.getPrototypeOf(v8233); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8234 = {};
v8234.constructor = v8231;
v8231.prototype = v8234;
v8230.push(v8231);
v8229.apiCallAttempt = v8230;
const v8235 = [];
var v8236;
v8236 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8217.getPrototypeOf(v8233); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8237 = {};
v8237.constructor = v8236;
v8236.prototype = v8237;
v8235.push(v8236);
v8229.apiCall = v8235;
v8228._events = v8229;
v8228.MONITOR_EVENTS_BUBBLE = v8231;
v8228.CALL_EVENTS_BUBBLE = v8236;
v8225.prototype = v8228;
v8225.__super__ = v299;
const v8238 = {};
v8238[\\"2020-11-12\\"] = null;
v8225.services = v8238;
const v8239 = [];
v8239.push(\\"2020-11-12\\");
v8225.apiVersions = v8239;
v8225.serviceIdentifier = \\"networkfirewall\\";
v2.NetworkFirewall = v8225;
var v8240;
var v8241 = v299;
var v8242 = v31;
v8240 = function () { if (v8241 !== v8242) {
    return v8241.apply(this, arguments);
} };
const v8243 = Object.create(v309);
v8243.constructor = v8240;
const v8244 = {};
const v8245 = [];
var v8246;
var v8247 = v31;
var v8248 = v8243;
v8246 = function EVENTS_BUBBLE(event) { var baseClass = v8247.getPrototypeOf(v8248); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8249 = {};
v8249.constructor = v8246;
v8246.prototype = v8249;
v8245.push(v8246);
v8244.apiCallAttempt = v8245;
const v8250 = [];
var v8251;
v8251 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8232.getPrototypeOf(v8248); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8252 = {};
v8252.constructor = v8251;
v8251.prototype = v8252;
v8250.push(v8251);
v8244.apiCall = v8250;
v8243._events = v8244;
v8243.MONITOR_EVENTS_BUBBLE = v8246;
v8243.CALL_EVENTS_BUBBLE = v8251;
v8240.prototype = v8243;
v8240.__super__ = v299;
const v8253 = {};
v8253[\\"2020-07-01\\"] = null;
v8240.services = v8253;
const v8254 = [];
v8254.push(\\"2020-07-01\\");
v8240.apiVersions = v8254;
v8240.serviceIdentifier = \\"mwaa\\";
v2.MWAA = v8240;
var v8255;
var v8256 = v299;
var v8257 = v31;
v8255 = function () { if (v8256 !== v8257) {
    return v8256.apply(this, arguments);
} };
const v8258 = Object.create(v309);
v8258.constructor = v8255;
const v8259 = {};
const v8260 = [];
var v8261;
var v8262 = v31;
var v8263 = v8258;
v8261 = function EVENTS_BUBBLE(event) { var baseClass = v8262.getPrototypeOf(v8263); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8264 = {};
v8264.constructor = v8261;
v8261.prototype = v8264;
v8260.push(v8261);
v8259.apiCallAttempt = v8260;
const v8265 = [];
var v8266;
v8266 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8247.getPrototypeOf(v8263); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8267 = {};
v8267.constructor = v8266;
v8266.prototype = v8267;
v8265.push(v8266);
v8259.apiCall = v8265;
v8258._events = v8259;
v8258.MONITOR_EVENTS_BUBBLE = v8261;
v8258.CALL_EVENTS_BUBBLE = v8266;
v8255.prototype = v8258;
v8255.__super__ = v299;
const v8268 = {};
v8268[\\"2020-08-11\\"] = null;
v8255.services = v8268;
const v8269 = [];
v8269.push(\\"2020-08-11\\");
v8255.apiVersions = v8269;
v8255.serviceIdentifier = \\"amplifybackend\\";
v2.AmplifyBackend = v8255;
var v8270;
var v8271 = v299;
var v8272 = v31;
v8270 = function () { if (v8271 !== v8272) {
    return v8271.apply(this, arguments);
} };
const v8273 = Object.create(v309);
v8273.constructor = v8270;
const v8274 = {};
const v8275 = [];
var v8276;
var v8277 = v31;
var v8278 = v8273;
v8276 = function EVENTS_BUBBLE(event) { var baseClass = v8277.getPrototypeOf(v8278); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8279 = {};
v8279.constructor = v8276;
v8276.prototype = v8279;
v8275.push(v8276);
v8274.apiCallAttempt = v8275;
const v8280 = [];
var v8281;
v8281 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8262.getPrototypeOf(v8278); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8282 = {};
v8282.constructor = v8281;
v8281.prototype = v8282;
v8280.push(v8281);
v8274.apiCall = v8280;
v8273._events = v8274;
v8273.MONITOR_EVENTS_BUBBLE = v8276;
v8273.CALL_EVENTS_BUBBLE = v8281;
v8270.prototype = v8273;
v8270.__super__ = v299;
const v8283 = {};
v8283[\\"2020-07-29\\"] = null;
v8270.services = v8283;
const v8284 = [];
v8284.push(\\"2020-07-29\\");
v8270.apiVersions = v8284;
v8270.serviceIdentifier = \\"appintegrations\\";
v2.AppIntegrations = v8270;
var v8285;
var v8286 = v299;
var v8287 = v31;
v8285 = function () { if (v8286 !== v8287) {
    return v8286.apply(this, arguments);
} };
const v8288 = Object.create(v309);
v8288.constructor = v8285;
const v8289 = {};
const v8290 = [];
var v8291;
var v8292 = v31;
var v8293 = v8288;
v8291 = function EVENTS_BUBBLE(event) { var baseClass = v8292.getPrototypeOf(v8293); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8294 = {};
v8294.constructor = v8291;
v8291.prototype = v8294;
v8290.push(v8291);
v8289.apiCallAttempt = v8290;
const v8295 = [];
var v8296;
v8296 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8277.getPrototypeOf(v8293); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8297 = {};
v8297.constructor = v8296;
v8296.prototype = v8297;
v8295.push(v8296);
v8289.apiCall = v8295;
v8288._events = v8289;
v8288.MONITOR_EVENTS_BUBBLE = v8291;
v8288.CALL_EVENTS_BUBBLE = v8296;
v8285.prototype = v8288;
v8285.__super__ = v299;
const v8298 = {};
v8298[\\"2020-08-21\\"] = null;
v8285.services = v8298;
const v8299 = [];
v8299.push(\\"2020-08-21\\");
v8285.apiVersions = v8299;
v8285.serviceIdentifier = \\"connectcontactlens\\";
v2.ConnectContactLens = v8285;
var v8300;
var v8301 = v299;
var v8302 = v31;
v8300 = function () { if (v8301 !== v8302) {
    return v8301.apply(this, arguments);
} };
const v8303 = Object.create(v309);
v8303.constructor = v8300;
const v8304 = {};
const v8305 = [];
var v8306;
var v8307 = v31;
var v8308 = v8303;
v8306 = function EVENTS_BUBBLE(event) { var baseClass = v8307.getPrototypeOf(v8308); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8309 = {};
v8309.constructor = v8306;
v8306.prototype = v8309;
v8305.push(v8306);
v8304.apiCallAttempt = v8305;
const v8310 = [];
var v8311;
v8311 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8292.getPrototypeOf(v8308); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8312 = {};
v8312.constructor = v8311;
v8311.prototype = v8312;
v8310.push(v8311);
v8304.apiCall = v8310;
v8303._events = v8304;
v8303.MONITOR_EVENTS_BUBBLE = v8306;
v8303.CALL_EVENTS_BUBBLE = v8311;
v8300.prototype = v8303;
v8300.__super__ = v299;
const v8313 = {};
v8313[\\"2020-12-01\\"] = null;
v8300.services = v8313;
const v8314 = [];
v8314.push(\\"2020-12-01\\");
v8300.apiVersions = v8314;
v8300.serviceIdentifier = \\"devopsguru\\";
v2.DevOpsGuru = v8300;
var v8315;
var v8316 = v299;
var v8317 = v31;
v8315 = function () { if (v8316 !== v8317) {
    return v8316.apply(this, arguments);
} };
const v8318 = Object.create(v309);
v8318.constructor = v8315;
const v8319 = {};
const v8320 = [];
var v8321;
var v8322 = v31;
var v8323 = v8318;
v8321 = function EVENTS_BUBBLE(event) { var baseClass = v8322.getPrototypeOf(v8323); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8324 = {};
v8324.constructor = v8321;
v8321.prototype = v8324;
v8320.push(v8321);
v8319.apiCallAttempt = v8320;
const v8325 = [];
var v8326;
v8326 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8307.getPrototypeOf(v8323); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8327 = {};
v8327.constructor = v8326;
v8326.prototype = v8327;
v8325.push(v8326);
v8319.apiCall = v8325;
v8318._events = v8319;
v8318.MONITOR_EVENTS_BUBBLE = v8321;
v8318.CALL_EVENTS_BUBBLE = v8326;
v8315.prototype = v8318;
v8315.__super__ = v299;
const v8328 = {};
v8328[\\"2020-10-30\\"] = null;
v8315.services = v8328;
const v8329 = [];
v8329.push(\\"2020-10-30\\");
v8315.apiVersions = v8329;
v8315.serviceIdentifier = \\"ecrpublic\\";
v2.ECRPUBLIC = v8315;
var v8330;
var v8331 = v299;
var v8332 = v31;
v8330 = function () { if (v8331 !== v8332) {
    return v8331.apply(this, arguments);
} };
const v8333 = Object.create(v309);
v8333.constructor = v8330;
const v8334 = {};
const v8335 = [];
var v8336;
var v8337 = v31;
var v8338 = v8333;
v8336 = function EVENTS_BUBBLE(event) { var baseClass = v8337.getPrototypeOf(v8338); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8339 = {};
v8339.constructor = v8336;
v8336.prototype = v8339;
v8335.push(v8336);
v8334.apiCallAttempt = v8335;
const v8340 = [];
var v8341;
v8341 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8322.getPrototypeOf(v8338); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8342 = {};
v8342.constructor = v8341;
v8341.prototype = v8342;
v8340.push(v8341);
v8334.apiCall = v8340;
v8333._events = v8334;
v8333.MONITOR_EVENTS_BUBBLE = v8336;
v8333.CALL_EVENTS_BUBBLE = v8341;
v8330.prototype = v8333;
v8330.__super__ = v299;
const v8343 = {};
v8343[\\"2020-11-20\\"] = null;
v8330.services = v8343;
const v8344 = [];
v8344.push(\\"2020-11-20\\");
v8330.apiVersions = v8344;
v8330.serviceIdentifier = \\"lookoutvision\\";
v2.LookoutVision = v8330;
var v8345;
var v8346 = v299;
var v8347 = v31;
v8345 = function () { if (v8346 !== v8347) {
    return v8346.apply(this, arguments);
} };
const v8348 = Object.create(v309);
v8348.constructor = v8345;
const v8349 = {};
const v8350 = [];
var v8351;
var v8352 = v31;
var v8353 = v8348;
v8351 = function EVENTS_BUBBLE(event) { var baseClass = v8352.getPrototypeOf(v8353); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8354 = {};
v8354.constructor = v8351;
v8351.prototype = v8354;
v8350.push(v8351);
v8349.apiCallAttempt = v8350;
const v8355 = [];
var v8356;
v8356 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8337.getPrototypeOf(v8353); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8357 = {};
v8357.constructor = v8356;
v8356.prototype = v8357;
v8355.push(v8356);
v8349.apiCall = v8355;
v8348._events = v8349;
v8348.MONITOR_EVENTS_BUBBLE = v8351;
v8348.CALL_EVENTS_BUBBLE = v8356;
v8345.prototype = v8348;
v8345.__super__ = v299;
const v8358 = {};
v8358[\\"2020-07-01\\"] = null;
v8345.services = v8358;
const v8359 = [];
v8359.push(\\"2020-07-01\\");
v8345.apiVersions = v8359;
v8345.serviceIdentifier = \\"sagemakerfeaturestoreruntime\\";
v2.SageMakerFeatureStoreRuntime = v8345;
var v8360;
var v8361 = v299;
var v8362 = v31;
v8360 = function () { if (v8361 !== v8362) {
    return v8361.apply(this, arguments);
} };
const v8363 = Object.create(v309);
v8363.constructor = v8360;
const v8364 = {};
const v8365 = [];
var v8366;
var v8367 = v31;
var v8368 = v8363;
v8366 = function EVENTS_BUBBLE(event) { var baseClass = v8367.getPrototypeOf(v8368); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8369 = {};
v8369.constructor = v8366;
v8366.prototype = v8369;
v8365.push(v8366);
v8364.apiCallAttempt = v8365;
const v8370 = [];
var v8371;
v8371 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8352.getPrototypeOf(v8368); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8372 = {};
v8372.constructor = v8371;
v8371.prototype = v8372;
v8370.push(v8371);
v8364.apiCall = v8370;
v8363._events = v8364;
v8363.MONITOR_EVENTS_BUBBLE = v8366;
v8363.CALL_EVENTS_BUBBLE = v8371;
v8360.prototype = v8363;
v8360.__super__ = v299;
const v8373 = {};
v8373[\\"2020-08-15\\"] = null;
v8360.services = v8373;
const v8374 = [];
v8374.push(\\"2020-08-15\\");
v8360.apiVersions = v8374;
v8360.serviceIdentifier = \\"customerprofiles\\";
v2.CustomerProfiles = v8360;
var v8375;
var v8376 = v299;
var v8377 = v31;
v8375 = function () { if (v8376 !== v8377) {
    return v8376.apply(this, arguments);
} };
const v8378 = Object.create(v309);
v8378.constructor = v8375;
const v8379 = {};
const v8380 = [];
var v8381;
var v8382 = v31;
var v8383 = v8378;
v8381 = function EVENTS_BUBBLE(event) { var baseClass = v8382.getPrototypeOf(v8383); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8384 = {};
v8384.constructor = v8381;
v8381.prototype = v8384;
v8380.push(v8381);
v8379.apiCallAttempt = v8380;
const v8385 = [];
var v8386;
v8386 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8367.getPrototypeOf(v8383); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8387 = {};
v8387.constructor = v8386;
v8386.prototype = v8387;
v8385.push(v8386);
v8379.apiCall = v8385;
v8378._events = v8379;
v8378.MONITOR_EVENTS_BUBBLE = v8381;
v8378.CALL_EVENTS_BUBBLE = v8386;
v8375.prototype = v8378;
v8375.__super__ = v299;
const v8388 = {};
v8388[\\"2017-07-25\\"] = null;
v8375.services = v8388;
const v8389 = [];
v8389.push(\\"2017-07-25\\");
v8375.apiVersions = v8389;
v8375.serviceIdentifier = \\"auditmanager\\";
v2.AuditManager = v8375;
var v8390;
var v8391 = v299;
var v8392 = v31;
v8390 = function () { if (v8391 !== v8392) {
    return v8391.apply(this, arguments);
} };
const v8393 = Object.create(v309);
v8393.constructor = v8390;
const v8394 = {};
const v8395 = [];
var v8396;
var v8397 = v31;
var v8398 = v8393;
v8396 = function EVENTS_BUBBLE(event) { var baseClass = v8397.getPrototypeOf(v8398); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8399 = {};
v8399.constructor = v8396;
v8396.prototype = v8399;
v8395.push(v8396);
v8394.apiCallAttempt = v8395;
const v8400 = [];
var v8401;
v8401 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8382.getPrototypeOf(v8398); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8402 = {};
v8402.constructor = v8401;
v8401.prototype = v8402;
v8400.push(v8401);
v8394.apiCall = v8400;
v8393._events = v8394;
v8393.MONITOR_EVENTS_BUBBLE = v8396;
v8393.CALL_EVENTS_BUBBLE = v8401;
v8390.prototype = v8393;
v8390.__super__ = v299;
const v8403 = {};
v8403[\\"2020-10-01\\"] = null;
v8390.services = v8403;
const v8404 = [];
v8404.push(\\"2020-10-01\\");
v8390.apiVersions = v8404;
v8390.serviceIdentifier = \\"emrcontainers\\";
v2.EMRcontainers = v8390;
var v8405;
var v8406 = v299;
var v8407 = v31;
v8405 = function () { if (v8406 !== v8407) {
    return v8406.apply(this, arguments);
} };
const v8408 = Object.create(v309);
v8408.constructor = v8405;
const v8409 = {};
const v8410 = [];
var v8411;
var v8412 = v31;
var v8413 = v8408;
v8411 = function EVENTS_BUBBLE(event) { var baseClass = v8412.getPrototypeOf(v8413); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8414 = {};
v8414.constructor = v8411;
v8411.prototype = v8414;
v8410.push(v8411);
v8409.apiCallAttempt = v8410;
const v8415 = [];
var v8416;
v8416 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8397.getPrototypeOf(v8413); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8417 = {};
v8417.constructor = v8416;
v8416.prototype = v8417;
v8415.push(v8416);
v8409.apiCall = v8415;
v8408._events = v8409;
v8408.MONITOR_EVENTS_BUBBLE = v8411;
v8408.CALL_EVENTS_BUBBLE = v8416;
v8405.prototype = v8408;
v8405.__super__ = v299;
const v8418 = {};
v8418[\\"2017-07-01\\"] = null;
v8405.services = v8418;
const v8419 = [];
v8419.push(\\"2017-07-01\\");
v8405.apiVersions = v8419;
v8405.serviceIdentifier = \\"healthlake\\";
v2.HealthLake = v8405;
var v8420;
var v8421 = v299;
var v8422 = v31;
v8420 = function () { if (v8421 !== v8422) {
    return v8421.apply(this, arguments);
} };
const v8423 = Object.create(v309);
v8423.constructor = v8420;
const v8424 = {};
const v8425 = [];
var v8426;
var v8427 = v31;
var v8428 = v8423;
v8426 = function EVENTS_BUBBLE(event) { var baseClass = v8427.getPrototypeOf(v8428); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8429 = {};
v8429.constructor = v8426;
v8426.prototype = v8429;
v8425.push(v8426);
v8424.apiCallAttempt = v8425;
const v8430 = [];
var v8431;
v8431 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8412.getPrototypeOf(v8428); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8432 = {};
v8432.constructor = v8431;
v8431.prototype = v8432;
v8430.push(v8431);
v8424.apiCall = v8430;
v8423._events = v8424;
v8423.MONITOR_EVENTS_BUBBLE = v8426;
v8423.CALL_EVENTS_BUBBLE = v8431;
v8420.prototype = v8423;
v8420.__super__ = v299;
const v8433 = {};
v8433[\\"2020-09-23\\"] = null;
v8420.services = v8433;
const v8434 = [];
v8434.push(\\"2020-09-23\\");
v8420.apiVersions = v8434;
v8420.serviceIdentifier = \\"sagemakeredge\\";
v2.SagemakerEdge = v8420;
var v8435;
var v8436 = v299;
var v8437 = v31;
v8435 = function () { if (v8436 !== v8437) {
    return v8436.apply(this, arguments);
} };
const v8438 = Object.create(v309);
v8438.constructor = v8435;
const v8439 = {};
const v8440 = [];
var v8441;
var v8442 = v31;
var v8443 = v8438;
v8441 = function EVENTS_BUBBLE(event) { var baseClass = v8442.getPrototypeOf(v8443); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8444 = {};
v8444.constructor = v8441;
v8441.prototype = v8444;
v8440.push(v8441);
v8439.apiCallAttempt = v8440;
const v8445 = [];
var v8446;
v8446 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8427.getPrototypeOf(v8443); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8447 = {};
v8447.constructor = v8446;
v8446.prototype = v8447;
v8445.push(v8446);
v8439.apiCall = v8445;
v8438._events = v8439;
v8438.MONITOR_EVENTS_BUBBLE = v8441;
v8438.CALL_EVENTS_BUBBLE = v8446;
v8435.prototype = v8438;
v8435.__super__ = v299;
const v8448 = {};
v8448[\\"2020-08-01\\"] = null;
v8435.services = v8448;
const v8449 = [];
v8449.push(\\"2020-08-01\\");
v8435.apiVersions = v8449;
v8435.serviceIdentifier = \\"amp\\";
v2.Amp = v8435;
var v8450;
var v8451 = v299;
var v8452 = v31;
v8450 = function () { if (v8451 !== v8452) {
    return v8451.apply(this, arguments);
} };
const v8453 = Object.create(v309);
v8453.constructor = v8450;
const v8454 = {};
const v8455 = [];
var v8456;
var v8457 = v31;
var v8458 = v8453;
v8456 = function EVENTS_BUBBLE(event) { var baseClass = v8457.getPrototypeOf(v8458); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8459 = {};
v8459.constructor = v8456;
v8456.prototype = v8459;
v8455.push(v8456);
v8454.apiCallAttempt = v8455;
const v8460 = [];
var v8461;
v8461 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8442.getPrototypeOf(v8458); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8462 = {};
v8462.constructor = v8461;
v8461.prototype = v8462;
v8460.push(v8461);
v8454.apiCall = v8460;
v8453._events = v8454;
v8453.MONITOR_EVENTS_BUBBLE = v8456;
v8453.CALL_EVENTS_BUBBLE = v8461;
v8450.prototype = v8453;
v8450.__super__ = v299;
const v8463 = {};
v8463[\\"2020-11-30\\"] = null;
v8450.services = v8463;
const v8464 = [];
v8464.push(\\"2020-11-30\\");
v8450.apiVersions = v8464;
v8450.serviceIdentifier = \\"greengrassv2\\";
v2.GreengrassV2 = v8450;
var v8465;
var v8466 = v299;
var v8467 = v31;
v8465 = function () { if (v8466 !== v8467) {
    return v8466.apply(this, arguments);
} };
const v8468 = Object.create(v309);
v8468.constructor = v8465;
const v8469 = {};
const v8470 = [];
var v8471;
var v8472 = v31;
var v8473 = v8468;
v8471 = function EVENTS_BUBBLE(event) { var baseClass = v8472.getPrototypeOf(v8473); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8474 = {};
v8474.constructor = v8471;
v8471.prototype = v8474;
v8470.push(v8471);
v8469.apiCallAttempt = v8470;
const v8475 = [];
var v8476;
v8476 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8457.getPrototypeOf(v8473); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8477 = {};
v8477.constructor = v8476;
v8476.prototype = v8477;
v8475.push(v8476);
v8469.apiCall = v8475;
v8468._events = v8469;
v8468.MONITOR_EVENTS_BUBBLE = v8471;
v8468.CALL_EVENTS_BUBBLE = v8476;
v8465.prototype = v8468;
v8465.__super__ = v299;
const v8478 = {};
v8478[\\"2020-09-18\\"] = null;
v8465.services = v8478;
const v8479 = [];
v8479.push(\\"2020-09-18\\");
v8465.apiVersions = v8479;
v8465.serviceIdentifier = \\"iotdeviceadvisor\\";
v2.IotDeviceAdvisor = v8465;
var v8480;
var v8481 = v299;
var v8482 = v31;
v8480 = function () { if (v8481 !== v8482) {
    return v8481.apply(this, arguments);
} };
const v8483 = Object.create(v309);
v8483.constructor = v8480;
const v8484 = {};
const v8485 = [];
var v8486;
var v8487 = v31;
var v8488 = v8483;
v8486 = function EVENTS_BUBBLE(event) { var baseClass = v8487.getPrototypeOf(v8488); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8489 = {};
v8489.constructor = v8486;
v8486.prototype = v8489;
v8485.push(v8486);
v8484.apiCallAttempt = v8485;
const v8490 = [];
var v8491;
v8491 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8472.getPrototypeOf(v8488); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8492 = {};
v8492.constructor = v8491;
v8491.prototype = v8492;
v8490.push(v8491);
v8484.apiCall = v8490;
v8483._events = v8484;
v8483.MONITOR_EVENTS_BUBBLE = v8486;
v8483.CALL_EVENTS_BUBBLE = v8491;
v8480.prototype = v8483;
v8480.__super__ = v299;
const v8493 = {};
v8493[\\"2020-11-03\\"] = null;
v8480.services = v8493;
const v8494 = [];
v8494.push(\\"2020-11-03\\");
v8480.apiVersions = v8494;
v8480.serviceIdentifier = \\"iotfleethub\\";
v2.IoTFleetHub = v8480;
var v8495;
var v8496 = v299;
var v8497 = v31;
v8495 = function () { if (v8496 !== v8497) {
    return v8496.apply(this, arguments);
} };
const v8498 = Object.create(v309);
v8498.constructor = v8495;
const v8499 = {};
const v8500 = [];
var v8501;
var v8502 = v31;
var v8503 = v8498;
v8501 = function EVENTS_BUBBLE(event) { var baseClass = v8502.getPrototypeOf(v8503); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8504 = {};
v8504.constructor = v8501;
v8501.prototype = v8504;
v8500.push(v8501);
v8499.apiCallAttempt = v8500;
const v8505 = [];
var v8506;
v8506 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8487.getPrototypeOf(v8503); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8507 = {};
v8507.constructor = v8506;
v8506.prototype = v8507;
v8505.push(v8506);
v8499.apiCall = v8505;
v8498._events = v8499;
v8498.MONITOR_EVENTS_BUBBLE = v8501;
v8498.CALL_EVENTS_BUBBLE = v8506;
v8495.prototype = v8498;
v8495.__super__ = v299;
const v8508 = {};
v8508[\\"2020-11-22\\"] = null;
v8495.services = v8508;
const v8509 = [];
v8509.push(\\"2020-11-22\\");
v8495.apiVersions = v8509;
v8495.serviceIdentifier = \\"iotwireless\\";
v2.IoTWireless = v8495;
var v8510;
var v8511 = v299;
var v8512 = v31;
v8510 = function () { if (v8511 !== v8512) {
    return v8511.apply(this, arguments);
} };
const v8513 = Object.create(v309);
v8513.constructor = v8510;
const v8514 = {};
const v8515 = [];
var v8516;
var v8517 = v31;
var v8518 = v8513;
v8516 = function EVENTS_BUBBLE(event) { var baseClass = v8517.getPrototypeOf(v8518); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8519 = {};
v8519.constructor = v8516;
v8516.prototype = v8519;
v8515.push(v8516);
v8514.apiCallAttempt = v8515;
const v8520 = [];
var v8521;
v8521 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8502.getPrototypeOf(v8518); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8522 = {};
v8522.constructor = v8521;
v8521.prototype = v8522;
v8520.push(v8521);
v8514.apiCall = v8520;
v8513._events = v8514;
v8513.MONITOR_EVENTS_BUBBLE = v8516;
v8513.CALL_EVENTS_BUBBLE = v8521;
v8510.prototype = v8513;
v8510.__super__ = v299;
const v8523 = {};
v8523[\\"2020-11-19\\"] = null;
v8510.services = v8523;
const v8524 = [];
v8524.push(\\"2020-11-19\\");
v8510.apiVersions = v8524;
v8510.serviceIdentifier = \\"location\\";
v2.Location = v8510;
var v8525;
var v8526 = v299;
var v8527 = v31;
v8525 = function () { if (v8526 !== v8527) {
    return v8526.apply(this, arguments);
} };
const v8528 = Object.create(v309);
v8528.constructor = v8525;
const v8529 = {};
const v8530 = [];
var v8531;
var v8532 = v31;
var v8533 = v8528;
v8531 = function EVENTS_BUBBLE(event) { var baseClass = v8532.getPrototypeOf(v8533); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8534 = {};
v8534.constructor = v8531;
v8531.prototype = v8534;
v8530.push(v8531);
v8529.apiCallAttempt = v8530;
const v8535 = [];
var v8536;
v8536 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8517.getPrototypeOf(v8533); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8537 = {};
v8537.constructor = v8536;
v8536.prototype = v8537;
v8535.push(v8536);
v8529.apiCall = v8535;
v8528._events = v8529;
v8528.MONITOR_EVENTS_BUBBLE = v8531;
v8528.CALL_EVENTS_BUBBLE = v8536;
v8525.prototype = v8528;
v8525.__super__ = v299;
const v8538 = {};
v8538[\\"2020-03-31\\"] = null;
v8525.services = v8538;
const v8539 = [];
v8539.push(\\"2020-03-31\\");
v8525.apiVersions = v8539;
v8525.serviceIdentifier = \\"wellarchitected\\";
v2.WellArchitected = v8525;
var v8540;
var v8541 = v299;
var v8542 = v31;
v8540 = function () { if (v8541 !== v8542) {
    return v8541.apply(this, arguments);
} };
const v8543 = Object.create(v309);
v8543.constructor = v8540;
const v8544 = {};
const v8545 = [];
var v8546;
var v8547 = v31;
var v8548 = v8543;
v8546 = function EVENTS_BUBBLE(event) { var baseClass = v8547.getPrototypeOf(v8548); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8549 = {};
v8549.constructor = v8546;
v8546.prototype = v8549;
v8545.push(v8546);
v8544.apiCallAttempt = v8545;
const v8550 = [];
var v8551;
v8551 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8532.getPrototypeOf(v8548); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8552 = {};
v8552.constructor = v8551;
v8551.prototype = v8552;
v8550.push(v8551);
v8544.apiCall = v8550;
v8543._events = v8544;
v8543.MONITOR_EVENTS_BUBBLE = v8546;
v8543.CALL_EVENTS_BUBBLE = v8551;
v8540.prototype = v8543;
v8540.__super__ = v299;
const v8553 = {};
v8553[\\"2020-08-07\\"] = null;
v8540.services = v8553;
const v8554 = [];
v8554.push(\\"2020-08-07\\");
v8540.apiVersions = v8554;
v8540.serviceIdentifier = \\"lexmodelsv2\\";
v2.LexModelsV2 = v8540;
var v8555;
var v8556 = v299;
var v8557 = v31;
v8555 = function () { if (v8556 !== v8557) {
    return v8556.apply(this, arguments);
} };
const v8558 = Object.create(v309);
v8558.constructor = v8555;
const v8559 = {};
const v8560 = [];
var v8561;
var v8562 = v31;
var v8563 = v8558;
v8561 = function EVENTS_BUBBLE(event) { var baseClass = v8562.getPrototypeOf(v8563); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8564 = {};
v8564.constructor = v8561;
v8561.prototype = v8564;
v8560.push(v8561);
v8559.apiCallAttempt = v8560;
const v8565 = [];
var v8566;
v8566 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8547.getPrototypeOf(v8563); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8567 = {};
v8567.constructor = v8566;
v8566.prototype = v8567;
v8565.push(v8566);
v8559.apiCall = v8565;
v8558._events = v8559;
v8558.MONITOR_EVENTS_BUBBLE = v8561;
v8558.CALL_EVENTS_BUBBLE = v8566;
v8555.prototype = v8558;
v8555.__super__ = v299;
const v8568 = {};
v8568[\\"2020-08-07\\"] = null;
v8555.services = v8568;
const v8569 = [];
v8569.push(\\"2020-08-07\\");
v8555.apiVersions = v8569;
v8555.serviceIdentifier = \\"lexruntimev2\\";
v2.LexRuntimeV2 = v8555;
var v8570;
var v8571 = v299;
var v8572 = v31;
v8570 = function () { if (v8571 !== v8572) {
    return v8571.apply(this, arguments);
} };
const v8573 = Object.create(v309);
v8573.constructor = v8570;
const v8574 = {};
const v8575 = [];
var v8576;
var v8577 = v31;
var v8578 = v8573;
v8576 = function EVENTS_BUBBLE(event) { var baseClass = v8577.getPrototypeOf(v8578); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8579 = {};
v8579.constructor = v8576;
v8576.prototype = v8579;
v8575.push(v8576);
v8574.apiCallAttempt = v8575;
const v8580 = [];
var v8581;
v8581 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8562.getPrototypeOf(v8578); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8582 = {};
v8582.constructor = v8581;
v8581.prototype = v8582;
v8580.push(v8581);
v8574.apiCall = v8580;
v8573._events = v8574;
v8573.MONITOR_EVENTS_BUBBLE = v8576;
v8573.CALL_EVENTS_BUBBLE = v8581;
v8570.prototype = v8573;
v8570.__super__ = v299;
const v8583 = {};
v8583[\\"2020-12-01\\"] = null;
v8570.services = v8583;
const v8584 = [];
v8584.push(\\"2020-12-01\\");
v8570.apiVersions = v8584;
v8570.serviceIdentifier = \\"fis\\";
v2.Fis = v8570;
var v8585;
var v8586 = v299;
var v8587 = v31;
v8585 = function () { if (v8586 !== v8587) {
    return v8586.apply(this, arguments);
} };
const v8588 = Object.create(v309);
v8588.constructor = v8585;
const v8589 = {};
const v8590 = [];
var v8591;
var v8592 = v31;
var v8593 = v8588;
v8591 = function EVENTS_BUBBLE(event) { var baseClass = v8592.getPrototypeOf(v8593); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8594 = {};
v8594.constructor = v8591;
v8591.prototype = v8594;
v8590.push(v8591);
v8589.apiCallAttempt = v8590;
const v8595 = [];
var v8596;
v8596 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8577.getPrototypeOf(v8593); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8597 = {};
v8597.constructor = v8596;
v8596.prototype = v8597;
v8595.push(v8596);
v8589.apiCall = v8595;
v8588._events = v8589;
v8588.MONITOR_EVENTS_BUBBLE = v8591;
v8588.CALL_EVENTS_BUBBLE = v8596;
v8585.prototype = v8588;
v8585.__super__ = v299;
const v8598 = {};
v8598[\\"2017-07-25\\"] = null;
v8585.services = v8598;
const v8599 = [];
v8599.push(\\"2017-07-25\\");
v8585.apiVersions = v8599;
v8585.serviceIdentifier = \\"lookoutmetrics\\";
v2.LookoutMetrics = v8585;
var v8600;
var v8601 = v299;
var v8602 = v31;
v8600 = function () { if (v8601 !== v8602) {
    return v8601.apply(this, arguments);
} };
const v8603 = Object.create(v309);
v8603.constructor = v8600;
const v8604 = {};
const v8605 = [];
var v8606;
var v8607 = v31;
var v8608 = v8603;
v8606 = function EVENTS_BUBBLE(event) { var baseClass = v8607.getPrototypeOf(v8608); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8609 = {};
v8609.constructor = v8606;
v8606.prototype = v8609;
v8605.push(v8606);
v8604.apiCallAttempt = v8605;
const v8610 = [];
var v8611;
v8611 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8592.getPrototypeOf(v8608); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8612 = {};
v8612.constructor = v8611;
v8611.prototype = v8612;
v8610.push(v8611);
v8604.apiCall = v8610;
v8603._events = v8604;
v8603.MONITOR_EVENTS_BUBBLE = v8606;
v8603.CALL_EVENTS_BUBBLE = v8611;
v8600.prototype = v8603;
v8600.__super__ = v299;
const v8613 = {};
v8613[\\"2020-02-26\\"] = null;
v8600.services = v8613;
const v8614 = [];
v8614.push(\\"2020-02-26\\");
v8600.apiVersions = v8614;
v8600.serviceIdentifier = \\"mgn\\";
v2.Mgn = v8600;
var v8615;
var v8616 = v299;
var v8617 = v31;
v8615 = function () { if (v8616 !== v8617) {
    return v8616.apply(this, arguments);
} };
const v8618 = Object.create(v309);
v8618.constructor = v8615;
const v8619 = {};
const v8620 = [];
var v8621;
var v8622 = v31;
var v8623 = v8618;
v8621 = function EVENTS_BUBBLE(event) { var baseClass = v8622.getPrototypeOf(v8623); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8624 = {};
v8624.constructor = v8621;
v8621.prototype = v8624;
v8620.push(v8621);
v8619.apiCallAttempt = v8620;
const v8625 = [];
var v8626;
v8626 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8607.getPrototypeOf(v8623); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8627 = {};
v8627.constructor = v8626;
v8626.prototype = v8627;
v8625.push(v8626);
v8619.apiCall = v8625;
v8618._events = v8619;
v8618.MONITOR_EVENTS_BUBBLE = v8621;
v8618.CALL_EVENTS_BUBBLE = v8626;
v8615.prototype = v8618;
v8615.__super__ = v299;
const v8628 = {};
v8628[\\"2020-12-15\\"] = null;
v8615.services = v8628;
const v8629 = [];
v8629.push(\\"2020-12-15\\");
v8615.apiVersions = v8629;
v8615.serviceIdentifier = \\"lookoutequipment\\";
v2.LookoutEquipment = v8615;
var v8630;
var v8631 = v299;
var v8632 = v31;
v8630 = function () { if (v8631 !== v8632) {
    return v8631.apply(this, arguments);
} };
const v8633 = Object.create(v309);
v8633.constructor = v8630;
const v8634 = {};
const v8635 = [];
var v8636;
var v8637 = v31;
var v8638 = v8633;
v8636 = function EVENTS_BUBBLE(event) { var baseClass = v8637.getPrototypeOf(v8638); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8639 = {};
v8639.constructor = v8636;
v8636.prototype = v8639;
v8635.push(v8636);
v8634.apiCallAttempt = v8635;
const v8640 = [];
var v8641;
v8641 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8622.getPrototypeOf(v8638); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8642 = {};
v8642.constructor = v8641;
v8641.prototype = v8642;
v8640.push(v8641);
v8634.apiCall = v8640;
v8633._events = v8634;
v8633.MONITOR_EVENTS_BUBBLE = v8636;
v8633.CALL_EVENTS_BUBBLE = v8641;
v8630.prototype = v8633;
v8630.__super__ = v299;
const v8643 = {};
v8643[\\"2020-08-01\\"] = null;
v8630.services = v8643;
const v8644 = [];
v8644.push(\\"2020-08-01\\");
v8630.apiVersions = v8644;
v8630.serviceIdentifier = \\"nimble\\";
v2.Nimble = v8630;
var v8645;
var v8646 = v299;
var v8647 = v31;
v8645 = function () { if (v8646 !== v8647) {
    return v8646.apply(this, arguments);
} };
const v8648 = Object.create(v309);
v8648.constructor = v8645;
const v8649 = {};
const v8650 = [];
var v8651;
var v8652 = v31;
var v8653 = v8648;
v8651 = function EVENTS_BUBBLE(event) { var baseClass = v8652.getPrototypeOf(v8653); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8654 = {};
v8654.constructor = v8651;
v8651.prototype = v8654;
v8650.push(v8651);
v8649.apiCallAttempt = v8650;
const v8655 = [];
var v8656;
v8656 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8637.getPrototypeOf(v8653); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8657 = {};
v8657.constructor = v8656;
v8656.prototype = v8657;
v8655.push(v8656);
v8649.apiCall = v8655;
v8648._events = v8649;
v8648.MONITOR_EVENTS_BUBBLE = v8651;
v8648.CALL_EVENTS_BUBBLE = v8656;
v8645.prototype = v8648;
v8645.__super__ = v299;
const v8658 = {};
v8658[\\"2021-03-12\\"] = null;
v8645.services = v8658;
const v8659 = [];
v8659.push(\\"2021-03-12\\");
v8645.apiVersions = v8659;
v8645.serviceIdentifier = \\"finspace\\";
v2.Finspace = v8645;
var v8660;
var v8661 = v299;
var v8662 = v31;
v8660 = function () { if (v8661 !== v8662) {
    return v8661.apply(this, arguments);
} };
const v8663 = Object.create(v309);
v8663.constructor = v8660;
const v8664 = {};
const v8665 = [];
var v8666;
var v8667 = v31;
var v8668 = v8663;
v8666 = function EVENTS_BUBBLE(event) { var baseClass = v8667.getPrototypeOf(v8668); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8669 = {};
v8669.constructor = v8666;
v8666.prototype = v8669;
v8665.push(v8666);
v8664.apiCallAttempt = v8665;
const v8670 = [];
var v8671;
v8671 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8652.getPrototypeOf(v8668); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8672 = {};
v8672.constructor = v8671;
v8671.prototype = v8672;
v8670.push(v8671);
v8664.apiCall = v8670;
v8663._events = v8664;
v8663.MONITOR_EVENTS_BUBBLE = v8666;
v8663.CALL_EVENTS_BUBBLE = v8671;
v8660.prototype = v8663;
v8660.__super__ = v299;
const v8673 = {};
v8673[\\"2020-07-13\\"] = null;
v8660.services = v8673;
const v8674 = [];
v8674.push(\\"2020-07-13\\");
v8660.apiVersions = v8674;
v8660.serviceIdentifier = \\"finspacedata\\";
v2.Finspacedata = v8660;
var v8675;
var v8676 = v299;
var v8677 = v31;
v8675 = function () { if (v8676 !== v8677) {
    return v8676.apply(this, arguments);
} };
const v8678 = Object.create(v309);
v8678.constructor = v8675;
const v8679 = {};
const v8680 = [];
var v8681;
var v8682 = v31;
var v8683 = v8678;
v8681 = function EVENTS_BUBBLE(event) { var baseClass = v8682.getPrototypeOf(v8683); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8684 = {};
v8684.constructor = v8681;
v8681.prototype = v8684;
v8680.push(v8681);
v8679.apiCallAttempt = v8680;
const v8685 = [];
var v8686;
v8686 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8667.getPrototypeOf(v8683); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8687 = {};
v8687.constructor = v8686;
v8686.prototype = v8687;
v8685.push(v8686);
v8679.apiCall = v8685;
v8678._events = v8679;
v8678.MONITOR_EVENTS_BUBBLE = v8681;
v8678.CALL_EVENTS_BUBBLE = v8686;
v8675.prototype = v8678;
v8675.__super__ = v299;
const v8688 = {};
v8688[\\"2021-05-03\\"] = null;
v8675.services = v8688;
const v8689 = [];
v8689.push(\\"2021-05-03\\");
v8675.apiVersions = v8689;
v8675.serviceIdentifier = \\"ssmcontacts\\";
v2.SSMContacts = v8675;
var v8690;
var v8691 = v299;
var v8692 = v31;
v8690 = function () { if (v8691 !== v8692) {
    return v8691.apply(this, arguments);
} };
const v8693 = Object.create(v309);
v8693.constructor = v8690;
const v8694 = {};
const v8695 = [];
var v8696;
var v8697 = v31;
var v8698 = v8693;
v8696 = function EVENTS_BUBBLE(event) { var baseClass = v8697.getPrototypeOf(v8698); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8699 = {};
v8699.constructor = v8696;
v8696.prototype = v8699;
v8695.push(v8696);
v8694.apiCallAttempt = v8695;
const v8700 = [];
var v8701;
v8701 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8682.getPrototypeOf(v8698); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8702 = {};
v8702.constructor = v8701;
v8701.prototype = v8702;
v8700.push(v8701);
v8694.apiCall = v8700;
v8693._events = v8694;
v8693.MONITOR_EVENTS_BUBBLE = v8696;
v8693.CALL_EVENTS_BUBBLE = v8701;
v8690.prototype = v8693;
v8690.__super__ = v299;
const v8703 = {};
v8703[\\"2018-05-10\\"] = null;
v8690.services = v8703;
const v8704 = [];
v8704.push(\\"2018-05-10\\");
v8690.apiVersions = v8704;
v8690.serviceIdentifier = \\"ssmincidents\\";
v2.SSMIncidents = v8690;
var v8705;
var v8706 = v299;
var v8707 = v31;
v8705 = function () { if (v8706 !== v8707) {
    return v8706.apply(this, arguments);
} };
const v8708 = Object.create(v309);
v8708.constructor = v8705;
const v8709 = {};
const v8710 = [];
var v8711;
var v8712 = v31;
var v8713 = v8708;
v8711 = function EVENTS_BUBBLE(event) { var baseClass = v8712.getPrototypeOf(v8713); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8714 = {};
v8714.constructor = v8711;
v8711.prototype = v8714;
v8710.push(v8711);
v8709.apiCallAttempt = v8710;
const v8715 = [];
var v8716;
v8716 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8697.getPrototypeOf(v8713); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8717 = {};
v8717.constructor = v8716;
v8716.prototype = v8717;
v8715.push(v8716);
v8709.apiCall = v8715;
v8708._events = v8709;
v8708.MONITOR_EVENTS_BUBBLE = v8711;
v8708.CALL_EVENTS_BUBBLE = v8716;
v8705.prototype = v8708;
v8705.__super__ = v299;
const v8718 = {};
v8718[\\"2020-09-10\\"] = null;
v8705.services = v8718;
const v8719 = [];
v8719.push(\\"2020-09-10\\");
v8705.apiVersions = v8719;
v8705.serviceIdentifier = \\"applicationcostprofiler\\";
v2.ApplicationCostProfiler = v8705;
var v8720;
var v8721 = v299;
var v8722 = v31;
v8720 = function () { if (v8721 !== v8722) {
    return v8721.apply(this, arguments);
} };
const v8723 = Object.create(v309);
v8723.constructor = v8720;
const v8724 = {};
const v8725 = [];
var v8726;
var v8727 = v31;
var v8728 = v8723;
v8726 = function EVENTS_BUBBLE(event) { var baseClass = v8727.getPrototypeOf(v8728); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8729 = {};
v8729.constructor = v8726;
v8726.prototype = v8729;
v8725.push(v8726);
v8724.apiCallAttempt = v8725;
const v8730 = [];
var v8731;
v8731 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8712.getPrototypeOf(v8728); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8732 = {};
v8732.constructor = v8731;
v8731.prototype = v8732;
v8730.push(v8731);
v8724.apiCall = v8730;
v8723._events = v8724;
v8723.MONITOR_EVENTS_BUBBLE = v8726;
v8723.CALL_EVENTS_BUBBLE = v8731;
v8720.prototype = v8723;
v8720.__super__ = v299;
const v8733 = {};
v8733[\\"2020-05-15\\"] = null;
v8720.services = v8733;
const v8734 = [];
v8734.push(\\"2020-05-15\\");
v8720.apiVersions = v8734;
v8720.serviceIdentifier = \\"apprunner\\";
v2.AppRunner = v8720;
var v8735;
var v8736 = v299;
var v8737 = v31;
v8735 = function () { if (v8736 !== v8737) {
    return v8736.apply(this, arguments);
} };
const v8738 = Object.create(v309);
v8738.constructor = v8735;
const v8739 = {};
const v8740 = [];
var v8741;
var v8742 = v31;
var v8743 = v8738;
v8741 = function EVENTS_BUBBLE(event) { var baseClass = v8742.getPrototypeOf(v8743); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8744 = {};
v8744.constructor = v8741;
v8741.prototype = v8744;
v8740.push(v8741);
v8739.apiCallAttempt = v8740;
const v8745 = [];
var v8746;
v8746 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8727.getPrototypeOf(v8743); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8747 = {};
v8747.constructor = v8746;
v8746.prototype = v8747;
v8745.push(v8746);
v8739.apiCall = v8745;
v8738._events = v8739;
v8738.MONITOR_EVENTS_BUBBLE = v8741;
v8738.CALL_EVENTS_BUBBLE = v8746;
v8735.prototype = v8738;
v8735.__super__ = v299;
const v8748 = {};
v8748[\\"2020-07-20\\"] = null;
v8735.services = v8748;
const v8749 = [];
v8749.push(\\"2020-07-20\\");
v8735.apiVersions = v8749;
v8735.serviceIdentifier = \\"proton\\";
v2.Proton = v8735;
var v8750;
var v8751 = v299;
var v8752 = v31;
v8750 = function () { if (v8751 !== v8752) {
    return v8751.apply(this, arguments);
} };
const v8753 = Object.create(v309);
v8753.constructor = v8750;
const v8754 = {};
const v8755 = [];
var v8756;
var v8757 = v31;
var v8758 = v8753;
v8756 = function EVENTS_BUBBLE(event) { var baseClass = v8757.getPrototypeOf(v8758); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8759 = {};
v8759.constructor = v8756;
v8756.prototype = v8759;
v8755.push(v8756);
v8754.apiCallAttempt = v8755;
const v8760 = [];
var v8761;
v8761 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8742.getPrototypeOf(v8758); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8762 = {};
v8762.constructor = v8761;
v8761.prototype = v8762;
v8760.push(v8761);
v8754.apiCall = v8760;
v8753._events = v8754;
v8753.MONITOR_EVENTS_BUBBLE = v8756;
v8753.CALL_EVENTS_BUBBLE = v8761;
v8750.prototype = v8753;
v8750.__super__ = v299;
const v8763 = {};
v8763[\\"2019-12-02\\"] = null;
v8750.services = v8763;
const v8764 = [];
v8764.push(\\"2019-12-02\\");
v8750.apiVersions = v8764;
v8750.serviceIdentifier = \\"route53recoverycluster\\";
v2.Route53RecoveryCluster = v8750;
var v8765;
var v8766 = v299;
var v8767 = v31;
v8765 = function () { if (v8766 !== v8767) {
    return v8766.apply(this, arguments);
} };
const v8768 = Object.create(v309);
v8768.constructor = v8765;
const v8769 = {};
const v8770 = [];
var v8771;
var v8772 = v31;
var v8773 = v8768;
v8771 = function EVENTS_BUBBLE(event) { var baseClass = v8772.getPrototypeOf(v8773); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8774 = {};
v8774.constructor = v8771;
v8771.prototype = v8774;
v8770.push(v8771);
v8769.apiCallAttempt = v8770;
const v8775 = [];
var v8776;
v8776 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8757.getPrototypeOf(v8773); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8777 = {};
v8777.constructor = v8776;
v8776.prototype = v8777;
v8775.push(v8776);
v8769.apiCall = v8775;
v8768._events = v8769;
v8768.MONITOR_EVENTS_BUBBLE = v8771;
v8768.CALL_EVENTS_BUBBLE = v8776;
v8765.prototype = v8768;
v8765.__super__ = v299;
const v8778 = {};
v8778[\\"2020-11-02\\"] = null;
v8765.services = v8778;
const v8779 = [];
v8779.push(\\"2020-11-02\\");
v8765.apiVersions = v8779;
v8765.serviceIdentifier = \\"route53recoverycontrolconfig\\";
v2.Route53RecoveryControlConfig = v8765;
var v8780;
var v8781 = v299;
var v8782 = v31;
v8780 = function () { if (v8781 !== v8782) {
    return v8781.apply(this, arguments);
} };
const v8783 = Object.create(v309);
v8783.constructor = v8780;
const v8784 = {};
const v8785 = [];
var v8786;
var v8787 = v31;
var v8788 = v8783;
v8786 = function EVENTS_BUBBLE(event) { var baseClass = v8787.getPrototypeOf(v8788); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8789 = {};
v8789.constructor = v8786;
v8786.prototype = v8789;
v8785.push(v8786);
v8784.apiCallAttempt = v8785;
const v8790 = [];
var v8791;
v8791 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8772.getPrototypeOf(v8788); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8792 = {};
v8792.constructor = v8791;
v8791.prototype = v8792;
v8790.push(v8791);
v8784.apiCall = v8790;
v8783._events = v8784;
v8783.MONITOR_EVENTS_BUBBLE = v8786;
v8783.CALL_EVENTS_BUBBLE = v8791;
v8780.prototype = v8783;
v8780.__super__ = v299;
const v8793 = {};
v8793[\\"2019-12-02\\"] = null;
v8780.services = v8793;
const v8794 = [];
v8794.push(\\"2019-12-02\\");
v8780.apiVersions = v8794;
v8780.serviceIdentifier = \\"route53recoveryreadiness\\";
v2.Route53RecoveryReadiness = v8780;
var v8795;
var v8796 = v299;
var v8797 = v31;
v8795 = function () { if (v8796 !== v8797) {
    return v8796.apply(this, arguments);
} };
const v8798 = Object.create(v309);
v8798.constructor = v8795;
const v8799 = {};
const v8800 = [];
var v8801;
var v8802 = v31;
var v8803 = v8798;
v8801 = function EVENTS_BUBBLE(event) { var baseClass = v8802.getPrototypeOf(v8803); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8804 = {};
v8804.constructor = v8801;
v8801.prototype = v8804;
v8800.push(v8801);
v8799.apiCallAttempt = v8800;
const v8805 = [];
var v8806;
v8806 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8787.getPrototypeOf(v8803); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8807 = {};
v8807.constructor = v8806;
v8806.prototype = v8807;
v8805.push(v8806);
v8799.apiCall = v8805;
v8798._events = v8799;
v8798.MONITOR_EVENTS_BUBBLE = v8801;
v8798.CALL_EVENTS_BUBBLE = v8806;
v8795.prototype = v8798;
v8795.__super__ = v299;
const v8808 = {};
v8808[\\"2021-04-20\\"] = null;
v8795.services = v8808;
const v8809 = [];
v8809.push(\\"2021-04-20\\");
v8795.apiVersions = v8809;
v8795.serviceIdentifier = \\"chimesdkidentity\\";
v2.ChimeSDKIdentity = v8795;
var v8810;
var v8811 = v299;
var v8812 = v31;
v8810 = function () { if (v8811 !== v8812) {
    return v8811.apply(this, arguments);
} };
const v8813 = Object.create(v309);
v8813.constructor = v8810;
const v8814 = {};
const v8815 = [];
var v8816;
var v8817 = v31;
var v8818 = v8813;
v8816 = function EVENTS_BUBBLE(event) { var baseClass = v8817.getPrototypeOf(v8818); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8819 = {};
v8819.constructor = v8816;
v8816.prototype = v8819;
v8815.push(v8816);
v8814.apiCallAttempt = v8815;
const v8820 = [];
var v8821;
v8821 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8802.getPrototypeOf(v8818); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8822 = {};
v8822.constructor = v8821;
v8821.prototype = v8822;
v8820.push(v8821);
v8814.apiCall = v8820;
v8813._events = v8814;
v8813.MONITOR_EVENTS_BUBBLE = v8816;
v8813.CALL_EVENTS_BUBBLE = v8821;
v8810.prototype = v8813;
v8810.__super__ = v299;
const v8823 = {};
v8823[\\"2021-05-15\\"] = null;
v8810.services = v8823;
const v8824 = [];
v8824.push(\\"2021-05-15\\");
v8810.apiVersions = v8824;
v8810.serviceIdentifier = \\"chimesdkmessaging\\";
v2.ChimeSDKMessaging = v8810;
var v8825;
var v8826 = v299;
var v8827 = v31;
v8825 = function () { if (v8826 !== v8827) {
    return v8826.apply(this, arguments);
} };
const v8828 = Object.create(v309);
v8828.constructor = v8825;
const v8829 = {};
const v8830 = [];
var v8831;
var v8832 = v31;
var v8833 = v8828;
v8831 = function EVENTS_BUBBLE(event) { var baseClass = v8832.getPrototypeOf(v8833); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8834 = {};
v8834.constructor = v8831;
v8831.prototype = v8834;
v8830.push(v8831);
v8829.apiCallAttempt = v8830;
const v8835 = [];
var v8836;
v8836 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8817.getPrototypeOf(v8833); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8837 = {};
v8837.constructor = v8836;
v8836.prototype = v8837;
v8835.push(v8836);
v8829.apiCall = v8835;
v8828._events = v8829;
v8828.MONITOR_EVENTS_BUBBLE = v8831;
v8828.CALL_EVENTS_BUBBLE = v8836;
v8825.prototype = v8828;
v8825.__super__ = v299;
const v8838 = {};
v8838[\\"2021-08-04\\"] = null;
v8825.services = v8838;
const v8839 = [];
v8839.push(\\"2021-08-04\\");
v8825.apiVersions = v8839;
v8825.serviceIdentifier = \\"snowdevicemanagement\\";
v2.SnowDeviceManagement = v8825;
var v8840;
var v8841 = v299;
var v8842 = v31;
v8840 = function () { if (v8841 !== v8842) {
    return v8841.apply(this, arguments);
} };
const v8843 = Object.create(v309);
v8843.constructor = v8840;
const v8844 = {};
const v8845 = [];
var v8846;
var v8847 = v31;
var v8848 = v8843;
v8846 = function EVENTS_BUBBLE(event) { var baseClass = v8847.getPrototypeOf(v8848); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8849 = {};
v8849.constructor = v8846;
v8846.prototype = v8849;
v8845.push(v8846);
v8844.apiCallAttempt = v8845;
const v8850 = [];
var v8851;
v8851 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8832.getPrototypeOf(v8848); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8852 = {};
v8852.constructor = v8851;
v8851.prototype = v8852;
v8850.push(v8851);
v8844.apiCall = v8850;
v8843._events = v8844;
v8843.MONITOR_EVENTS_BUBBLE = v8846;
v8843.CALL_EVENTS_BUBBLE = v8851;
v8840.prototype = v8843;
v8840.__super__ = v299;
const v8853 = {};
v8853[\\"2021-01-01\\"] = null;
v8840.services = v8853;
const v8854 = [];
v8854.push(\\"2021-01-01\\");
v8840.apiVersions = v8854;
v8840.serviceIdentifier = \\"memorydb\\";
v2.MemoryDB = v8840;
var v8855;
var v8856 = v299;
var v8857 = v31;
v8855 = function () { if (v8856 !== v8857) {
    return v8856.apply(this, arguments);
} };
const v8858 = Object.create(v309);
v8858.constructor = v8855;
const v8859 = {};
const v8860 = [];
var v8861;
var v8862 = v31;
var v8863 = v8858;
v8861 = function EVENTS_BUBBLE(event) { var baseClass = v8862.getPrototypeOf(v8863); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8864 = {};
v8864.constructor = v8861;
v8861.prototype = v8864;
v8860.push(v8861);
v8859.apiCallAttempt = v8860;
const v8865 = [];
var v8866;
v8866 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8847.getPrototypeOf(v8863); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8867 = {};
v8867.constructor = v8866;
v8866.prototype = v8867;
v8865.push(v8866);
v8859.apiCall = v8865;
v8858._events = v8859;
v8858.MONITOR_EVENTS_BUBBLE = v8861;
v8858.CALL_EVENTS_BUBBLE = v8866;
v8855.prototype = v8858;
v8855.__super__ = v299;
const v8868 = {};
v8868[\\"2021-01-01\\"] = null;
v8855.services = v8868;
const v8869 = [];
v8869.push(\\"2021-01-01\\");
v8855.apiVersions = v8869;
v8855.serviceIdentifier = \\"opensearch\\";
v2.OpenSearch = v8855;
var v8870;
var v8871 = v299;
var v8872 = v31;
v8870 = function () { if (v8871 !== v8872) {
    return v8871.apply(this, arguments);
} };
const v8873 = Object.create(v309);
v8873.constructor = v8870;
const v8874 = {};
const v8875 = [];
var v8876;
var v8877 = v31;
var v8878 = v8873;
v8876 = function EVENTS_BUBBLE(event) { var baseClass = v8877.getPrototypeOf(v8878); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8879 = {};
v8879.constructor = v8876;
v8876.prototype = v8879;
v8875.push(v8876);
v8874.apiCallAttempt = v8875;
const v8880 = [];
var v8881;
v8881 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8862.getPrototypeOf(v8878); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8882 = {};
v8882.constructor = v8881;
v8881.prototype = v8882;
v8880.push(v8881);
v8874.apiCall = v8880;
v8873._events = v8874;
v8873.MONITOR_EVENTS_BUBBLE = v8876;
v8873.CALL_EVENTS_BUBBLE = v8881;
v8870.prototype = v8873;
v8870.__super__ = v299;
const v8883 = {};
v8883[\\"2021-09-14\\"] = null;
v8870.services = v8883;
const v8884 = [];
v8884.push(\\"2021-09-14\\");
v8870.apiVersions = v8884;
v8870.serviceIdentifier = \\"kafkaconnect\\";
v2.KafkaConnect = v8870;
var v8885;
var v8886 = v299;
var v8887 = v31;
v8885 = function () { if (v8886 !== v8887) {
    return v8886.apply(this, arguments);
} };
const v8888 = Object.create(v309);
v8888.constructor = v8885;
const v8889 = {};
const v8890 = [];
var v8891;
var v8892 = v31;
var v8893 = v8888;
v8891 = function EVENTS_BUBBLE(event) { var baseClass = v8892.getPrototypeOf(v8893); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8894 = {};
v8894.constructor = v8891;
v8891.prototype = v8894;
v8890.push(v8891);
v8889.apiCallAttempt = v8890;
const v8895 = [];
var v8896;
v8896 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8877.getPrototypeOf(v8893); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8897 = {};
v8897.constructor = v8896;
v8896.prototype = v8897;
v8895.push(v8896);
v8889.apiCall = v8895;
v8888._events = v8889;
v8888.MONITOR_EVENTS_BUBBLE = v8891;
v8888.CALL_EVENTS_BUBBLE = v8896;
v8885.prototype = v8888;
v8885.__super__ = v299;
const v8898 = {};
v8898[\\"2021-09-27\\"] = null;
v8885.services = v8898;
const v8899 = [];
v8899.push(\\"2021-09-27\\");
v8885.apiVersions = v8899;
v8885.serviceIdentifier = \\"voiceid\\";
v2.VoiceID = v8885;
var v8900;
var v8901 = v299;
var v8902 = v31;
v8900 = function () { if (v8901 !== v8902) {
    return v8901.apply(this, arguments);
} };
const v8903 = Object.create(v309);
v8903.constructor = v8900;
const v8904 = {};
const v8905 = [];
var v8906;
var v8907 = v31;
var v8908 = v8903;
v8906 = function EVENTS_BUBBLE(event) { var baseClass = v8907.getPrototypeOf(v8908); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8909 = {};
v8909.constructor = v8906;
v8906.prototype = v8909;
v8905.push(v8906);
v8904.apiCallAttempt = v8905;
const v8910 = [];
var v8911;
v8911 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8892.getPrototypeOf(v8908); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8912 = {};
v8912.constructor = v8911;
v8911.prototype = v8912;
v8910.push(v8911);
v8904.apiCall = v8910;
v8903._events = v8904;
v8903.MONITOR_EVENTS_BUBBLE = v8906;
v8903.CALL_EVENTS_BUBBLE = v8911;
v8900.prototype = v8903;
v8900.__super__ = v299;
const v8913 = {};
v8913[\\"2020-10-19\\"] = null;
v8900.services = v8913;
const v8914 = [];
v8914.push(\\"2020-10-19\\");
v8900.apiVersions = v8914;
v8900.serviceIdentifier = \\"wisdom\\";
v2.Wisdom = v8900;
var v8915;
var v8916 = v299;
var v8917 = v31;
v8915 = function () { if (v8916 !== v8917) {
    return v8916.apply(this, arguments);
} };
const v8918 = Object.create(v309);
v8918.constructor = v8915;
const v8919 = {};
const v8920 = [];
var v8921;
var v8922 = v31;
var v8923 = v8918;
v8921 = function EVENTS_BUBBLE(event) { var baseClass = v8922.getPrototypeOf(v8923); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8924 = {};
v8924.constructor = v8921;
v8921.prototype = v8924;
v8920.push(v8921);
v8919.apiCallAttempt = v8920;
const v8925 = [];
var v8926;
v8926 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8907.getPrototypeOf(v8923); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8927 = {};
v8927.constructor = v8926;
v8926.prototype = v8927;
v8925.push(v8926);
v8919.apiCall = v8925;
v8918._events = v8919;
v8918.MONITOR_EVENTS_BUBBLE = v8921;
v8918.CALL_EVENTS_BUBBLE = v8926;
v8915.prototype = v8918;
v8915.__super__ = v299;
const v8928 = {};
v8928[\\"2021-02-01\\"] = null;
v8915.services = v8928;
const v8929 = [];
v8929.push(\\"2021-02-01\\");
v8915.apiVersions = v8929;
v8915.serviceIdentifier = \\"account\\";
v2.Account = v8915;
var v8930;
var v8931 = v299;
var v8932 = v31;
v8930 = function () { if (v8931 !== v8932) {
    return v8931.apply(this, arguments);
} };
const v8933 = Object.create(v309);
v8933.constructor = v8930;
const v8934 = {};
const v8935 = [];
var v8936;
var v8937 = v31;
var v8938 = v8933;
v8936 = function EVENTS_BUBBLE(event) { var baseClass = v8937.getPrototypeOf(v8938); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8939 = {};
v8939.constructor = v8936;
v8936.prototype = v8939;
v8935.push(v8936);
v8934.apiCallAttempt = v8935;
const v8940 = [];
var v8941;
v8941 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8922.getPrototypeOf(v8938); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8942 = {};
v8942.constructor = v8941;
v8941.prototype = v8942;
v8940.push(v8941);
v8934.apiCall = v8940;
v8933._events = v8934;
v8933.MONITOR_EVENTS_BUBBLE = v8936;
v8933.CALL_EVENTS_BUBBLE = v8941;
v8930.prototype = v8933;
v8930.__super__ = v299;
const v8943 = {};
v8943[\\"2021-09-30\\"] = null;
v8930.services = v8943;
const v8944 = [];
v8944.push(\\"2021-09-30\\");
v8930.apiVersions = v8944;
v8930.serviceIdentifier = \\"cloudcontrol\\";
v2.CloudControl = v8930;
var v8945;
var v8946 = v299;
var v8947 = v31;
v8945 = function () { if (v8946 !== v8947) {
    return v8946.apply(this, arguments);
} };
const v8948 = Object.create(v309);
v8948.constructor = v8945;
const v8949 = {};
const v8950 = [];
var v8951;
var v8952 = v31;
var v8953 = v8948;
v8951 = function EVENTS_BUBBLE(event) { var baseClass = v8952.getPrototypeOf(v8953); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8954 = {};
v8954.constructor = v8951;
v8951.prototype = v8954;
v8950.push(v8951);
v8949.apiCallAttempt = v8950;
const v8955 = [];
var v8956;
v8956 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8937.getPrototypeOf(v8953); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8957 = {};
v8957.constructor = v8956;
v8956.prototype = v8957;
v8955.push(v8956);
v8949.apiCall = v8955;
v8948._events = v8949;
v8948.MONITOR_EVENTS_BUBBLE = v8951;
v8948.CALL_EVENTS_BUBBLE = v8956;
v8945.prototype = v8948;
v8945.__super__ = v299;
const v8958 = {};
v8958[\\"2020-08-18\\"] = null;
v8945.services = v8958;
const v8959 = [];
v8959.push(\\"2020-08-18\\");
v8945.apiVersions = v8959;
v8945.serviceIdentifier = \\"grafana\\";
v2.Grafana = v8945;
var v8960;
var v8961 = v299;
var v8962 = v31;
v8960 = function () { if (v8961 !== v8962) {
    return v8961.apply(this, arguments);
} };
const v8963 = Object.create(v309);
v8963.constructor = v8960;
const v8964 = {};
const v8965 = [];
var v8966;
var v8967 = v31;
var v8968 = v8963;
v8966 = function EVENTS_BUBBLE(event) { var baseClass = v8967.getPrototypeOf(v8968); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8969 = {};
v8969.constructor = v8966;
v8966.prototype = v8969;
v8965.push(v8966);
v8964.apiCallAttempt = v8965;
const v8970 = [];
var v8971;
v8971 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8952.getPrototypeOf(v8968); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8972 = {};
v8972.constructor = v8971;
v8971.prototype = v8972;
v8970.push(v8971);
v8964.apiCall = v8970;
v8963._events = v8964;
v8963.MONITOR_EVENTS_BUBBLE = v8966;
v8963.CALL_EVENTS_BUBBLE = v8971;
v8960.prototype = v8963;
v8960.__super__ = v299;
const v8973 = {};
v8973[\\"2019-07-24\\"] = null;
v8960.services = v8973;
const v8974 = [];
v8974.push(\\"2019-07-24\\");
v8960.apiVersions = v8974;
v8960.serviceIdentifier = \\"panorama\\";
v2.Panorama = v8960;
var v8975;
var v8976 = v299;
var v8977 = v31;
v8975 = function () { if (v8976 !== v8977) {
    return v8976.apply(this, arguments);
} };
const v8978 = Object.create(v309);
v8978.constructor = v8975;
const v8979 = {};
const v8980 = [];
var v8981;
var v8982 = v31;
var v8983 = v8978;
v8981 = function EVENTS_BUBBLE(event) { var baseClass = v8982.getPrototypeOf(v8983); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8984 = {};
v8984.constructor = v8981;
v8981.prototype = v8984;
v8980.push(v8981);
v8979.apiCallAttempt = v8980;
const v8985 = [];
var v8986;
v8986 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8967.getPrototypeOf(v8983); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v8987 = {};
v8987.constructor = v8986;
v8986.prototype = v8987;
v8985.push(v8986);
v8979.apiCall = v8985;
v8978._events = v8979;
v8978.MONITOR_EVENTS_BUBBLE = v8981;
v8978.CALL_EVENTS_BUBBLE = v8986;
v8975.prototype = v8978;
v8975.__super__ = v299;
const v8988 = {};
v8988[\\"2021-07-15\\"] = null;
v8975.services = v8988;
const v8989 = [];
v8989.push(\\"2021-07-15\\");
v8975.apiVersions = v8989;
v8975.serviceIdentifier = \\"chimesdkmeetings\\";
v2.ChimeSDKMeetings = v8975;
var v8990;
var v8991 = v299;
var v8992 = v31;
v8990 = function () { if (v8991 !== v8992) {
    return v8991.apply(this, arguments);
} };
const v8993 = Object.create(v309);
v8993.constructor = v8990;
const v8994 = {};
const v8995 = [];
var v8996;
var v8997 = v31;
var v8998 = v8993;
v8996 = function EVENTS_BUBBLE(event) { var baseClass = v8997.getPrototypeOf(v8998); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v8999 = {};
v8999.constructor = v8996;
v8996.prototype = v8999;
v8995.push(v8996);
v8994.apiCallAttempt = v8995;
const v9000 = [];
var v9001;
v9001 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8982.getPrototypeOf(v8998); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9002 = {};
v9002.constructor = v9001;
v9001.prototype = v9002;
v9000.push(v9001);
v8994.apiCall = v9000;
v8993._events = v8994;
v8993.MONITOR_EVENTS_BUBBLE = v8996;
v8993.CALL_EVENTS_BUBBLE = v9001;
v8990.prototype = v8993;
v8990.__super__ = v299;
const v9003 = {};
v9003[\\"2020-04-30\\"] = null;
v8990.services = v9003;
const v9004 = [];
v9004.push(\\"2020-04-30\\");
v8990.apiVersions = v9004;
v8990.serviceIdentifier = \\"resiliencehub\\";
v2.Resiliencehub = v8990;
var v9005;
var v9006 = v299;
var v9007 = v31;
v9005 = function () { if (v9006 !== v9007) {
    return v9006.apply(this, arguments);
} };
const v9008 = Object.create(v309);
v9008.constructor = v9005;
const v9009 = {};
const v9010 = [];
var v9011;
var v9012 = v31;
var v9013 = v9008;
v9011 = function EVENTS_BUBBLE(event) { var baseClass = v9012.getPrototypeOf(v9013); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9014 = {};
v9014.constructor = v9011;
v9011.prototype = v9014;
v9010.push(v9011);
v9009.apiCallAttempt = v9010;
const v9015 = [];
var v9016;
v9016 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v8997.getPrototypeOf(v9013); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9017 = {};
v9017.constructor = v9016;
v9016.prototype = v9017;
v9015.push(v9016);
v9009.apiCall = v9015;
v9008._events = v9009;
v9008.MONITOR_EVENTS_BUBBLE = v9011;
v9008.CALL_EVENTS_BUBBLE = v9016;
v9005.prototype = v9008;
v9005.__super__ = v299;
const v9018 = {};
v9018[\\"2020-02-19\\"] = null;
v9005.services = v9018;
const v9019 = [];
v9019.push(\\"2020-02-19\\");
v9005.apiVersions = v9019;
v9005.serviceIdentifier = \\"migrationhubstrategy\\";
v2.MigrationHubStrategy = v9005;
var v9020;
var v9021 = v299;
var v9022 = v31;
v9020 = function () { if (v9021 !== v9022) {
    return v9021.apply(this, arguments);
} };
const v9023 = Object.create(v309);
v9023.constructor = v9020;
const v9024 = {};
const v9025 = [];
var v9026;
var v9027 = v31;
var v9028 = v9023;
v9026 = function EVENTS_BUBBLE(event) { var baseClass = v9027.getPrototypeOf(v9028); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9029 = {};
v9029.constructor = v9026;
v9026.prototype = v9029;
v9025.push(v9026);
v9024.apiCallAttempt = v9025;
const v9030 = [];
var v9031;
v9031 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9012.getPrototypeOf(v9028); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9032 = {};
v9032.constructor = v9031;
v9031.prototype = v9032;
v9030.push(v9031);
v9024.apiCall = v9030;
v9023._events = v9024;
v9023.MONITOR_EVENTS_BUBBLE = v9026;
v9023.CALL_EVENTS_BUBBLE = v9031;
v9020.prototype = v9023;
v9020.__super__ = v299;
const v9033 = {};
v9033[\\"2021-11-11\\"] = null;
v9020.services = v9033;
const v9034 = [];
v9034.push(\\"2021-11-11\\");
v9020.apiVersions = v9034;
v9020.serviceIdentifier = \\"appconfigdata\\";
v2.AppConfigData = v9020;
var v9035;
var v9036 = v299;
var v9037 = v31;
v9035 = function () { if (v9036 !== v9037) {
    return v9036.apply(this, arguments);
} };
const v9038 = Object.create(v309);
v9038.constructor = v9035;
const v9039 = {};
const v9040 = [];
var v9041;
var v9042 = v31;
var v9043 = v9038;
v9041 = function EVENTS_BUBBLE(event) { var baseClass = v9042.getPrototypeOf(v9043); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9044 = {};
v9044.constructor = v9041;
v9041.prototype = v9044;
v9040.push(v9041);
v9039.apiCallAttempt = v9040;
const v9045 = [];
var v9046;
v9046 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9027.getPrototypeOf(v9043); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9047 = {};
v9047.constructor = v9046;
v9046.prototype = v9047;
v9045.push(v9046);
v9039.apiCall = v9045;
v9038._events = v9039;
v9038.MONITOR_EVENTS_BUBBLE = v9041;
v9038.CALL_EVENTS_BUBBLE = v9046;
v9035.prototype = v9038;
v9035.__super__ = v299;
const v9048 = {};
v9048[\\"2020-02-26\\"] = null;
v9035.services = v9048;
const v9049 = [];
v9049.push(\\"2020-02-26\\");
v9035.apiVersions = v9049;
v9035.serviceIdentifier = \\"drs\\";
v2.Drs = v9035;
var v9050;
var v9051 = v299;
var v9052 = v31;
v9050 = function () { if (v9051 !== v9052) {
    return v9051.apply(this, arguments);
} };
const v9053 = Object.create(v309);
v9053.constructor = v9050;
const v9054 = {};
const v9055 = [];
var v9056;
var v9057 = v31;
var v9058 = v9053;
v9056 = function EVENTS_BUBBLE(event) { var baseClass = v9057.getPrototypeOf(v9058); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9059 = {};
v9059.constructor = v9056;
v9056.prototype = v9059;
v9055.push(v9056);
v9054.apiCallAttempt = v9055;
const v9060 = [];
var v9061;
v9061 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9042.getPrototypeOf(v9058); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9062 = {};
v9062.constructor = v9061;
v9061.prototype = v9062;
v9060.push(v9061);
v9054.apiCall = v9060;
v9053._events = v9054;
v9053.MONITOR_EVENTS_BUBBLE = v9056;
v9053.CALL_EVENTS_BUBBLE = v9061;
v9050.prototype = v9053;
v9050.__super__ = v299;
const v9063 = {};
v9063[\\"2021-10-26\\"] = null;
v9050.services = v9063;
const v9064 = [];
v9064.push(\\"2021-10-26\\");
v9050.apiVersions = v9064;
v9050.serviceIdentifier = \\"migrationhubrefactorspaces\\";
v2.MigrationHubRefactorSpaces = v9050;
var v9065;
var v9066 = v299;
var v9067 = v31;
v9065 = function () { if (v9066 !== v9067) {
    return v9066.apply(this, arguments);
} };
const v9068 = Object.create(v309);
v9068.constructor = v9065;
const v9069 = {};
const v9070 = [];
var v9071;
var v9072 = v31;
var v9073 = v9068;
v9071 = function EVENTS_BUBBLE(event) { var baseClass = v9072.getPrototypeOf(v9073); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9074 = {};
v9074.constructor = v9071;
v9071.prototype = v9074;
v9070.push(v9071);
v9069.apiCallAttempt = v9070;
const v9075 = [];
var v9076;
v9076 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9057.getPrototypeOf(v9073); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9077 = {};
v9077.constructor = v9076;
v9076.prototype = v9077;
v9075.push(v9076);
v9069.apiCall = v9075;
v9068._events = v9069;
v9068.MONITOR_EVENTS_BUBBLE = v9071;
v9068.CALL_EVENTS_BUBBLE = v9076;
v9065.prototype = v9068;
v9065.__super__ = v299;
const v9078 = {};
v9078[\\"2021-02-01\\"] = null;
v9065.services = v9078;
const v9079 = [];
v9079.push(\\"2021-02-01\\");
v9065.apiVersions = v9079;
v9065.serviceIdentifier = \\"evidently\\";
v2.Evidently = v9065;
var v9080;
var v9081 = v299;
var v9082 = v31;
v9080 = function () { if (v9081 !== v9082) {
    return v9081.apply(this, arguments);
} };
const v9083 = Object.create(v309);
v9083.constructor = v9080;
const v9084 = {};
const v9085 = [];
var v9086;
var v9087 = v31;
var v9088 = v9083;
v9086 = function EVENTS_BUBBLE(event) { var baseClass = v9087.getPrototypeOf(v9088); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9089 = {};
v9089.constructor = v9086;
v9086.prototype = v9089;
v9085.push(v9086);
v9084.apiCallAttempt = v9085;
const v9090 = [];
var v9091;
v9091 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9072.getPrototypeOf(v9088); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9092 = {};
v9092.constructor = v9091;
v9091.prototype = v9092;
v9090.push(v9091);
v9084.apiCall = v9090;
v9083._events = v9084;
v9083.MONITOR_EVENTS_BUBBLE = v9086;
v9083.CALL_EVENTS_BUBBLE = v9091;
v9080.prototype = v9083;
v9080.__super__ = v299;
const v9093 = {};
v9093[\\"2020-06-08\\"] = null;
v9080.services = v9093;
const v9094 = [];
v9094.push(\\"2020-06-08\\");
v9080.apiVersions = v9094;
v9080.serviceIdentifier = \\"inspector2\\";
v2.Inspector2 = v9080;
var v9095;
var v9096 = v299;
var v9097 = v31;
v9095 = function () { if (v9096 !== v9097) {
    return v9096.apply(this, arguments);
} };
const v9098 = Object.create(v309);
v9098.constructor = v9095;
const v9099 = {};
const v9100 = [];
var v9101;
var v9102 = v31;
var v9103 = v9098;
v9101 = function EVENTS_BUBBLE(event) { var baseClass = v9102.getPrototypeOf(v9103); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9104 = {};
v9104.constructor = v9101;
v9101.prototype = v9104;
v9100.push(v9101);
v9099.apiCallAttempt = v9100;
const v9105 = [];
var v9106;
v9106 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9087.getPrototypeOf(v9103); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9107 = {};
v9107.constructor = v9106;
v9106.prototype = v9107;
v9105.push(v9106);
v9099.apiCall = v9105;
v9098._events = v9099;
v9098.MONITOR_EVENTS_BUBBLE = v9101;
v9098.CALL_EVENTS_BUBBLE = v9106;
v9095.prototype = v9098;
v9095.__super__ = v299;
const v9108 = {};
v9108[\\"2021-06-15\\"] = null;
v9095.services = v9108;
const v9109 = [];
v9109.push(\\"2021-06-15\\");
v9095.apiVersions = v9109;
v9095.serviceIdentifier = \\"rbin\\";
v2.Rbin = v9095;
var v9110;
var v9111 = v299;
var v9112 = v31;
v9110 = function () { if (v9111 !== v9112) {
    return v9111.apply(this, arguments);
} };
const v9113 = Object.create(v309);
v9113.constructor = v9110;
const v9114 = {};
const v9115 = [];
var v9116;
var v9117 = v31;
var v9118 = v9113;
v9116 = function EVENTS_BUBBLE(event) { var baseClass = v9117.getPrototypeOf(v9118); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9119 = {};
v9119.constructor = v9116;
v9116.prototype = v9119;
v9115.push(v9116);
v9114.apiCallAttempt = v9115;
const v9120 = [];
var v9121;
v9121 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9102.getPrototypeOf(v9118); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9122 = {};
v9122.constructor = v9121;
v9121.prototype = v9122;
v9120.push(v9121);
v9114.apiCall = v9120;
v9113._events = v9114;
v9113.MONITOR_EVENTS_BUBBLE = v9116;
v9113.CALL_EVENTS_BUBBLE = v9121;
v9110.prototype = v9113;
v9110.__super__ = v299;
const v9123 = {};
v9123[\\"2018-05-10\\"] = null;
v9110.services = v9123;
const v9124 = [];
v9124.push(\\"2018-05-10\\");
v9110.apiVersions = v9124;
v9110.serviceIdentifier = \\"rum\\";
v2.RUM = v9110;
var v9125;
var v9126 = v299;
var v9127 = v31;
v9125 = function () { if (v9126 !== v9127) {
    return v9126.apply(this, arguments);
} };
const v9128 = Object.create(v309);
v9128.constructor = v9125;
const v9129 = {};
const v9130 = [];
var v9131;
var v9132 = v31;
var v9133 = v9128;
v9131 = function EVENTS_BUBBLE(event) { var baseClass = v9132.getPrototypeOf(v9133); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9134 = {};
v9134.constructor = v9131;
v9131.prototype = v9134;
v9130.push(v9131);
v9129.apiCallAttempt = v9130;
const v9135 = [];
var v9136;
v9136 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9117.getPrototypeOf(v9133); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9137 = {};
v9137.constructor = v9136;
v9136.prototype = v9137;
v9135.push(v9136);
v9129.apiCall = v9135;
v9128._events = v9129;
v9128.MONITOR_EVENTS_BUBBLE = v9131;
v9128.CALL_EVENTS_BUBBLE = v9136;
v9125.prototype = v9128;
v9125.__super__ = v299;
const v9138 = {};
v9138[\\"2021-01-01\\"] = null;
v9125.services = v9138;
const v9139 = [];
v9139.push(\\"2021-01-01\\");
v9125.apiVersions = v9139;
v9125.serviceIdentifier = \\"backupgateway\\";
v2.BackupGateway = v9125;
var v9140;
var v9141 = v299;
var v9142 = v31;
v9140 = function () { if (v9141 !== v9142) {
    return v9141.apply(this, arguments);
} };
const v9143 = Object.create(v309);
v9143.constructor = v9140;
const v9144 = {};
const v9145 = [];
var v9146;
var v9147 = v31;
var v9148 = v9143;
v9146 = function EVENTS_BUBBLE(event) { var baseClass = v9147.getPrototypeOf(v9148); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9149 = {};
v9149.constructor = v9146;
v9146.prototype = v9149;
v9145.push(v9146);
v9144.apiCallAttempt = v9145;
const v9150 = [];
var v9151;
v9151 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9132.getPrototypeOf(v9148); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9152 = {};
v9152.constructor = v9151;
v9151.prototype = v9152;
v9150.push(v9151);
v9144.apiCall = v9150;
v9143._events = v9144;
v9143.MONITOR_EVENTS_BUBBLE = v9146;
v9143.CALL_EVENTS_BUBBLE = v9151;
v9140.prototype = v9143;
v9140.__super__ = v299;
const v9153 = {};
v9153[\\"2021-11-29\\"] = null;
v9140.services = v9153;
const v9154 = [];
v9154.push(\\"2021-11-29\\");
v9140.apiVersions = v9154;
v9140.serviceIdentifier = \\"iottwinmaker\\";
v2.IoTTwinMaker = v9140;
var v9155;
var v9156 = v299;
var v9157 = v31;
v9155 = function () { if (v9156 !== v9157) {
    return v9156.apply(this, arguments);
} };
const v9158 = Object.create(v309);
v9158.constructor = v9155;
const v9159 = {};
const v9160 = [];
var v9161;
var v9162 = v31;
var v9163 = v9158;
v9161 = function EVENTS_BUBBLE(event) { var baseClass = v9162.getPrototypeOf(v9163); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9164 = {};
v9164.constructor = v9161;
v9161.prototype = v9164;
v9160.push(v9161);
v9159.apiCallAttempt = v9160;
const v9165 = [];
var v9166;
v9166 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9147.getPrototypeOf(v9163); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9167 = {};
v9167.constructor = v9166;
v9166.prototype = v9167;
v9165.push(v9166);
v9159.apiCall = v9165;
v9158._events = v9159;
v9158.MONITOR_EVENTS_BUBBLE = v9161;
v9158.CALL_EVENTS_BUBBLE = v9166;
v9155.prototype = v9158;
v9155.__super__ = v299;
const v9168 = {};
v9168[\\"2020-07-08\\"] = null;
v9155.services = v9168;
const v9169 = [];
v9169.push(\\"2020-07-08\\");
v9155.apiVersions = v9169;
v9155.serviceIdentifier = \\"workspacesweb\\";
v2.WorkSpacesWeb = v9155;
var v9170;
var v9171 = v299;
var v9172 = v31;
v9170 = function () { if (v9171 !== v9172) {
    return v9171.apply(this, arguments);
} };
const v9173 = Object.create(v309);
v9173.constructor = v9170;
const v9174 = {};
const v9175 = [];
var v9176;
var v9177 = v31;
var v9178 = v9173;
v9176 = function EVENTS_BUBBLE(event) { var baseClass = v9177.getPrototypeOf(v9178); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9179 = {};
v9179.constructor = v9176;
v9176.prototype = v9179;
v9175.push(v9176);
v9174.apiCallAttempt = v9175;
const v9180 = [];
var v9181;
v9181 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9162.getPrototypeOf(v9178); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9182 = {};
v9182.constructor = v9181;
v9181.prototype = v9182;
v9180.push(v9181);
v9174.apiCall = v9180;
v9173._events = v9174;
v9173.MONITOR_EVENTS_BUBBLE = v9176;
v9173.CALL_EVENTS_BUBBLE = v9181;
v9170.prototype = v9173;
v9170.__super__ = v299;
const v9183 = {};
v9183[\\"2021-08-11\\"] = null;
v9170.services = v9183;
const v9184 = [];
v9184.push(\\"2021-08-11\\");
v9170.apiVersions = v9184;
v9170.serviceIdentifier = \\"amplifyuibuilder\\";
v2.AmplifyUIBuilder = v9170;
var v9185;
var v9186 = v299;
var v9187 = v31;
v9185 = function () { if (v9186 !== v9187) {
    return v9186.apply(this, arguments);
} };
const v9188 = Object.create(v309);
v9188.constructor = v9185;
const v9189 = {};
const v9190 = [];
var v9191;
var v9192 = v31;
var v9193 = v9188;
v9191 = function EVENTS_BUBBLE(event) { var baseClass = v9192.getPrototypeOf(v9193); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9194 = {};
v9194.constructor = v9191;
v9191.prototype = v9194;
v9190.push(v9191);
v9189.apiCallAttempt = v9190;
const v9195 = [];
var v9196;
v9196 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9177.getPrototypeOf(v9193); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9197 = {};
v9197.constructor = v9196;
v9196.prototype = v9197;
v9195.push(v9196);
v9189.apiCall = v9195;
v9188._events = v9189;
v9188.MONITOR_EVENTS_BUBBLE = v9191;
v9188.CALL_EVENTS_BUBBLE = v9196;
v9185.prototype = v9188;
v9185.__super__ = v299;
const v9198 = {};
v9198[\\"2022-02-10\\"] = null;
v9185.services = v9198;
const v9199 = [];
v9199.push(\\"2022-02-10\\");
v9185.apiVersions = v9199;
v9185.serviceIdentifier = \\"keyspaces\\";
v2.Keyspaces = v9185;
var v9200;
var v9201 = v299;
var v9202 = v31;
v9200 = function () { if (v9201 !== v9202) {
    return v9201.apply(this, arguments);
} };
const v9203 = Object.create(v309);
v9203.constructor = v9200;
const v9204 = {};
const v9205 = [];
var v9206;
var v9207 = v31;
var v9208 = v9203;
v9206 = function EVENTS_BUBBLE(event) { var baseClass = v9207.getPrototypeOf(v9208); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9209 = {};
v9209.constructor = v9206;
v9206.prototype = v9209;
v9205.push(v9206);
v9204.apiCallAttempt = v9205;
const v9210 = [];
var v9211;
v9211 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9192.getPrototypeOf(v9208); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9212 = {};
v9212.constructor = v9211;
v9211.prototype = v9212;
v9210.push(v9211);
v9204.apiCall = v9210;
v9203._events = v9204;
v9203.MONITOR_EVENTS_BUBBLE = v9206;
v9203.CALL_EVENTS_BUBBLE = v9211;
v9200.prototype = v9203;
v9200.__super__ = v299;
const v9213 = {};
v9213[\\"2021-07-30\\"] = null;
v9200.services = v9213;
const v9214 = [];
v9214.push(\\"2021-07-30\\");
v9200.apiVersions = v9214;
v9200.serviceIdentifier = \\"billingconductor\\";
v2.Billingconductor = v9200;
var v9215;
var v9216 = v299;
var v9217 = v31;
v9215 = function () { if (v9216 !== v9217) {
    return v9216.apply(this, arguments);
} };
const v9218 = Object.create(v309);
v9218.constructor = v9215;
const v9219 = {};
const v9220 = [];
var v9221;
var v9222 = v31;
var v9223 = v9218;
v9221 = function EVENTS_BUBBLE(event) { var baseClass = v9222.getPrototypeOf(v9223); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9224 = {};
v9224.constructor = v9221;
v9221.prototype = v9224;
v9220.push(v9221);
v9219.apiCallAttempt = v9220;
const v9225 = [];
var v9226;
v9226 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9207.getPrototypeOf(v9223); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9227 = {};
v9227.constructor = v9226;
v9226.prototype = v9227;
v9225.push(v9226);
v9219.apiCall = v9225;
v9218._events = v9219;
v9218.MONITOR_EVENTS_BUBBLE = v9221;
v9218.CALL_EVENTS_BUBBLE = v9226;
v9215.prototype = v9218;
v9215.__super__ = v299;
const v9228 = {};
v9228[\\"2021-08-17\\"] = null;
v9215.services = v9228;
const v9229 = [];
v9229.push(\\"2021-08-17\\");
v9215.apiVersions = v9229;
v9215.serviceIdentifier = \\"gamesparks\\";
v2.GameSparks = v9215;
var v9230;
var v9231 = v299;
var v9232 = v31;
v9230 = function () { if (v9231 !== v9232) {
    return v9231.apply(this, arguments);
} };
const v9233 = Object.create(v309);
v9233.constructor = v9230;
const v9234 = {};
const v9235 = [];
var v9236;
var v9237 = v31;
var v9238 = v9233;
v9236 = function EVENTS_BUBBLE(event) { var baseClass = v9237.getPrototypeOf(v9238); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9239 = {};
v9239.constructor = v9236;
v9236.prototype = v9239;
v9235.push(v9236);
v9234.apiCallAttempt = v9235;
const v9240 = [];
var v9241;
v9241 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9222.getPrototypeOf(v9238); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9242 = {};
v9242.constructor = v9241;
v9241.prototype = v9242;
v9240.push(v9241);
v9234.apiCall = v9240;
v9233._events = v9234;
v9233.MONITOR_EVENTS_BUBBLE = v9236;
v9233.CALL_EVENTS_BUBBLE = v9241;
v9230.prototype = v9233;
v9230.__super__ = v299;
const v9243 = {};
v9243[\\"2022-03-31\\"] = null;
v9230.services = v9243;
const v9244 = [];
v9244.push(\\"2022-03-31\\");
v9230.apiVersions = v9244;
v9230.serviceIdentifier = \\"pinpointsmsvoicev2\\";
v2.PinpointSMSVoiceV2 = v9230;
var v9245;
var v9246 = v299;
var v9247 = v31;
v9245 = function () { if (v9246 !== v9247) {
    return v9246.apply(this, arguments);
} };
const v9248 = Object.create(v309);
v9248.constructor = v9245;
const v9249 = {};
const v9250 = [];
var v9251;
var v9252 = v31;
var v9253 = v9248;
v9251 = function EVENTS_BUBBLE(event) { var baseClass = v9252.getPrototypeOf(v9253); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9254 = {};
v9254.constructor = v9251;
v9251.prototype = v9254;
v9250.push(v9251);
v9249.apiCallAttempt = v9250;
const v9255 = [];
var v9256;
v9256 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9237.getPrototypeOf(v9253); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9257 = {};
v9257.constructor = v9256;
v9256.prototype = v9257;
v9255.push(v9256);
v9249.apiCall = v9255;
v9248._events = v9249;
v9248.MONITOR_EVENTS_BUBBLE = v9251;
v9248.CALL_EVENTS_BUBBLE = v9256;
v9245.prototype = v9248;
v9245.__super__ = v299;
const v9258 = {};
v9258[\\"2020-07-14\\"] = null;
v9245.services = v9258;
const v9259 = [];
v9259.push(\\"2020-07-14\\");
v9245.apiVersions = v9259;
v9245.serviceIdentifier = \\"ivschat\\";
v2.Ivschat = v9245;
var v9260;
var v9261 = v299;
var v9262 = v31;
v9260 = function () { if (v9261 !== v9262) {
    return v9261.apply(this, arguments);
} };
const v9263 = Object.create(v309);
v9263.constructor = v9260;
const v9264 = {};
const v9265 = [];
var v9266;
var v9267 = v31;
var v9268 = v9263;
v9266 = function EVENTS_BUBBLE(event) { var baseClass = v9267.getPrototypeOf(v9268); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9269 = {};
v9269.constructor = v9266;
v9266.prototype = v9269;
v9265.push(v9266);
v9264.apiCallAttempt = v9265;
const v9270 = [];
var v9271;
v9271 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9252.getPrototypeOf(v9268); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9272 = {};
v9272.constructor = v9271;
v9271.prototype = v9272;
v9270.push(v9271);
v9264.apiCall = v9270;
v9263._events = v9264;
v9263.MONITOR_EVENTS_BUBBLE = v9266;
v9263.CALL_EVENTS_BUBBLE = v9271;
v9260.prototype = v9263;
v9260.__super__ = v299;
const v9273 = {};
v9273[\\"2021-07-15\\"] = null;
v9260.services = v9273;
const v9274 = [];
v9274.push(\\"2021-07-15\\");
v9260.apiVersions = v9274;
v9260.serviceIdentifier = \\"chimesdkmediapipelines\\";
v2.ChimeSDKMediaPipelines = v9260;
var v9275;
var v9276 = v299;
var v9277 = v31;
v9275 = function () { if (v9276 !== v9277) {
    return v9276.apply(this, arguments);
} };
const v9278 = Object.create(v309);
v9278.constructor = v9275;
const v9279 = {};
const v9280 = [];
var v9281;
var v9282 = v31;
var v9283 = v9278;
v9281 = function EVENTS_BUBBLE(event) { var baseClass = v9282.getPrototypeOf(v9283); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9284 = {};
v9284.constructor = v9281;
v9281.prototype = v9284;
v9280.push(v9281);
v9279.apiCallAttempt = v9280;
const v9285 = [];
var v9286;
v9286 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9267.getPrototypeOf(v9283); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9287 = {};
v9287.constructor = v9286;
v9286.prototype = v9287;
v9285.push(v9286);
v9279.apiCall = v9285;
v9278._events = v9279;
v9278.MONITOR_EVENTS_BUBBLE = v9281;
v9278.CALL_EVENTS_BUBBLE = v9286;
v9275.prototype = v9278;
v9275.__super__ = v299;
const v9288 = {};
v9288[\\"2021-07-13\\"] = null;
v9275.services = v9288;
const v9289 = [];
v9289.push(\\"2021-07-13\\");
v9275.apiVersions = v9289;
v9275.serviceIdentifier = \\"emrserverless\\";
v2.EMRServerless = v9275;
var v9290;
var v9291 = v299;
var v9292 = v31;
v9290 = function () { if (v9291 !== v9292) {
    return v9291.apply(this, arguments);
} };
const v9293 = Object.create(v309);
v9293.constructor = v9290;
const v9294 = {};
const v9295 = [];
var v9296;
var v9297 = v31;
var v9298 = v9293;
v9296 = function EVENTS_BUBBLE(event) { var baseClass = v9297.getPrototypeOf(v9298); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9299 = {};
v9299.constructor = v9296;
v9296.prototype = v9299;
v9295.push(v9296);
v9294.apiCallAttempt = v9295;
const v9300 = [];
var v9301;
v9301 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9282.getPrototypeOf(v9298); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9302 = {};
v9302.constructor = v9301;
v9301.prototype = v9302;
v9300.push(v9301);
v9294.apiCall = v9300;
v9293._events = v9294;
v9293.MONITOR_EVENTS_BUBBLE = v9296;
v9293.CALL_EVENTS_BUBBLE = v9301;
v9290.prototype = v9293;
v9290.__super__ = v299;
const v9303 = {};
v9303[\\"2021-04-28\\"] = null;
v9290.services = v9303;
const v9304 = [];
v9304.push(\\"2021-04-28\\");
v9290.apiVersions = v9304;
v9290.serviceIdentifier = \\"m2\\";
v2.M2 = v9290;
var v9305;
var v9306 = v299;
var v9307 = v31;
v9305 = function () { if (v9306 !== v9307) {
    return v9306.apply(this, arguments);
} };
const v9308 = Object.create(v309);
v9308.constructor = v9305;
const v9309 = {};
const v9310 = [];
var v9311;
var v9312 = v31;
var v9313 = v9308;
v9311 = function EVENTS_BUBBLE(event) { var baseClass = v9312.getPrototypeOf(v9313); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9314 = {};
v9314.constructor = v9311;
v9311.prototype = v9314;
v9310.push(v9311);
v9309.apiCallAttempt = v9310;
const v9315 = [];
var v9316;
v9316 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9297.getPrototypeOf(v9313); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9317 = {};
v9317.constructor = v9316;
v9316.prototype = v9317;
v9315.push(v9316);
v9309.apiCall = v9315;
v9308._events = v9309;
v9308.MONITOR_EVENTS_BUBBLE = v9311;
v9308.CALL_EVENTS_BUBBLE = v9316;
v9305.prototype = v9308;
v9305.__super__ = v299;
const v9318 = {};
v9318[\\"2021-01-30\\"] = null;
v9305.services = v9318;
const v9319 = [];
v9319.push(\\"2021-01-30\\");
v9305.apiVersions = v9319;
v9305.serviceIdentifier = \\"connectcampaigns\\";
v2.ConnectCampaigns = v9305;
var v9320;
var v9321 = v299;
var v9322 = v31;
v9320 = function () { if (v9321 !== v9322) {
    return v9321.apply(this, arguments);
} };
const v9323 = Object.create(v309);
v9323.constructor = v9320;
const v9324 = {};
const v9325 = [];
var v9326;
var v9327 = v31;
var v9328 = v9323;
v9326 = function EVENTS_BUBBLE(event) { var baseClass = v9327.getPrototypeOf(v9328); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9329 = {};
v9329.constructor = v9326;
v9326.prototype = v9329;
v9325.push(v9326);
v9324.apiCallAttempt = v9325;
const v9330 = [];
var v9331;
v9331 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9312.getPrototypeOf(v9328); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9332 = {};
v9332.constructor = v9331;
v9331.prototype = v9332;
v9330.push(v9331);
v9324.apiCall = v9330;
v9323._events = v9324;
v9323.MONITOR_EVENTS_BUBBLE = v9326;
v9323.CALL_EVENTS_BUBBLE = v9331;
v9320.prototype = v9323;
v9320.__super__ = v299;
const v9333 = {};
v9333[\\"2021-04-21\\"] = null;
v9320.services = v9333;
const v9334 = [];
v9334.push(\\"2021-04-21\\");
v9320.apiVersions = v9334;
v9320.serviceIdentifier = \\"redshiftserverless\\";
v2.RedshiftServerless = v9320;
var v9335;
var v9336 = v299;
var v9337 = v31;
v9335 = function () { if (v9336 !== v9337) {
    return v9336.apply(this, arguments);
} };
const v9338 = Object.create(v309);
v9338.constructor = v9335;
const v9339 = {};
const v9340 = [];
var v9341;
var v9342 = v31;
var v9343 = v9338;
v9341 = function EVENTS_BUBBLE(event) { var baseClass = v9342.getPrototypeOf(v9343); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9344 = {};
v9344.constructor = v9341;
v9341.prototype = v9344;
v9340.push(v9341);
v9339.apiCallAttempt = v9340;
const v9345 = [];
var v9346;
v9346 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9327.getPrototypeOf(v9343); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9347 = {};
v9347.constructor = v9346;
v9346.prototype = v9347;
v9345.push(v9346);
v9339.apiCall = v9345;
v9338._events = v9339;
v9338.MONITOR_EVENTS_BUBBLE = v9341;
v9338.CALL_EVENTS_BUBBLE = v9346;
v9335.prototype = v9338;
v9335.__super__ = v299;
const v9348 = {};
v9348[\\"2018-05-10\\"] = null;
v9335.services = v9348;
const v9349 = [];
v9349.push(\\"2018-05-10\\");
v9335.apiVersions = v9349;
v9335.serviceIdentifier = \\"rolesanywhere\\";
v2.RolesAnywhere = v9335;
var v9350;
var v9351 = v299;
var v9352 = v31;
v9350 = function () { if (v9351 !== v9352) {
    return v9351.apply(this, arguments);
} };
const v9353 = Object.create(v309);
v9353.constructor = v9350;
const v9354 = {};
const v9355 = [];
var v9356;
var v9357 = v31;
var v9358 = v9353;
v9356 = function EVENTS_BUBBLE(event) { var baseClass = v9357.getPrototypeOf(v9358); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9359 = {};
v9359.constructor = v9356;
v9356.prototype = v9359;
v9355.push(v9356);
v9354.apiCallAttempt = v9355;
const v9360 = [];
var v9361;
v9361 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9342.getPrototypeOf(v9358); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9362 = {};
v9362.constructor = v9361;
v9361.prototype = v9362;
v9360.push(v9361);
v9354.apiCall = v9360;
v9353._events = v9354;
v9353.MONITOR_EVENTS_BUBBLE = v9356;
v9353.CALL_EVENTS_BUBBLE = v9361;
v9350.prototype = v9353;
v9350.__super__ = v299;
const v9363 = {};
v9363[\\"2018-05-10\\"] = null;
v9350.services = v9363;
const v9364 = [];
v9364.push(\\"2018-05-10\\");
v9350.apiVersions = v9364;
v9350.serviceIdentifier = \\"licensemanagerusersubscriptions\\";
v2.LicenseManagerUserSubscriptions = v9350;
var v9365;
var v9366 = v299;
var v9367 = v31;
v9365 = function () { if (v9366 !== v9367) {
    return v9366.apply(this, arguments);
} };
const v9368 = Object.create(v309);
v9368.constructor = v9365;
const v9369 = {};
const v9370 = [];
var v9371;
var v9372 = v31;
var v9373 = v9368;
v9371 = function EVENTS_BUBBLE(event) { var baseClass = v9372.getPrototypeOf(v9373); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9374 = {};
v9374.constructor = v9371;
v9371.prototype = v9374;
v9370.push(v9371);
v9369.apiCallAttempt = v9370;
const v9375 = [];
var v9376;
v9376 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9357.getPrototypeOf(v9373); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9377 = {};
v9377.constructor = v9376;
v9376.prototype = v9377;
v9375.push(v9376);
v9369.apiCall = v9375;
v9368._events = v9369;
v9368.MONITOR_EVENTS_BUBBLE = v9371;
v9368.CALL_EVENTS_BUBBLE = v9376;
v9365.prototype = v9368;
v9365.__super__ = v299;
const v9378 = {};
v9378[\\"2018-04-10\\"] = null;
v9365.services = v9378;
const v9379 = [];
v9379.push(\\"2018-04-10\\");
v9365.apiVersions = v9379;
v9365.serviceIdentifier = \\"backupstorage\\";
v2.BackupStorage = v9365;
var v9380;
var v9381 = v299;
var v9382 = v31;
v9380 = function () { if (v9381 !== v9382) {
    return v9381.apply(this, arguments);
} };
const v9383 = Object.create(v309);
v9383.constructor = v9380;
const v9384 = {};
const v9385 = [];
var v9386;
var v9387 = v31;
var v9388 = v9383;
v9386 = function EVENTS_BUBBLE(event) { var baseClass = v9387.getPrototypeOf(v9388); if (baseClass._events)
    baseClass.emit(\\"apiCallAttempt\\", [event]); };
const v9389 = {};
v9389.constructor = v9386;
v9386.prototype = v9389;
v9385.push(v9386);
v9384.apiCallAttempt = v9385;
const v9390 = [];
var v9391;
v9391 = function CALL_EVENTS_BUBBLE(event) { var baseClass = v9372.getPrototypeOf(v9388); if (baseClass._events)
    baseClass.emit(\\"apiCall\\", [event]); };
const v9392 = {};
v9392.constructor = v9391;
v9391.prototype = v9392;
v9390.push(v9391);
v9384.apiCall = v9390;
v9383._events = v9384;
v9383.MONITOR_EVENTS_BUBBLE = v9386;
v9383.CALL_EVENTS_BUBBLE = v9391;
v9380.prototype = v9383;
v9380.__super__ = v299;
const v9393 = {};
v9393[\\"2021-12-03\\"] = null;
v9380.services = v9393;
const v9394 = [];
v9394.push(\\"2021-12-03\\");
v9380.apiVersions = v9394;
v9380.serviceIdentifier = \\"privatenetworks\\";
v2.PrivateNetworks = v9380;
var v1 = v2;
v0 = () => { const client = new v1.DynamoDB(); return client.config.endpoint; };
exports.handler = v0;
"
`;

exports[`serialize a bound function 1`] = `
"// <stdin>
var v0;
var v2 = {};
v2.prop = \\"hello\\";
var v3 = [];
v3.push();
var v4;
v4 = function foo() {
  return this.prop;
};
var v5 = {};
v5.constructor = v4;
v4.prototype = v5;
var v6 = v4.bind(v2, v3);
var v1 = v6;
v0 = () => {
  return v1();
};
exports.handler = v0;
"
`;
